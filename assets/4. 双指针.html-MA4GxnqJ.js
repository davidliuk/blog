import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as i,o as t}from"./app-B6aCd_WP.js";const n={};function o(a,e){return t(),l("div",null,e[0]||(e[0]=[i('<h1 id="双指针" tabindex="-1"><a class="header-anchor" href="#双指针"><span>双指针</span></a></h1><ol><li><p>逆向双指针</p><p>（相向双指针和平行双指针</p><p>两根指针一头一尾，向中间靠拢直到相遇</p><ol><li><p>Reverse 型（题目不多）</p><p>翻转字符串</p><p>判断回文串</p></li><li><p>Two Sum 型（两位数题）</p><p>两数之和</p><ol><li>Hashmap: On, On</li><li>排序+双指针: Onlogn, O1</li></ol><p>三数之和</p></li><li><p>Partition 型（两位数题）</p><p>快速排序</p><p>颜色排序</p></li><li><p>merge 型</p><p>merge two sorted array</p></li></ol></li><li><p>同向双指针</p><ol><li>滑动窗口类</li><li>快慢指针类</li></ol></li><li><p>背向双指针</p><p>非常少见，就几个题</p><ul><li>最长回文串：中心点枚举</li></ul></li></ol><ul><li>k closest element</li></ul><p>如果while或if里面过长，则可以考虑可以拆出来一个函数来处理，过长的时候不容易读懂，然后可能出错</p><p>返回多个值，需要构建类</p><p>两数之和，有十种变形</p><p>follow up</p><ol><li><p>排好序的情况下，哪种更好</p><p>双指针</p></li><li><p>需要返回下标的时候，哪种更好</p><p>hashmap更好</p><p>否则双指针需要将数组转换成一个pair的数组进行排序，保存数值和原来的位置</p></li></ol>',8)]))}const s=p(n,[["render",o],["__file","4. 双指针.html.vue"]]),c=JSON.parse(`{"path":"/algo/course/jz/2ptr/4.%20%E5%8F%8C%E6%8C%87%E9%92%88.html","title":"双指针","lang":"en-US","frontmatter":{"description":"双指针 逆向双指针 （相向双指针和平行双指针 两根指针一头一尾，向中间靠拢直到相遇 Reverse 型（题目不多） 翻转字符串 判断回文串 Two Sum 型（两位数题） 两数之和 Hashmap: On, On 排序+双指针: Onlogn, O1 三数之和 Partition 型（两位数题） 快速排序 颜色排序 merge 型 merge two ...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/algo/course/jz/2ptr/4.%20%E5%8F%8C%E6%8C%87%E9%92%88.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"双指针"}],["meta",{"property":"og:description","content":"双指针 逆向双指针 （相向双指针和平行双指针 两根指针一头一尾，向中间靠拢直到相遇 Reverse 型（题目不多） 翻转字符串 判断回文串 Two Sum 型（两位数题） 两数之和 Hashmap: On, On 排序+双指针: Onlogn, O1 三数之和 Partition 型（两位数题） 快速排序 颜色排序 merge 型 merge two ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-17T16:38:04.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-17T16:38:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"双指针\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-17T16:38:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[],"git":{"createdTime":1734453484000,"updatedTime":1734453484000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro-3.local","commits":1}]},"readingTime":{"minutes":0.92,"words":277},"filePathRelative":"algo/course/jz/2ptr/4. 双指针.md","localizedDate":"December 17, 2024","excerpt":"\\n<ol>\\n<li>\\n<p>逆向双指针</p>\\n<p>（相向双指针和平行双指针</p>\\n<p>两根指针一头一尾，向中间靠拢直到相遇</p>\\n<ol>\\n<li>\\n<p>Reverse 型（题目不多）</p>\\n<p>翻转字符串</p>\\n<p>判断回文串</p>\\n</li>\\n<li>\\n<p>Two Sum 型（两位数题）</p>\\n<p>两数之和</p>\\n<ol>\\n<li>Hashmap: On, On</li>\\n<li>排序+双指针: Onlogn, O1</li>\\n</ol>\\n<p>三数之和</p>\\n</li>\\n<li>\\n<p>Partition 型（两位数题）</p>\\n<p>快速排序</p>\\n<p>颜色排序</p>\\n</li>\\n<li>\\n<p>merge 型</p>\\n<p>merge two sorted array</p>\\n</li>\\n</ol>\\n</li>\\n<li>\\n<p>同向双指针</p>\\n<ol>\\n<li>滑动窗口类</li>\\n<li>快慢指针类</li>\\n</ol>\\n</li>\\n<li>\\n<p>背向双指针</p>\\n<p>非常少见，就几个题</p>\\n<ul>\\n<li>最长回文串：中心点枚举</li>\\n</ul>\\n</li>\\n</ol>","autoDesc":true}`);export{s as comp,c as data};
