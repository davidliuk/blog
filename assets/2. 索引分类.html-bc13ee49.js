import{_ as e,V as a,W as i,Z as l}from"./framework-e5d7a6b2.js";const r={},c=l('<h1 id="索引分类" tabindex="-1"><a class="header-anchor" href="#索引分类" aria-hidden="true">#</a> 索引分类</h1><h3 id="按「数据结构」分类" tabindex="-1"><a class="header-anchor" href="#按「数据结构」分类" aria-hidden="true">#</a> 按「数据结构」分类：</h3><p><strong>B+tree索引、Hash索引、Full-text索引</strong>。</p><ul><li>BTree 索引：MySQL 里默认和最常用的索引类型。只有叶子节点存储 value，非叶子节点只有指针和 key。存储引擎 MyISAM 和 InnoDB 实现 BTree 索引都是使用 B+Tree，但二者实现方式不一样（前面已经介绍了）。</li><li>哈希索引：类似键值对的形式，一次即可定位。</li><li>RTree 索引：一般不会使用，仅支持 geometry 数据类型，优势在于范围查找，效率较低，通常使用搜索引擎如 ElasticSearch 代替。</li><li>全文索引：对文本的内容进行分词，进行搜索。目前只有 <code>CHAR</code>、<code>VARCHAR</code> ，<code>TEXT</code> 列上可以创建全文索引。一般不会使用，效率较低，通常使用搜索引擎如 ElasticSearch 代替。</li></ul><h3 id="按「字段特性」分类" tabindex="-1"><a class="header-anchor" href="#按「字段特性」分类" aria-hidden="true">#</a> 按「字段特性」分类：</h3><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-07-28 21.28.51.png" alt="截屏2022-07-28 21.28.51" loading="lazy"></p><h3 id="按「物理存储」分类" tabindex="-1"><a class="header-anchor" href="#按「物理存储」分类" aria-hidden="true">#</a> 按「物理存储」分类：</h3><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-07-28 21.31.43.png" alt="截屏2022-07-28 21.31.43" loading="lazy"></p><p>聚集索引：</p><ul><li>主键索引就是聚集索引</li><li>如果不存在主键，则使用第一个UNIQUE索引作为聚集索引</li><li>如果没有UNIQUE，就隐藏生成一个row id作为聚集索引</li><li>聚集索引叶子结点存一行的数据（行数据）</li></ul><p>二级索引：</p><ul><li>又称辅助索引、非聚集索引</li><li>只存id，查到id后到聚集索引中”回表查询“</li></ul><p>根据聚集索引查的效率最高，因为无需“回表”操作了</p>',13),t=[c];function d(h,n){return a(),i("div",null,t)}const s=e(r,[["render",d],["__file","2. 索引分类.html.vue"]]);export{s as default};
