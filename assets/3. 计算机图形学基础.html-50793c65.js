import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as t,d as r}from"./app-9107e99b.js";const i={},n=r('<h1 id="计算机图形学" tabindex="-1"><a class="header-anchor" href="#计算机图形学" aria-hidden="true">#</a> 计算机图形学</h1><p>3D图像转成计算机可以展示的2D的内容</p><h2 id="坐标变换" tabindex="-1"><a class="header-anchor" href="#坐标变换" aria-hidden="true">#</a> 坐标变换</h2><p>平移、旋转、缩放、错切</p><h3 id="平移-translation" tabindex="-1"><a class="header-anchor" href="#平移-translation" aria-hidden="true">#</a> 平移 （Translation）</h3><p>在3D空间中，假设我们需要将一个点平移到另一个位置。假设空间中的一点P，其用坐标表示为（x,y,z）；将其向 x方向平移 tx，向y方向平移ty, 向z方向平移tz, 设平移后点的坐标为（x’,y’,z&#39;）,则上述点的平移操作可以归纳为如下公式：</p><h3 id="缩放-scaling" tabindex="-1"><a class="header-anchor" href="#缩放-scaling" aria-hidden="true">#</a> 缩放 （Scaling）</h3><p>在3D空间中，对点（x,y,z）常用的另一种操作为相对于另一点(px,py,pz)进行缩放操作，我们不妨x方向的缩放因子为sx,y方向的缩放因子为sy,z方向的缩放因子为sz, 则上述点（x,y,z）相对于点（px,py,pz）的缩放操作可以归纳为如下公式：</p><h3 id="旋转-rotation" tabindex="-1"><a class="header-anchor" href="#旋转-rotation" aria-hidden="true">#</a> 旋转（Rotation）</h3><p>在3D空间中，对点（x,y,z）常用的另一种操作为相对于另一点(px,py,pz)进行旋转操作，我们依旧采用右手坐标系，即旋转角的正方向为逆时针方向。旋转我们可分为绕x轴、y轴、z轴旋转。假设绕x轴旋转角度为alpha,绕y轴旋转角度为beta,绕z轴旋转的角度为gamma。则相应的变换如下：</p><p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/v2-6ebe22b0db2058bbce2a760db96cb21e_1440w.png" alt="img" loading="lazy"></p><p>相机坐标系</p><p>看到的范围有限：视锥空间</p><p>看谁在视锥空间的哪个面上截取的</p><p>视网膜屏</p><p>960*640px：在眼睛前40厘米，可以达到视网膜清晰的程度</p><p>13.2k*9.6k：</p>',17),p=[n];function d(h,s){return e(),t("div",null,p)}const _=a(i,[["render",d],["__file","3. 计算机图形学基础.html.vue"]]);export{_ as default};
