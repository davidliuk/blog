const e=JSON.parse(`{"key":"v-3f3cb95e","path":"/cs/database/redis/practice/best/%E6%89%B9%E5%A4%84%E7%90%86%E4%BC%98%E5%8C%96.html","title":"批处理优化","lang":"en-US","frontmatter":{"description":"批处理优化 pipeline：单机模式下的批处理 mset mset hmset 注意事项： 不要在一次批处理中传输太多命令，否则单次命令占用带宽过多，会导致网络阻塞 MSET虽然可以批处理，但是却只能操作部分数据类型，因此如果有对复杂数据类型的批处理需要，建议使用Pipeline功能： 管道 Pipeline 使用管道技术可以解决多个命令执行时的网络等待，它是把多个命令整合到一起发送给服务器端处理之后统一返回给客户端，这样就免去了每条命令执行后都要等待的情况，从而有效地提高了程序的执行效率。","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/database/redis/practice/best/%E6%89%B9%E5%A4%84%E7%90%86%E4%BC%98%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"批处理优化"}],["meta",{"property":"og:description","content":"批处理优化 pipeline：单机模式下的批处理 mset mset hmset 注意事项： 不要在一次批处理中传输太多命令，否则单次命令占用带宽过多，会导致网络阻塞 MSET虽然可以批处理，但是却只能操作部分数据类型，因此如果有对复杂数据类型的批处理需要，建议使用Pipeline功能： 管道 Pipeline 使用管道技术可以解决多个命令执行时的网络等待，它是把多个命令整合到一起发送给服务器端处理之后统一返回给客户端，这样就免去了每条命令执行后都要等待的情况，从而有效地提高了程序的执行效率。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-23T13:33:44.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-23T13:33:44.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/cs/database/redis/practice/best/%E6%89%B9%E5%A4%84%E7%90%86%E4%BC%98%E5%8C%96.html"}]]},"headers":[{"level":3,"title":"mset","slug":"mset","link":"#mset","children":[]},{"level":3,"title":"管道 Pipeline","slug":"管道-pipeline","link":"#管道-pipeline","children":[]}],"git":{"createdTime":1677504602000,"updatedTime":1679578424000,"contributors":[{"name":"davidliuk","email":"l729641074@163.com","commits":1},{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":0.98,"words":294},"localizedDate":"February 27, 2023","filePathRelative":"cs/database/redis/practice/best/批处理优化.md","excerpt":"<h1> 批处理优化</h1>\\n<p>pipeline：单机模式下的批处理</p>\\n<h3> mset</h3>\\n<ul>\\n<li>mset</li>\\n<li>hmset</li>\\n</ul>\\n<p>注意事项：</p>\\n<ul>\\n<li>不要在一次批处理中传输太多命令，否则单次命令占用带宽过多，会导致网络阻塞</li>\\n<li>MSET虽然可以批处理，但是却只能操作部分数据类型，因此如果有对复杂数据类型的批处理需要，建议使用Pipeline功能：</li>\\n</ul>\\n<h3> 管道 Pipeline</h3>\\n<p>使用<strong>管道技术可以解决多个命令执行时的网络等待</strong>，它是把多个命令整合到一起发送给服务器端处理之后统一返回给客户端，这样就免去了每条命令执行后都要等待的情况，从而有效地提高了程序的执行效率。</p>","autoDesc":true}`);export{e as data};
