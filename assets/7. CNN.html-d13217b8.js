import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as e,a as s,b as a,d as n}from"./app-9107e99b.js";const i={},p=s("h1",{id:"cnn-卷积神经网络",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#cnn-卷积神经网络","aria-hidden":"true"},"#"),a(" CNN 卷积神经网络")],-1),m=s("p",null,"Multilayer Perceptron(MLP)，多层感知机",-1),r=s("h2",{id:"全连接网络",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#全连接网络","aria-hidden":"true"},"#"),a(" 全连接网络")],-1),c=s("ul",null,[s("li",null,"每一个细胞与下一层所有细胞都连接")],-1),h=s("p",null,"输入层、隐藏层、输出层",-1),o=s("p",null,"每个神经元都有自己单独的权重向量",-1),g=s("p",null,"目标/损失函数：",-1),u=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"C"),s("mo",null,"="),s("mfrac",null,[s("mn",null,"1"),s("mn",null,"2")]),s("mi",{mathvariant:"normal"},"∣"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"y"),s("mo",null,"−"),s("msup",null,[s("mi",null,"a"),s("mn",null,"2")]),s("mi",{mathvariant:"normal"},"∣"),s("mi",{mathvariant:"normal"},"∣"),s("mo",null,"="),s("mfrac",null,[s("mn",null,"1"),s("mn",null,"2")]),s("msub",null,[s("mo",null,"∑"),s("mi",null,"j")]),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"y"),s("mi",null,"j")]),s("mo",null,"−"),s("msub",null,[s("mi",null,"a"),s("mi",null,"j")]),s("msup",null,[s("mo",{stretchy:"false"},")"),s("mn",null,"2")])]),s("annotation",{encoding:"application/x-tex"},"C=\\frac{1}{2}||y-a^2||=\\frac{1}{2}\\sum_j(y_j-a_j)^2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1901em","vertical-align":"-0.345em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8451em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.394em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.345em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mord"},"∣∣"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"a"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])]),s("span",{class:"mord"},"∣∣"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.2809em","vertical-align":"-0.4358em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8451em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.394em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.345em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop"},[s("span",{class:"mop op-symbol small-op",style:{position:"relative",top:"0em"}},"∑"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.162em"}},[s("span",{style:{top:"-2.4003em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05724em"}},"j")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.4358em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05724em"}},"j")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1002em","vertical-align":"-0.2861em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"a"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05724em"}},"j")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mclose"},[s("span",{class:"mclose"},")"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])])])])])],-1),d=n('<p>随机初始化每个神经元的参数，然后把样本集的每个样本的特征带进去，算出来概率和真实概率做一个差，利用随机梯度下降最小化这个差</p><p>核心问题：如何求出一个神经元的参数（的梯度）</p><p>可以解决线性不可分的问题：</p><p>可以认为相当于一个升维度的过程，所以可以解决低纬度下线性不可分的问题</p><p>为什么引入激活函数：模型假设，灵感来自于大脑的神经元，输入一个信号，对于下一个节点的输出也就两种，传递下去或者不传递（即0/1）</p><p>层数太多也有很多风险</p><p>比如过拟合、</p><p>通常是随机砍掉50%</p><h2 id="反向传播" tabindex="-1"><a class="header-anchor" href="#反向传播" aria-hidden="true">#</a> 反向传播</h2><p>算梯度的时候，从最后一层算误差，然后把残差向前传递，根据每一个神经元的残差去求每个神经元的偏导数</p><p>公式2：</p><p>第l层的误差可以由l+1层的残差推导</p><p>设计模式：管道过滤器</p><p>图论问题：管道过滤器</p><h2 id="卷积" tabindex="-1"><a class="header-anchor" href="#卷积" aria-hidden="true">#</a> 卷积</h2><p>卷积：按位运算</p><p>灰度图像0-255</p><p>卷积核：</p><ul><li>-1和1可以检测各种方向上的边缘，还可以 检测边缘的强度</li></ul><p>通过边缘来认知事物的</p><p>卷积核求和，可以得到矢量和的法向量的边缘</p><p>卷积核，可以33和55，大的可以获得更复杂的形状</p><p>彩色图像：3通道，最后是堆叠起来</p><p>通道、卷积核个数</p><p>CNN：对文本的处理用的比较少</p><p>每一层都有一个激活</p><p>池化</p><p>Pooling 池化，随着网络的延伸，feature map变小一些</p><ul><li>Max Pooling，这个用的多，取最大值</li><li>Mean Pooling</li></ul><p>channel</p><p>在数学，尤其是概率论和相关领域中，归一化指数函数，或称Softmax函数，是逻辑函数的一种推广。它能将一个含任意实数的K维向量z“压缩”到另一个K维实向量σ(z)中，使得每一个元素的范围都在(0,1)之间，并且所有元素的和为1。该函数多用于多分类问题中。</p><p>多模态任务：转换成矩阵任务，如</p><ul><li>文本，利用霍夫曼编码转化成数字编码</li><li>视频，是很多帧图像，形成一个三维的矩阵</li></ul><p>深度可分离卷积</p><h3 id="lenet" tabindex="-1"><a class="header-anchor" href="#lenet" aria-hidden="true">#</a> LeNet</h3><h3 id="vgg-16" tabindex="-1"><a class="header-anchor" href="#vgg-16" aria-hidden="true">#</a> VGG 16</h3><h3 id="googlenet" tabindex="-1"><a class="header-anchor" href="#googlenet" aria-hidden="true">#</a> GoogLeNet</h3><p>Inception Model</p><p>320,000</p><p>1*1深度可分离卷积</p><ul><li>改变通道数</li><li>深度可分离卷积，降低参数规模</li><li>替代全连接层，可以使输入的图的模型是任意大小</li></ul><p>网络中一旦有全连接，那输入图像的大小就要固定了，这个是不太好的，这样需要把图像重采样</p><p>Transformer、多任务网络、迁移学习网络、在线学习等都是使用了GoogLeNet中这个结构的创新inception</p><p>Tensorflow中GoogleNet底层源码可以看看</p><p>GoogleNet有三个损失函数，原因</p><ul><li>网络越深，会出现梯度消失的问题</li></ul><p>inception：特征融合</p><h3 id="resnet" tabindex="-1"><a class="header-anchor" href="#resnet" aria-hidden="true">#</a> ResNet</h3><p>避免梯度消失</p><p>上采样、下采样：插值</p>',50),y=[p,m,r,c,h,o,g,u,d];function v(_,f){return t(),e("div",null,y)}const x=l(i,[["render",v],["__file","7. CNN.html.vue"]]);export{x as default};
