import{_ as e,V as i,W as a,a0 as t}from"./framework-705b829b.js";const l={},n=t('<h1 id="批处理优化" tabindex="-1"><a class="header-anchor" href="#批处理优化" aria-hidden="true">#</a> 批处理优化</h1><p>pipeline：单机模式下的批处理</p><h3 id="mset" tabindex="-1"><a class="header-anchor" href="#mset" aria-hidden="true">#</a> mset</h3><ul><li>mset</li><li>hmset</li></ul><p>不要在一次批处理中传输太多命令，否则单次命令占用带宽过多，会导致网络阻塞</p><h3 id="pipeline" tabindex="-1"><a class="header-anchor" href="#pipeline" aria-hidden="true">#</a> Pipeline</h3><p>MSET虽然可以批处理，但是却只能操作部分数据类型，因此如果有对复杂数据类型的批处理需要，建议使用Pipeline功能：</p><p>注意事项：</p><ul><li>批处理时不建议一次携带太多命令</li><li>Pipeline的多个命令之间不具备原子性</li></ul>',9),r=[n];function s(h,c){return i(),a("div",null,r)}const p=e(l,[["render",s],["__file","批处理优化.html.vue"]]);export{p as default};
