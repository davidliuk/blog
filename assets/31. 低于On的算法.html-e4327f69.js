const e=JSON.parse(`{"key":"v-581da252","path":"/cs/algo/summary/31.%20%E4%BD%8E%E4%BA%8EOn%E7%9A%84%E7%AE%97%E6%B3%95.html","title":"","lang":"en-US","frontmatter":{"description":"快速幂Ologn 辗转相除法 Ologn 分解质因数 O√n （对称，成双成对出现） 分块检索法 O√n （可以找到次优解，最优解可能是logn的算法） 快速幂 取模运算：+-*满足 递归的写法，最不容易写错","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/algo/summary/31.%20%E4%BD%8E%E4%BA%8EOn%E7%9A%84%E7%AE%97%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:description","content":"快速幂Ologn 辗转相除法 Ologn 分解质因数 O√n （对称，成双成对出现） 分块检索法 O√n （可以找到次优解，最优解可能是logn的算法） 快速幂 取模运算：+-*满足 递归的写法，最不容易写错"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-04T02:34:19.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-04T02:34:19.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/cs/algo/summary/31.%20%E4%BD%8E%E4%BA%8EOn%E7%9A%84%E7%AE%97%E6%B3%95.html"}]]},"headers":[{"level":3,"title":"快速幂","slug":"快速幂","link":"#快速幂","children":[]},{"level":3,"title":"分块检索","slug":"分块检索","link":"#分块检索","children":[]}],"git":{"createdTime":1670121259000,"updatedTime":1670121259000,"contributors":[{"name":"DavidLiu","email":"l729641074@163.com","commits":1}]},"readingTime":{"minutes":0.92,"words":277},"localizedDate":"December 4, 2022","filePathRelative":"cs/algo/summary/31. 低于On的算法.md","excerpt":"<p>快速幂Ologn</p>\\n<p>辗转相除法 Ologn</p>\\n<p>分解质因数 O√n （对称，成双成对出现）</p>\\n<p>分块检索法 O√n （可以找到次优解，最优解可能是logn的算法）</p>\\n<h3> 快速幂</h3>\\n<p>取模运算：+-*满足</p>\\n<p><img src=\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-08-10 16.34.51.png\\" alt=\\"截屏2022-08-10 16.34.51\\" loading=\\"lazy\\"></p>\\n<p>递归的写法，最不容易写错</p>","autoDesc":true}`);export{e as data};
