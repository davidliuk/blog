import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as n,o as l}from"./app-z8Dpj-As.js";const e={};function i(p,s){return l(),t("div",null,s[0]||(s[0]=[n('<h1 id="bloom-filter" tabindex="-1"><a class="header-anchor" href="#bloom-filter"><span>Bloom Filter</span></a></h1><h2 id="曝光过滤问题" tabindex="-1"><a class="header-anchor" href="#曝光过滤问题"><span>曝光过滤问题</span></a></h2><ul><li><p>如果用户看过某个物品，则不再把该物品曝光给该用户。</p></li><li><p>对于每个用户，记录已经曝光给他的物品。（小红书只召回1个月以内的笔记，因此只需要记录每个用户最近1个月的曝光历史。)</p></li><li><p>对于每个召回的物品，判断它是否已经给该用户曝光过，排除掉曾经曝光过的物品。</p></li><li><p>一位用户看过个物品，本次召回r个物品，如果暴力对比，需要O(nr)的时间</p></li></ul><h2 id="bloom-filter-1" tabindex="-1"><a class="header-anchor" href="#bloom-filter-1"><span>Bloom filter</span></a></h2><blockquote><p>参考文献：</p><ul><li>Burton H.Bloom.Space/time trade-offs in hash coding with allowable errors.Communications of the ACM.1970</li></ul></blockquote><ul><li>Bloom filter 判断一个物品ID是否在已曝光的物品集合中。</li><li>如果判断为no，那么该物品一定不在集合中。</li><li>如果判断为yes，那么该物品很可能在集合中。（可能误伤错误判断未曝光物品为已曝光，将其过滤掉。)</li><li>Bloom filter把物品集合表征为一个m维二进制向量。</li><li>每个用户有一个曝光物品的集合，表征为一个向量，需要bit的存储。</li><li>Bloom filter有k个哈希函数，每个哈希函数把物品ID映射成介于0和m-1之间的整数。</li></ul><h3 id="bloom-filter-k-1" tabindex="-1"><a class="header-anchor" href="#bloom-filter-k-1"><span>Bloom Filter (k=1)</span></a></h3><p><img src="https://gcore.jsdelivr.net/gh/davidliuk/images@master/image-20250825115442875.png" alt="image-20250825115442875" loading="lazy"></p><h3 id="bloom-filter-k-1-1" tabindex="-1"><a class="header-anchor" href="#bloom-filter-k-1-1"><span>Bloom Filter (k=1)</span></a></h3><p><img src="https://gcore.jsdelivr.net/gh/davidliuk/images@master/image-20250825115544159.png" alt="image-20250825115544159" loading="lazy"></p><ul><li>曝光物品集合大小为n,二进制向量维度为m,使用k个哈希函数。</li><li>Bloom filter误伤的概率为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo>≈</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>−</mo><mfrac><mrow><mi>k</mi><mi>n</mi></mrow><mi>m</mi></mfrac><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">\\delta≈(1-\\exp(-\\frac{kn}{m}))^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2251em;vertical-align:-0.345em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">kn</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span><ul><li>n越大，向量中的1越多，误伤概率越大。（未曝光物品的k个位置恰好都是1的概率大。)</li><li>m越大，向量越长，越不容易发生哈希碰撞。</li><li>k太大、太小都不好，k有最优取值。</li></ul></li><li>设定可容忍的误伤概率为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>，那么最优参数为： <ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mn>1.44</mn><mo>⋅</mo><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><mn>1</mn><mi>δ</mi></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k=1.44\\cdot\\ln(\\frac{1}{\\delta})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1.44</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03785em;">δ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>=</mo><mn>2</mn><mi>n</mi><mo>⋅</mo><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><mn>1</mn><mi>δ</mi></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m=2n\\cdot\\ln(\\frac{1}{\\delta})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03785em;">δ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></li></ul></li></ul><p>曝光过滤的链路</p><p><img src="https://gcore.jsdelivr.net/gh/davidliuk/images@master/image-20250825115950197.png" alt="image-20250825115950197" loading="lazy"></p><p>缺点</p><ul><li>Bloom filter把物品的集合表示成一个二进制向量o</li><li>每往集合中添加一个物品，只需要把向量飞个位置的元素置为1。（如果原本就是1，则不变。)</li><li>Bloom filter只支持添加物品，不支持删除物品。从集合中移除物品，无法消除它对向量的影响。</li><li>每天都需要从物品集合中移除年龄大于1个月的物品（超龄物品不可能被召回，没必要把它们记录在Bloom filter，降低n可以降低误伤率。)</li></ul><p>（如果需要过期的话，比如说30天过期，也许可以30个bloom filter滚动过期），或者每天重算一次</p>',16)]))}const o=a(e,[["render",i],["__file","filter.html.vue"]]),c=JSON.parse(`{"path":"/ai/rec/retrieval/filter.html","title":"Bloom Filter","lang":"en-US","frontmatter":{"description":"Bloom Filter 曝光过滤问题 如果用户看过某个物品，则不再把该物品曝光给该用户。 对于每个用户，记录已经曝光给他的物品。（小红书只召回1个月以内的笔记，因此只需要记录每个用户最近1个月的曝光历史。) 对于每个召回的物品，判断它是否已经给该用户曝光过，排除掉曾经曝光过的物品。 一位用户看过个物品，本次召回r个物品，如果暴力对比，需要O(nr)的...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/ai/rec/retrieval/filter.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"Bloom Filter"}],["meta",{"property":"og:description","content":"Bloom Filter 曝光过滤问题 如果用户看过某个物品，则不再把该物品曝光给该用户。 对于每个用户，记录已经曝光给他的物品。（小红书只召回1个月以内的笔记，因此只需要记录每个用户最近1个月的曝光历史。) 对于每个召回的物品，判断它是否已经给该用户曝光过，排除掉曾经曝光过的物品。 一位用户看过个物品，本次召回r个物品，如果暴力对比，需要O(nr)的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://gcore.jsdelivr.net/gh/davidliuk/images@master/image-20250825115442875.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-08-31T05:52:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-31T05:52:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Bloom Filter\\",\\"image\\":[\\"https://gcore.jsdelivr.net/gh/davidliuk/images@master/image-20250825115442875.png\\",\\"https://gcore.jsdelivr.net/gh/davidliuk/images@master/image-20250825115544159.png\\",\\"https://gcore.jsdelivr.net/gh/davidliuk/images@master/image-20250825115950197.png\\"],\\"dateModified\\":\\"2025-08-31T05:52:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":2,"title":"曝光过滤问题","slug":"曝光过滤问题","link":"#曝光过滤问题","children":[]},{"level":2,"title":"Bloom filter","slug":"bloom-filter-1","link":"#bloom-filter-1","children":[{"level":3,"title":"Bloom Filter (k=1)","slug":"bloom-filter-k-1","link":"#bloom-filter-k-1","children":[]},{"level":3,"title":"Bloom Filter (k=1)","slug":"bloom-filter-k-1-1","link":"#bloom-filter-k-1-1","children":[]}]}],"git":{"createdTime":1756619527000,"updatedTime":1756619527000,"contributors":[{"name":"dawei.liu","email":"dawei.liu@bytedance.com","commits":1}]},"readingTime":{"minutes":2.26,"words":677},"filePathRelative":"ai/rec/retrieval/filter.md","localizedDate":"August 31, 2025","excerpt":"\\n<h2>曝光过滤问题</h2>\\n<ul>\\n<li>\\n<p>如果用户看过某个物品，则不再把该物品曝光给该用户。</p>\\n</li>\\n<li>\\n<p>对于每个用户，记录已经曝光给他的物品。（小红书只召回1个月以内的笔记，因此只需要记录每个用户最近1个月的曝光历史。)</p>\\n</li>\\n<li>\\n<p>对于每个召回的物品，判断它是否已经给该用户曝光过，排除掉曾经曝光过的物品。</p>\\n</li>\\n<li>\\n<p>一位用户看过个物品，本次召回r个物品，如果暴力对比，需要O(nr)的时间</p>\\n</li>\\n</ul>\\n<h2>Bloom filter</h2>\\n<blockquote>\\n<p>参考文献：</p>\\n<ul>\\n<li>Burton H.Bloom.Space/time trade-offs in hash coding with allowable errors.Communications of the ACM.1970</li>\\n</ul>\\n</blockquote>","autoDesc":true}`);export{o as comp,c as data};
