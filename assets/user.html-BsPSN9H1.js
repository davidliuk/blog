import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as r,o as n}from"./app-DQpqR3jB.js";const l={};function a(o,e){return n(),t("div",null,e[0]||(e[0]=[r('<h1 id="用户系统" tabindex="-1"><a class="header-anchor" href="#用户系统"><span>用户系统</span></a></h1><p>用户系统特点：</p><p>读非常多，写非常少，一个读多写少的系统，一定要使用 Cache 进行优化</p><ul><li>Authentication Service 负责登录注册</li><li>User Service 负责用户信息存储与查询</li><li>Friendship Service 负责好友关系存储</li></ul><p>User SQL</p><p>Friendship Cassandra</p><h2 id="authentication-service" tabindex="-1"><a class="header-anchor" href="#authentication-service"><span>Authentication Service</span></a></h2><p>Session、Cookie</p><p>Session Table</p><ul><li>Session Token</li><li>User ID，可能加密</li><li>expire at, lazy deleting</li></ul><p>单端登陆和多端登陆区别</p><ul><li>单端加一个device token字段做判断</li></ul><p>Session数据存储系统</p><ul><li>如果用户不太多的话，memcached</li><li>多，数据库，加cache和索引</li></ul><h2 id="friendship-service" tabindex="-1"><a class="header-anchor" href="#friendship-service"><span>Friendship Service</span></a></h2><p>单向、双向</p><p>单向</p><ul><li><code>from_user_id</code>, <code>to_user_id</code></li></ul><p>双向</p><ul><li>一条数据 <ul><li><code>smaller_user_id</code>, <code>bigger_user_id</code></li><li><code>where sm_id=x or bg_id=x</code></li><li>一般noSQL不支持multi-index，不能使用这种方案</li><li>P：存储空间小，C：慢</li></ul></li><li>两条 <ul><li><code>from_user_id</code>, <code>to_user_id</code></li><li>NoSQL, SQL都可以用这种方案</li><li>P：快，C：存储空间大</li></ul></li></ul><p>两条数据更好，上一个他的or其实性能差，约等于执行两次，disk is cheap</p><p>用户不等，在线服务sql不能复杂</p><p>DS、DA处理离线数据可能用到复杂sql</p>',23)]))}const d=i(l,[["render",a],["__file","user.html.vue"]]),p=JSON.parse(`{"path":"/se/design/system/module/user.html","title":"用户系统","lang":"en-US","frontmatter":{"description":"用户系统 用户系统特点： 读非常多，写非常少，一个读多写少的系统，一定要使用 Cache 进行优化 Authentication Service 负责登录注册 User Service 负责用户信息存储与查询 Friendship Service 负责好友关系存储 User SQL Friendship Cassandra Authentication...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/design/system/module/user.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"用户系统"}],["meta",{"property":"og:description","content":"用户系统 用户系统特点： 读非常多，写非常少，一个读多写少的系统，一定要使用 Cache 进行优化 Authentication Service 负责登录注册 User Service 负责用户信息存储与查询 Friendship Service 负责好友关系存储 User SQL Friendship Cassandra Authentication..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-01-07T00:41:06.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-07T00:41:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"用户系统\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-07T00:41:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":2,"title":"Authentication Service","slug":"authentication-service","link":"#authentication-service","children":[]},{"level":2,"title":"Friendship Service","slug":"friendship-service","link":"#friendship-service","children":[]}],"git":{"createdTime":1679321449000,"updatedTime":1736210466000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro-3.local","commits":1},{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":0.88,"words":264},"filePathRelative":"se/design/system/module/user.md","localizedDate":"March 20, 2023","excerpt":"\\n<p>用户系统特点：</p>\\n<p>读非常多，写非常少，一个读多写少的系统，一定要使用 Cache 进行优化</p>\\n<ul>\\n<li>Authentication Service 负责登录注册</li>\\n<li>User Service 负责用户信息存储与查询</li>\\n<li>Friendship Service 负责好友关系存储</li>\\n</ul>\\n<p>User SQL</p>\\n<p>Friendship Cassandra</p>\\n<h2>Authentication Service</h2>\\n<p>Session、Cookie</p>\\n<p>Session Table</p>\\n","autoDesc":true}`);export{d as comp,p as data};
