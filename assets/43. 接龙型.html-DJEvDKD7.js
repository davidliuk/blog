import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as e,o as p}from"./app-z8Dpj-As.js";const a={};function n(r,t){return p(),i("div",null,t[0]||(t[0]=[e("h1",{id:"接龙型",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#接龙型"},[e("span",null,"接龙型")])],-1),e("blockquote",null,[e("p",null,"接龙型动态规划的二分解法")],-1),e("p",null,"接龙型DP是一维坐标型DP",-1),e("p",null,"题目通常会给你一个接龙规则，问你最长的龙有多长",-1),e("p",null,"状态表示通常为: dp[i] 表示以坐标为 i 的元素结尾的最长龙的长度",-1),e("p",null,"方程通常是: dp[i] = max{dp[j] + 1}, j 的后面可以接上 i",-1)]))}const c=o(a,[["render",n],["__file","43. 接龙型.html.vue"]]),m=JSON.parse(`{"path":"/algo/course/jz/dp/43.%20%E6%8E%A5%E9%BE%99%E5%9E%8B.html","title":"接龙型","lang":"en-US","frontmatter":{"description":"接龙型 接龙型动态规划的二分解法 接龙型DP是一维坐标型DP 题目通常会给你一个接龙规则，问你最长的龙有多长 状态表示通常为: dp[i] 表示以坐标为 i 的元素结尾的最长龙的长度 方程通常是: dp[i] = max{dp[j] + 1}, j 的后面可以接上 i","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/algo/course/jz/dp/43.%20%E6%8E%A5%E9%BE%99%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"接龙型"}],["meta",{"property":"og:description","content":"接龙型 接龙型动态规划的二分解法 接龙型DP是一维坐标型DP 题目通常会给你一个接龙规则，问你最长的龙有多长 状态表示通常为: dp[i] 表示以坐标为 i 的元素结尾的最长龙的长度 方程通常是: dp[i] = max{dp[j] + 1}, j 的后面可以接上 i"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-17T16:38:04.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-17T16:38:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"接龙型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-17T16:38:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[],"git":{"createdTime":1734453484000,"updatedTime":1734453484000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro-3.local","commits":1}]},"readingTime":{"minutes":0.32,"words":96},"filePathRelative":"algo/course/jz/dp/43. 接龙型.md","localizedDate":"December 17, 2024","excerpt":"\\n<blockquote>\\n<p>接龙型动态规划的二分解法</p>\\n</blockquote>\\n<p>接龙型DP是一维坐标型DP</p>\\n<p>题目通常会给你一个接龙规则，问你最长的龙有多长</p>\\n<p>状态表示通常为: dp[i] 表示以坐标为 i 的元素结尾的最长龙的长度</p>\\n<p>方程通常是: dp[i] = max{dp[j] + 1}, j 的后面可以接上 i</p>\\n","autoDesc":true}`);export{c as comp,m as data};
