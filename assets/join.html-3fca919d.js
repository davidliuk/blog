const t=JSON.parse(`{"key":"v-15b42f9f","path":"/cs/database/sql/basic/join.html","title":"连接","lang":"en-US","frontmatter":{"description":"连接 连接类型 说明 INNER JOIN 内连接 （默认连接方式）只有当两个表都存在满足条件的记录时才会返回行。 LEFT JOIN / LEFT OUTER JOIN 左(外)连接 返回左表中的所有行，即使右表中没有满足条件的行也是如此。 RIGHT JOIN / RIGHT OUTER JOIN 右(外)连接 返回右表中的所有行，即使左表中没有满足条件的行也是如此。 FULL JOIN / FULL OUTER JOIN 全(外)连接 只要其中有一个表存在满足条件的记录，就返回行。 SELF JOIN 将一个表连接到自身，就像该表是两个表一样。为了区分两个表，在 SQL 语句中需要至少重命名一个表。 CROSS JOIN 交叉连接，从两个或者多个连接表中返回记录集的笛卡尔积。","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/database/sql/basic/join.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"连接"}],["meta",{"property":"og:description","content":"连接 连接类型 说明 INNER JOIN 内连接 （默认连接方式）只有当两个表都存在满足条件的记录时才会返回行。 LEFT JOIN / LEFT OUTER JOIN 左(外)连接 返回左表中的所有行，即使右表中没有满足条件的行也是如此。 RIGHT JOIN / RIGHT OUTER JOIN 右(外)连接 返回右表中的所有行，即使左表中没有满足条件的行也是如此。 FULL JOIN / FULL OUTER JOIN 全(外)连接 只要其中有一个表存在满足条件的记录，就返回行。 SELF JOIN 将一个表连接到自身，就像该表是两个表一样。为了区分两个表，在 SQL 语句中需要至少重命名一个表。 CROSS JOIN 交叉连接，从两个或者多个连接表中返回记录集的笛卡尔积。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-17T10:10:52.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-05-17T10:10:52.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/cs/database/sql/basic/join.html"}]]},"headers":[],"git":{"createdTime":1679321449000,"updatedTime":1684318252000,"contributors":[{"name":"davidliuk","email":"l729641074@163.com","commits":1},{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":1.8,"words":541},"localizedDate":"March 20, 2023","filePathRelative":"cs/database/sql/basic/join.md","excerpt":"<h1> 连接</h1>\\n<table>\\n<thead>\\n<tr>\\n<th>连接类型</th>\\n<th>说明</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>INNER JOIN 内连接</td>\\n<td>（默认连接方式）只有当两个表都存在满足条件的记录时才会返回行。</td>\\n</tr>\\n<tr>\\n<td>LEFT JOIN / LEFT OUTER JOIN 左(外)连接</td>\\n<td>返回左表中的所有行，即使右表中没有满足条件的行也是如此。</td>\\n</tr>\\n<tr>\\n<td>RIGHT JOIN / RIGHT OUTER JOIN 右(外)连接</td>\\n<td>返回右表中的所有行，即使左表中没有满足条件的行也是如此。</td>\\n</tr>\\n<tr>\\n<td>FULL JOIN / FULL OUTER JOIN 全(外)连接</td>\\n<td>只要其中有一个表存在满足条件的记录，就返回行。</td>\\n</tr>\\n<tr>\\n<td>SELF JOIN</td>\\n<td>将一个表连接到自身，就像该表是两个表一样。为了区分两个表，在 SQL 语句中需要至少重命名一个表。</td>\\n</tr>\\n<tr>\\n<td>CROSS JOIN</td>\\n<td>交叉连接，从两个或者多个连接表中返回记录集的笛卡尔积。</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}`);export{t as data};
