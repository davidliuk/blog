const e=JSON.parse(`{"key":"v-0faf468c","path":"/cs/database/redis/principal/memory-model/%E5%86%85%E5%AD%98%E6%B7%98%E6%B1%B0%E7%AD%96%E7%95%A5.html","title":"内存淘汰策略","lang":"en-US","frontmatter":{"description":"内存淘汰策略 在主线程进行的 前面说的过期删除策略，是删除已过期的 key，而当 Redis 的运行内存已经超过 Redis 设置的最大内存之后，则会使用内存淘汰策略删除符合条件的 key，以此来保障 Redis 高效的运行。 设置最大内存 在配置文件 redis.conf 中，可以通过参数 maxmemory &lt;bytes&gt; 来设定最大运行内存，只有在 Redis 的运行内存达到了我们设置的最大运行内存，才会触发内存淘汰策略。 不同位数的操作系统，maxmemory 的默认值是不同的：","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/database/redis/principal/memory-model/%E5%86%85%E5%AD%98%E6%B7%98%E6%B1%B0%E7%AD%96%E7%95%A5.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"内存淘汰策略"}],["meta",{"property":"og:description","content":"内存淘汰策略 在主线程进行的 前面说的过期删除策略，是删除已过期的 key，而当 Redis 的运行内存已经超过 Redis 设置的最大内存之后，则会使用内存淘汰策略删除符合条件的 key，以此来保障 Redis 高效的运行。 设置最大内存 在配置文件 redis.conf 中，可以通过参数 maxmemory &lt;bytes&gt; 来设定最大运行内存，只有在 Redis 的运行内存达到了我们设置的最大运行内存，才会触发内存淘汰策略。 不同位数的操作系统，maxmemory 的默认值是不同的："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-23T13:33:44.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-23T13:33:44.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/cs/database/redis/principal/memory-model/%E5%86%85%E5%AD%98%E6%B7%98%E6%B1%B0%E7%AD%96%E7%95%A5.html"}]]},"headers":[{"level":3,"title":"设置最大内存","slug":"设置最大内存","link":"#设置最大内存","children":[]},{"level":3,"title":"设置内存淘汰策略","slug":"设置内存淘汰策略","link":"#设置内存淘汰策略","children":[]},{"level":3,"title":"八种内存淘汰策略","slug":"八种内存淘汰策略","link":"#八种内存淘汰策略","children":[]}],"git":{"createdTime":1678024743000,"updatedTime":1679578424000,"contributors":[{"name":"davidliuk","email":"l729641074@163.com","commits":2}]},"readingTime":{"minutes":4.28,"words":1284},"localizedDate":"March 5, 2023","filePathRelative":"cs/database/redis/principal/memory-model/内存淘汰策略.md","excerpt":"<h1> 内存淘汰策略</h1>\\n<p>在主线程进行的</p>\\n<p>前面说的过期删除策略，是删除已过期的 key，而当 Redis 的运行内存已经超过 Redis 设置的最大内存之后，则会使用内存淘汰策略删除符合条件的 key，以此来保障 Redis 高效的运行。</p>\\n<h3> 设置最大内存</h3>\\n<p>在配置文件 redis.conf 中，可以通过参数 <code>maxmemory &lt;bytes&gt;</code> 来设定最大运行内存，只有在 Redis 的运行内存达到了我们设置的最大运行内存，才会触发内存淘汰策略。 不同位数的操作系统，maxmemory 的默认值是不同的：</p>","autoDesc":true}`);export{e as data};
