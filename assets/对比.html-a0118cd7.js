import{_ as e,V as r,W as t,a0 as i}from"./framework-705b829b.js";const l={},a=i('<h2 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> Filter</h2><h2 id="区别" tabindex="-1"><a class="header-anchor" href="#区别" aria-hidden="true">#</a> 区别</h2><p>很多同学搞不懂拦截器和过滤器的区别，我们先说一下他们的区别：</p><ul><li><p>最简单明了的区别就是过滤器可以修改request，而拦截器不能</p></li><li><p>过滤器需要在servlet容器中实现，拦截器可以适用于javaEE，javaSE等各种环境</p></li><li><p>拦截器可以调用IOC容器中的各种依赖，而过滤器不能</p></li><li><p>过滤器只能在请求的前后使用，而拦截器可以详细到每个方法</p></li><li><p>filter过滤器依赖于servlet容器，而interceptor依赖于spring容器</p></li><li><p>filter是基于函数回调实现的，interceptor是基于Java反射机制实现的</p></li><li><p>filter是实现javax.servlet.Filter，该接口由servlet规范定义，使用过滤器（filter）需要依赖于servlet容器，如Tomcat容器。而interceptor是实现org.springframework.web.servlet.HandlerInterceptor接口，由spring框架提供且由spring容器管理，不依赖servlet容器，依赖spring容器。</p></li><li><p>filter（过滤器）是在请求到达servlet之前进行预处理。interceptor（拦截器）是在请求到达servlet之后在进入action（controller）之前进行预处理，在action（controller）处理完返回视图前再处理，待action（controller）返回视图后进行最终处理。</p></li><li><p>filter可以过滤被web容器管理的几乎所有资源请求（JSP、Servlet、静态资源等），interceptor只能对action（SpringMVC里的controller）进行拦截处理。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/bc40faea6f58446e92fb39e37145c71f.png" alt="img" loading="lazy"></p>',5),n=[a];function o(p,c){return r(),t("div",null,n)}const d=e(l,[["render",o],["__file","对比.html.vue"]]);export{d as default};
