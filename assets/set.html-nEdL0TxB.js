import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o as i}from"./app-DIqbhby7.js";const s={};function o(r,e){return i(),a("div",null,e[0]||(e[0]=[n('<h1 id="集合操作" tabindex="-1"><a class="header-anchor" href="#集合操作"><span>集合操作</span></a></h1><p>对<strong>结果集</strong>进行交并差操作</p><p>在 SQL 中使用 UNION 运算符时，有几点需要注意，需要确保 UNION 的每个部分都具有相同的数据类型，顺序相同，列数必须相同。</p><p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/6d666f8c6c392a2b04799886422f55e7.png" alt="img" loading="lazy"></p><h3 id="intersect" tabindex="-1"><a class="header-anchor" href="#intersect"><span>INTERSECT</span></a></h3><p>求两个集合的交集</p><h3 id="union" tabindex="-1"><a class="header-anchor" href="#union"><span>UNION</span></a></h3><p>求两个集合的并集，默认会去重（但是会影响性能）</p><p><code>UNION ALL</code> 可以不去重（性能更好）</p><p>只要求列数相同即可Union</p><h3 id="minus-except" tabindex="-1"><a class="header-anchor" href="#minus-except"><span>MINUS/EXCEPT</span></a></h3><p>求两个集合的差集（差异，两个集中不重复的部分）</p><p>results in only those records in one table BUT NOT the other.</p>',13)]))}const l=t(s,[["render",o],["__file","set.html.vue"]]),d=JSON.parse(`{"path":"/cs/database/sql/basic/set.html","title":"集合操作","lang":"en-US","frontmatter":{"description":"集合操作 对结果集进行交并差操作 在 SQL 中使用 UNION 运算符时，有几点需要注意，需要确保 UNION 的每个部分都具有相同的数据类型，顺序相同，列数必须相同。 img INTERSECT 求两个集合的交集 UNION 求两个集合的并集，默认会去重（但是会影响性能） UNION ALL 可以不去重（性能更好） 只要求列数相同即可Union M...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/database/sql/basic/set.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"集合操作"}],["meta",{"property":"og:description","content":"集合操作 对结果集进行交并差操作 在 SQL 中使用 UNION 运算符时，有几点需要注意，需要确保 UNION 的每个部分都具有相同的数据类型，顺序相同，列数必须相同。 img INTERSECT 求两个集合的交集 UNION 求两个集合的并集，默认会去重（但是会影响性能） UNION ALL 可以不去重（性能更好） 只要求列数相同即可Union M..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/6d666f8c6c392a2b04799886422f55e7.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-05-08T07:35:02.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-08T07:35:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"集合操作\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/6d666f8c6c392a2b04799886422f55e7.png\\"],\\"dateModified\\":\\"2024-05-08T07:35:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":3,"title":"INTERSECT","slug":"intersect","link":"#intersect","children":[]},{"level":3,"title":"UNION","slug":"union","link":"#union","children":[]},{"level":3,"title":"MINUS/EXCEPT","slug":"minus-except","link":"#minus-except","children":[]}],"git":{"createdTime":1684318252000,"updatedTime":1715153702000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":2}]},"readingTime":{"minutes":0.5,"words":149},"filePathRelative":"cs/database/sql/basic/set.md","localizedDate":"May 17, 2023","excerpt":"\\n<p>对<strong>结果集</strong>进行交并差操作</p>\\n<p>在 SQL 中使用 UNION 运算符时，有几点需要注意，需要确保 UNION 的每个部分都具有相同的数据类型，顺序相同，列数必须相同。</p>\\n<p><img src=\\"https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/6d666f8c6c392a2b04799886422f55e7.png\\" alt=\\"img\\" loading=\\"lazy\\"></p>\\n<h3>INTERSECT</h3>\\n<p>求两个集合的交集</p>\\n<h3>UNION</h3>","autoDesc":true}`);export{l as comp,d as data};
