import{_ as e,V as a,W as l,a0 as t}from"./framework-705b829b.js";const i={},o=t('<h1 id="volatile" tabindex="-1"><a class="header-anchor" href="#volatile" aria-hidden="true">#</a> volatile</h1><h3 id="可见性" tabindex="-1"><a class="header-anchor" href="#可见性" aria-hidden="true">#</a> 可见性</h3><p>会直接向主存中存取</p><p>JIT有的时候会优化，对执行过多的重点语句，有些就从物理内存中抽出来弄成一个局部的了，这样就会造成后续对这个变量改变对这句话不可见，如果给这个变量加volatile，就不会被优化，可以保证可见性。</p><h3 id="有序性" tabindex="-1"><a class="header-anchor" href="#有序性" aria-hidden="true">#</a> 有序性</h3><p>内存屏障：</p><ul><li>对volatile变量写操作之前有向上的内存屏障，防止前面的语句越过屏障</li><li>对volatile变量读操作之后有向下的内存屏障，防止后面的语句越过屏障</li></ul><p>写变量，一定要让volatile变量在最下面；</p><p>读变量，一定在最上面</p><p>这样才可以保证有序性</p>',10),r=[o];function h(c,d){return a(),l("div",null,r)}const s=e(i,[["render",h],["__file","volatile.html.vue"]]);export{s as default};
