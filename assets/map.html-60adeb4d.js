const e=JSON.parse(`{"key":"v-c85546b2","path":"/se/lang/java/collections/map.html","title":"Map 接口","lang":"en-US","frontmatter":{"description":"Map 接口 主要根据集合的特点来选用，比如我们需要根据键值获取到元素值时就选用 Map 接口下的集合，需 要排序时选择 TreeMap ,不需要排序时就选择 HashMap ,需要保证线程安全就选用 ConcurrentHashMap 。 当我们只需要存放元素值时，就选择实现Collection 接口的集合，需要保证元素唯一时选择实现 Set 接口的集合比如 TreeSet 或 HashSet，不需要就选择实现 List 接口的比如 ArrayList或 LinkedList ，然后再根据实现这些接口的集合的特点来选用。 HashMap","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/lang/java/collections/map.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"Map 接口"}],["meta",{"property":"og:description","content":"Map 接口 主要根据集合的特点来选用，比如我们需要根据键值获取到元素值时就选用 Map 接口下的集合，需 要排序时选择 TreeMap ,不需要排序时就选择 HashMap ,需要保证线程安全就选用 ConcurrentHashMap 。 当我们只需要存放元素值时，就选择实现Collection 接口的集合，需要保证元素唯一时选择实现 Set 接口的集合比如 TreeSet 或 HashSet，不需要就选择实现 List 接口的比如 ArrayList或 LinkedList ，然后再根据实现这些接口的集合的特点来选用。 HashMap"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-20T14:10:49.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-20T14:10:49.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/se/lang/java/collections/map.html"}]]},"headers":[{"level":2,"title":"HashMap","slug":"hashmap","link":"#hashmap","children":[{"level":3,"title":"hash 扰动函数","slug":"hash-扰动函数","link":"#hash-扰动函数","children":[]},{"level":3,"title":"Resize","slug":"resize","link":"#resize","children":[]},{"level":3,"title":"treeifyBin","slug":"treeifybin","link":"#treeifybin","children":[]},{"level":3,"title":"遍历","slug":"遍历","link":"#遍历","children":[]},{"level":3,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":3,"title":"对象作为key需要重新对象的hashcode和equals方法","slug":"对象作为key需要重新对象的hashcode和equals方法","link":"#对象作为key需要重新对象的hashcode和equals方法","children":[]}]}],"git":{"createdTime":1679321449000,"updatedTime":1679321449000,"contributors":[{"name":"davidliuk","email":"l729641074@163.com","commits":1}]},"readingTime":{"minutes":4.02,"words":1205},"localizedDate":"March 20, 2023","filePathRelative":"se/lang/java/collections/map.md","excerpt":"<h1> Map 接口</h1>\\n<p>主要根据集合的特点来选用，比如我们需要根据键值获取到元素值时就选用 Map 接口下的集合，需 要排序时选择 TreeMap ,不需要排序时就选择 HashMap ,需要保证线程安全就选用 ConcurrentHashMap 。</p>\\n<p>当我们只需要存放元素值时，就选择实现Collection 接口的集合，需要保证元素唯一时选择实现 Set 接口的集合比如 TreeSet 或 HashSet，不需要就选择实现 List 接口的比如 ArrayList或 LinkedList ，然后再根据实现这些接口的集合的特点来选用。</p>\\n<h2> HashMap</h2>","autoDesc":true}`);export{e as data};
