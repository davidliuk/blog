import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as n,o}from"./app-BXVo6w5b.js";const r={};function a(i,e){return o(),p("div",null,e[0]||(e[0]=[n('<h1 id="k-pointers" tabindex="-1"><a class="header-anchor" href="#k-pointers"><span>K Pointers</span></a></h1><p>多指针</p><p>用堆来存储K指针，每次取权值最大/最小的指针，更新答案并把该指针后移并放入堆中</p><p>每次移动某一个最优的指针，在任意n轮操作时，堆中的元素始终是这k个序列中n轮操作时的最优切面（比较抽象但是可以通过最小区间问题来理解）</p><p>经典问题：</p><p>多路归并（k-way merge）</p><p>丑数问题</p><p>最小区间</p><p>队列中</p>',9)]))}const c=t(r,[["render",a],["__file","index.html.vue"]]),d=JSON.parse(`{"path":"/algo/summary/optimise/decrease-conquer/kptr/","title":"K Pointers","lang":"en-US","frontmatter":{"description":"K Pointers 多指针 用堆来存储K指针，每次取权值最大/最小的指针，更新答案并把该指针后移并放入堆中 每次移动某一个最优的指针，在任意n轮操作时，堆中的元素始终是这k个序列中n轮操作时的最优切面（比较抽象但是可以通过最小区间问题来理解） 经典问题： 多路归并（k-way merge） 丑数问题 最小区间 队列中","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/algo/summary/optimise/decrease-conquer/kptr/"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"K Pointers"}],["meta",{"property":"og:description","content":"K Pointers 多指针 用堆来存储K指针，每次取权值最大/最小的指针，更新答案并把该指针后移并放入堆中 每次移动某一个最优的指针，在任意n轮操作时，堆中的元素始终是这k个序列中n轮操作时的最优切面（比较抽象但是可以通过最小区间问题来理解） 经典问题： 多路归并（k-way merge） 丑数问题 最小区间 队列中"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-23T22:15:59.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-23T22:15:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"K Pointers\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-23T22:15:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[],"git":{"createdTime":1732244737000,"updatedTime":1732400159000,"contributors":[{"name":"David Liu","email":"liudawei@seas.upenn.edu","commits":1}]},"readingTime":{"minutes":0.42,"words":127},"filePathRelative":"algo/summary/optimise/decrease-conquer/kptr/README.md","localizedDate":"November 22, 2024","excerpt":"\\n<p>多指针</p>\\n<p>用堆来存储K指针，每次取权值最大/最小的指针，更新答案并把该指针后移并放入堆中</p>\\n<p>每次移动某一个最优的指针，在任意n轮操作时，堆中的元素始终是这k个序列中n轮操作时的最优切面（比较抽象但是可以通过最小区间问题来理解）</p>\\n<p>经典问题：</p>\\n<p>多路归并（k-way merge）</p>\\n<p>丑数问题</p>\\n<p>最小区间</p>\\n<p>队列中</p>\\n","autoDesc":true}`);export{c as comp,d as data};
