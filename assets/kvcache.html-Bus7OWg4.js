import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as e}from"./app-B_TQ4tbw.js";const l={};function t(h,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="kv-cache" tabindex="-1"><a class="header-anchor" href="#kv-cache"><span>KV Cache</span></a></h1><p>With KV Cache:</p><p>内存消耗(kv cache in memory):</p><p>2 * batch * context_length * n_layers * n_heads * d_head * Pa</p><p>Pa是精度</p><p>在一个向前传播中：</p><p>-0.5 MB/token of GPU memory<br> ~14 GFLOPs/token of GPU compute</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">·初始化每层的健和值缓存</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">num_1 ayers。</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">96</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">·假设Transformer有96层</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">key</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cache【I】</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(num_1 ayers)】</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">value_cache [[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> _in </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(num_layers)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> token </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> input_sequence:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> layer </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(nun_layers):</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#计算当前标记在该层的键和伯</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">new_key </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">conpute_key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(layer.token)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">new_value </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">compute_value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(layer.token)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#将新健和值添加到该摆的缓存中</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">key_cache[layer].</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(new_key)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">value_cache[layer].</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(new_value)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">意推理过程中的斯标记生成</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new_token </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> generate_sequence:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">layer </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(nun_layers):</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#计算当前时间步在该摆的Quey</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">query </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">compute_query</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(layer.new_token)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#使用该层缓存的Key和Value以及当前的Query进行白注悬力计算</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">output </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">attention</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(queryquery.keys key_cache[layer].values value_cache[layer])</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#使用输出生成下一个绿记</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">next_token </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">generate_next_token</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(output)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">generate_sequence.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(next_token)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8)]))}const r=i(l,[["render",t],["__file","kvcache.html.vue"]]),d=JSON.parse(`{"path":"/ai/llm/inference/kvcache.html","title":"KV Cache","lang":"en-US","frontmatter":{"description":"KV Cache With KV Cache: 内存消耗(kv cache in memory): 2 * batch * context_length * n_layers * n_heads * d_head * Pa Pa是精度 在一个向前传播中： -0.5 MB/token of GPU memory ~14 GFLOPs/token of G...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/ai/llm/inference/kvcache.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"KV Cache"}],["meta",{"property":"og:description","content":"KV Cache With KV Cache: 内存消耗(kv cache in memory): 2 * batch * context_length * n_layers * n_heads * d_head * Pa Pa是精度 在一个向前传播中： -0.5 MB/token of GPU memory ~14 GFLOPs/token of G..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-08-17T07:52:28.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-17T07:52:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"KV Cache\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-17T07:52:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[],"git":{"createdTime":1755417148000,"updatedTime":1755417148000,"contributors":[{"name":"dawei.liu","email":"dawei.liu@bytedance.com","commits":1}]},"readingTime":{"minutes":0.7,"words":210},"filePathRelative":"ai/llm/inference/kvcache.md","localizedDate":"August 17, 2025","excerpt":"\\n<p>With KV Cache:</p>\\n<p>内存消耗(kv cache in memory):</p>\\n<p>2 * batch * context_length * n_layers * n_heads * d_head * Pa</p>\\n<p>Pa是精度</p>\\n<p>在一个向前传播中：</p>\\n<p>-0.5 MB/token of GPU memory<br>\\n~14 GFLOPs/token of GPU compute</p>\\n<div class=\\"language-python line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" data-title=\\"python\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">·初始化每层的健和值缓存</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">num_1 ayers。</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">96</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">·假设Transformer有96层</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">key</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">-</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">cache【I】</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">for</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">-</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">in</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> range</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(num_1 ayers)】</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">value_cache [[</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">for</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> _in </span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">range</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(num_layers)]</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">for</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> token </span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">in</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> input_sequence:</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">for</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> layer </span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">in</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> range</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(nun_layers):</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">#计算当前标记在该层的键和伯</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">new_key </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\">conpute_key</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(layer.token)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">new_value </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\">compute_value</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(layer.token)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">#将新健和值添加到该摆的缓存中</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">key_cache[layer].</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\">append</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(new_key)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">value_cache[layer].</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\">append</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(new_value)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">意推理过程中的斯标记生成</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">for</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> new_token </span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">in</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> generate_sequence:</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">for</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">layer </span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">in</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> range</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(nun_layers):</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">#计算当前时间步在该摆的Quey</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">query </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\">compute_query</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(layer.new_token)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">#使用该层缓存的Key和Value以及当前的Query进行白注悬力计算</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">output </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\">attention</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(queryquery.keys key_cache[layer].values value_cache[layer])</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">#使用输出生成下一个绿记</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">next_token </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\">generate_next_token</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(output)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">generate_sequence.</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\">append</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(next_token)</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{r as comp,d as data};
