const t=JSON.parse(`{"key":"v-1cd5019a","path":"/cs/algo/summary/%E4%B9%9D%E7%AB%A0%E7%AE%97%E6%B3%95/25.%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%9A%E8%83%8C%E5%8C%85%E5%9E%8B.html","title":"动态规划：背包型","lang":"en-US","frontmatter":{"description":"动态规划：背包型 01背包：要么选1个，要么不选 多重背包：可选多份 完全背包：可以分分割（贪心法，不是DP） 其他DP没有维度是和的DP，所以背包问题是很特殊的DP 第一种状态表示 dp[i][j]表示前i个物品，是否可以表示出总和j 第二种状态表示 dp[i][j]表示前i个物品，挑出&lt;=j的最大和是多少 效率比第一种低，原因：或运算比+快 背包问题小结 通常是二维的状态数组，前i个组成和为j 状态数组的大小需要开(n + 1)* (m + 1)","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/algo/summary/%E4%B9%9D%E7%AB%A0%E7%AE%97%E6%B3%95/25.%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%9A%E8%83%8C%E5%8C%85%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"动态规划：背包型"}],["meta",{"property":"og:description","content":"动态规划：背包型 01背包：要么选1个，要么不选 多重背包：可选多份 完全背包：可以分分割（贪心法，不是DP） 其他DP没有维度是和的DP，所以背包问题是很特殊的DP 第一种状态表示 dp[i][j]表示前i个物品，是否可以表示出总和j 第二种状态表示 dp[i][j]表示前i个物品，挑出&lt;=j的最大和是多少 效率比第一种低，原因：或运算比+快 背包问题小结 通常是二维的状态数组，前i个组成和为j 状态数组的大小需要开(n + 1)* (m + 1)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-01-15T03:19:11.000Z"}],["meta",{"property":"article:author","content":"David Liu"}],["meta",{"property":"article:modified_time","content":"2023-01-15T03:19:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"动态规划：背包型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-15T03:19:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":3,"title":"01背包的三种变形","slug":"_01背包的三种变形","link":"#_01背包的三种变形","children":[]}],"git":{"createdTime":1673752751000,"updatedTime":1673752751000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":1.38,"words":414},"filePathRelative":"cs/algo/summary/九章算法/25. 动态规划：背包型.md","localizedDate":"January 15, 2023","excerpt":"<h1> 动态规划：背包型</h1>\\n<p>01背包：要么选1个，要么不选</p>\\n<p>多重背包：可选多份</p>\\n<p>完全背包：可以分分割（贪心法，不是DP）</p>\\n<p>其他DP没有维度是和的DP，所以背包问题是很特殊的DP</p>\\n<p>第一种状态表示</p>\\n<p>dp[i][j]表示前i个物品，是否可以表示出总和j</p>\\n<p>第二种状态表示</p>\\n<p>dp[i][j]表示前i个物品，挑出&lt;=j的最大和是多少</p>\\n<p>效率比第一种低，原因：或运算比+快</p>\\n<h4> 背包问题小结</h4>\\n<p>通常是二维的状态数组，前i个组成和为j</p>\\n<p>状态数组的大小需要开(n + 1)* (m + 1)</p>","autoDesc":true}`);export{t as data};
