const e=JSON.parse(`{"key":"v-7cb2ab7c","path":"/se/lang/java/JUC/aqs/sync/CyclicBarrier.html","title":"CyclicBarrier","lang":"en-US","frontmatter":{"description":"CyclicBarrier 概念 循环栅栏 作用 CyclicBarrier 的字面意思是可循环使用（Cyclic）的屏障（Barrier）。它要做的事情是：让一组线程到达一个屏障（也可以叫同步点）时被阻塞，直到最后一个线程到达屏障时，屏障才会开门，所有被屏障拦截的线程才会继续干活。 方法 构造方法中，传入“目标障碍数”，达到目标障碍数后执行的线程 await方法，可以理解为加1操作，同时阻塞该线程 例子 集齐7颗龙珠就可以召唤神龙","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/lang/java/JUC/aqs/sync/CyclicBarrier.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"CyclicBarrier"}],["meta",{"property":"og:description","content":"CyclicBarrier 概念 循环栅栏 作用 CyclicBarrier 的字面意思是可循环使用（Cyclic）的屏障（Barrier）。它要做的事情是：让一组线程到达一个屏障（也可以叫同步点）时被阻塞，直到最后一个线程到达屏障时，屏障才会开门，所有被屏障拦截的线程才会继续干活。 方法 构造方法中，传入“目标障碍数”，达到目标障碍数后执行的线程 await方法，可以理解为加1操作，同时阻塞该线程 例子 集齐7颗龙珠就可以召唤神龙"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-23T13:33:44.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-23T13:33:44.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/se/lang/java/JUC/aqs/sync/CyclicBarrier.html"}]]},"headers":[{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[{"level":3,"title":"作用","slug":"作用","link":"#作用","children":[]},{"level":3,"title":"方法","slug":"方法","link":"#方法","children":[]}]},{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[]}],"git":{"createdTime":1679578424000,"updatedTime":1679578424000,"contributors":[{"name":"davidliuk","email":"l729641074@163.com","commits":1}]},"readingTime":{"minutes":0.73,"words":219},"localizedDate":"March 23, 2023","filePathRelative":"se/lang/java/JUC/aqs/sync/CyclicBarrier.md","excerpt":"<h1> CyclicBarrier</h1>\\n<h2> 概念</h2>\\n<p>循环栅栏</p>\\n<h3> 作用</h3>\\n<p><code>CyclicBarrier</code> 的字面意思是可循环使用（Cyclic）的屏障（Barrier）。它要做的事情是：让一组线程到达一个屏障（也可以叫同步点）时被阻塞，直到最后一个线程到达屏障时，屏障才会开门，所有被屏障拦截的线程才会继续干活。</p>\\n<h3> 方法</h3>\\n<p>构造方法中，传入“目标障碍数”，达到目标障碍数后执行的线程</p>\\n<p>await方法，可以理解为加1操作，同时阻塞该线程</p>\\n<h2> 例子</h2>\\n<p>集齐7颗龙珠就可以召唤神龙</p>","autoDesc":true}`);export{e as data};
