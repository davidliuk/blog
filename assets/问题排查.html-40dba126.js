import{_ as a,V as e,W as t,Z as i}from"./framework-e5d7a6b2.js";const l={},c=i('<h1 id="线上问题排查" tabindex="-1"><a class="header-anchor" href="#线上问题排查" aria-hidden="true">#</a> 线上问题排查</h1><h2 id="cpu-过高-爆掉" tabindex="-1"><a class="header-anchor" href="#cpu-过高-爆掉" aria-hidden="true">#</a> CPU 过高/爆掉</h2><p>JVM 调优过程中，如果 CPU 爆掉了，可以通过以下步骤进行排查：</p><ol><li><p>使用 top 命令查看 CPU 占用率最高的进程，确定是哪个进程导致了 CPU 爆满。</p></li><li><p>使用 jstack 命令获取 Java 进程的线程堆栈信息，查看哪些线程正在运行，是否存在死循环、长时间等待等问题。</p></li><li><p>使用 jmap 命令获取 Java 进程的内存信息，查看堆内存使用情况、GC 情况等，是否存在内存泄漏等问题。</p></li><li><p>使用 jstat 命令获取 Java 进程的 GC 情况，查看 GC 频率、GC 时间等，是否存在频繁的 Full GC 等问题。</p></li><li><p>根据以上信息，确定问题所在，进行相应的优化和调整，例如优化代码、调整 JVM 参数、增加硬件资源等。</p></li></ol><p>总的来说，JVM 调优过程中，如果 CPU 爆掉了，需要通过多种手段进行排查，确定问题所在，从而进行相应的优化和调整。</p><p>jconsole 可以观察内存变化</p>',6),p=[c];function o(r,s){return e(),t("div",null,p)}const _=a(l,[["render",o],["__file","问题排查.html.vue"]]);export{_ as default};
