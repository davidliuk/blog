const e=JSON.parse(`{"key":"v-5fa39a6c","path":"/se/framework/spring/spring-mvc/%E5%AF%B9%E6%AF%94.html","title":"","lang":"en-US","frontmatter":{"description":"Filter 区别 很多同学搞不懂拦截器和过滤器的区别，我们先说一下他们的区别： 最简单明了的区别就是过滤器可以修改request，而拦截器不能 过滤器需要在servlet容器中实现，拦截器可以适用于javaEE，javaSE等各种环境 拦截器可以调用IOC容器中的各种依赖，而过滤器不能 过滤器只能在请求的前后使用，而拦截器可以详细到每个方法 filter过滤器依赖于servlet容器，而interceptor依赖于spring容器 filter是基于函数回调实现的，interceptor是基于Java反射机制实现的 filter是实现javax.servlet.Filter，该接口由servlet规范定义，使用过滤器（filter）需要依赖于servlet容器，如Tomcat容器。而interceptor是实现org.springframework.web.servlet.HandlerInterceptor接口，由spring框架提供且由spring容器管理，不依赖servlet容器，依赖spring容器。 filter（过滤器）是在请求到达servlet之前进行预处理。interceptor（拦截器）是在请求到达servlet之后在进入action（controller）之前进行预处理，在action（controller）处理完返回视图前再处理，待action（controller）返回视图后进行最终处理。 filter可以过滤被web容器管理的几乎所有资源请求（JSP、Servlet、静态资源等），interceptor只能对action（SpringMVC里的controller）进行拦截处理。","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/framework/spring/spring-mvc/%E5%AF%B9%E6%AF%94.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:description","content":"Filter 区别 很多同学搞不懂拦截器和过滤器的区别，我们先说一下他们的区别： 最简单明了的区别就是过滤器可以修改request，而拦截器不能 过滤器需要在servlet容器中实现，拦截器可以适用于javaEE，javaSE等各种环境 拦截器可以调用IOC容器中的各种依赖，而过滤器不能 过滤器只能在请求的前后使用，而拦截器可以详细到每个方法 filter过滤器依赖于servlet容器，而interceptor依赖于spring容器 filter是基于函数回调实现的，interceptor是基于Java反射机制实现的 filter是实现javax.servlet.Filter，该接口由servlet规范定义，使用过滤器（filter）需要依赖于servlet容器，如Tomcat容器。而interceptor是实现org.springframework.web.servlet.HandlerInterceptor接口，由spring框架提供且由spring容器管理，不依赖servlet容器，依赖spring容器。 filter（过滤器）是在请求到达servlet之前进行预处理。interceptor（拦截器）是在请求到达servlet之后在进入action（controller）之前进行预处理，在action（controller）处理完返回视图前再处理，待action（controller）返回视图后进行最终处理。 filter可以过滤被web容器管理的几乎所有资源请求（JSP、Servlet、静态资源等），interceptor只能对action（SpringMVC里的controller）进行拦截处理。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-20T14:10:49.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-20T14:10:49.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/se/framework/spring/spring-mvc/%E5%AF%B9%E6%AF%94.html"}]]},"headers":[{"level":2,"title":"Filter","slug":"filter","link":"#filter","children":[]},{"level":2,"title":"区别","slug":"区别","link":"#区别","children":[]}],"git":{"createdTime":1679321449000,"updatedTime":1679321449000,"contributors":[{"name":"davidliuk","email":"l729641074@163.com","commits":1}]},"readingTime":{"minutes":1.19,"words":357},"localizedDate":"March 20, 2023","filePathRelative":"se/framework/spring/spring-mvc/对比.md","excerpt":"<h2> Filter</h2>\\n<h2> 区别</h2>\\n<p>很多同学搞不懂拦截器和过滤器的区别，我们先说一下他们的区别：</p>\\n<ul>\\n<li>\\n<p>最简单明了的区别就是过滤器可以修改request，而拦截器不能</p>\\n</li>\\n<li>\\n<p>过滤器需要在servlet容器中实现，拦截器可以适用于javaEE，javaSE等各种环境</p>\\n</li>\\n<li>\\n<p>拦截器可以调用IOC容器中的各种依赖，而过滤器不能</p>\\n</li>\\n<li>\\n<p>过滤器只能在请求的前后使用，而拦截器可以详细到每个方法</p>\\n</li>\\n<li>\\n<p>filter过滤器依赖于servlet容器，而interceptor依赖于spring容器</p>\\n</li>\\n<li>\\n<p>filter是基于函数回调实现的，interceptor是基于Java反射机制实现的</p>\\n</li>\\n<li>\\n<p>filter是实现javax.servlet.Filter，该接口由servlet规范定义，使用过滤器（filter）需要依赖于servlet容器，如Tomcat容器。而interceptor是实现org.springframework.web.servlet.HandlerInterceptor接口，由spring框架提供且由spring容器管理，不依赖servlet容器，依赖spring容器。</p>\\n</li>\\n<li>\\n<p>filter（过滤器）是在请求到达servlet之前进行预处理。interceptor（拦截器）是在请求到达servlet之后在进入action（controller）之前进行预处理，在action（controller）处理完返回视图前再处理，待action（controller）返回视图后进行最终处理。</p>\\n</li>\\n<li>\\n<p>filter可以过滤被web容器管理的几乎所有资源请求（JSP、Servlet、静态资源等），interceptor只能对action（SpringMVC里的controller）进行拦截处理。</p>\\n</li>\\n</ul>","autoDesc":true}`);export{e as data};
