import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,d as a,o as n}from"./app-UiaY2OnX.js";const o={};function r(i,e){return n(),p("div",null,e[0]||(e[0]=[a('<h1 id="参数传递" tabindex="-1"><a class="header-anchor" href="#参数传递"><span>参数传递</span></a></h1><p>Java(值传递，引用传递)</p><p>Python(引用传递)</p><p>C++(值传递，引用传递，指针传递)</p><p>值传递</p><p>文件复制</p><p>克隆羊多莉</p><hr><h3 id="值传递" tabindex="-1"><a class="header-anchor" href="#值传递"><span>值传递</span></a></h3><p>值传递相当于创建个新的变量，把值拷贝一份</p><p>修改新的变量原来的变量不会受到影响</p><hr><p>不同语言中呈现值传递的场景</p><p>Java的基本数据类型</p><p>(byte,short,int,long,float,double,char,boolean)</p><p>C++中默认值传递</p><p>Python没有值传递</p><p>基本数据类型的值传递</p><hr><p>Python 没有值传递</p><p>但是 Python 的不可变类型可以认为是值传递的</p><h3 id="引用传递" tabindex="-1"><a class="header-anchor" href="#引用传递"><span>引用传递</span></a></h3><p>可以理解为别名，代号</p><p>文件的快捷方式</p><p>所谓引用传递是指在调用函数时将实际参数的地址传递到函数中，那么在函数中对参数所进行的修改，将影响到实际参数。</p><p>Java 除基本数据类型以外的其他数据</p><p>C++ 中在参数列表中加地址符 &amp; 修饰</p><p>Python 中全是引用传递</p><h3 id="修改实例和修改引用" tabindex="-1"><a class="header-anchor" href="#修改实例和修改引用"><span>修改实例和修改引用</span></a></h3><p>带 “.” 或者带 “[]” 修改的是实例</p><p>否则修改的是引用</p><p>包装类和不可修改类型的传参</p><p>虽然是引用传递，但是能看成是值传递</p>',33)]))}const s=t(o,[["render",r],["__file","参数传递.html.vue"]]),c=JSON.parse(`{"path":"/algo/summary/search/DFS/recursion/%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92.html","title":"参数传递","lang":"en-US","frontmatter":{"description":"参数传递 Java(值传递，引用传递) Python(引用传递) C++(值传递，引用传递，指针传递) 值传递 文件复制 克隆羊多莉 值传递 值传递相当于创建个新的变量，把值拷贝一份 修改新的变量原来的变量不会受到影响 不同语言中呈现值传递的场景 Java的基本数据类型 (byte,short,int,long,float,double,char,bo...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/algo/summary/search/DFS/recursion/%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"参数传递"}],["meta",{"property":"og:description","content":"参数传递 Java(值传递，引用传递) Python(引用传递) C++(值传递，引用传递，指针传递) 值传递 文件复制 克隆羊多莉 值传递 值传递相当于创建个新的变量，把值拷贝一份 修改新的变量原来的变量不会受到影响 不同语言中呈现值传递的场景 Java的基本数据类型 (byte,short,int,long,float,double,char,bo..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-22T03:05:37.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-22T03:05:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"参数传递\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-22T03:05:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":3,"title":"值传递","slug":"值传递","link":"#值传递","children":[]},{"level":3,"title":"引用传递","slug":"引用传递","link":"#引用传递","children":[]},{"level":3,"title":"修改实例和修改引用","slug":"修改实例和修改引用","link":"#修改实例和修改引用","children":[]}],"git":{"createdTime":1732244737000,"updatedTime":1732244737000,"contributors":[{"name":"David Liu","email":"liudawei@seas.upenn.edu","commits":1}]},"readingTime":{"minutes":1.07,"words":321},"filePathRelative":"algo/summary/search/DFS/recursion/参数传递.md","localizedDate":"November 22, 2024","excerpt":"\\n<p>Java(值传递，引用传递)</p>\\n<p>Python(引用传递)</p>\\n<p>C++(值传递，引用传递，指针传递)</p>\\n<p>值传递</p>\\n<p>文件复制</p>\\n<p>克隆羊多莉</p>\\n<hr>\\n<h3>值传递</h3>\\n<p>值传递相当于创建个新的变量，把值拷贝一份</p>\\n<p>修改新的变量原来的变量不会受到影响</p>\\n<hr>\\n<p>不同语言中呈现值传递的场景</p>\\n<p>Java的基本数据类型</p>\\n<p>(byte,short,int,long,float,double,char,boolean)</p>\\n<p>C++中默认值传递</p>\\n<p>Python没有值传递</p>","autoDesc":true}`);export{s as comp,c as data};
