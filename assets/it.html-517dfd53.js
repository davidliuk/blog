import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as d,c as i,a as t,b as e,e as a,d as l}from"./app-9107e99b.js";const r={},c=t("h1",{id:"it",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#it","aria-hidden":"true"},"#"),e(" it")],-1),p=t("p",null,"html5嵌入: markdown-it-html5-embed（typora自带支持html5）",-1),u={href:"https://stackoverflow.com/questions/46273751/how-can-i-add-a-video-in-markdown",target:"_blank",rel:"noopener noreferrer"},g=t("p",null,"Depending on your markdown processor, there may be a built-in syntax.",-1),m={href:"https://pandoc.org/MANUAL.html#images",target:"_blank",rel:"noopener noreferrer"},h=t("code",null,".mov",-1),f=t("code",null,".mp4",-1),y=t("div",{class:"language-markdown line-numbers-mode","data-ext":"md"},[t("pre",{class:"language-markdown"},[t("code",null,`![](video.mov)
`)]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"})])],-1),b=t("hr",null,null,-1),k={href:"https://github.blog/2021-05-13-video-uploads-available-github/",target:"_blank",rel:"noopener noreferrer"},v=l(`<div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> cool-beans</span>

https://example.com/video.mp4

Press play to see the video.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For GitHub markdown (in website), you can drag the video file from your file explorer and drop it into the comment or text box.</p><p>This action will automatically generate a URL and store it in GitHub Assets.</p><hr><p>For other processors, you can always write raw-HTML in your markdown:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>320<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>240<span class="token punctuation">&quot;</span></span> <span class="token attr-name">controls</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>video.mov<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>video/mp4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者使用iframe，视频网站外链，效果如下（推荐 Google Drive 外链）</p><iframe src="https://drive.google.com/file/d/15fHpLKYUewPKiyrWV3DgaFWmrXo1oHPL/preview" width="640" height="480" allow="autoplay"></iframe><p>bilibili player bvid</p>`,9),x=t("iframe",{src:"//player.bilibili.com/player.html?bvid=BV1FX4y1E7ag",width:"600",height:"400px",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true"},null,-1),_=l(`<p><strong>boolean</strong> 类型，在 QueryString 中可以使用 <strong>0</strong> 和 <strong>1</strong> 表示。</p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">必要</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">aid</td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"></td><td style="text-align:left;">UGC 视频 ID。aid、bvid 选择其一即可</td></tr><tr><td style="text-align:left;">cid</td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"></td><td style="text-align:left;">UGC 视频 ID</td></tr><tr><td style="text-align:left;">bvid</td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">✅</td><td style="text-align:left;">UGC 视频 ID。aid、bvid 选择其一即可</td></tr><tr><td style="text-align:left;">seasonId</td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"></td><td style="text-align:left;">OGV 视频 ID</td></tr><tr><td style="text-align:left;">episodeId</td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">✅</td><td style="text-align:left;">OGV 视频 ID。优先级高于 aid、bvid</td></tr><tr><td style="text-align:left;">poster</td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"></td><td style="text-align:left;">展示封面</td></tr><tr><td style="text-align:left;">autoplay</td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"></td><td style="text-align:left;">自动播放</td></tr><tr><td style="text-align:left;">muted</td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"></td><td style="text-align:left;">静音</td></tr><tr><td style="text-align:left;">t</td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"></td><td style="text-align:left;">跳转到媒体的初始时间点，单位：秒</td></tr><tr><td style="text-align:left;">danmaku</td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"></td><td style="text-align:left;"><code>false</code> 表示<strong>关闭弹幕</strong>，其他表示默认值</td></tr><tr><td style="text-align:left;">kind</td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"></td><td style="text-align:left;">群组种类。非通用业务需要此参数</td></tr><tr><td style="text-align:left;">refer</td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"></td><td style="text-align:left;">跳链时携带当前的 Referrer。用于合作方查询来自嵌入网站的跳转次数</td></tr><tr><td style="text-align:left;">p</td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"></td><td style="text-align:left;">多 P 视频的集数。从 1 开始计数，若有 cid 参数，则此参数不生效</td></tr></tbody></table><hr><hr><p>fregante&#39;s answer works fine for videos you upload to GitHub yourself, but not for youtube video links.</p><p>mb21&#39;s answer works fine for links if you want to provide the image yourself, but that means you&#39;ll have to use the plain thumbnail image without the play button (in which case it doesn&#39;t look like a video), or edit an image yourself, which is time-consuming.</p><p>In case you wanna get the thumbnail from a video on the web automatically... you can use an API I made which essentially gets the video&#39;s thumbnail, then adds a play button and backdrop to it.</p><p>You can use it in markdown like this:</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token url">[<span class="token content">![</span>](<span class="token url">https://markdown-videos-api.jorgenkh.no/youtube/{video_id}</span>)</span>](https://youtu.be/{video_id})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Clicking on the image will open the video in your browser.</p>`,10),w={href:"https://youtu.be/8lGpZkjnkt4",target:"_blank",rel:"noopener noreferrer"},G=t("img",{src:"http://markdown-videos-api.jorgenkh.no/youtube/8lGpZkjnkt4",alt:"",loading:"lazy"},null,-1),q={href:"https://youtu.be/8lGpZkjnkt4.gif",target:"_blank",rel:"noopener noreferrer"},I=t("img",{src:"http://markdown-videos-api.jorgenkh.no/youtube/8lGpZkjnkt4.gif",alt:"",loading:"lazy"},null,-1);function j(D,L){const n=o("ExternalLinkIcon");return d(),i("div",null,[c,p,t("p",null,[t("a",u,[e("markdown video"),a(n)])]),g,t("p",null,[e("Pandoc "),t("a",m,[e("the image syntax"),a(n)]),e(" with a video file extension ("),h,e(", "),f,e(") can be used:")]),y,b,t("p",null,[e("The other answer is correct, but if you're dealing with GitHub, now you can just "),t("a",k,[e("add a URL to the video"),a(n)]),e(" and it will automatically be embedded, as long as it's surrounded by empty lines. For example:")]),v,x,_,t("p",null,[t("a",w,[G,a(n)])]),t("p",null,[t("a",q,[I,a(n)])])])}const U=s(r,[["render",j],["__file","it.html.vue"]]);export{U as default};
