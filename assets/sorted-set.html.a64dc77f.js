import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as r,c as a,f as t}from"./app.b9f89aa5.js";const o={},p=t('<h1 id="sorted-set" tabindex="-1"><a class="header-anchor" href="#sorted-set" aria-hidden="true">#</a> Sorted Set</h1><p>类似Java TreeSet，都排序了，不过Java是红黑树实现的，这里的是跳表+Hash</p><p>每一个元素带有一个score</p><p>特性：</p><ul><li>可排序</li><li>元素不重复</li><li>查询速度快</li></ul><p>因为SortedSet的可排序特征，经常被用来实现排行榜这样的功能。</p><h2 id="常见命令" tabindex="-1"><a class="header-anchor" href="#常见命令" aria-hidden="true">#</a> 常见命令</h2><p>zadd</p><p>zrem</p><p>zscore 获取指定元素的score值</p><p>zrank 获取指定元素的排名</p><p>zcard 获取元素个数</p><p>zcount</p><p>zincrby 让指定元素自增</p><p>zrange key min max 按照score升序排序后，获取指定排名范围内的元素</p><p>zrevrange key min max 按照score降序排序后，获取指定排名范围内的元素</p><p>zrangebyscore key min max 按照score排序后，获取指定score范围内的元素</p><p>zdiff, zinter, zunion 求差集、交集、并集</p>',18),s=[p];function c(n,i){return r(),a("div",null,s)}const h=e(o,[["render",c],["__file","sorted-set.html.vue"]]);export{h as default};
