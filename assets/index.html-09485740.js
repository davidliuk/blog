const e=JSON.parse(`{"key":"v-75f9c1fd","path":"/cs/algo/basic/parameter/","title":"传参","lang":"en-US","frontmatter":{"description":"传参 传参设计 自上而下传参： 对于引用变量需要用回溯去做， 对于非引用类型需要全局传值去处理，如深度信息可以直接父传子depth + 1 全局参数传递：回溯的思想，对复杂的变量需要使用forward()和backward()，可以节省内存空间 如序号，前一个访问的后一个访问的，这个需要全局参数传递，因为不再是父子相传 传参类型 值传递、引用传递 指针传递（C类特有） 值传递 文件复制","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/algo/basic/parameter/"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"传参"}],["meta",{"property":"og:description","content":"传参 传参设计 自上而下传参： 对于引用变量需要用回溯去做， 对于非引用类型需要全局传值去处理，如深度信息可以直接父传子depth + 1 全局参数传递：回溯的思想，对复杂的变量需要使用forward()和backward()，可以节省内存空间 如序号，前一个访问的后一个访问的，这个需要全局参数传递，因为不再是父子相传 传参类型 值传递、引用传递 指针传递（C类特有） 值传递 文件复制"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-01-23T07:31:24.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-01-23T07:31:24.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/cs/algo/basic/parameter/"}]]},"headers":[{"level":2,"title":"传参设计","slug":"传参设计","link":"#传参设计","children":[]},{"level":2,"title":"传参类型","slug":"传参类型","link":"#传参类型","children":[{"level":3,"title":"值传递","slug":"值传递","link":"#值传递","children":[]},{"level":3,"title":"引用传递","slug":"引用传递","link":"#引用传递","children":[]},{"level":3,"title":"数组的引用传递","slug":"数组的引用传递","link":"#数组的引用传递","children":[]},{"level":3,"title":"修改实例和修改引用","slug":"修改实例和修改引用","link":"#修改实例和修改引用","children":[]},{"level":3,"title":"递归三要素","slug":"递归三要素","link":"#递归三要素","children":[]}]}],"git":{"createdTime":1674459084000,"updatedTime":1674459084000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":2.29,"words":688},"localizedDate":"January 23, 2023","filePathRelative":"cs/algo/basic/parameter/README.md","excerpt":"<h1> 传参</h1>\\n<h2> 传参设计</h2>\\n<p>自上而下传参：</p>\\n<ul>\\n<li>对于引用变量需要用回溯去做，</li>\\n<li>对于非引用类型需要全局传值去处理，如深度信息可以直接父传子depth + 1</li>\\n</ul>\\n<p>全局参数传递：回溯的思想，对复杂的变量需要使用forward()和backward()，可以节省内存空间</p>\\n<p>如序号，前一个访问的后一个访问的，这个需要全局参数传递，因为不再是父子相传</p>\\n<h2> 传参类型</h2>\\n<p>值传递、引用传递</p>\\n<p>指针传递（C类特有）</p>\\n<h3> 值传递</h3>\\n<p>文件复制</p>","autoDesc":true}`);export{e as data};
