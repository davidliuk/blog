const e=JSON.parse(`{"key":"v-57aa1d68","path":"/se/lang/java/basic/class/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.html","title":"面向对象","lang":"en-US","frontmatter":{"description":"面向对象 三大特征 封装 继承 关于继承如下 3 点请记住： 子类拥有父类对象所有的属性和方法（包括私有属性和私有方法），但是父类中的私有属性和方法子类是无法访问，只是拥有。 子类可以拥有自己属性和方法，即子类可以对父类进行扩展。 子类可以用自己的方式实现父类的方法。（以后介绍）。 多态 多态，表示一个对象具有多种的状态，具体表现为父类的引用指向子类的实例。","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/lang/java/basic/class/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"面向对象"}],["meta",{"property":"og:description","content":"面向对象 三大特征 封装 继承 关于继承如下 3 点请记住： 子类拥有父类对象所有的属性和方法（包括私有属性和私有方法），但是父类中的私有属性和方法子类是无法访问，只是拥有。 子类可以拥有自己属性和方法，即子类可以对父类进行扩展。 子类可以用自己的方式实现父类的方法。（以后介绍）。 多态 多态，表示一个对象具有多种的状态，具体表现为父类的引用指向子类的实例。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-17T10:10:52.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-05-17T10:10:52.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/se/lang/java/basic/class/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.html"}]]},"headers":[{"level":3,"title":"三大特征","slug":"三大特征","link":"#三大特征","children":[]},{"level":3,"title":"深拷贝和浅拷贝区别了解吗？什么是引用拷贝？","slug":"深拷贝和浅拷贝区别了解吗-什么是引用拷贝","link":"#深拷贝和浅拷贝区别了解吗-什么是引用拷贝","children":[]}],"git":{"createdTime":1684318252000,"updatedTime":1684318252000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":1.74,"words":522},"localizedDate":"May 17, 2023","filePathRelative":"se/lang/java/basic/class/面向对象.md","excerpt":"<h1> 面向对象</h1>\\n<h3> 三大特征</h3>\\n<h4> 封装</h4>\\n<h4> 继承</h4>\\n<p><strong>关于继承如下 3 点请记住：</strong></p>\\n<ol>\\n<li>子类拥有父类对象所有的属性和方法（包括私有属性和私有方法），但是父类中的私有属性和方法子类是无法访问，<strong>只是拥有</strong>。</li>\\n<li>子类可以拥有自己属性和方法，即子类可以对父类进行扩展。</li>\\n<li>子类可以用自己的方式实现父类的方法。（以后介绍）。</li>\\n</ol>\\n<h4> 多态</h4>\\n<p>多态，表示一个对象具有多种的状态，具体表现为父类的引用指向子类的实例。</p>","autoDesc":true}`);export{e as data};
