import{_ as n,V as s,W as a,a0 as t}from"./framework-705b829b.js";const p={},e=t(`<h1 id="排序数组" tabindex="-1"><a class="header-anchor" href="#排序数组" aria-hidden="true">#</a> 排序数组</h1><h3 id="问题列表" tabindex="-1"><a class="header-anchor" href="#问题列表" aria-hidden="true">#</a> 问题列表</h3><ul><li>在排序数组中查找数字</li><li>在排序数组中查找数字第一个位置</li><li>在排序数组中查找数字插入位置（如果存在则返回位置）</li><li>在排序数组中查找数字末一个位置</li><li>在排序数组中查找数字的范围</li><li>在排序数组中查找数字的个数</li></ul><h3 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现" aria-hidden="true">#</a> 代码实现</h3><p>在排序数组中查找数字</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// in: nums[], target</span>
<span class="token keyword">int</span> pos <span class="token operator">=</span> <span class="token function">searchFirst</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> nums<span class="token punctuation">[</span>pos<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token operator">?</span> pos<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在排序数组中查找数字第一个位置</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// in: nums[], target</span>
<span class="token keyword">int</span> pos <span class="token operator">=</span> <span class="token function">searchFirst</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> nums<span class="token punctuation">[</span>pos<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token operator">?</span> pos<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在排序数组中查找数字插入位置（如果存在则返回位置）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// in: nums[], target</span>
<span class="token keyword">int</span> pos <span class="token operator">=</span> <span class="token function">searchFirst</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> pos<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在排序数组中查找数字末一个位置</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// in: nums[], target</span>
<span class="token keyword">int</span> pos <span class="token operator">=</span> <span class="token function">searchLast</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> nums<span class="token punctuation">[</span>pos<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token operator">?</span> pos<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在排序数组中查找数字的范围</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// in: nums[], target</span>
<span class="token keyword">int</span> first <span class="token operator">=</span> <span class="token function">searchFirst</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> last <span class="token operator">=</span> <span class="token function">searchLast</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> nums<span class="token punctuation">[</span>first<span class="token punctuation">]</span> <span class="token operator">!=</span> target<span class="token operator">?</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>first<span class="token punctuation">,</span> last<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在排序数组中查找数字的个数</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// in: nums[], target</span>
<span class="token keyword">int</span> first <span class="token operator">=</span> <span class="token function">searchFirst</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> last <span class="token operator">=</span> <span class="token function">searchLast</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> nums<span class="token punctuation">[</span>first<span class="token punctuation">]</span> <span class="token operator">!=</span> target<span class="token operator">?</span> <span class="token number">0</span><span class="token operator">:</span> last <span class="token operator">-</span> first <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),o=[e];function c(l,u){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","排序数组.html.vue"]]);export{r as default};
