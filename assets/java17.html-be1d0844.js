const n=JSON.parse(`{"key":"v-6404e208","path":"/se/lang/java/feature/java17.html","title":"Java 17","lang":"en-US","frontmatter":{"description":"Java 17 Switch 表达式扩展 模式匹配 static String formatterPatternSwitch(Object o) { return switch (o) { case null -\\"null\\"; case Integer i-&gt; String.format(\\"int %d\\",i); case Long l -&gt; String.format(\\"long %d\\",l); case Double d -&gt; String.format(\\"double %f\\",d); case String s -&gt; String.format(\\"String %s\\",s); default -&gt; o.getclass().getSimpleName()+\\"\\"+o; }; }","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/lang/java/feature/java17.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"Java 17"}],["meta",{"property":"og:description","content":"Java 17 Switch 表达式扩展 模式匹配 static String formatterPatternSwitch(Object o) { return switch (o) { case null -\\"null\\"; case Integer i-&gt; String.format(\\"int %d\\",i); case Long l -&gt; String.format(\\"long %d\\",l); case Double d -&gt; String.format(\\"double %f\\",d); case String s -&gt; String.format(\\"String %s\\",s); default -&gt; o.getclass().getSimpleName()+\\"\\"+o; }; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-11-22T09:56:03.000Z"}],["meta",{"property":"article:author","content":"David Liu"}],["meta",{"property":"article:modified_time","content":"2023-11-22T09:56:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 17\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-22T09:56:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":2,"title":"Switch","slug":"switch","link":"#switch","children":[{"level":3,"title":"表达式扩展","slug":"表达式扩展","link":"#表达式扩展","children":[]},{"level":3,"title":"模式匹配","slug":"模式匹配","link":"#模式匹配","children":[]}]},{"level":2,"title":"GC","slug":"gc","link":"#gc","children":[{"level":3,"title":"删除 CMS 垃圾回收器","slug":"删除-cms-垃圾回收器","link":"#删除-cms-垃圾回收器","children":[]},{"level":3,"title":"G1 的 NUMA 可识别内存分配","slug":"g1-的-numa-可识别内存分配","link":"#g1-的-numa-可识别内存分配","children":[]},{"level":3,"title":"弃用 ParallelScavenge 和 SerialOld GC 的组合使用","slug":"弃用-parallelscavenge-和-serialold-gc-的组合使用","link":"#弃用-parallelscavenge-和-serialold-gc-的组合使用","children":[]},{"level":3,"title":"禁用偏向锁定","slug":"禁用偏向锁定","link":"#禁用偏向锁定","children":[]}]}],"git":{"createdTime":1700646963000,"updatedTime":1700646963000,"contributors":[{"name":"davidliu","email":"liudawei47@jd.com","commits":1}]},"readingTime":{"minutes":1.01,"words":304},"filePathRelative":"se/lang/java/feature/java17.md","localizedDate":"November 22, 2023","excerpt":"<h1> Java 17</h1>\\n<h2> Switch</h2>\\n<h3> 表达式扩展</h3>\\n<h3> 模式匹配</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">formatterPatternSwitch</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Object</span> o<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">switch</span> <span class=\\"token punctuation\\">(</span>o<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">case</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">-</span><span class=\\"token string\\">\\"null\\"</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">case</span> <span class=\\"token class-name\\">Integer</span> i<span class=\\"token operator\\">-&gt;</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">format</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"int %d\\"</span><span class=\\"token punctuation\\">,</span>i<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">case</span> <span class=\\"token class-name\\">Long</span> l <span class=\\"token operator\\">-&gt;</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">format</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"long %d\\"</span><span class=\\"token punctuation\\">,</span>l<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">case</span> <span class=\\"token class-name\\">Double</span> d <span class=\\"token operator\\">-&gt;</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">format</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"double %f\\"</span><span class=\\"token punctuation\\">,</span>d<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">case</span> <span class=\\"token class-name\\">String</span> s <span class=\\"token operator\\">-&gt;</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">format</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"String %s\\"</span><span class=\\"token punctuation\\">,</span>s<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">default</span> <span class=\\"token operator\\">-&gt;</span> o<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getclass</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getSimpleName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">+</span><span class=\\"token string\\">\\"\\"</span><span class=\\"token operator\\">+</span>o<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
