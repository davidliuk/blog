import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as t,o as a}from"./app-CGXHKXsa.js";const d={};function n(r,e){return a(),l("div",null,e[0]||(e[0]=[t('<h1 id="retrieval" tabindex="-1"><a class="header-anchor" href="#retrieval"><span>Retrieval</span></a></h1><p>召回通道</p><ul><li>ItemCF 召回（不适用)</li><li>双塔模型（改造后适用）</li><li>类目、关键词召回（适用）</li><li>聚类召回（适用）</li><li>Look-Alike 召回（适用）</li></ul><h2 id="id-embedding" tabindex="-1"><a class="header-anchor" href="#id-embedding"><span>ID Embedding</span></a></h2><p>改进方案 1：新笔记使用 default embeddingo</p><ul><li>物品塔做 ID embedding 时，让所有新笔记共享一个 ID，而不是用自己真正的 ID。</li><li>Default embedding：共享的 ID 对应的 embedding 向量。</li><li>到下次模型训练的时候，新笔记才有自己的 ID embedding 向量。</li></ul><p>改进方案 2：利用相似笔记 embedding 向量。</p><ul><li>查找 topk 内容最相似的高曝笔记。</li><li>把 k 个高曝笔记的 embedding 向量取平均，作为新笔记的 embedding</li></ul><h2 id="多个向量召回池" tabindex="-1"><a class="header-anchor" href="#多个向量召回池"><span>多个向量召回池</span></a></h2><ul><li>多个召回池，让新笔记有更多曝光机会。 <ul><li>1 小时新笔记，</li><li>6 小时新笔记，</li><li>24 小时新笔记</li><li>30 天笔记</li></ul></li><li>共享同一个双塔模型，那么多个召回池不增加训练的代价。</li></ul><h2 id="基于类目的召回" tabindex="-1"><a class="header-anchor" href="#基于类目的召回"><span>基于类目的召回</span></a></h2><ul><li>系统维护类目索引： <ul><li>类目 → 笔记列表（按时间倒排）</li></ul></li><li>用类目索引做召回： <ul><li>用户画像 → 类目 → 笔记列表</li></ul></li><li>取回笔记列表上前 k 篇笔记（即最新的 k 篇）</li></ul><h2 id="基于关键词的召回" tabindex="-1"><a class="header-anchor" href="#基于关键词的召回"><span>基于关键词的召回</span></a></h2><ul><li>系统维护关键词索引： <ul><li>关键词 → 笔记列表（按时间倒排）</li></ul></li><li>根据用户画像上的关键词做召回。</li></ul><p>缺点</p><ul><li>缺点 1：只对刚刚发布的新笔记有效。 <ul><li>取回某类目/关键词下最新的 k 篇笔记</li><li>发布几小时之后，就再没有机会被召回</li></ul></li><li>缺点 2：弱个性化，不够精准。</li></ul>',16)]))}const p=i(d,[["render",n],["__file","retrieval.html.vue"]]),c=JSON.parse(`{"path":"/ai/rec/cold-start/retrieval.html","title":"Retrieval","lang":"en-US","frontmatter":{"description":"Retrieval 召回通道 ItemCF 召回（不适用) 双塔模型（改造后适用） 类目、关键词召回（适用） 聚类召回（适用） Look-Alike 召回（适用） ID Embedding 改进方案 1：新笔记使用 default embeddingo 物品塔做 ID embedding 时，让所有新笔记共享一个 ID，而不是用自己真正的 ID。 De...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/ai/rec/cold-start/retrieval.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"Retrieval"}],["meta",{"property":"og:description","content":"Retrieval 召回通道 ItemCF 召回（不适用) 双塔模型（改造后适用） 类目、关键词召回（适用） 聚类召回（适用） Look-Alike 召回（适用） ID Embedding 改进方案 1：新笔记使用 default embeddingo 物品塔做 ID embedding 时，让所有新笔记共享一个 ID，而不是用自己真正的 ID。 De..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-10-26T05:16:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-26T05:16:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Retrieval\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-26T05:16:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":2,"title":"ID Embedding","slug":"id-embedding","link":"#id-embedding","children":[]},{"level":2,"title":"多个向量召回池","slug":"多个向量召回池","link":"#多个向量召回池","children":[]},{"level":2,"title":"基于类目的召回","slug":"基于类目的召回","link":"#基于类目的召回","children":[]},{"level":2,"title":"基于关键词的召回","slug":"基于关键词的召回","link":"#基于关键词的召回","children":[]}],"git":{"createdTime":1756619527000,"updatedTime":1761455781000,"contributors":[{"name":"dawei.liu","email":"dawei.liu@bytedance.com","commits":2}]},"readingTime":{"minutes":1.33,"words":400},"filePathRelative":"ai/rec/cold-start/retrieval.md","localizedDate":"August 31, 2025","excerpt":"\\n<p>召回通道</p>\\n<ul>\\n<li>ItemCF 召回（不适用)</li>\\n<li>双塔模型（改造后适用）</li>\\n<li>类目、关键词召回（适用）</li>\\n<li>聚类召回（适用）</li>\\n<li>Look-Alike 召回（适用）</li>\\n</ul>\\n<h2>ID Embedding</h2>\\n<p>改进方案 1：新笔记使用 default embeddingo</p>\\n<ul>\\n<li>物品塔做 ID embedding 时，让所有新笔记共享一个 ID，而不是用自己真正的 ID。</li>\\n<li>Default embedding：共享的 ID 对应的 embedding 向量。</li>\\n<li>到下次模型训练的时候，新笔记才有自己的 ID embedding 向量。</li>\\n</ul>","autoDesc":true}`);export{p as comp,c as data};
