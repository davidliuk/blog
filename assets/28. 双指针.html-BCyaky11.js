import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as p,o as r}from"./app-C_tIvXCt.js";const a={};function n(i,e){return r(),o("div",null,e[0]||(e[0]=[p('<h1 id="同向双指针" tabindex="-1"><a class="header-anchor" href="#同向双指针"><span>同向双指针</span></a></h1><blockquote><p>直播，双指针算法之同向双指针上，28, 29</p></blockquote><p><strong>Move Zeroes</strong> 移动零</p><p>同向双指针复杂度 = O(n)</p><p>两根指针同向而行，都不会“回头”</p><p>每个指针访问数组中每个元素最多一次</p><h2 id="两数之差问题" tabindex="-1"><a class="header-anchor" href="#两数之差问题"><span>两数之差问题</span></a></h2><p>求两数之差等于给定的 target，不适用额外空间</p><p>当不能使用哈希表时</p><p>可以在排序数据集上进行二分来替代</p><p>不能使用哈希表的情况比如数据集很大</p><p>或者题目要求不适用额外空间</p><hr><p>全零子串问题</p><hr><p>数组去重</p>',16)]))}const s=t(a,[["render",n],["__file","28. 双指针.html.vue"]]),d=JSON.parse(`{"path":"/algo/course/jz/2ptr/28.%20%E5%8F%8C%E6%8C%87%E9%92%88.html","title":"同向双指针","lang":"en-US","frontmatter":{"description":"同向双指针 直播，双指针算法之同向双指针上，28, 29 Move Zeroes 移动零 同向双指针复杂度 = O(n) 两根指针同向而行，都不会“回头” 每个指针访问数组中每个元素最多一次 两数之差问题 求两数之差等于给定的 target，不适用额外空间 当不能使用哈希表时 可以在排序数据集上进行二分来替代 不能使用哈希表的情况比如数据集很大 或者题...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/algo/course/jz/2ptr/28.%20%E5%8F%8C%E6%8C%87%E9%92%88.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"同向双指针"}],["meta",{"property":"og:description","content":"同向双指针 直播，双指针算法之同向双指针上，28, 29 Move Zeroes 移动零 同向双指针复杂度 = O(n) 两根指针同向而行，都不会“回头” 每个指针访问数组中每个元素最多一次 两数之差问题 求两数之差等于给定的 target，不适用额外空间 当不能使用哈希表时 可以在排序数据集上进行二分来替代 不能使用哈希表的情况比如数据集很大 或者题..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-17T16:38:04.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-17T16:38:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"同向双指针\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-17T16:38:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":2,"title":"两数之差问题","slug":"两数之差问题","link":"#两数之差问题","children":[]}],"git":{"createdTime":1734453484000,"updatedTime":1734453484000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro-3.local","commits":1}]},"readingTime":{"minutes":0.52,"words":155},"filePathRelative":"algo/course/jz/2ptr/28. 双指针.md","localizedDate":"December 17, 2024","excerpt":"\\n<blockquote>\\n<p>直播，双指针算法之同向双指针上，28, 29</p>\\n</blockquote>\\n<p><strong>Move Zeroes</strong> 移动零</p>\\n<p>同向双指针复杂度 = O(n)</p>\\n<p>两根指针同向而行，都不会“回头”</p>\\n<p>每个指针访问数组中每个元素最多一次</p>\\n<h2>两数之差问题</h2>\\n<p>求两数之差等于给定的 target，不适用额外空间</p>\\n<p>当不能使用哈希表时</p>\\n<p>可以在排序数据集上进行二分来替代</p>\\n<p>不能使用哈希表的情况比如数据集很大</p>\\n<p>或者题目要求不适用额外空间</p>","autoDesc":true}`);export{s as comp,d as data};
