import{_ as a,V as e,W as t,a0 as r}from"./framework-705b829b.js";const n={},c=r('<h1 id="reentrantreadwritelock" tabindex="-1"><a class="header-anchor" href="#reentrantreadwritelock" aria-hidden="true">#</a> ReentrantReadWriteLock</h1><p>悲观锁：每次操作前都加锁</p><p>乐观锁：版本号机制</p><h3 id="行锁、表锁" tabindex="-1"><a class="header-anchor" href="#行锁、表锁" aria-hidden="true">#</a> 行锁、表锁</h3><p>行锁会发生死锁，表锁不会</p><h3 id="读锁、写锁" tabindex="-1"><a class="header-anchor" href="#读锁、写锁" aria-hidden="true">#</a> 读锁、写锁</h3><p>写锁：独占锁</p><p>读锁：共享锁</p><p>都会产生死锁</p><p>读锁死锁的场景：</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-02-02 21.57.01.png" alt="截屏2023-02-02 21.57.01" loading="lazy"></p><p>写锁死锁的场景：</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-02-02 22.00.01.png" alt="截屏2023-02-02 22.00.01" loading="lazy"></p><p>读的时候不能些，写的时候可以读</p><h2 id="锁降级" tabindex="-1"><a class="header-anchor" href="#锁降级" aria-hidden="true">#</a> 锁降级</h2><p>获取写锁 -&gt; 获取读锁 -&gt; 释放写锁 -&gt; 释放读锁</p>',16),i=[c];function h(d,p){return e(),t("div",null,i)}const s=a(n,[["render",h],["__file","ReentrantReadWriteLock.html.vue"]]);export{s as default};
