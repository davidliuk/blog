import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,d as p,o as a}from"./app-CybQbXIt.js";const i={};function n(r,t){return a(),o("div",null,t[0]||(t[0]=[p('<h1 id="oop" tabindex="-1"><a class="header-anchor" href="#oop"><span>OOP</span></a></h1><p>多态</p><p>虚函数</p><p>纯虚函数</p><p>C++ 无接口，但是可以通过抽象类来实现</p><hr><p>c 语言实现 oop 思路和go类似，但是也有不同</p><p>封装：struct</p><p>继承：数据成员表现为叠加（父类变成一个属性）</p><p>多态：虚表指针，指向虚函数表，虚函数表在构造函数中初始化，在析构函数中销毁，所以在这两个函数中都不会发生多态行为。</p><p><code>virtual</code>：动态链接</p>',11)]))}const d=e(i,[["render",n],["__file","oop.html.vue"]]),s=JSON.parse(`{"path":"/se/lang/cpp/oop.html","title":"OOP","lang":"en-US","frontmatter":{"description":"OOP 多态 虚函数 纯虚函数 C++ 无接口，但是可以通过抽象类来实现 c 语言实现 oop 思路和go类似，但是也有不同 封装：struct 继承：数据成员表现为叠加（父类变成一个属性） 多态：虚表指针，指向虚函数表，虚函数表在构造函数中初始化，在析构函数中销毁，所以在这两个函数中都不会发生多态行为。 virtual：动态链接","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/lang/cpp/oop.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"OOP"}],["meta",{"property":"og:description","content":"OOP 多态 虚函数 纯虚函数 C++ 无接口，但是可以通过抽象类来实现 c 语言实现 oop 思路和go类似，但是也有不同 封装：struct 继承：数据成员表现为叠加（父类变成一个属性） 多态：虚表指针，指向虚函数表，虚函数表在构造函数中初始化，在析构函数中销毁，所以在这两个函数中都不会发生多态行为。 virtual：动态链接"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-09T17:17:26.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-09T17:17:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"OOP\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-09T17:17:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[],"git":{"createdTime":1715153702000,"updatedTime":1731172646000,"contributors":[{"name":"David Liu","email":"liudawei@seas.upenn.edu","commits":1},{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":0.41,"words":122},"filePathRelative":"se/lang/cpp/oop.md","localizedDate":"May 8, 2024","excerpt":"\\n<p>多态</p>\\n<p>虚函数</p>\\n<p>纯虚函数</p>\\n<p>C++ 无接口，但是可以通过抽象类来实现</p>\\n<hr>\\n<p>c 语言实现 oop 思路和go类似，但是也有不同</p>\\n<p>封装：struct</p>\\n<p>继承：数据成员表现为叠加（父类变成一个属性）</p>\\n<p>多态：虚表指针，指向虚函数表，虚函数表在构造函数中初始化，在析构函数中销毁，所以在这两个函数中都不会发生多态行为。</p>\\n<p><code>virtual</code>：动态链接</p>\\n","autoDesc":true}`);export{d as comp,s as data};
