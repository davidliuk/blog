const e=JSON.parse(`{"key":"v-290dc665","path":"/se/lang/java/jvm/%E8%87%AA%E5%8A%A8%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8.html","title":"垃圾收集器","lang":"en-US","frontmatter":{"description":"垃圾收集器 Serial 收集器 Serial（串行）收集器是最基本、历史最悠久的垃圾收集器了。大家看名字就知道这个收集器是一个单线程收集器了。它的 “单线程” 的意义不仅仅意味着它只会使用一条垃圾收集线程去完成垃圾收集工作，更重要的是它在进行垃圾收集工作的时候必须暂停其他所有的工作线程（ \\"Stop The World\\" ），直到它收集结束。 新生代采用标记-复制算法，老年代采用标记-整理算法。 优点：它简单而高效（与其他收集器的单线程相比）。Serial 收集器由于没有线程交互的开销，自然可以获得很高的单线程收集效率。Serial 收集器对于运行在 Client 模式下的虚拟机来说是个不错的选择。","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/lang/java/jvm/%E8%87%AA%E5%8A%A8%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"垃圾收集器"}],["meta",{"property":"og:description","content":"垃圾收集器 Serial 收集器 Serial（串行）收集器是最基本、历史最悠久的垃圾收集器了。大家看名字就知道这个收集器是一个单线程收集器了。它的 “单线程” 的意义不仅仅意味着它只会使用一条垃圾收集线程去完成垃圾收集工作，更重要的是它在进行垃圾收集工作的时候必须暂停其他所有的工作线程（ \\"Stop The World\\" ），直到它收集结束。 新生代采用标记-复制算法，老年代采用标记-整理算法。 优点：它简单而高效（与其他收集器的单线程相比）。Serial 收集器由于没有线程交互的开销，自然可以获得很高的单线程收集效率。Serial 收集器对于运行在 Client 模式下的虚拟机来说是个不错的选择。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-29T11:46:59.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-29T11:46:59.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/se/lang/java/jvm/%E8%87%AA%E5%8A%A8%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8.html"}]]},"headers":[{"level":3,"title":"Serial 收集器","slug":"serial-收集器","link":"#serial-收集器","children":[]},{"level":3,"title":"ParNew 收集器","slug":"parnew-收集器","link":"#parnew-收集器","children":[]},{"level":3,"title":"Parallel Scavenge 收集器","slug":"parallel-scavenge-收集器","link":"#parallel-scavenge-收集器","children":[]},{"level":3,"title":"Serial Old 收集器","slug":"serial-old-收集器","link":"#serial-old-收集器","children":[]},{"level":3,"title":"Parallel Old 收集器","slug":"parallel-old-收集器","link":"#parallel-old-收集器","children":[]},{"level":3,"title":"CMS 收集器","slug":"cms-收集器","link":"#cms-收集器","children":[]},{"level":3,"title":"G1 收集器","slug":"g1-收集器","link":"#g1-收集器","children":[]}],"git":{"createdTime":1680090419000,"updatedTime":1680090419000,"contributors":[{"name":"davidliuk","email":"l729641074@163.com","commits":1}]},"readingTime":{"minutes":4.44,"words":1333},"localizedDate":"March 29, 2023","filePathRelative":"se/lang/java/jvm/自动内存管理/垃圾收集器.md","excerpt":"<h1> 垃圾收集器</h1>\\n<h3> Serial 收集器</h3>\\n<p>Serial（串行）收集器是最基本、历史最悠久的垃圾收集器了。大家看名字就知道这个收集器是一个单线程收集器了。它的 <strong>“单线程”</strong> 的意义不仅仅意味着它只会使用一条垃圾收集线程去完成垃圾收集工作，更重要的是它在进行垃圾收集工作的时候必须暂停其他所有的工作线程（ <strong>\\"Stop The World\\"</strong> ），直到它收集结束。</p>\\n<p><strong>新生代采用标记-复制算法，老年代采用标记-整理算法。</strong></p>\\n<p>优点：它<strong>简单而高效（与其他收集器的单线程相比）</strong>。Serial 收集器由于没有线程交互的开销，自然可以获得很高的单线程收集效率。Serial 收集器对于运行在 Client 模式下的虚拟机来说是个不错的选择。</p>","autoDesc":true}`);export{e as data};
