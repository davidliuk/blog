import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as s,d as e}from"./app-9107e99b.js";const l={},t=e(`<h1 id="虚拟头节点" tabindex="-1"><a class="header-anchor" href="#虚拟头节点" aria-hidden="true">#</a> 虚拟头节点</h1><h3 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用" aria-hidden="true">#</a> 基本使用</h3><p>定义：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ListNode</span> dummy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> head<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 取得头节点，所有最后需要返回head的情况下都要用这个</span>
dummy<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
<span class="token comment">// 删除头节点，如删除符合条件节点时</span>
dummy<span class="token punctuation">.</span>next <span class="token operator">=</span> dummy<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
<span class="token comment">// 插入头节点，如反转链表时</span>
node<span class="token punctuation">.</span>next <span class="token operator">=</span> dummy<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
dummy<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>好处：</p><ul><li>增加和删除节点的时候不需要对头处进行特判</li><li>创建一个新的链表，初始无法判断是否为空时，无需讨论是否一个空head</li><li>head频繁变更时，随时获取最终的head</li></ul><h3 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景" aria-hidden="true">#</a> 使用场景</h3><ol><li>头节点不确定时，如创建一个新的链表，初始时无法判断是否为空 <ul><li>合并链表（到一个新的链表）merge</li><li>划分链表（到两个新的链表）partition</li></ul></li><li>头节点可能被变动时，如添加、删除、移动 <ul><li>删除节点 <ul><li>链表去重</li><li>删除值为x的节点</li></ul></li><li>移动 <ul><li>反转链表</li><li>交换链表节点</li></ul></li></ul></li></ol>`,10),i=[t];function o(p,c){return n(),s("div",null,i)}const r=a(l,[["render",o],["__file","1. 虚拟头节点.html.vue"]]);export{r as default};
