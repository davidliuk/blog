import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,d as n,o as i}from"./app-ktFCNIob.js";const l={};function a(r,e){return i(),t("div",null,e[0]||(e[0]=[n('<h1 id="bfs" tabindex="-1"><a class="header-anchor" href="#bfs"><span>BFS</span></a></h1><p>状态</p><h3 id="bfs-基础" tabindex="-1"><a class="header-anchor" href="#bfs-基础"><span>BFS 基础</span></a></h3><p>队列搜索</p><p>等待队列：队列里面的是已经结束，等待扩展的</p><p>入队：节点进入等待</p><p>出队：节点开始运行</p><h3 id="bfs-步骤" tabindex="-1"><a class="header-anchor" href="#bfs-步骤"><span>BFS 步骤</span></a></h3><ol><li><p>出队</p></li><li><p>捕捉：全局变量捕捉 target 值</p><p>出队的时候进行目标点的捕捉，如果是目标点就返回，不再继续扩展</p></li><li><p>扩展</p></li><li><p>入队</p></li></ol><h3 id="bfs-扩展" tabindex="-1"><a class="header-anchor" href="#bfs-扩展"><span>BFS 扩展</span></a></h3><ul><li><p>递推公式：即这个边的语义，只需要改变递推公式就可以改变边的语义</p><p>如求和、求Max、求Min等</p></li><li><p>判断环路：拓扑排序</p></li><li><p>队列类型</p><ul><li><p>普通队列：先进先出</p></li><li><p>优先队列：可以根据优先级插队</p><p>拓展，形成A*算法，包含Dijkstra等</p></li><li><p>双端队列</p></li></ul></li></ul>',11)]))}const c=p(l,[["render",a],["__file","BFS.html.vue"]]),d=JSON.parse(`{"path":"/algo/framework/search/BFS.html","title":"BFS","lang":"en-US","frontmatter":{"description":"BFS 状态 BFS 基础 队列搜索 等待队列：队列里面的是已经结束，等待扩展的 入队：节点进入等待 出队：节点开始运行 BFS 步骤 出队 捕捉：全局变量捕捉 target 值 出队的时候进行目标点的捕捉，如果是目标点就返回，不再继续扩展 扩展 入队 BFS 扩展 递推公式：即这个边的语义，只需要改变递推公式就可以改变边的语义 如求和、求Max、求M...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/algo/framework/search/BFS.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"BFS"}],["meta",{"property":"og:description","content":"BFS 状态 BFS 基础 队列搜索 等待队列：队列里面的是已经结束，等待扩展的 入队：节点进入等待 出队：节点开始运行 BFS 步骤 出队 捕捉：全局变量捕捉 target 值 出队的时候进行目标点的捕捉，如果是目标点就返回，不再继续扩展 扩展 入队 BFS 扩展 递推公式：即这个边的语义，只需要改变递推公式就可以改变边的语义 如求和、求Max、求M..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-22T03:05:37.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-22T03:05:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"BFS\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-22T03:05:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":3,"title":"BFS 基础","slug":"bfs-基础","link":"#bfs-基础","children":[]},{"level":3,"title":"BFS 步骤","slug":"bfs-步骤","link":"#bfs-步骤","children":[]},{"level":3,"title":"BFS 扩展","slug":"bfs-扩展","link":"#bfs-扩展","children":[]}],"git":{"createdTime":1732244737000,"updatedTime":1732244737000,"contributors":[{"name":"David Liu","email":"liudawei@seas.upenn.edu","commits":1}]},"readingTime":{"minutes":0.61,"words":184},"filePathRelative":"algo/framework/search/BFS.md","localizedDate":"November 22, 2024","excerpt":"\\n<p>状态</p>\\n<h3>BFS 基础</h3>\\n<p>队列搜索</p>\\n<p>等待队列：队列里面的是已经结束，等待扩展的</p>\\n<p>入队：节点进入等待</p>\\n<p>出队：节点开始运行</p>\\n<h3>BFS 步骤</h3>\\n<ol>\\n<li>\\n<p>出队</p>\\n</li>\\n<li>\\n<p>捕捉：全局变量捕捉 target 值</p>\\n<p>出队的时候进行目标点的捕捉，如果是目标点就返回，不再继续扩展</p>\\n</li>\\n<li>\\n<p>扩展</p>\\n</li>\\n<li>\\n<p>入队</p>\\n</li>\\n</ol>\\n<h3>BFS 扩展</h3>\\n<ul>\\n<li>\\n<p>递推公式：即这个边的语义，只需要改变递推公式就可以改变边的语义</p>\\n<p>如求和、求Max、求Min等</p>\\n</li>\\n<li>\\n<p>判断环路：拓扑排序</p>\\n</li>\\n<li>\\n<p>队列类型</p>\\n<ul>\\n<li>\\n<p>普通队列：先进先出</p>\\n</li>\\n<li>\\n<p>优先队列：可以根据优先级插队</p>\\n<p>拓展，形成A*算法，包含Dijkstra等</p>\\n</li>\\n<li>\\n<p>双端队列</p>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{c as comp,d as data};
