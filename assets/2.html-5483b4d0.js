const e=JSON.parse(`{"key":"v-053efc29","path":"/course/neusoft/2.html","title":"MyBatis","lang":"en-US","frontmatter":{"description":"MyBatis 动态SQL 缓存 逆向工程 DML不需要写resultType resultType：表的每一行的数据的类型 动态SQL 静态SQL：结构恒定的，虽然可以传入参数，但是结构不会变 动态SQL：语句的结构会变化，如批量添加、批量删除，可以通过循环标签 foreach 标签 INSTERT INTO t_student(name, age, major, birthdate) VALUES &lt;foreach collection=\\"list\\" item=\\"stu\\" separator=\\",\\"&gt; \\t(#{stu.name},#{stu.age},#{stu.major},#{stu.birthdate}) &lt;/foreach&gt; delete FROM t_student WHERE id IN &lt;foreach collection=\\"list\\" item=\\"id\\" separator=\\",\\" open=\\"(\\" close=\\")\\"&gt; \\t#{id} &lt;/foreach&gt;","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/course/neusoft/2.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"MyBatis"}],["meta",{"property":"og:description","content":"MyBatis 动态SQL 缓存 逆向工程 DML不需要写resultType resultType：表的每一行的数据的类型 动态SQL 静态SQL：结构恒定的，虽然可以传入参数，但是结构不会变 动态SQL：语句的结构会变化，如批量添加、批量删除，可以通过循环标签 foreach 标签 INSTERT INTO t_student(name, age, major, birthdate) VALUES &lt;foreach collection=\\"list\\" item=\\"stu\\" separator=\\",\\"&gt; \\t(#{stu.name},#{stu.age},#{stu.major},#{stu.birthdate}) &lt;/foreach&gt; delete FROM t_student WHERE id IN &lt;foreach collection=\\"list\\" item=\\"id\\" separator=\\",\\" open=\\"(\\" close=\\")\\"&gt; \\t#{id} &lt;/foreach&gt;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-06-08T07:41:54.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-06-08T07:41:54.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/course/neusoft/2.html"}]]},"headers":[{"level":2,"title":"动态SQL","slug":"动态sql","link":"#动态sql","children":[{"level":3,"title":"foreach 标签","slug":"foreach-标签","link":"#foreach-标签","children":[]}]}],"git":{"createdTime":1686210114000,"updatedTime":1686210114000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":0.42,"words":126},"localizedDate":"June 8, 2023","filePathRelative":"course/neusoft/2.md","excerpt":"<h1> MyBatis</h1>\\n<p>动态SQL</p>\\n<p>缓存</p>\\n<p>逆向工程</p>\\n<p>DML不需要写resultType</p>\\n<p>resultType：表的每一行的数据的类型</p>\\n<h2> 动态SQL</h2>\\n<p>静态SQL：结构恒定的，虽然可以传入参数，但是结构不会变</p>\\n<p>动态SQL：语句的结构会变化，如批量添加、批量删除，可以通过循环标签</p>\\n<h3> foreach 标签</h3>\\n<div class=\\"language-sql line-numbers-mode\\" data-ext=\\"sql\\"><pre class=\\"language-sql\\"><code>INSTERT <span class=\\"token keyword\\">INTO</span> t_student<span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">,</span> age<span class=\\"token punctuation\\">,</span> major<span class=\\"token punctuation\\">,</span> birthdate<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">VALUES</span>\\n<span class=\\"token operator\\">&lt;</span>foreach collection<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"list\\"</span> item<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"stu\\"</span> separator<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\",\\"</span><span class=\\"token operator\\">&gt;</span>\\n\\t<span class=\\"token punctuation\\">(</span><span class=\\"token comment\\">#{stu.name},#{stu.age},#{stu.major},#{stu.birthdate})</span>\\n<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>foreach<span class=\\"token operator\\">&gt;</span>\\n\\n<span class=\\"token keyword\\">delete</span> <span class=\\"token keyword\\">FROM</span> t_student\\n<span class=\\"token keyword\\">WHERE</span> id <span class=\\"token operator\\">IN</span>\\n<span class=\\"token operator\\">&lt;</span>foreach collection<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"list\\"</span> item<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"id\\"</span> separator<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\",\\"</span> <span class=\\"token keyword\\">open</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"(\\"</span> <span class=\\"token keyword\\">close</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">\\")\\"</span><span class=\\"token operator\\">&gt;</span>\\n\\t<span class=\\"token comment\\">#{id}</span>\\n<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>foreach<span class=\\"token operator\\">&gt;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
