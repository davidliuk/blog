import{_ as a,V as e,W as r,Z as t}from"./framework-e5d7a6b2.js";const n={},o=t('<h1 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h1><h3 id="什么是-aop" tabindex="-1"><a class="header-anchor" href="#什么是-aop" aria-hidden="true">#</a> 什么是 AOP</h3><p>AOP：Aspect oriented programming 面向切面编程，AOP 是 OOP（面向对象编程）的一种延续。</p><p>下面我们先看一个 OOP 的例子。</p><p>OOP 编程思想可以解决大部分的代码重复问题。但是有一些问题是处理不了的。比如在父类 Animal 中的多个方法的相同位置出现了重复的代码，OOP 就解决不了。</p><h3 id="aop-解决了什么问题" tabindex="-1"><a class="header-anchor" href="#aop-解决了什么问题" aria-hidden="true">#</a> AOP 解决了什么问题</h3><p>通过上面的分析可以发现，AOP 主要用来解决：在不改变原有业务逻辑的情况下，增强横切逻辑代码，根本上解耦合，避免横切逻辑代码重复。</p><h3 id="aop-为什么叫面向切面编程" tabindex="-1"><a class="header-anchor" href="#aop-为什么叫面向切面编程" aria-hidden="true">#</a> AOP 为什么叫面向切面编程</h3><p><strong>切</strong> ：指的是横切逻辑，原有业务逻辑代码不动，只能操作横切逻辑代码，所以面向横切逻辑</p><p><strong>面</strong> ：横切逻辑代码往往要影响的是很多个方法，每个方法如同一个点，多个点构成一个面。这里有一个面的概念</p>',10),h=[o];function d(i,s){return e(),r("div",null,h)}const p=a(n,[["render",d],["__file","概念.html.vue"]]);export{p as default};
