const e=JSON.parse(`{"key":"v-3ab902f5","path":"/se/lang/java/collections/HashMap.html","title":"HashMap","lang":"en-US","frontmatter":{"description":"HashMap capacity，factor capacity是元素个数，factor只有构造的时候考虑（容量初始设置比capacity/factor大的第一个2^n），后面还是按3/4 扩容 1.8及以后，满3/4时就扩容 1.8以前，超3/4时扩容 扩容的时候，从后往前迁移 迁移的时候划分区间来迁移 当链表长度大于阈值（默认为 8）时，会首先调用 treeifyBin()方法。这个方法会根据 HashMap 数组来决定是否转换为红黑树。只有当数组长度大于或者等于 64 的情况下，才会执行转换红黑树操作，以减少搜索时间。否则，就是只是执行 resize() 方法对数组扩容。","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/lang/java/collections/HashMap.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"HashMap"}],["meta",{"property":"og:description","content":"HashMap capacity，factor capacity是元素个数，factor只有构造的时候考虑（容量初始设置比capacity/factor大的第一个2^n），后面还是按3/4 扩容 1.8及以后，满3/4时就扩容 1.8以前，超3/4时扩容 扩容的时候，从后往前迁移 迁移的时候划分区间来迁移 当链表长度大于阈值（默认为 8）时，会首先调用 treeifyBin()方法。这个方法会根据 HashMap 数组来决定是否转换为红黑树。只有当数组长度大于或者等于 64 的情况下，才会执行转换红黑树操作，以减少搜索时间。否则，就是只是执行 resize() 方法对数组扩容。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-05T13:59:03.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-05T13:59:03.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/se/lang/java/collections/HashMap.html"}]]},"headers":[{"level":3,"title":"扩容","slug":"扩容","link":"#扩容","children":[]},{"level":3,"title":"Resize","slug":"resize","link":"#resize","children":[]},{"level":3,"title":"treeifyBin","slug":"treeifybin","link":"#treeifybin","children":[]}],"git":{"createdTime":1677504602000,"updatedTime":1678024743000,"contributors":[{"name":"davidliuk","email":"l729641074@163.com","commits":1},{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":0.77,"words":230},"localizedDate":"February 27, 2023","filePathRelative":"se/lang/java/collections/HashMap.md","excerpt":"<h1> HashMap</h1>\\n<p>capacity，factor</p>\\n<p>capacity是元素个数，factor只有构造的时候考虑（容量初始设置比capacity/factor大的第一个2^n），后面还是按3/4</p>\\n<h3> 扩容</h3>\\n<ul>\\n<li>1.8及以后，满3/4时就扩容</li>\\n<li>1.8以前，超3/4时扩容</li>\\n</ul>\\n<p>扩容的时候，从后往前迁移</p>\\n<p>迁移的时候划分区间来迁移</p>\\n<p>当链表长度大于阈值（默认为 8）时，会首先调用 <code>treeifyBin()</code>方法。这个方法会根据 HashMap 数组来决定是否转换为红黑树。只有当数组长度大于或者等于 64 的情况下，才会执行转换红黑树操作，以减少搜索时间。否则，就是只是执行 <code>resize()</code> 方法对数组扩容。</p>","autoDesc":true}`);export{e as data};
