import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,d as r,o as p}from"./app-CrF8c6p-.js";const a={};function m(n,e){return p(),o("div",null,e[0]||(e[0]=[r('<h1 id="中位数" tabindex="-1"><a class="header-anchor" href="#中位数"><span>中位数</span></a></h1><p>Problem: 462. 最小操作次数使数组元素相等 II 【模板】</p><p>Problem: 2033. 获取单值网格的最小操作数 【小转换】</p><p>Problem: 2448. 使数组相等的最小开销 【思维转换，把代价视为多个数即可】</p><p>Problem: 2607. 使子数组元素和相等 【新套路】</p><p>Problem: 1703. 得到连续 K 个 1 的最少相邻交换次数 【转换较为困难】</p><p>Problem: 2967. 使数组成为等数数组的最小代价 【综合体（回文数预处理+中位数贪心）】</p><p>中位数贪心主要的思想是求数轴上有 n 个点，然后求一个数使得该点到数轴上所有点的距离之和最小，那这个数一定是在最中间的点处。</p><p>适用题目：</p><p>使所有数组元素相等需要的最小操作数<br> 在一次操作中，你可以使数组中的一个元素加 1 或者减 1</p>',10)]))}const c=t(a,[["render",m],["__file","中位数.html.vue"]]),d=JSON.parse(`{"path":"/algo/summary/optimise/decrease-conquer/greedy/%E4%B8%AD%E4%BD%8D%E6%95%B0.html","title":"中位数","lang":"en-US","frontmatter":{"description":"中位数 Problem: 462. 最小操作次数使数组元素相等 II 【模板】 Problem: 2033. 获取单值网格的最小操作数 【小转换】 Problem: 2448. 使数组相等的最小开销 【思维转换，把代价视为多个数即可】 Problem: 2607. 使子数组元素和相等 【新套路】 Problem: 1703. 得到连续 K 个 1 的最...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/algo/summary/optimise/decrease-conquer/greedy/%E4%B8%AD%E4%BD%8D%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"中位数"}],["meta",{"property":"og:description","content":"中位数 Problem: 462. 最小操作次数使数组元素相等 II 【模板】 Problem: 2033. 获取单值网格的最小操作数 【小转换】 Problem: 2448. 使数组相等的最小开销 【思维转换，把代价视为多个数即可】 Problem: 2607. 使子数组元素和相等 【新套路】 Problem: 1703. 得到连续 K 个 1 的最..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-22T03:05:37.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-22T03:05:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"中位数\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-22T03:05:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[],"git":{"createdTime":1732244737000,"updatedTime":1732244737000,"contributors":[{"name":"David Liu","email":"liudawei@seas.upenn.edu","commits":1}]},"readingTime":{"minutes":0.78,"words":234},"filePathRelative":"algo/summary/optimise/decrease-conquer/greedy/中位数.md","localizedDate":"November 22, 2024","excerpt":"\\n<p>Problem: 462. 最小操作次数使数组元素相等 II 【模板】</p>\\n<p>Problem: 2033. 获取单值网格的最小操作数 【小转换】</p>\\n<p>Problem: 2448. 使数组相等的最小开销 【思维转换，把代价视为多个数即可】</p>\\n<p>Problem: 2607. 使子数组元素和相等 【新套路】</p>\\n<p>Problem: 1703. 得到连续 K 个 1 的最少相邻交换次数 【转换较为困难】</p>\\n<p>Problem: 2967. 使数组成为等数数组的最小代价 【综合体（回文数预处理+中位数贪心）】</p>\\n<p>中位数贪心主要的思想是求数轴上有 n 个点，然后求一个数使得该点到数轴上所有点的距离之和最小，那这个数一定是在最中间的点处。</p>","autoDesc":true}`);export{c as comp,d as data};
