const e=JSON.parse(`{"key":"v-a37f4b0c","path":"/cs/database/mysql/index/5.%20%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99.html","title":"设计原则","lang":"en-US","frontmatter":{"description":"设计原则 针对于数据量较大，且查询比较频繁的表建立索引。 针对于常作为查询条件(where)、排序(order by)、分组(group by)操作的字段建立索引。 尽量选择区分度高的列作为索引，尽量建立唯一索引，区分度越高，使用索引的效率越高。 如果是字符串类型的字段，字段的长度较长，可以针对于字段的特点，建立前缀索引。 尽量使用联合索引，减少单列索引，查询时，联合索引很多时候可以覆盖索引，节省存储空间，避免回表，提高查询效率。 要控制索引的数量，索引并不是多多益善，索引越多，维护索引结构的代价也就越大，会影响增删改的效率。 如果索引列不能存储NULL值，请在创建表时使用NOT NULL约束它。当优化器知道每列是否包含NULL值时，它可以更好地确定哪个索引最有效地用于查询。","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/database/mysql/index/5.%20%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"设计原则"}],["meta",{"property":"og:description","content":"设计原则 针对于数据量较大，且查询比较频繁的表建立索引。 针对于常作为查询条件(where)、排序(order by)、分组(group by)操作的字段建立索引。 尽量选择区分度高的列作为索引，尽量建立唯一索引，区分度越高，使用索引的效率越高。 如果是字符串类型的字段，字段的长度较长，可以针对于字段的特点，建立前缀索引。 尽量使用联合索引，减少单列索引，查询时，联合索引很多时候可以覆盖索引，节省存储空间，避免回表，提高查询效率。 要控制索引的数量，索引并不是多多益善，索引越多，维护索引结构的代价也就越大，会影响增删改的效率。 如果索引列不能存储NULL值，请在创建表时使用NOT NULL约束它。当优化器知道每列是否包含NULL值时，它可以更好地确定哪个索引最有效地用于查询。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-20T14:10:49.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-20T14:10:49.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/cs/database/mysql/index/5.%20%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99.html"}]]},"headers":[],"git":{"createdTime":1672746435000,"updatedTime":1679321449000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":2},{"name":"davidliuk","email":"l729641074@163.com","commits":1}]},"readingTime":{"minutes":0.93,"words":279},"localizedDate":"January 3, 2023","filePathRelative":"cs/database/mysql/index/5. 设计原则.md","excerpt":"<h1> 设计原则</h1>\\n<ol>\\n<li>针对于数据量较大，且查询比较频繁的表建立索引。</li>\\n<li>针对于常作为查询条件(where)、排序(order by)、分组(group by)操作的字段建立索引。</li>\\n<li>尽量选择区分度高的列作为索引，尽量建立<strong>唯一索引</strong>，区分度越高，使用索引的效率越高。</li>\\n<li>如果是字符串类型的字段，字段的长度较长，可以针对于字段的特点，建立前缀索引。</li>\\n<li>尽量使用联合索引，减少单列索引，查询时，联合索引很多时候可以覆盖索引，节省存储空间，避免回表，提高查询效率。</li>\\n<li>要控制索引的数量，索引并不是多多益善，索引越多，维护索引结构的代价也就越大，会影响增删改的效率。</li>\\n<li>如果索引列不能存储NULL值，请在创建表时使用NOT NULL约束它。当优化器知道每列是否包含NULL值时，它可以更好地确定哪个索引最有效地用于查询。</li>\\n</ol>","autoDesc":true}`);export{e as data};
