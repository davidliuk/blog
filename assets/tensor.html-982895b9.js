import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as a,d as p}from"./app-9107e99b.js";const o={},s=p(`<h1 id="tensor" tabindex="-1"><a class="header-anchor" href="#tensor" aria-hidden="true">#</a> Tensor</h1><p>0: scalar</p><p>1: vector</p><p>2: matrix</p><p>3+: tensor</p><p>matrix, tensor 变量一般大写命名</p><hr><p>rand</p><p>zeros</p><p>ones</p><p>arange, 左闭右开</p><hr><p>ndim</p><p>dtype, 默认是float32</p><p>size</p><p>Zeros_like</p><p>tensor datatype is one of 3 big errors with pytorch &amp; deep learning</p><ol><li>Tensors not right datatype, <code>tensor.dtype</code></li><li>Tensors not right shape, <code>tensor.shape</code></li><li>Tensors not on right device, <code>tensor.device</code><ol><li>cpu</li><li>cuda</li><li>tpu</li></ol></li></ol><p><code>tensor.type(torch.int64)</code>强制类型转换</p><hr><h3 id="operation" tabindex="-1"><a class="header-anchor" href="#operation" aria-hidden="true">#</a> Operation</h3><ul><li><p>Addition</p><p><code>+</code>, <code>touch.add()</code></p></li><li><p>Sub</p><p><code>-, </code>touch.sub()\`</p></li><li><p>Multiplication (element wise) 数乘</p><p><code>*</code></p></li><li><p>Division</p><p><code>\\</code></p></li><li><p>Matrix Multiplication 点乘/矩阵乘法</p><p><code>@</code>, <code>torch.matmul()</code>, <code>torch.mm()</code></p><p>这个比for快很多<code>%%time</code></p></li><li><p>Transpose 转置</p><p><code>tensor.T</code></p></li></ul><p>Matrix Multiplication的条件</p><ol><li><strong>inner dimension</strong> must match</li><li>resulting matrix has the shape of the <strong>outer dimension</strong></li></ol><p>cat</p><p>chunk</p><h3 id="aggregation" tabindex="-1"><a class="header-anchor" href="#aggregation" aria-hidden="true">#</a> Aggregation</h3><p>min, max, mean, sum, etc.</p><ul><li><p>min,</p><p><code>x.min()</code>, <code>torch.min(x)</code></p></li><li><p>max,</p><p><code>x.max()</code>, <code>torch.max(x)</code></p></li><li><p>mean,</p><p><code>x.mean()</code>, <code>torch.mean(x)</code></p></li><li><p>sum</p><p><code>x.sum()</code>, <code>torch.sum(x)</code></p></li><li><p>argmin, 找到tensor中min的坐标</p><p><code>x.argmin()</code></p></li><li><p>argmax, 找到tensor中max的坐标</p><p><code>x.argmax()</code></p></li></ul><hr><h3 id="shape" tabindex="-1"><a class="header-anchor" href="#shape" aria-hidden="true">#</a> Shape</h3><p>reshape</p><p>view</p><p>stack</p><p>squeeze</p><p>unsqueeze</p><p>Permute</p><h3 id="indexing" tabindex="-1"><a class="header-anchor" href="#indexing" aria-hidden="true">#</a> Indexing</h3><p>xxx</p><h3 id="numpy" tabindex="-1"><a class="header-anchor" href="#numpy" aria-hidden="true">#</a> Numpy</h3><p><code>torch.from_numpy()</code></p><p><code>x.numpy()</code></p><h3 id="reproducibility" tabindex="-1"><a class="header-anchor" href="#reproducibility" aria-hidden="true">#</a> Reproducibility</h3><p>Pseudo random</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>RANDOM_SEED <span class="token operator">=</span> <span class="token number">42</span>
Torch<span class="token punctuation">.</span>manual_seed<span class="token punctuation">(</span>RANDOM_SEED<span class="token punctuation">)</span>
touch<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gpu" tabindex="-1"><a class="header-anchor" href="#gpu" aria-hidden="true">#</a> GPU</h3><ol><li><strong>colab</strong>, easiest</li><li>Buy GPU</li><li>Cloud Computing</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span>

tensor<span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>
tensor<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,48),i=[s];function t(c,d){return n(),a("div",null,i)}const u=e(o,[["render",t],["__file","tensor.html.vue"]]);export{u as default};
