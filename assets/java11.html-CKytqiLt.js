import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as i,o as n}from"./app-z8Dpj-As.js";const l={};function o(r,e){return n(),a("div",null,e[0]||(e[0]=[i('<h1 id="java-11" tabindex="-1"><a class="header-anchor" href="#java-11"><span>Java 11</span></a></h1><h2 id="http-client" tabindex="-1"><a class="header-anchor" href="#http-client"><span>HTTP Client</span></a></h2><p>新版 Java 中，Http Client 的包名由 jdk.incubator.http 改为 java.net.http，该 API 通过 CompleteableFutures 提供非阻塞请求和响应语义，可以联合使用以触发相应的动作，并且 RXFlow 的概念也在 Java 11 中得到了实现。现在，在用户层请求发布者和响应发布者与底层套接字之间追踪数据流更容易了。这降低了复杂性，并最大程度上提高了 HTTP/1 和 HTTP/2 之间的重用的可能性。</p><h2 id="module" tabindex="-1"><a class="header-anchor" href="#module"><span>Module</span></a></h2><h2 id="string-api" tabindex="-1"><a class="header-anchor" href="#string-api"><span>String API</span></a></h2><p><code>repeat</code></p>',6)]))}const c=t(l,[["render",o],["__file","java11.html.vue"]]),s=JSON.parse(`{"path":"/se/lang/java/feature/java11.html","title":"Java 11","lang":"en-US","frontmatter":{"description":"Java 11 HTTP Client 新版 Java 中，Http Client 的包名由 jdk.incubator.http 改为 java.net.http，该 API 通过 CompleteableFutures 提供非阻塞请求和响应语义，可以联合使用以触发相应的动作，并且 RXFlow 的概念也在 Java 11 中得到了实现。现在，在用户...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/lang/java/feature/java11.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"Java 11"}],["meta",{"property":"og:description","content":"Java 11 HTTP Client 新版 Java 中，Http Client 的包名由 jdk.incubator.http 改为 java.net.http，该 API 通过 CompleteableFutures 提供非阻塞请求和响应语义，可以联合使用以触发相应的动作，并且 RXFlow 的概念也在 Java 11 中得到了实现。现在，在用户..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-05-08T07:35:02.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-08T07:35:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 11\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-08T07:35:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":2,"title":"HTTP Client","slug":"http-client","link":"#http-client","children":[]},{"level":2,"title":"Module","slug":"module","link":"#module","children":[]},{"level":2,"title":"String API","slug":"string-api","link":"#string-api","children":[]}],"git":{"createdTime":1700646963000,"updatedTime":1715153702000,"contributors":[{"name":"davidliu","email":"liudawei47@jd.com","commits":1},{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":0.44,"words":131},"filePathRelative":"se/lang/java/feature/java11.md","localizedDate":"November 22, 2023","excerpt":"\\n<h2>HTTP Client</h2>\\n<p>新版 Java 中，Http Client 的包名由 jdk.incubator.http 改为 java.net.http，该 API 通过 CompleteableFutures 提供非阻塞请求和响应语义，可以联合使用以触发相应的动作，并且 RXFlow 的概念也在 Java 11 中得到了实现。现在，在用户层请求发布者和响应发布者与底层套接字之间追踪数据流更容易了。这降低了复杂性，并最大程度上提高了 HTTP/1 和 HTTP/2 之间的重用的可能性。</p>\\n<h2>Module</h2>\\n<h2>String API</h2>\\n<p><code>repeat</code></p>","autoDesc":true}`);export{c as comp,s as data};
