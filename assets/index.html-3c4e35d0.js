import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as e,d as t}from"./app-9107e99b.js";const r={},n=t('<h1 id="减治" tabindex="-1"><a class="header-anchor" href="#减治" aria-hidden="true">#</a> 减治</h1><p>在广义“有序“的线性结构上搜索</p><h3 id="四类减治问题" tabindex="-1"><a class="header-anchor" href="#四类减治问题" aria-hidden="true">#</a> 四类减治问题</h3><p><strong>反向排序</strong>：两侧性质相反</p><ul><li>二分查找：每次减一半</li><li>双指针：减少组合复杂度的空间</li></ul><p><strong>结构排序</strong>：每次减一半</p><ul><li>基于二分查找存储化的结构 <ul><li>数组：树状数组</li><li>链表：跳表</li><li>树： <ul><li>B+树</li><li>线段树</li><li>分块树</li></ul></li></ul></li></ul><p><strong>删除排序</strong>：每次减的不一定</p><ul><li>单调栈</li><li>单调队列</li></ul><p><strong>自定排序</strong>：减少排列和组合复杂度的空间</p><ul><li>贪心法</li></ul><p>如下的减治每一种都可以用在动规里面对动规进行优化</p>',12),o=[n];function a(s,c){return i(),e("div",null,o)}const h=l(r,[["render",a],["__file","index.html.vue"]]);export{h as default};
