import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as p,o as t}from"./app-DIqbhby7.js";const e={};function m(l,a){return t(),n("div",null,a[0]||(a[0]=[p('<h1 id="谓词逻辑" tabindex="-1"><a class="header-anchor" href="#谓词逻辑"><span>谓词逻辑</span></a></h1><p>量词，任意、存在</p><p>谓词，M(x): x是什么，大于小于</p><p>一元谓词、二元谓词、三元谓词</p><p>把谓词字母填以客体所得的式子就是谓词填式</p><h4 id="小结" tabindex="-1"><a class="header-anchor" href="#小结"><span>小结</span></a></h4><p>命题</p><p>原子命题、复合命题-联结词、命题公式</p><p>永真式</p><p>永真蕴含式、等价公式</p><h3 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h3><h4 id="客体与客体变元" tabindex="-1"><a class="header-anchor" href="#客体与客体变元"><span>客体与客体变元</span></a></h4><p>客体：能够独立存在的事物，也成为个体。可以是具体的，也可以是抽象的事物，可以是小王、沈阳、社会主义等</p><p>客体变元：小写字母xyz，是变量</p><p>注意：客体变元本身不是客体</p><h4 id="谓词" tabindex="-1"><a class="header-anchor" href="#谓词"><span>谓词</span></a></h4><p>一元谓词、n元谓词</p><p>客体/变元，谓词</p><h4 id="命题函数" tabindex="-1"><a class="header-anchor" href="#命题函数"><span>命题函数</span></a></h4><p>谓词本身并不是命题，只有谓词的括号内填入足够的客体，才变成命题</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">,</mo><mi>d</mi><mo separator="true">,</mo><mi>e</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">B(c,d,e)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">e</span><span class="mclose">)</span></span></span></span></p><p>n元谓词简单命题函数</p><h4 id="论语-个体域" tabindex="-1"><a class="header-anchor" href="#论语-个体域"><span>论语(个体域)</span></a></h4><p>全总个体域</p><h4 id="量词" tabindex="-1"><a class="header-anchor" href="#量词"><span>量词</span></a></h4><p>任意、存在</p><p>量词后的指导变元</p><p>词后的指导变元</p><p>量词的辖域：他后面连接的部分：谓词后者是括号</p><ul><li>存在量词</li><li>全称量词</li></ul><p>量词后的指导变元</p><h3 id="谓词公式及命题符号化" tabindex="-1"><a class="header-anchor" href="#谓词公式及命题符号化"><span>谓词公式及命题符号化</span></a></h3><h4 id="原子谓词公式" tabindex="-1"><a class="header-anchor" href="#原子谓词公式"><span>原子谓词公式</span></a></h4><h4 id="谓词合式公式wff" tabindex="-1"><a class="header-anchor" href="#谓词合式公式wff"><span>谓词合式公式WFF</span></a></h4><ul><li><p>原子谓词公式是合式公式</p></li><li><p>如果A是，非A也是</p></li><li><p>如果A、B是，AB析取合取蕴含双条件也是</p></li><li><p>如果A是合式公式，x是任意客体变元</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p></li></ul><p>量词后面的括号不能省略</p><p>自由变元与约束变元</p><p>如果客体变元x在量词的辖域内，则被称为约束变元</p><p>一个n元谓词P(x1,x2,,xn)，若在前边添加k个量词，使其中的k个客体变元变成约束变元，则此n元谓词就变成了n-k元谓词。</p><p>对自由变元做代入</p><p>对约束变元做改名</p><h4 id="特性谓词" tabindex="-1"><a class="header-anchor" href="#特性谓词"><span>特性谓词</span></a></h4><p>扩大论域时，</p><ol><li>全称量词，特性谓词后面是蕴含</li><li>存在量词，特性谓词后面是合取</li></ol><p>命题的符号表达式形式与论域有关</p><p>如果量词前面有否定符号，如“不是所有”，“没有”等，可以按照字面直译。如非任意，非存在</p><p>注意隐含量词</p><h2 id="_2-3-谓词演算的等价式与蕴涵式" tabindex="-1"><a class="header-anchor" href="#_2-3-谓词演算的等价式与蕴涵式"><span>2-3 谓词演算的等价式与蕴涵式</span></a></h2><p>对谓词公式赋值</p><p>谓词公式的永真式定义</p><p>重要公式</p><p>量词否定公式</p><p>量词辖域的扩充公式</p><p>量词分配公式</p><ol><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∃</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∨</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\\exist(A(x)\\vee B(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∃</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>⇔</mo><mi mathvariant="normal">∀</mi><mi>A</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∧</mo><mi mathvariant="normal">∀</mi><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\\forall(A(x)\\wedge B(x))\\Leftrightarrow\\forall A(x)\\wedge \\forall B(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∀</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∀</span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∀</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∃</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\\exist(A(x)\\wedge B(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∃</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">∀</span></span></span></span></li></ol>',55)]))}const r=s(e,[["render",m],["__file","2. 谓词逻辑.html.vue"]]),c=JSON.parse(`{"path":"/education/bs/discrete-math/2.%20%E8%B0%93%E8%AF%8D%E9%80%BB%E8%BE%91.html","title":"谓词逻辑","lang":"en-US","frontmatter":{"description":"谓词逻辑 量词，任意、存在 谓词，M(x): x是什么，大于小于 一元谓词、二元谓词、三元谓词 把谓词字母填以客体所得的式子就是谓词填式 小结 命题 原子命题、复合命题-联结词、命题公式 永真式 永真蕴含式、等价公式 基本概念 客体与客体变元 客体：能够独立存在的事物，也成为个体。可以是具体的，也可以是抽象的事物，可以是小王、沈阳、社会主义等 客体变元...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/education/bs/discrete-math/2.%20%E8%B0%93%E8%AF%8D%E9%80%BB%E8%BE%91.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"谓词逻辑"}],["meta",{"property":"og:description","content":"谓词逻辑 量词，任意、存在 谓词，M(x): x是什么，大于小于 一元谓词、二元谓词、三元谓词 把谓词字母填以客体所得的式子就是谓词填式 小结 命题 原子命题、复合命题-联结词、命题公式 永真式 永真蕴含式、等价公式 基本概念 客体与客体变元 客体：能够独立存在的事物，也成为个体。可以是具体的，也可以是抽象的事物，可以是小王、沈阳、社会主义等 客体变元..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-09T03:55:12.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-09T03:55:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"谓词逻辑\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-09T03:55:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":3,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":3,"title":"谓词公式及命题符号化","slug":"谓词公式及命题符号化","link":"#谓词公式及命题符号化","children":[]},{"level":2,"title":"2-3 谓词演算的等价式与蕴涵式","slug":"_2-3-谓词演算的等价式与蕴涵式","link":"#_2-3-谓词演算的等价式与蕴涵式","children":[]}],"git":{"createdTime":1703688112000,"updatedTime":1731124512000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro-3.local","commits":1}]},"readingTime":{"minutes":2.22,"words":667},"filePathRelative":"education/bs/discrete-math/2. 谓词逻辑.md","localizedDate":"December 27, 2023","excerpt":"\\n<p>量词，任意、存在</p>\\n<p>谓词，M(x): x是什么，大于小于</p>\\n<p>一元谓词、二元谓词、三元谓词</p>\\n<p>把谓词字母填以客体所得的式子就是谓词填式</p>\\n<h4>小结</h4>\\n<p>命题</p>\\n<p>原子命题、复合命题-联结词、命题公式</p>\\n<p>永真式</p>\\n<p>永真蕴含式、等价公式</p>\\n<h3>基本概念</h3>\\n<h4>客体与客体变元</h4>\\n<p>客体：能够独立存在的事物，也成为个体。可以是具体的，也可以是抽象的事物，可以是小王、沈阳、社会主义等</p>\\n<p>客体变元：小写字母xyz，是变量</p>\\n<p>注意：客体变元本身不是客体</p>","autoDesc":true}`);export{r as comp,c as data};
