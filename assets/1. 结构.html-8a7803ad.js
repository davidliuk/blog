import{_ as p,V as a,W as e,a0 as t}from"./framework-705b829b.js";const c={},i=t('<h1 id="结构" tabindex="-1"><a class="header-anchor" href="#结构" aria-hidden="true">#</a> 结构</h1><p>索引结构</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-07-28 20.56.58.png" alt="截屏2022-07-28 20.56.58" loading="lazy"></p><p>支持情况</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-07-28 20.57.23.png" alt="截屏2022-07-28 20.57.23" loading="lazy"></p><p>二叉树：</p><p>缺点：顺序插入时，形成链表，查询性能大大降低。大数据量情况下，层级较深，检索速度慢</p><p>AVL、红黑树：</p><p>缺点：大数据量情况下，层级较深，检索速度慢</p><p>B Tree（多路平衡查找树）</p><p>以一颗最大度数(max-degree)为5阶的b-tree为例(每个节点最多存储4个key，5个指针)</p><p>中间元素向上分裂</p><p>B+Tree</p><p>所有的元素都会在叶子结点层</p><p>上面的元素只起索引的作用</p><p>叶子结点形成一个单向链表</p><p>中间元素向上分裂，同时会保留在右子树里</p><p>数据存储只在叶子结点中</p><p>MySQL中对B+Tree进行了优化，叶子层单向指针变成双向</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-07-28 21.19.21.png" alt="截屏2022-07-28 21.19.21" loading="lazy"></p><p>一页16k，上面层，每一个节点都只存key和指针，就可以存很多很多</p><p>Hash索引</p><p>冲突时，就用链表存储</p><p>优点：效率高</p><p>缺点：只支持等值匹配，不支持范围索引和排序操作</p><p>只有Memory引擎支持</p><p>而InnoDB中具有自适应Hash索引，满足条件时，自动设计为Hash</p><p>为什么MySQL采用B+</p><ul><li><p>相对于二叉树，层级更少，搜索效率高；</p></li><li><p>对于B-tree，无论是叶子节点还是非叶子节点，都会，这样导致一页中存储的键值减少，指针跟着减少，要同样保存大量数据，只能增加树的高度，导致性能降低;</p><p>（而且B+搜索效率稳定，而且便于范围搜索和排序）</p></li><li><p>相比于Hash，B+支持范围索引和排序操作</p></li></ul>',29),n=[i];function s(l,o){return a(),e("div",null,n)}const r=p(c,[["render",s],["__file","1. 结构.html.vue"]]);export{r as default};
