const e=JSON.parse(`{"key":"v-2060c73c","path":"/cs/database/mysql/lock/3.%20%E8%A1%8C%E7%BA%A7%E9%94%81.html","title":"行级锁","lang":"en-US","frontmatter":{"description":"行级锁 操作锁住对应的行数据，锁定粒度最小，发生锁冲突的概率最低 分类 对于行级锁，主要分为以下三类： 行锁 Record Lock 间隙锁 Gap Lock 临键锁 next-key lock =行锁 + 间隙锁 行锁 InnoDB实现了以下两种类型的行锁： 共享锁（S）：允许一个事务去读一行，阻止其他事物获得相同数据集的排他锁 排他锁（X）：允许获取排他锁的事物更新数据，阻止其他事物获取相同数据集的共享锁和排他锁","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/database/mysql/lock/3.%20%E8%A1%8C%E7%BA%A7%E9%94%81.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"行级锁"}],["meta",{"property":"og:description","content":"行级锁 操作锁住对应的行数据，锁定粒度最小，发生锁冲突的概率最低 分类 对于行级锁，主要分为以下三类： 行锁 Record Lock 间隙锁 Gap Lock 临键锁 next-key lock =行锁 + 间隙锁 行锁 InnoDB实现了以下两种类型的行锁： 共享锁（S）：允许一个事务去读一行，阻止其他事物获得相同数据集的排他锁 排他锁（X）：允许获取排他锁的事物更新数据，阻止其他事物获取相同数据集的共享锁和排他锁"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-01-03T11:47:15.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-01-03T11:47:15.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/cs/database/mysql/lock/3.%20%E8%A1%8C%E7%BA%A7%E9%94%81.html"}]]},"headers":[{"level":3,"title":"分类","slug":"分类","link":"#分类","children":[]},{"level":3,"title":"行锁","slug":"行锁","link":"#行锁","children":[]},{"level":3,"title":"间隙锁/临键锁","slug":"间隙锁-临键锁","link":"#间隙锁-临键锁","children":[]}],"git":{"createdTime":1672647518000,"updatedTime":1672746435000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":3}]},"readingTime":{"minutes":1.71,"words":513},"localizedDate":"January 2, 2023","filePathRelative":"cs/database/mysql/lock/3. 行级锁.md","excerpt":"<h1> 行级锁</h1>\\n<p>操作锁住对应的行数据，锁定粒度最小，发生锁冲突的概率最低</p>\\n<h3> 分类</h3>\\n<p>对于行级锁，主要分为以下三类：</p>\\n<ul>\\n<li>\\n<p>行锁 Record Lock</p>\\n</li>\\n<li>\\n<p>间隙锁 Gap Lock</p>\\n</li>\\n<li>\\n<p>临键锁 next-key lock</p>\\n<p>=行锁 + 间隙锁</p>\\n</li>\\n</ul>\\n<h3> 行锁</h3>\\n<p>InnoDB实现了以下两种类型的行锁：</p>\\n<ol>\\n<li>共享锁（S）：允许一个事务去读一行，阻止其他事物获得相同数据集的排他锁</li>\\n<li>排他锁（X）：允许获取排他锁的事物更新数据，阻止其他事物获取相同数据集的共享锁和排他锁</li>\\n</ol>","autoDesc":true}`);export{e as data};
