const e=JSON.parse(`{"key":"v-3678f3e0","path":"/se/framework/spring/core/aop/%E6%A6%82%E5%BF%B5.html","title":"概念","lang":"en-US","frontmatter":{"description":"概念 什么是 AOP AOP：Aspect oriented programming 面向切面编程，AOP 是 OOP（面向对象编程）的一种延续。 下面我们先看一个 OOP 的例子。 OOP 编程思想可以解决大部分的代码重复问题。但是有一些问题是处理不了的。比如在父类 Animal 中的多个方法的相同位置出现了重复的代码，OOP 就解决不了。 AOP 解决了什么问题 通过上面的分析可以发现，AOP 主要用来解决：在不改变原有业务逻辑的情况下，增强横切逻辑代码，根本上解耦合，避免横切逻辑代码重复。","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/framework/spring/core/aop/%E6%A6%82%E5%BF%B5.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"概念"}],["meta",{"property":"og:description","content":"概念 什么是 AOP AOP：Aspect oriented programming 面向切面编程，AOP 是 OOP（面向对象编程）的一种延续。 下面我们先看一个 OOP 的例子。 OOP 编程思想可以解决大部分的代码重复问题。但是有一些问题是处理不了的。比如在父类 Animal 中的多个方法的相同位置出现了重复的代码，OOP 就解决不了。 AOP 解决了什么问题 通过上面的分析可以发现，AOP 主要用来解决：在不改变原有业务逻辑的情况下，增强横切逻辑代码，根本上解耦合，避免横切逻辑代码重复。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-05-17T10:10:52.000Z"}],["meta",{"property":"article:author","content":"David Liu"}],["meta",{"property":"article:modified_time","content":"2023-05-17T10:10:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"概念\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-17T10:10:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":3,"title":"什么是 AOP","slug":"什么是-aop","link":"#什么是-aop","children":[]},{"level":3,"title":"AOP 解决了什么问题","slug":"aop-解决了什么问题","link":"#aop-解决了什么问题","children":[]},{"level":3,"title":"AOP 为什么叫面向切面编程","slug":"aop-为什么叫面向切面编程","link":"#aop-为什么叫面向切面编程","children":[]},{"level":3,"title":"原理","slug":"原理","link":"#原理","children":[]}],"git":{"createdTime":1684318252000,"updatedTime":1684318252000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":3.03,"words":910},"filePathRelative":"se/framework/spring/core/aop/概念.md","localizedDate":"May 17, 2023","excerpt":"<h1> 概念</h1>\\n<h3> 什么是 AOP</h3>\\n<p>AOP：Aspect oriented programming 面向切面编程，AOP 是 OOP（面向对象编程）的一种延续。</p>\\n<p>下面我们先看一个 OOP 的例子。</p>\\n<p>OOP 编程思想可以解决大部分的代码重复问题。但是有一些问题是处理不了的。比如在父类 Animal 中的多个方法的相同位置出现了重复的代码，OOP 就解决不了。</p>\\n<h3> AOP 解决了什么问题</h3>\\n<p>通过上面的分析可以发现，AOP 主要用来解决：在不改变原有业务逻辑的情况下，增强横切逻辑代码，根本上解耦合，避免横切逻辑代码重复。</p>","autoDesc":true}`);export{e as data};
