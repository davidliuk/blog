const e=JSON.parse(`{"key":"v-7f0bc75b","path":"/se/lang/java/JUC/safe/","title":"线程安全","lang":"en-US","frontmatter":{"description":"线程安全 并发编程三要素 可见性，一个线程对共享变量修改，另外的线程能立即看到最新值。 有序性，一个线程内代码按编写顺序执行（多线程下不能）由于指令重排序问题，代码的执行顺序未必就是编写代码时候的顺序。 原子性，一个线程内多行代码以一个整体运行，期间不难有其他线程的代码插队 原子性 起因：多线程下，不同线程的指令发生了交错导致的共享变量的读写混乱 解决：用悲观锁或乐观锁解决，volatile 并不能解决原子性","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/lang/java/JUC/safe/"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"线程安全"}],["meta",{"property":"og:description","content":"线程安全 并发编程三要素 可见性，一个线程对共享变量修改，另外的线程能立即看到最新值。 有序性，一个线程内代码按编写顺序执行（多线程下不能）由于指令重排序问题，代码的执行顺序未必就是编写代码时候的顺序。 原子性，一个线程内多行代码以一个整体运行，期间不难有其他线程的代码插队 原子性 起因：多线程下，不同线程的指令发生了交错导致的共享变量的读写混乱 解决：用悲观锁或乐观锁解决，volatile 并不能解决原子性"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-04-11T10:23:43.000Z"}],["meta",{"property":"article:author","content":"David Liu"}],["meta",{"property":"article:modified_time","content":"2023-04-11T10:23:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"线程安全\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-11T10:23:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":2,"title":"并发编程三要素","slug":"并发编程三要素","link":"#并发编程三要素","children":[{"level":3,"title":"原子性","slug":"原子性","link":"#原子性","children":[]},{"level":3,"title":"可见性","slug":"可见性","link":"#可见性","children":[]},{"level":3,"title":"有序性","slug":"有序性","link":"#有序性","children":[]}]}],"git":{"createdTime":1675410392000,"updatedTime":1681208623000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":3},{"name":"davidliuk","email":"l729641074@163.com","commits":2}]},"readingTime":{"minutes":1.81,"words":544},"filePathRelative":"se/lang/java/JUC/safe/README.md","localizedDate":"February 3, 2023","excerpt":"<h1> 线程安全</h1>\\n<h2> 并发编程三要素</h2>\\n<ul>\\n<li>可见性，一个线程对共享变量修改，另外的线程能立即看到最新值。</li>\\n<li>有序性，一个线程内代码按编写顺序执行（多线程下不能）由于指令重排序问题，代码的执行顺序未必就是编写代码时候的顺序。</li>\\n<li>原子性，一个线程内多行代码以一个整体运行，期间不难有其他线程的代码插队</li>\\n</ul>\\n<h3> <strong>原子性</strong></h3>\\n<ul>\\n<li>起因：多线程下，不同线程的<strong>指令发生了交错</strong>导致的共享变量的读写混乱</li>\\n<li>解决：用悲观锁或乐观锁解决，volatile 并不能解决原子性</li>\\n</ul>","autoDesc":true}`);export{e as data};
