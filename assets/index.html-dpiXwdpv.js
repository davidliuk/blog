import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as e,o as a}from"./app-UiaY2OnX.js";const r={};function p(i,t){return a(),o("div",null,t[0]||(t[0]=[e("h1",{id:"多指针",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#多指针"},[e("span",null,"多指针")])],-1),e("p",null,"用堆来存储K指针，每次取权值最大/最小的指针，更新答案并把该指针后移并放入堆中",-1),e("p",null,"每次移动某一个最优的指针，在任意n轮操作时，堆中的元素始终是这k个序列中n轮操作时的最优切面（比较抽象但是可以通过最小区间问题来理解）",-1),e("p",null,"经典问题：",-1),e("p",null,"多路归并（k-way merge）",-1),e("p",null,"丑数问题",-1),e("p",null,"最小区间",-1),e("p",null,"队列中",-1)]))}const c=n(r,[["render",p],["__file","index.html.vue"]]),s=JSON.parse(`{"path":"/algo/summary/optimise/decrease-conquer/k-pointer/","title":"多指针","lang":"en-US","frontmatter":{"description":"多指针 用堆来存储K指针，每次取权值最大/最小的指针，更新答案并把该指针后移并放入堆中 每次移动某一个最优的指针，在任意n轮操作时，堆中的元素始终是这k个序列中n轮操作时的最优切面（比较抽象但是可以通过最小区间问题来理解） 经典问题： 多路归并（k-way merge） 丑数问题 最小区间 队列中","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/algo/summary/optimise/decrease-conquer/k-pointer/"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"多指针"}],["meta",{"property":"og:description","content":"多指针 用堆来存储K指针，每次取权值最大/最小的指针，更新答案并把该指针后移并放入堆中 每次移动某一个最优的指针，在任意n轮操作时，堆中的元素始终是这k个序列中n轮操作时的最优切面（比较抽象但是可以通过最小区间问题来理解） 经典问题： 多路归并（k-way merge） 丑数问题 最小区间 队列中"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-22T03:05:37.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-22T03:05:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"多指针\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-22T03:05:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[],"git":{"createdTime":1732244737000,"updatedTime":1732244737000,"contributors":[{"name":"David Liu","email":"liudawei@seas.upenn.edu","commits":1}]},"readingTime":{"minutes":0.42,"words":125},"filePathRelative":"algo/summary/optimise/decrease-conquer/k-pointer/README.md","localizedDate":"November 22, 2024","excerpt":"\\n<p>用堆来存储K指针，每次取权值最大/最小的指针，更新答案并把该指针后移并放入堆中</p>\\n<p>每次移动某一个最优的指针，在任意n轮操作时，堆中的元素始终是这k个序列中n轮操作时的最优切面（比较抽象但是可以通过最小区间问题来理解）</p>\\n<p>经典问题：</p>\\n<p>多路归并（k-way merge）</p>\\n<p>丑数问题</p>\\n<p>最小区间</p>\\n<p>队列中</p>\\n","autoDesc":true}`);export{c as comp,s as data};
