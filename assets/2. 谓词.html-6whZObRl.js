import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as l,o as i}from"./app-ktFCNIob.js";const a={};function o(r,e){return i(),n("div",null,e[0]||(e[0]=[l('<h1 id="知识表示与知识图谱" tabindex="-1"><a class="header-anchor" href="#知识表示与知识图谱"><span>知识表示与知识图谱</span></a></h1><p><strong>2.1</strong> 知识与知识表示的概念</p><p><strong>2.2</strong> 一阶谓词逻辑表示法</p><p><strong>2.3</strong> 产生式表示法</p><p><strong>2.4</strong> 框架表示法</p><p><strong>2.5</strong> 知识图谱</p><p>知识的特征</p><ul><li>相对正确性</li><li>不确定性</li><li>可表示性与可利用性</li></ul><h2 id="一阶谓词逻辑表示法" tabindex="-1"><a class="header-anchor" href="#一阶谓词逻辑表示法"><span>一阶谓词逻辑表示法</span></a></h2><h3 id="命题" tabindex="-1"><a class="header-anchor" href="#命题"><span>命题</span></a></h3><h3 id="谓词" tabindex="-1"><a class="header-anchor" href="#谓词"><span>谓词</span></a></h3><p>谓词的一般形式： P (x1, x2,…, xn)</p><ul><li>个体 x1, x2,…, xn ：某个独立存在的事物或者某个抽象的概念；</li><li>谓词名 P：刻画个体的性质、状态或个体间的关系。</li></ul><h3 id="谓词公式" tabindex="-1"><a class="header-anchor" href="#谓词公式"><span>谓词公式</span></a></h3><ul><li><p>连接词</p><p>﹁， ∧， ∨， →， ↔</p></li><li><p>量词</p><ul><li>全称量词</li><li>存在量词</li></ul></li><li><p>谓词公式</p></li><li><p>辖域：量词后面的单个谓词或者用括弧括起来的谓词公式</p></li><li><p>约束变元与自由变元：辖域内与量词中同名的变元称为约束变元，不同名的变元称为自由变元。</p></li></ul><h2 id="产生式表示法" tabindex="-1"><a class="header-anchor" href="#产生式表示法"><span>产生式表示法</span></a></h2><h3 id="产生式" tabindex="-1"><a class="header-anchor" href="#产生式"><span>产生式</span></a></h3><p>确定性规则知识的产生式表示</p><p>巴科斯范式 BNF（backus normal form）</p><ul><li><code>::</code></li><li><code>|</code></li><li><code>[]</code></li></ul>',20)]))}const c=t(a,[["render",o],["__file","2. 谓词.html.vue"]]),d=JSON.parse(`{"path":"/education/bs/ai-tech/2.%20%E8%B0%93%E8%AF%8D.html","title":"知识表示与知识图谱","lang":"en-US","frontmatter":{"description":"知识表示与知识图谱 2.1 知识与知识表示的概念 2.2 一阶谓词逻辑表示法 2.3 产生式表示法 2.4 框架表示法 2.5 知识图谱 知识的特征 相对正确性 不确定性 可表示性与可利用性 一阶谓词逻辑表示法 命题 谓词 谓词的一般形式： P (x1, x2,…, xn) 个体 x1, x2,…, xn ：某个独立存在的事物或者某个抽象的概念； 谓词...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/education/bs/ai-tech/2.%20%E8%B0%93%E8%AF%8D.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"知识表示与知识图谱"}],["meta",{"property":"og:description","content":"知识表示与知识图谱 2.1 知识与知识表示的概念 2.2 一阶谓词逻辑表示法 2.3 产生式表示法 2.4 框架表示法 2.5 知识图谱 知识的特征 相对正确性 不确定性 可表示性与可利用性 一阶谓词逻辑表示法 命题 谓词 谓词的一般形式： P (x1, x2,…, xn) 个体 x1, x2,…, xn ：某个独立存在的事物或者某个抽象的概念； 谓词..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-09T03:55:12.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-09T03:55:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"知识表示与知识图谱\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-09T03:55:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":2,"title":"一阶谓词逻辑表示法","slug":"一阶谓词逻辑表示法","link":"#一阶谓词逻辑表示法","children":[{"level":3,"title":"命题","slug":"命题","link":"#命题","children":[]},{"level":3,"title":"谓词","slug":"谓词","link":"#谓词","children":[]},{"level":3,"title":"谓词公式","slug":"谓词公式","link":"#谓词公式","children":[]}]},{"level":2,"title":"产生式表示法","slug":"产生式表示法","link":"#产生式表示法","children":[{"level":3,"title":"产生式","slug":"产生式","link":"#产生式","children":[]}]}],"git":{"createdTime":1675410392000,"updatedTime":1731124512000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro-3.local","commits":1}]},"readingTime":{"minutes":0.84,"words":253},"filePathRelative":"education/bs/ai-tech/2. 谓词.md","localizedDate":"February 3, 2023","excerpt":"\\n<p><strong>2.1</strong> 知识与知识表示的概念</p>\\n<p><strong>2.2</strong> 一阶谓词逻辑表示法</p>\\n<p><strong>2.3</strong> 产生式表示法</p>\\n<p><strong>2.4</strong> 框架表示法</p>\\n<p><strong>2.5</strong> 知识图谱</p>\\n<p>知识的特征</p>\\n<ul>\\n<li>相对正确性</li>\\n<li>不确定性</li>\\n<li>可表示性与可利用性</li>\\n</ul>\\n<h2>一阶谓词逻辑表示法</h2>\\n<h3>命题</h3>\\n<h3>谓词</h3>\\n<p>谓词的一般形式： P (x1, x2,…, xn)</p>","autoDesc":true}`);export{c as comp,d as data};
