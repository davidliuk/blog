import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as e,o as p}from"./app-wjKRSZHj.js";const t={};function o(a,i){return p(),l("div",null,i[0]||(i[0]=[e('<h1 id="quick" tabindex="-1"><a class="header-anchor" href="#quick"><span>Quick</span></a></h1><p>时间复杂度低于 On 的算法</p><ol><li><p>Ologn 类</p><ol><li><p>二分法</p></li><li><p>倍增法</p><ol><li><p>快速幂</p><p>a^n % b</p><ul><li>递归写法</li><li>非递归：用二进制</li></ul></li><li><p>LCA</p></li><li><p>ST表</p></li></ol></li><li><p>gcd</p></li></ol></li><li><p>On0.5 类</p><ol><li><p>分解质因数/判断质数</p></li><li><p>分块检索法</p><p>将长度为 N 的区间分成 √N 的大小的小区间</p><p>总共 √N 个小区间，每个小区间统计局部的数据</p><p>因此在这些区间中进行增删查改的效率是 O(√N)</p></li></ol></li></ol>',3)]))}const d=n(t,[["render",o],["__file","quick.html.vue"]]),u=JSON.parse(`{"path":"/algo/faq/quick.html","title":"Quick","lang":"en-US","frontmatter":{"description":"Quick 时间复杂度低于 On 的算法 Ologn 类 二分法 倍增法 快速幂 a^n % b 递归写法 非递归：用二进制 LCA ST表 gcd On0.5 类 分解质因数/判断质数 分块检索法 将长度为 N 的区间分成 √N 的大小的小区间 总共 √N 个小区间，每个小区间统计局部的数据 因此在这些区间中进行增删查改的效率是 O(√N)","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/algo/faq/quick.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"Quick"}],["meta",{"property":"og:description","content":"Quick 时间复杂度低于 On 的算法 Ologn 类 二分法 倍增法 快速幂 a^n % b 递归写法 非递归：用二进制 LCA ST表 gcd On0.5 类 分解质因数/判断质数 分块检索法 将长度为 N 的区间分成 √N 的大小的小区间 总共 √N 个小区间，每个小区间统计局部的数据 因此在这些区间中进行增删查改的效率是 O(√N)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-23T18:37:42.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-23T18:37:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Quick\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-23T18:37:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[],"git":{"createdTime":1732244737000,"updatedTime":1732387062000,"contributors":[{"name":"David Liu","email":"liudawei@seas.upenn.edu","commits":2}]},"readingTime":{"minutes":0.42,"words":125},"filePathRelative":"algo/faq/quick.md","localizedDate":"November 22, 2024","excerpt":"\\n<p>时间复杂度低于 On 的算法</p>\\n<ol>\\n<li>\\n<p>Ologn 类</p>\\n<ol>\\n<li>\\n<p>二分法</p>\\n</li>\\n<li>\\n<p>倍增法</p>\\n<ol>\\n<li>\\n<p>快速幂</p>\\n<p>a^n % b</p>\\n<ul>\\n<li>递归写法</li>\\n<li>非递归：用二进制</li>\\n</ul>\\n</li>\\n<li>\\n<p>LCA</p>\\n</li>\\n<li>\\n<p>ST表</p>\\n</li>\\n</ol>\\n</li>\\n<li>\\n<p>gcd</p>\\n</li>\\n</ol>\\n</li>\\n<li>\\n<p>On0.5 类</p>\\n<ol>\\n<li>\\n<p>分解质因数/判断质数</p>\\n</li>\\n<li>\\n<p>分块检索法</p>\\n<p>将长度为 N 的区间分成 √N 的大小的小区间</p>\\n<p>总共 √N 个小区间，每个小区间统计局部的数据</p>\\n<p>因此在这些区间中进行增删查改的效率是 O(√N)</p>\\n</li>\\n</ol>\\n</li>\\n</ol>","autoDesc":true}`);export{d as comp,u as data};
