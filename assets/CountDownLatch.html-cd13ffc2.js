const n=JSON.parse(`{"key":"v-17bd49c5","path":"/se/lang/java/JUC/aqs/sync/CountDownLatch.html","title":"CountDownLatch","lang":"en-US","frontmatter":{"description":"CountDownLatch 减小计数，构造方法设置初始值，然后可以使用countDown方法使计数器每次减一 await方法，在不为0时，阻塞线程，等到计数器变成0时唤醒线程，继续执行 方法 countDown，使计数器每次减一（调用这个方法的线程不会阻塞） await，在不为0时，阻塞线程，等到变成0时唤醒线程，继续执行 例子 生活场景 6个同学陆续离开教师后，班长才可以锁门 // 6个同学陆续离开教师后，班长才可以锁门 public static void main(String[] args) throws InterruptedException { CountDownLatch latch = new CountDownLatch(6); for (int i = 0; i &lt; 6; i++) { new Thread(() -&gt; { System.out.println(Thread.currentThread().getName() + \\"号同学离开了教室\\"); // 计数器减一 latch.countDown(); }, String.valueOf(i + 1)).start(); } // 等待 latch.await(); System.out.println(Thread.currentThread().getName() + \\"班长锁门了\\"); }","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/lang/java/JUC/aqs/sync/CountDownLatch.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"CountDownLatch"}],["meta",{"property":"og:description","content":"CountDownLatch 减小计数，构造方法设置初始值，然后可以使用countDown方法使计数器每次减一 await方法，在不为0时，阻塞线程，等到计数器变成0时唤醒线程，继续执行 方法 countDown，使计数器每次减一（调用这个方法的线程不会阻塞） await，在不为0时，阻塞线程，等到变成0时唤醒线程，继续执行 例子 生活场景 6个同学陆续离开教师后，班长才可以锁门 // 6个同学陆续离开教师后，班长才可以锁门 public static void main(String[] args) throws InterruptedException { CountDownLatch latch = new CountDownLatch(6); for (int i = 0; i &lt; 6; i++) { new Thread(() -&gt; { System.out.println(Thread.currentThread().getName() + \\"号同学离开了教室\\"); // 计数器减一 latch.countDown(); }, String.valueOf(i + 1)).start(); } // 等待 latch.await(); System.out.println(Thread.currentThread().getName() + \\"班长锁门了\\"); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-23T13:33:44.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-23T13:33:44.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/se/lang/java/JUC/aqs/sync/CountDownLatch.html"}]]},"headers":[{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[{"level":3,"title":"生活场景","slug":"生活场景","link":"#生活场景","children":[]},{"level":3,"title":"工作场景","slug":"工作场景","link":"#工作场景","children":[]}]}],"git":{"createdTime":1679578424000,"updatedTime":1679578424000,"contributors":[{"name":"davidliuk","email":"l729641074@163.com","commits":1}]},"readingTime":{"minutes":0.9,"words":271},"localizedDate":"March 23, 2023","filePathRelative":"se/lang/java/JUC/aqs/sync/CountDownLatch.md","excerpt":"<h1> CountDownLatch</h1>\\n<p>减小计数，构造方法设置初始值，然后可以使用countDown方法使计数器每次减一</p>\\n<p>await方法，在不为0时，阻塞线程，等到计数器变成0时唤醒线程，继续执行</p>\\n<p>方法</p>\\n<ul>\\n<li>countDown，使计数器每次减一（调用这个方法的线程不会阻塞）</li>\\n<li>await，在不为0时，阻塞线程，等到变成0时唤醒线程，继续执行</li>\\n</ul>\\n<h2> 例子</h2>\\n<h3> 生活场景</h3>\\n<p>6个同学陆续离开教师后，班长才可以锁门</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token comment\\">// 6个同学陆续离开教师后，班长才可以锁门</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> args<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">throws</span> <span class=\\"token class-name\\">InterruptedException</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name\\">CountDownLatch</span> latch <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">CountDownLatch</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">6</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">6</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Thread</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-&gt;</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Thread</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">currentThread</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"号同学离开了教室\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token comment\\">// 计数器减一</span>\\n            latch<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">countDown</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">valueOf</span><span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">start</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 等待</span>\\n    latch<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">await</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Thread</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">currentThread</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"班长锁门了\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
