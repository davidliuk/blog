const e=JSON.parse(`{"key":"v-1ba58f10","path":"/algo/%E6%80%BB%E7%BB%93/11.%20BFS.html","title":"","lang":"en-US","frontmatter":{"description":"BFS适用场景 1. 分层遍历 一层一层的遍历一个图、树、矩阵; 简单图最短路径（边长都为1）; 2. 连通块问题 连通图中一个点找到其他所有连通的点; 找到所有方案问题的一种非递归实现方式; 3. 拓扑排序 实现容易度远超过DFS; BFS的三种实现方式 通过二叉树层次遍历为例 单队列 实现最简单和标准 截屏2022-07-11 10.22.38 双...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/algo/%E6%80%BB%E7%BB%93/11.%20BFS.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:description","content":"BFS适用场景 1. 分层遍历 一层一层的遍历一个图、树、矩阵; 简单图最短路径（边长都为1）; 2. 连通块问题 连通图中一个点找到其他所有连通的点; 找到所有方案问题的一种非递归实现方式; 3. 拓扑排序 实现容易度远超过DFS; BFS的三种实现方式 通过二叉树层次遍历为例 单队列 实现最简单和标准 截屏2022-07-11 10.22.38 双..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-11-29T07:31:21.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-11-29T07:31:21.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/algo/%E6%80%BB%E7%BB%93/11.%20BFS.html"}]]},"excerpt":"","headers":[{"level":3,"title":"BFS适用场景","slug":"bfs适用场景","link":"#bfs适用场景","children":[]},{"level":3,"title":"BFS的三种实现方式","slug":"bfs的三种实现方式","link":"#bfs的三种实现方式","children":[]}],"git":{"createdTime":1669707081000,"updatedTime":1669707081000,"contributors":[{"name":"DavidLiu","email":"l729641074@163.com","commits":1}]},"readingTime":{"minutes":1.04,"words":312},"filePathRelative":"algo/总结/11. BFS.md","localizedDate":"November 29, 2022"}`);export{e as data};
