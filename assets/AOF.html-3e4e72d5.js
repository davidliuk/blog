import{_ as e,V as a,W as i,a0 as n}from"./framework-705b829b.js";const t={},c=n(`<h1 id="aof" tabindex="-1"><a class="header-anchor" href="#aof" aria-hidden="true">#</a> AOF</h1><p>Append Only File (追加文件）。</p><p>写后日志</p><p>说到日志，我们比较熟悉的是数据库的写前日志（Write Ahead Log, WAL），也就是说，在实际写数据前，先把修改的数据记到日志文件中，以便故障时进行恢复。不过，AOF 日志正好相反，它是写后日志，“写后”的意思是 Redis 是先执行命令，把数据写入内存，然后才记录日志，如下图所示：</p><p>那 AOF 为什么要先执行命令再记日志呢？要回答这个问题，我们要先知道 AOF 里记录了什么内容。</p><ul><li>可以避免出现记录错误命令的情况。</li><li>它是在命令执行后才记录日志，所以不会阻塞当前的写操作。</li></ul><p>复制时机</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-02-16 20.40.43.png" alt="截屏2023-02-16 20.40.43" loading="lazy"></p><p>有冗余记录，文件占用体积比RDB大得多。</p><p>解决方案：bgrewriteaof命令，可以让aof重写，只需要最少的内容即可达到一样的效果</p><p>触发时机设置</p><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code>auto-aof-rewrite-percentage
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,12),o=[c];function l(r,s){return a(),i("div",null,o)}const d=e(t,[["render",l],["__file","AOF.html.vue"]]);export{d as default};
