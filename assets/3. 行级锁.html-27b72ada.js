import{_ as a,V as n,W as e,a0 as s}from"./framework-705b829b.js";const l={},o=s(`<h1 id="行级锁" tabindex="-1"><a class="header-anchor" href="#行级锁" aria-hidden="true">#</a> 行级锁</h1><p>操作锁住对应的行数据，锁定粒度最小，发生锁冲突的概率最低</p><h3 id="分类" tabindex="-1"><a class="header-anchor" href="#分类" aria-hidden="true">#</a> 分类</h3><p>对于行级锁，主要分为以下三类：</p><ul><li><p>行锁 Record Lock</p></li><li><p>间隙锁 Gap Lock</p></li><li><p>临键锁 next-key lock</p><p>=行锁 + 间隙锁</p></li></ul><h3 id="行锁" tabindex="-1"><a class="header-anchor" href="#行锁" aria-hidden="true">#</a> 行锁</h3><p>InnoDB实现了以下两种类型的行锁：</p><ol><li>共享锁（S）：允许一个事务去读一行，阻止其他事物获得相同数据集的排他锁</li><li>排他锁（X）：允许获取排他锁的事物更新数据，阻止其他事物获取相同数据集的共享锁和排他锁</li></ol><p>共享锁于共享锁直接兼容，其他情况均冲突</p><p>执行SQL时的锁：</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-02 23.57.41.png" alt="截屏2023-01-02 23.57.41" loading="lazy"></p><p>默认情况下，InnoDB在RR事物隔离级别运行，InnoDB使用next-key锁进行搜索和索引扫描，以防止幻读。</p><ol><li>针对唯一索引进行检索时，对以存在的记录进行等值匹配时，将会自动优化为行锁。</li><li>InnoDB的行锁是针对于索引加的锁，不通过索引条件检索数据，那么InnoDB将对表中所有的记录加锁，此时就会升级为表锁。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> object_schema<span class="token punctuation">,</span> object_name<span class="token punctuation">,</span> index_name<span class="token punctuation">,</span> lock_type<span class="token punctuation">,</span> lock_mode<span class="token punctuation">,</span> lock_data <span class="token keyword">from</span> performance_schema<span class="token punctuation">.</span>data_locks
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="间隙锁-临键锁" tabindex="-1"><a class="header-anchor" href="#间隙锁-临键锁" aria-hidden="true">#</a> 间隙锁/临键锁</h3><p>间隙锁是锁住两个元素中间一个空隙的共享锁（目的：防止别的事物在间隙插入出现幻读现象）</p><p>默认情况下，InnoDB在RR事物隔离级别运行，InnoDB使用next-key锁进行搜索和索引扫描，以防止幻读。</p><ol><li>索引上的等值查询（唯一索引），给不存在的记录加锁时，优化为间隙锁。</li><li>索引上的等值查询（普通索引），向呦遍历时，最后一个值不满足查询需求时，next-key lock退化成间隙锁。</li><li>索引上的范围查询（唯一索引），会访问到不满足条件的第一个值为止。（会加上对应的临键锁）</li></ol>`,18),i=[o];function t(c,p){return n(),e("div",null,i)}const r=a(l,[["render",t],["__file","3. 行级锁.html.vue"]]);export{r as default};
