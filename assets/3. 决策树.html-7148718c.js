const e=JSON.parse(`{"key":"v-2aeb94c0","path":"/course/deep-learning/3.%20%E5%86%B3%E7%AD%96%E6%A0%91.html","title":"Decision Tree 决策树","lang":"en-US","frontmatter":{"description":"Decision Tree 决策树 决策树是一种用于分类和回归任务的非参数监督学习算法。它是一种分层树形结构，由根节点、分支、内部节点和叶节点组成。每个内部节点表示一个属性上的测试，每个分支代表一个测试输出，每个叶节点代表一种类别。 构造 剪枝 剪枝是指在决策树构造过程中，对每个节点在划分前后计算信息增益，若划分后的信息增益小于划分前，则不对该节点进行划分，即把该节点变为叶节点。 可以防止过拟合。 预剪枝","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/course/deep-learning/3.%20%E5%86%B3%E7%AD%96%E6%A0%91.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"Decision Tree 决策树"}],["meta",{"property":"og:description","content":"Decision Tree 决策树 决策树是一种用于分类和回归任务的非参数监督学习算法。它是一种分层树形结构，由根节点、分支、内部节点和叶节点组成。每个内部节点表示一个属性上的测试，每个分支代表一个测试输出，每个叶节点代表一种类别。 构造 剪枝 剪枝是指在决策树构造过程中，对每个节点在划分前后计算信息增益，若划分后的信息增益小于划分前，则不对该节点进行划分，即把该节点变为叶节点。 可以防止过拟合。 预剪枝"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-11-22T09:56:03.000Z"}],["meta",{"property":"article:author","content":"David Liu"}],["meta",{"property":"article:modified_time","content":"2023-11-22T09:56:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Decision Tree 决策树\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-22T09:56:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":3,"title":"构造","slug":"构造","link":"#构造","children":[]},{"level":3,"title":"剪枝","slug":"剪枝","link":"#剪枝","children":[]},{"level":3,"title":"信息增益（ID3算法）：","slug":"信息增益-id3算法","link":"#信息增益-id3算法","children":[]},{"level":3,"title":"信息增益比（C4.5算法）：","slug":"信息增益比-c4-5算法","link":"#信息增益比-c4-5算法","children":[]},{"level":3,"title":"CART算法","slug":"cart算法","link":"#cart算法","children":[]}],"git":{"createdTime":1686210114000,"updatedTime":1700646963000,"contributors":[{"name":"davidliu","email":"liudawei47@jd.com","commits":1},{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":1.58,"words":474},"filePathRelative":"course/deep-learning/3. 决策树.md","localizedDate":"June 8, 2023","excerpt":"<h1> Decision Tree 决策树</h1>\\n<p>决策树是一种用于分类和回归任务的非参数监督学习算法。它是一种分层树形结构，由<strong>根节点、分支、内部节点和叶节点</strong>组成。每个内部节点表示一个属性上的测试，每个分支代表一个测试输出，每个叶节点代表一种类别。</p>\\n<h3> 构造</h3>\\n<h3> 剪枝</h3>\\n<p>剪枝是指在决策树构造过程中，对每个节点在划分前后计算信息增益，若划分后的信息增益小于划分前，则不对该节点进行划分，即把该节点变为叶节点。</p>\\n<blockquote>\\n<p>可以防止过拟合。</p>\\n</blockquote>\\n<h4> 预剪枝</h4>","autoDesc":true}`);export{e as data};
