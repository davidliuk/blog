const e=JSON.parse(`{"key":"v-561de50c","path":"/cs/algo/summary/5.%20%E6%8E%92%E5%BA%8F.html","title":"","lang":"en-US","frontmatter":{"description":"快速排序 partition算法 分治算法：整体有序再局部有序 取pivot，经验下选择中点是最好的 1,1,1,3 1 - 1 \\\\+ - + 中心点只能是严格大或严格小才++--，等于的时候要交换，不然的话如果是全部相等的序列每次都不变 必须是left","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/algo/summary/5.%20%E6%8E%92%E5%BA%8F.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:description","content":"快速排序 partition算法 分治算法：整体有序再局部有序 取pivot，经验下选择中点是最好的 1,1,1,3 1 - 1 \\\\+ - + 中心点只能是严格大或严格小才++--，等于的时候要交换，不然的话如果是全部相等的序列每次都不变 必须是left"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-04T02:34:19.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-04T02:34:19.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/cs/algo/summary/5.%20%E6%8E%92%E5%BA%8F.html"}]]},"excerpt":"","headers":[{"level":3,"title":"快速排序","slug":"快速排序","link":"#快速排序","children":[]},{"level":3,"title":"归并排序","slug":"归并排序","link":"#归并排序","children":[]},{"level":3,"title":"快速选择","slug":"快速选择","link":"#快速选择","children":[]}],"git":{"createdTime":1670121259000,"updatedTime":1670121259000,"contributors":[{"name":"DavidLiu","email":"l729641074@163.com","commits":1}]},"readingTime":{"minutes":2.13,"words":638},"filePathRelative":"cs/algo/summary/5. 排序.md","localizedDate":"December 4, 2022"}`);export{e as data};
