import{_ as l,V as i,W as e,Z as t}from"./framework-e5d7a6b2.js";const c={},o=t('<h1 id="list-类型" tabindex="-1"><a class="header-anchor" href="#list-类型" aria-hidden="true">#</a> List 类型</h1><p>类似 LinkedList，可以看做一个双向链表</p><p>特征：</p><ul><li>有序</li><li>元素可以重复</li><li>插入和删除快</li><li>查询速度一般</li></ul><p>常用来存储一个有序数据，例如：朋友圈点赞列表，评论列表等。</p><h2 id="常见命令" tabindex="-1"><a class="header-anchor" href="#常见命令" aria-hidden="true">#</a> 常见命令</h2><ul><li><code>lpush</code> 向列表左侧插入一个或多个元素</li><li><code>lpop</code> 移除并返回列表左侧的第一个</li><li><code>rpush</code> 向列表右侧插入一个或多个元素</li><li><code>rpop</code> 移除并返回列表右侧的第一个元素</li><li><code>Lrange</code> key start end</li><li><code>BLPOP</code> 会阻塞指定时间，等到有元素了再 pop</li><li><code>BRPOP</code> 会阻塞指定时间</li></ul><p>如何利用 List 结构模拟一个栈?</p><ul><li>入口和出口在同一边</li></ul><p>如何利用 List 结构模拟一个队列?</p><ul><li>入口和出口在不同边</li></ul><p>如何利用 List 结构模拟一个阻塞队列?</p><ul><li>入口和出口在不同边</li><li>出队时采用 BLPOP 或 BRPOP</li></ul>',13),d=[o];function s(a,r){return i(),e("div",null,d)}const n=l(c,[["render",s],["__file","list.html.vue"]]);export{n as default};
