import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a,o as l}from"./app-CGXHKXsa.js";const e={};function p(t,s){return l(),n("div",null,s[0]||(s[0]=[a(`<h1 id="diffusion-large-language-model" tabindex="-1"><a class="header-anchor" href="#diffusion-large-language-model"><span>Diffusion Large Language Model</span></a></h1><p>相比于LLM AR(Auto-Regression)</p><p><a href="https://deepmind.google/models/gemini-diffusion/#what-is-a-diffusion-model" target="_blank" rel="noopener noreferrer">Gemini Diffusion</a></p><p><a href="https://ml-gsai.github.io/LLaDA-demo/" target="_blank" rel="noopener noreferrer">LLaDA</a></p><p>LLaDA-V</p><p><a href="https://github.com/Gen-Verse/MMaDA" target="_blank" rel="noopener noreferrer">MMaDA</a>, Princeton, SEED</p><p><a href="http://arxiv.org/abs/2505.22618" target="_blank" rel="noopener noreferrer">Fast-dllm</a>, NVIDIA：引入KV-Cache</p><p>速度很快，但是效果一般</p><p>Traditional autoregressive language models generate text one word – or token – at a time. This sequential process can be slow, and limit the quality and coherence of the output.</p><p>Diffusion models work differently. Instead of predicting text directly, they learn to generate outputs by refining noise, step-by-step. This means they can iterate on a solution very quickly and error correct during the generation process. This helps them excel at tasks like editing, including in the context of math and code.</p><p>缺点</p><ul><li>无 Cache</li><li>定长</li></ul><p>变长思路：Block Diffusion</p><hr><ul><li></li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cat </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> simple_dataset_download.py </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;EOF&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> os</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> subprocess</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> time</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置环境</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">os.environ[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;HF_ENDPOINT&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;https://hf-mirror.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">os.environ[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;HF_HOME&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;/root/autodl-tmp/cache/&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">os.environ[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;CUDA_VISIBLE_DEVICES&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 无GPU模式</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> trigger_dataset_download</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">task_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;触发数据集下载&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=== 触发 </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">task_name</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 数据集下载 ===&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    cmd </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;python&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;-m&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;lmms_eval&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;--tasks&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, task_name,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;--limit&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;1&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;--verbosity&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;DEBUG&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 运行命令但预期会失败（因为没有模型），但会触发数据下载</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> subprocess.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            cmd,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">            cwd</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;./eval&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">            timeout</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">180</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 3分钟超时</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">            capture_output</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">            text</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 检查输出中是否有下载信息</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> any</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(keyword </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> result.stdout.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">lower</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> result.stderr.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">lower</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">               for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> keyword </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;downloading&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;download&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;fetching&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">            print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;✓ </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">task_name</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 触发了数据下载&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">            print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;⚠ </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">task_name</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 可能已缓存或下载失败&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    except</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> subprocess.TimeoutExpired:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;⚠ </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">task_name</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 超时，但可能已开始下载&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    except</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;"> Exception</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> e:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;❌ </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">task_name</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 出错: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    tasks </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;mme&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;vqav2_val_lite&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;mmbench_en_dev_lite&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;textvqa_val&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;docvqa_val&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;chartqa_lite&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;infovqa_val_lite&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;scienceqa_full&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;ai2d&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;coco2017_cap_val_lite&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;mathverse_testmini_vision_dominant&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;mathvista_testmini_format&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;🚀 开始触发数据集下载...&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i, task </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> enumerate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tasks):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">进度: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tasks)</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">        trigger_dataset_download</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(task)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 等待10秒再下载下一个</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">✅ 所有数据集下载触发完成!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;请检查 /root/autodl-tmp/cache/ 目录查看下载的数据&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;__main__&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cd ~/diffusion_lm/LaViDa</span></span>
<span class="line"><span></span></span>
<span class="line"><span>cat &gt; download_eval_datasets.py &lt;&lt; &#39;EOF&#39;</span></span>
<span class="line"><span>import os</span></span>
<span class="line"><span>import sys</span></span>
<span class="line"><span>import subprocess</span></span>
<span class="line"><span>from pathlib import Path</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 设置环境变量</span></span>
<span class="line"><span>os.environ[&#39;HF_ENDPOINT&#39;] = &#39;https://hf-mirror.com&#39;</span></span>
<span class="line"><span>os.environ[&#39;HF_HOME&#39;] = &#39;/root/autodl-tmp/cache/&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 添加eval路径</span></span>
<span class="line"><span>sys.path.append(&#39;./eval&#39;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>def setup_environment():</span></span>
<span class="line"><span>    &quot;&quot;&quot;设置评测环境&quot;&quot;&quot;</span></span>
<span class="line"><span>    print(&quot;=== 设置评测环境 ===&quot;)</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    # 创建必要的目录</span></span>
<span class="line"><span>    os.makedirs(&#39;/root/autodl-tmp/cache/datasets&#39;, exist_ok=True)</span></span>
<span class="line"><span>    os.makedirs(&#39;./logs&#39;, exist_ok=True)</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    print(&quot;✓ 环境设置完成&quot;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>def download_dataset_with_lmms_eval(task_name):</span></span>
<span class="line"><span>    &quot;&quot;&quot;使用lmms_eval下载单个数据集&quot;&quot;&quot;</span></span>
<span class="line"><span>    print(f&quot;\\n=== 下载数据集: {task_name} ===&quot;)</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    try:</span></span>
<span class="line"><span>        # 使用lmms_eval的--download_only模式（如果支持）</span></span>
<span class="line"><span>        cmd = [</span></span>
<span class="line"><span>            &#39;python&#39;, &#39;-m&#39;, &#39;lmms_eval&#39;,</span></span>
<span class="line"><span>            &#39;--model&#39;, &#39;llava_llada&#39;,</span></span>
<span class="line"><span>            &#39;--model_args&#39;, &#39;pretrained=dummy&#39;,  # 虚拟模型路径</span></span>
<span class="line"><span>            &#39;--tasks&#39;, task_name,</span></span>
<span class="line"><span>            &#39;--limit&#39;, &#39;1&#39;,  # 只处理1个样本来触发数据集下载</span></span>
<span class="line"><span>            &#39;--verbosity&#39;, &#39;INFO&#39;</span></span>
<span class="line"><span>        ]</span></span>
<span class="line"><span>        </span></span>
<span class="line"><span>        # 设置环境变量</span></span>
<span class="line"><span>        env = os.environ.copy()</span></span>
<span class="line"><span>        env[&#39;CUDA_VISIBLE_DEVICES&#39;] = &#39;&#39;  # 无GPU模式</span></span>
<span class="line"><span>        </span></span>
<span class="line"><span>        result = subprocess.run(</span></span>
<span class="line"><span>            cmd, </span></span>
<span class="line"><span>            capture_output=True, </span></span>
<span class="line"><span>            text=True, </span></span>
<span class="line"><span>            env=env,</span></span>
<span class="line"><span>            cwd=&#39;./eval&#39;,</span></span>
<span class="line"><span>            timeout=300  # 5分钟超时</span></span>
<span class="line"><span>        )</span></span>
<span class="line"><span>        </span></span>
<span class="line"><span>        if result.returncode == 0 or &quot;Downloading&quot; in result.stdout:</span></span>
<span class="line"><span>            print(f&quot;✓ {task_name} 数据集下载成功&quot;)</span></span>
<span class="line"><span>            return True</span></span>
<span class="line"><span>        else:</span></span>
<span class="line"><span>            print(f&quot;⚠ {task_name} 下载可能有问题，但继续...&quot;)</span></span>
<span class="line"><span>            print(f&quot;输出: {result.stdout[-200:]}&quot;)  # 显示最后200字符</span></span>
<span class="line"><span>            return False</span></span>
<span class="line"><span>            </span></span>
<span class="line"><span>    except subprocess.TimeoutExpired:</span></span>
<span class="line"><span>        print(f&quot;⚠ {task_name} 下载超时，但数据可能已部分下载&quot;)</span></span>
<span class="line"><span>        return False</span></span>
<span class="line"><span>    except Exception as e:</span></span>
<span class="line"><span>        print(f&quot;❌ {task_name} 下载失败: {e}&quot;)</span></span>
<span class="line"><span>        return False</span></span>
<span class="line"><span></span></span>
<span class="line"><span>def download_datasets_manually():</span></span>
<span class="line"><span>    &quot;&quot;&quot;手动下载常见数据集&quot;&quot;&quot;</span></span>
<span class="line"><span>    print(&quot;\\n=== 手动下载常见数据集 ===&quot;)</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    datasets_to_download = [</span></span>
<span class="line"><span>        &#39;coco/annotations_train2017.json&#39;,</span></span>
<span class="line"><span>        &#39;coco/annotations_val2017.json&#39;,</span></span>
<span class="line"><span>    ]</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    from huggingface_hub import hf_hub_download</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    for dataset in datasets_to_download:</span></span>
<span class="line"><span>        try:</span></span>
<span class="line"><span>            print(f&quot;下载 {dataset}...&quot;)</span></span>
<span class="line"><span>            # 这里可以添加具体的数据集下载逻辑</span></span>
<span class="line"><span>        except Exception as e:</span></span>
<span class="line"><span>            print(f&quot;⚠ {dataset} 下载失败: {e}&quot;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>def main():</span></span>
<span class="line"><span>    &quot;&quot;&quot;主函数&quot;&quot;&quot;</span></span>
<span class="line"><span>    print(&quot;🚀 开始预下载评测数据集...&quot;)</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    # 任务列表（从run.sh提取）</span></span>
<span class="line"><span>    tasks = [</span></span>
<span class="line"><span>        &quot;mme&quot;,</span></span>
<span class="line"><span>        &quot;vqav2_val_lite&quot;, </span></span>
<span class="line"><span>        &quot;mmbench_en_dev_lite&quot;,</span></span>
<span class="line"><span>        &quot;textvqa_val&quot;,</span></span>
<span class="line"><span>        &quot;docvqa_val&quot;, </span></span>
<span class="line"><span>        &quot;chartqa_lite&quot;,</span></span>
<span class="line"><span>        &quot;infovqa_val_lite&quot;,</span></span>
<span class="line"><span>        &quot;scienceqa_full&quot;,</span></span>
<span class="line"><span>        &quot;ai2d&quot;,</span></span>
<span class="line"><span>        &quot;coco2017_cap_val_lite&quot;,</span></span>
<span class="line"><span>        &quot;mathverse_testmini_vision_dominant&quot;,</span></span>
<span class="line"><span>        &quot;mathvista_testmini_format&quot;</span></span>
<span class="line"><span>    ]</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    setup_environment()</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    # 下载每个数据集</span></span>
<span class="line"><span>    successful_downloads = 0</span></span>
<span class="line"><span>    for i, task in enumerate(tasks):</span></span>
<span class="line"><span>        print(f&quot;\\n进度: {i+1}/{len(tasks)}&quot;)</span></span>
<span class="line"><span>        if download_dataset_with_lmms_eval(task):</span></span>
<span class="line"><span>            successful_downloads += 1</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    print(f&quot;\\n=== 下载完成 ===&quot;)</span></span>
<span class="line"><span>    print(f&quot;成功下载: {successful_downloads}/{len(tasks)} 个数据集&quot;)</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    # 检查下载的数据</span></span>
<span class="line"><span>    check_downloaded_data()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>def check_downloaded_data():</span></span>
<span class="line"><span>    &quot;&quot;&quot;检查已下载的数据&quot;&quot;&quot;</span></span>
<span class="line"><span>    print(&quot;\\n=== 检查已下载的数据 ===&quot;)</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    cache_dirs = [</span></span>
<span class="line"><span>        &#39;/root/autodl-tmp/cache/&#39;,</span></span>
<span class="line"><span>        &#39;~/.cache/huggingface/&#39;,</span></span>
<span class="line"><span>        &#39;./eval/data/&#39;,</span></span>
<span class="line"><span>        &#39;./data/&#39;</span></span>
<span class="line"><span>    ]</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    for cache_dir in cache_dirs:</span></span>
<span class="line"><span>        expanded_dir = os.path.expanduser(cache_dir)</span></span>
<span class="line"><span>        if os.path.exists(expanded_dir):</span></span>
<span class="line"><span>            size = subprocess.run([&#39;du&#39;, &#39;-sh&#39;, expanded_dir], </span></span>
<span class="line"><span>                                 capture_output=True, text=True)</span></span>
<span class="line"><span>            print(f&quot;{expanded_dir}: {size.stdout.strip()}&quot;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>if __name__ == &quot;__main__&quot;:</span></span>
<span class="line"><span>    main()</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17)]))}const k=i(e,[["render",p],["__file","index.html.vue"]]),r=JSON.parse(`{"path":"/ai/gm/llm/dllm/","title":"Diffusion Large Language Model","lang":"en-US","frontmatter":{"description":"Diffusion Large Language Model 相比于LLM AR(Auto-Regression) Gemini Diffusion LLaDA LLaDA-V MMaDA, Princeton, SEED Fast-dllm, NVIDIA：引入KV-Cache 速度很快，但是效果一般 Traditional autoregressi...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/ai/gm/llm/dllm/"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"Diffusion Large Language Model"}],["meta",{"property":"og:description","content":"Diffusion Large Language Model 相比于LLM AR(Auto-Regression) Gemini Diffusion LLaDA LLaDA-V MMaDA, Princeton, SEED Fast-dllm, NVIDIA：引入KV-Cache 速度很快，但是效果一般 Traditional autoregressi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-10-26T05:16:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-26T05:16:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Diffusion Large Language Model\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-26T05:16:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[],"git":{"createdTime":1755417148000,"updatedTime":1761455781000,"contributors":[{"name":"dawei.liu","email":"dawei.liu@bytedance.com","commits":1}]},"readingTime":{"minutes":2.97,"words":890},"filePathRelative":"ai/gm/llm/dllm/README.md","localizedDate":"August 17, 2025","excerpt":"\\n<p>相比于LLM AR(Auto-Regression)</p>\\n<p><a href=\\"https://deepmind.google/models/gemini-diffusion/#what-is-a-diffusion-model\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Gemini Diffusion</a></p>\\n<p><a href=\\"https://ml-gsai.github.io/LLaDA-demo/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">LLaDA</a></p>\\n<p>LLaDA-V</p>","autoDesc":true}`);export{k as comp,r as data};
