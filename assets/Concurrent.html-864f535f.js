const e=JSON.parse(`{"key":"v-cb799b10","path":"/se/lang/java/collections/Concurrent.html","title":"ConcurrentHashMap","lang":"en-US","frontmatter":{"description":"ConcurrentHashMap Java 8 对Node加锁。 Java8 的 ConcurrentHashMap 相对于 Java7 来说变化比较大，不再是之前的 Segment 数组 + HashEntry 数组 + 链表，而是 Node 数组 + 链表 / 红黑树。当冲突链表达到一定长度时，链表会转换成红黑树。 initTable 从源码中可以发现 ConcurrentHashMap 的初始化是通过自旋和 CAS 操作完成的。里面需要注意的是变量 sizeCtl ，它的值决定着当前的初始化状态。","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/lang/java/collections/Concurrent.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"ConcurrentHashMap"}],["meta",{"property":"og:description","content":"ConcurrentHashMap Java 8 对Node加锁。 Java8 的 ConcurrentHashMap 相对于 Java7 来说变化比较大，不再是之前的 Segment 数组 + HashEntry 数组 + 链表，而是 Node 数组 + 链表 / 红黑树。当冲突链表达到一定长度时，链表会转换成红黑树。 initTable 从源码中可以发现 ConcurrentHashMap 的初始化是通过自旋和 CAS 操作完成的。里面需要注意的是变量 sizeCtl ，它的值决定着当前的初始化状态。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-05T13:59:03.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-05T13:59:03.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/se/lang/java/collections/Concurrent.html"}]]},"headers":[{"level":2,"title":"Java 8","slug":"java-8","link":"#java-8","children":[{"level":3,"title":"initTable","slug":"inittable","link":"#inittable","children":[]}]},{"level":2,"title":"Java 7","slug":"java-7","link":"#java-7","children":[]}],"git":{"createdTime":1677504602000,"updatedTime":1678024743000,"contributors":[{"name":"davidliuk","email":"l729641074@163.com","commits":1},{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":0.85,"words":256},"localizedDate":"February 27, 2023","filePathRelative":"se/lang/java/collections/Concurrent.md","excerpt":"<h1> ConcurrentHashMap</h1>\\n<h2> Java 8</h2>\\n<p>对Node加锁。</p>\\n<p>Java8 的 ConcurrentHashMap 相对于 Java7 来说变化比较大，不再是之前的 <strong>Segment 数组 + HashEntry 数组 + 链表</strong>，而是 <strong>Node 数组 + 链表 / 红黑树</strong>。当冲突链表达到一定长度时，链表会转换成红黑树。</p>\\n<h3> initTable</h3>\\n<p>从源码中可以发现 <code>ConcurrentHashMap</code> 的初始化是通过<strong>自旋和 CAS</strong> 操作完成的。里面需要注意的是变量 <code>sizeCtl</code> ，它的值决定着当前的初始化状态。</p>","autoDesc":true}`);export{e as data};
