import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as n,a as s,b as a,d as l}from"./app-9107e99b.js";const m={},r=s("h1",{id:"哈希函数",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#哈希函数","aria-hidden":"true"},"#"),a(" 哈希函数")],-1),i=s("h2",{id:"hash函数",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#hash函数","aria-hidden":"true"},"#"),a(" Hash函数")],-1),p=s("p",null,"哈希函数",-1),c=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"H"),s("mo",null,":"),s("mo",{stretchy:"false"},"{"),s("mn",null,"0"),s("mo",{separator:"true"},","),s("mn",null,"1"),s("msup",null,[s("mo",{stretchy:"false"},"}"),s("mo",null,"∗")]),s("mo",null,"→"),s("mo",{stretchy:"false"},"{"),s("mn",null,"0"),s("mo",{separator:"true"},","),s("mn",null,"1"),s("msup",null,[s("mo",{stretchy:"false"},"}"),s("mi",null,"k")]),s("mo",{separator:"true"},","),s("mi",null,"k"),s("mo",null,"∈"),s("msup",null,[s("mi",null,"N"),s("mo",null,"+")])]),s("annotation",{encoding:"application/x-tex"},"H: \\{0,1\\}^*\\rightarrow\\{0,1\\}^k,k\\in N^+")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},":"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"{"),s("span",{class:"mord"},"0"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},[s("span",{class:"mclose"},"}"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6887em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mbin mtight"},"∗")])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0991em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"{"),s("span",{class:"mord"},"0"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},[s("span",{class:"mclose"},"}"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8491em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03148em"}},"k")])])])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7713em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7713em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mbin mtight"},"+")])])])])])])])])])])],-1),h=s("p",null,"可以把任意长度的输入，映射到固定长度上的输出",-1),o=s("p",null,"性质：",-1),d=s("ul",null,[s("li",null,"collision-resistant 抗碰撞"),s("li",null,"hiding 隐藏"),s("li",null,"Puzzle- friendly")],-1),g=s("h3",{id:"collision-resistant-抗碰撞",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#collision-resistant-抗碰撞","aria-hidden":"true"},"#"),a(" collision- resistant 抗碰撞")],-1),u=s("p",null,[a("定义："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"∀"),s("mi",null,"x"),s("mi",{mathvariant:"normal"},"¬"),s("mi",{mathvariant:"normal"},"∃"),s("mi",null,"y"),s("mo",{mathvariant:"normal"},"≠"),s("mi",null,"x"),s("mo",{separator:"true"},","),s("mi",null,"H"),s("mo",{stretchy:"false"},"("),s("mi",null,"x"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mi",null,"H"),s("mo",{stretchy:"false"},"("),s("mi",null,"y"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\forall x\\neg\\exist y\\ne x,H(x)=H(y)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},"∀"),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mord"},"¬∃"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},[s("span",{class:"mrel"},[s("span",{class:"mord vbox"},[s("span",{class:"thinbox"},[s("span",{class:"rlap"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"inner"},[s("span",{class:"mord"},[s("span",{class:"mrel"},"")])]),s("span",{class:"fix"})])])])]),s("span",{class:"mrel"},"=")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mclose"},")")])])])],-1),y=l('<p>即x与H(x)是绑定关系，</p><p>如迅雷文件下面有一个MD5, SHA1, SHA256，来保证下载的文件与上传的文件相同</p><p>牵一发而动全身，任何轻微的改动，都会对MD5值造成重大的改变</p><p>任何大小的文件，都能映射到一个固定长度的字符串上</p><ul><li>用的比较多的就是：SHA-256</li><li>MD、SHA-1被淘汰，被破解了</li></ul><p>hash as message digest 信息摘要，不用担心内容溢出</p><h3 id="hiding-隐藏性" tabindex="-1"><a class="header-anchor" href="#hiding-隐藏性" aria-hidden="true">#</a> Hiding 隐藏性</h3><p>给H(x)很难找到x</p><p>预测股票哪支大涨</p><p>承诺</p><p>让大家看部分，证明确实有答案，但是不能全让看</p><p>知道花钱的事实，但是不知道花了多少钱</p><p>每次给看部分，验证正确性，然后，</p><p>在不让别人知道答案的情况下，证明我知道解法。</p><p><strong>零知识证明 zero-knowledge proof</strong></p><h3 id="puzzle-friendly" tabindex="-1"><a class="header-anchor" href="#puzzle-friendly" aria-hidden="true">#</a> Puzzle- friendly</h3><p>对每个可能输出值y，如果k是</p>',17),x=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"H"),s("mo",{stretchy:"false"},"("),s("mi",null,"k"),s("mi",{mathvariant:"normal"},"∣"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"x"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mi",null,"y")]),s("annotation",{encoding:"application/x-tex"},"H(k||x)=y")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord"},"∣∣"),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y")])])])],-1),k=l(`<p>比特币要求每10分钟出一块</p><p>挖矿x是一个随机数，</p><p>k是父区块的哈希，x是随机数</p><p>难度：t，要求前t位是0</p><p>要求前</p><h2 id="哈希指针和数据结构" tabindex="-1"><a class="header-anchor" href="#哈希指针和数据结构" aria-hidden="true">#</a> 哈希指针和数据结构</h2><p>哈希函数抗碰撞，用哈希函数来作为指针，找到下一位区块</p><p>两类节点</p><ul><li>权节点：需要记录所有的交易信息</li><li>轻节点：只保留一个哈希，这个哈希就可以囊括整个链所有的信息</li></ul><p>根节点哈希值会包含所有</p><p>实验有这个默克尔哈希树，自己构建</p><p>随便选去一个哈希函数，然后可以拿数组实现这个算法</p><p>证明元素不存在于默克尔树的方法：对data排序，就可以看到这个元素是否在里面</p><p>Tree holds many items but just need to remember the root hash</p><p>Can verify membership in O(log n) time/space</p><p>Variant: sorted Merkle tree can verify non-membership in O(log n)</p><p>(show items before, after the missing one)</p><p>操作记录存在data里面，</p><p>merkle tree不可篡改，根节点保留了一个摘要，高度保存了整个数的信息</p><p>如果需要证明一个点存在</p><p>只有hash的摘要，我有整个所有的信息要验证</p><h3 id="验证一个节点存在" tabindex="-1"><a class="header-anchor" href="#验证一个节点存在" aria-hidden="true">#</a> 验证一个节点存在</h3><p>Merkle tree 可以用来验证一个节点是否存在于数据集合中，方法是通过计算这个节点的哈希值，然后与 Merkle tree 的根节点比较¹。具体步骤如下：</p><ol><li>首先，找到这个节点在 Merkle tree 中的位置，也就是它的叶子节点。</li><li>然后，沿着 Merkle tree 向上遍历，每次取出这个节点的兄弟节点（相邻的另一个叶子节点），并与之进行哈希运算，得到一个新的哈希值。</li><li>重复第二步，直到到达根节点，这时得到的哈希值就是 Merkle tree 的根哈希。</li><li>最后，将这个根哈希与给定的 Merkle tree 的根哈希进行比较，如果相同，则说明这个节点存在于数据集合中；如果不同，则说明不存在或者数据被篡改了¹。</li></ol><p>Merkle tree 的优点是可以用很少的信息来验证一个大量的数据³。只需要知道 Merkle tree 的根哈希和一些中间节点的哈希值，就可以验证任意一个叶子节点是否存在³。这样可以节省网络传输和存储空间³。</p><blockquote><p>纪委的项目非常常用这个的技术，数字取证</p></blockquote><h3 id="验证一个节点不存在" tabindex="-1"><a class="header-anchor" href="#验证一个节点不存在" aria-hidden="true">#</a> 验证一个节点不存在</h3><p>验证者只有根节点hash值，试证者有整棵树的内容</p><p>遍历法可以但是是不好的方式，如何优化</p><h4 id="方式一-二叉搜索树" tabindex="-1"><a class="header-anchor" href="#方式一-二叉搜索树" aria-hidden="true">#</a> 方式一：二叉搜索树</h4><p>把叶子结点排序，构造一棵有序的二叉搜索树</p><p>证明节点不存在：</p><ul><li>证明比他小的元素和大的元素存在且相邻，logn</li></ul><p>（这种方法既可以证明存在也可以证明不存在）</p><h4 id="方式二-累加器" tabindex="-1"><a class="header-anchor" href="#方式二-累加器" aria-hidden="true">#</a> 方式二：累加器</h4><p>利用多项式做加密函数，每个节点就是一个根</p><p>且可以有重复元素</p><p>（多重集合）</p><p>很多币就是这样设计的</p><p>统计分析：</p><ul><li>把这个多项式展开，n-1次幂的系数就是交易总合</li><li>除以最高次就是平均额</li></ul><p>可以用hash函数对这个多项式做隐藏，然后实现零知识证明</p><p>没有扩张，只需要给多项式系数即可，没有额外扩张</p><p>merkle tree缺点</p><ul><li>增加很难，又添加高度</li><li>删除很难，后续元素往前填，上层的树需要重构</li></ul><p>比特币是merkle，只能证明存在但是没法做统计分析，只能再有第三方的代理但是很麻烦，也需要有区块链的性质</p><p>块头，块身</p><h3 id="bitcoin数据结构" tabindex="-1"><a class="header-anchor" href="#bitcoin数据结构" aria-hidden="true">#</a> Bitcoin数据结构</h3><p>父区块哈希||MerkleRoot</p><p>一旦验证通过，大家就终止了，这个验证的人就是记账的人</p><p>区块链系统里面，第一块交易就是转给自己的（铸币交易coinbase ）</p><p>清节点只需要保留区块头，下面的交易不需要存</p><p>交易额的0.05%作为奖励，这种不太好，小交易没人记了</p><p>难度值两周调一次</p><p>测验题：</p><p>每十分钟出一个区块，每次有一定奖励，一开始奖励50BTC，后面每4年奖励减少一半，求总的数量（无穷级数</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>4*365*24*60/10*50*2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>21024000块</p><table><thead><tr><th>字节</th><th>字段</th><th>说明</th></tr></thead><tbody><tr><td>4</td><td>版本</td><td>区块版本号，表示本区块遵守的验证规则</td></tr><tr><td>32</td><td>父区块头哈希值</td><td>前一区块的哈希值，使用SHA256(SHA256(父区块头))计算</td></tr><tr><td>32</td><td>Merkle根</td><td>该区块中交易的Merkle树根的哈希值，同样采用SHA256(SHA256())计算</td></tr><tr><td>4</td><td>时间戳</td><td>该区块产生的近似时间，精确到秒的UNIX时间戳，必须严格大于前11个区块时间 的中值，同时全节点也会拒绝那些超出自己2个小时时间戳的区块</td></tr><tr><td>4</td><td>难度目标</td><td><code>该区块工作量证明算法的难度目标，已经使用特定算法编码 </code></td></tr><tr><td>4</td><td>Nonce</td><td>为了找到满足难度目标所设定的随机数，为了解决32位随机数在算力飞升的情况下 不够用的问题，规定时间戳和coinbase交易信息均可更改，以此扩展nonce的位数</td></tr></tbody></table><p>UTXO、工作量证明</p><p>签名的特征：</p><ol><li>不可复制、不可伪造（安全需求）</li><li>认可、个人行为（私钥）</li><li>消息知情（公开）</li><li>公开验证（公钥）</li></ol><h2 id="digital-signature-数字签名" tabindex="-1"><a class="header-anchor" href="#digital-signature-数字签名" aria-hidden="true">#</a> Digital Signature：数字签名</h2><p>过程</p>`,64),_=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"k"),s("mi",null,"e"),s("mi",null,"u"),s("mi",null,"G"),s("mi",null,"e"),s("mi",null,"n"),s("mo",{stretchy:"false"},"("),s("mi",null,"λ"),s("mo",{stretchy:"false"},")"),s("mo",null,"→"),s("mo",{stretchy:"false"},"("),s("mi",null,"p"),s("mi",null,"k"),s("mo",{separator:"true"},","),s("mi",null,"s"),s("mi",null,"k"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"keuGen(\\lambda)\\rightarrow (pk,sk)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"G"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"λ"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mclose"},")")])])]),a("，非确定性算法")],-1),b=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"S"),s("mi",null,"i"),s("mi",null,"g"),s("mi",null,"n"),s("mo",{stretchy:"false"},"("),s("mi",null,"m"),s("mo",{separator:"true"},","),s("mi",null,"s"),s("mi",null,"k"),s("mo",{stretchy:"false"},")"),s("mo",null,"→"),s("mi",null,"σ")]),s("annotation",{encoding:"application/x-tex"},"Sign(m,sk)\\rightarrow \\sigma")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"σ")])])]),a("，非确定性算法")],-1),f=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"V"),s("mi",null,"e"),s("mi",null,"r"),s("mi",null,"i"),s("mi",null,"f"),s("mi",null,"y"),s("mo",{stretchy:"false"},"("),s("mi",null,"σ"),s("mo",{separator:"true"},","),s("mi",null,"s"),s("mi",null,"k"),s("mo",{separator:"true"},","),s("mi",null,"m"),s("mo",{stretchy:"false"},")"),s("mo",null,"→"),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"Verify(\\sigma,sk,m)\\rightarrow 1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.22222em"}},"V"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"σ"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),a("，确定性算法")],-1),v=s("p",null,"缺点：",-1),w=s("ol",null,[s("li",null,[s("p",null,"m越大，计算开销越大"),s("p",null,"解决：对m做哈希，然后将哈希值做Sign")])],-1),M=s("p",null,"比特币用的是ECDSA，椭圆曲线",-1),H=[r,i,p,c,h,o,d,g,u,y,x,k,_,b,f,v,w,M];function z(S,A){return e(),n("div",null,H)}const L=t(m,[["render",z],["__file","4. 哈希函数.html.vue"]]);export{L as default};
