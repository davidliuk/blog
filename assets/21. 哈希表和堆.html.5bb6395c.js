import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as s,f as t}from"./app.7ae2a322.js";const n={},c=t('<p>数据结构类面试问题的三种考法</p><p>考法1：问某种数据结构的基本原理，并要求实现 例题：说一下Hash的原理并实现一个Hash表</p><p>考法2：使用某种数据结构完成事情 例题：归并K个有序数组</p><p>考法3：多个数据结构配合在一起使用，提供一些特定的功能 例题：LRU</p><h3 id="set-hashset" tabindex="-1"><a class="header-anchor" href="#set-hashset" aria-hidden="true">#</a> set / HashSet</h3><p>特点：数据无重复，且无序</p><p>应用：去重，快速查找某数据是否存在</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-08-08 21.11.56.png" alt="截屏2022-08-08 21.11.56" loading="lazy"></p><p>应用：分类计数，存储且快速找到key所对应的value</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-08-08 21.13.48.png" alt="截屏2022-08-08 21.13.48" loading="lazy"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-08-08 21.13.09.png" alt="截屏2022-08-08 21.13.09" loading="lazy"></p><p>链表</p><p>dummy点的作用:</p><p>dummy点为头结点的前一个节点</p><p>如果没有dummy点，头结点就没有前一个节点</p><p>而其他点都有前一个节点，所以需要分类讨论，逻辑复杂</p><p>数据结构设计题</p><p>迅速找到链表中要被删的元素</p><p>用HashMap</p><p>插入和删除ArrayList加速，如果不关心顺序：</p><p>插入只插到末尾O1</p><p>删除中间元素时，把中间元素用末尾元素覆盖，然后删掉末尾O1</p><p>设计LRU Cache</p><p>映射</p><p>LinkedList</p><p>HashMap：keyToPrev</p><p>顺序非常重要，</p><p>有LinkedHashMap（Order），也可以直接用这个</p><p>堆</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-08-08 22.55.36.png" alt="截屏2022-08-08 22.55.36" loading="lazy"></p><p>第n个丑数</p><p>离线算法 vs 在线算法</p><p>普通算法问题，数据结构设计类问题</p><p>数据给定，数据流问题</p><p>一次输入输出，多次输入和输出</p><p>离线找到最小的k个元素</p><p>时空复杂度最低的方法是：最<strong>大</strong>堆</p><p>NlogK，</p><p>在线找到最大的k个元素</p><p>最大的k元素用小堆，最小的k元素用大堆，</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-08-08 23.34.58.png" alt="截屏2022-08-08 23.34.58" loading="lazy"></p>',41),o=[c];function h(i,e){return a(),s("div",null,o)}const r=p(n,[["render",h],["__file","21. 哈希表和堆.html.vue"]]);export{r as default};
