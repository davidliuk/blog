const e=JSON.parse(`{"key":"v-0d277b0b","path":"/cs/database/redis/principal/data-structure/%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B.html","title":"基本类型","lang":"en-US","frontmatter":{"description":"基本类型 五种 String 介绍 String 是最基本的 key-value 结构，key 是唯一标识，value 是具体的值，value其实不仅是字符串， 也可以是数字（整数或浮点数），value 最多可以容纳的数据长度是 512M。 原理 String 类型的底层的数据结构实现主要是 int 和 SDS（简单动态字符串）。 SDS 和我们认识的 C 字符串不太一样，之所以没有使用 C 语言的字符串表示，因为 SDS 相比于 C 的原生字符串：","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/database/redis/principal/data-structure/%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"基本类型"}],["meta",{"property":"og:description","content":"基本类型 五种 String 介绍 String 是最基本的 key-value 结构，key 是唯一标识，value 是具体的值，value其实不仅是字符串， 也可以是数字（整数或浮点数），value 最多可以容纳的数据长度是 512M。 原理 String 类型的底层的数据结构实现主要是 int 和 SDS（简单动态字符串）。 SDS 和我们认识的 C 字符串不太一样，之所以没有使用 C 语言的字符串表示，因为 SDS 相比于 C 的原生字符串："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-05T13:59:03.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-05T13:59:03.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/cs/database/redis/principal/data-structure/%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B.html"}]]},"headers":[{"level":2,"title":"String","slug":"string","link":"#string","children":[{"level":3,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":3,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":3,"title":"场景","slug":"场景","link":"#场景","children":[]}]},{"level":2,"title":"List","slug":"list","link":"#list","children":[]},{"level":2,"title":"Hash","slug":"hash","link":"#hash","children":[{"level":3,"title":"原理","slug":"原理-1","link":"#原理-1","children":[]},{"level":3,"title":"场景","slug":"场景-1","link":"#场景-1","children":[]}]},{"level":2,"title":"Set","slug":"set","link":"#set","children":[{"level":3,"title":"原理","slug":"原理-2","link":"#原理-2","children":[]}]},{"level":2,"title":"Zset","slug":"zset","link":"#zset","children":[{"level":3,"title":"原理","slug":"原理-3","link":"#原理-3","children":[]},{"level":3,"title":"场景","slug":"场景-2","link":"#场景-2","children":[]}]}],"git":{"createdTime":1677504602000,"updatedTime":1678024743000,"contributors":[{"name":"davidliuk","email":"l729641074@163.com","commits":1},{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":2.66,"words":797},"localizedDate":"February 27, 2023","filePathRelative":"cs/database/redis/principal/data-structure/基本类型.md","excerpt":"<h1> 基本类型</h1>\\n<p>五种</p>\\n<h2> String</h2>\\n<h3> 介绍</h3>\\n<p>String 是最基本的 key-value 结构，key 是唯一标识，value 是具体的值，value其实不仅是字符串， 也可以是数字（整数或浮点数），value 最多可以容纳的数据长度是 <code>512M</code>。</p>\\n<h3> 原理</h3>\\n<p>String 类型的底层的数据结构实现主要是 int 和 SDS（简单动态字符串）。</p>\\n<p>SDS 和我们认识的 C 字符串不太一样，之所以没有使用 C 语言的字符串表示，因为 SDS 相比于 C 的原生字符串：</p>","autoDesc":true}`);export{e as data};
