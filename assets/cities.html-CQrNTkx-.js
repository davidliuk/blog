import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as t,o}from"./app-C_tIvXCt.js";const a={};function r(l,e){return o(),i("div",null,e[0]||(e[0]=[t('<h1 id="procedural-modeling-of-buildings" tabindex="-1"><a class="header-anchor" href="#procedural-modeling-of-buildings"><span><strong>Procedural Modeling of Buildings</strong></span></a></h1><h2 id="_1-paper-title-authors-and-affiliations" tabindex="-1"><a class="header-anchor" href="#_1-paper-title-authors-and-affiliations"><span>1. Paper Title, Authors, and Affiliations</span></a></h2><p><strong>Title</strong>: Procedural Modeling of Buildings</p><p><strong>Authors</strong>: Pascal Müller, Peter Wonka, Simon Haegler, Andreas Ulmer, Luc Van Gool</p><p><strong>Affiliations</strong>:</p><ul><li>Pascal Müller, Simon Haegler, Andreas Ulmer, Luc Van Gool – ETH Zürich</li><li>Peter Wonka – Arizona State University / ETH Zürich / K.U. Leuven</li></ul><h2 id="_2-main-contribution" tabindex="-1"><a class="header-anchor" href="#_2-main-contribution"><span>2. Main Contribution</span></a></h2><p>This paper presents <strong>CGA Shape</strong>, a new way to generate <strong>procedural building models</strong> using shape grammar. It improves on past methods by ensuring <strong>architectural consistency</strong> while allowing for <strong>detailed urban environments</strong>. The key contributions include:</p><ul><li>A <strong>rule-based system</strong> for procedural modeling, allowing the definition of hierarchical rules that control the generation of building components.</li><li><strong>Context-sensitive shape grammar</strong>, enabling adaptive modifications based on spatial relationships and constraints (e.g., ensuring windows and doors align with floors and walls properly).</li><li><strong>New subdivision and repeat operators</strong>, which improve facade detailing and allow for realistic variation in architectural elements.</li><li><strong>Occlusion-aware modeling</strong>, which prevents elements from overlapping incorrectly and ensures plausible structural configurations.</li><li><strong>Snapping and alignment mechanisms</strong>, allowing buildings to conform to both global urban layouts and fine-grained local adjustments.</li><li><strong>Scalability for large-scale urban environments</strong>, demonstrated through examples of real-world city modeling, including historical reconstructions and modern cityscapes.</li></ul><h2 id="_3-outline-of-the-major-topics" tabindex="-1"><a class="header-anchor" href="#_3-outline-of-the-major-topics"><span>3. Outline of the Major Topics</span></a></h2><h3 id="_3-1-introduction-and-motivation" tabindex="-1"><a class="header-anchor" href="#_3-1-introduction-and-motivation"><span>3.1 Introduction and Motivation</span></a></h3><ul><li>Problems in procedural city modeling.</li><li>Weaknesses of past approaches (e.g., L-systems, simple splitting methods).</li></ul><h3 id="_3-2-cga-shape-a-new-approach" tabindex="-1"><a class="header-anchor" href="#_3-2-cga-shape-a-new-approach"><span>3.2 CGA Shape: A New Approach</span></a></h3><ul><li>Using shape rules to define buildings.</li><li>How context-aware constraints improve realism.</li></ul><h3 id="_3-3-core-techniques" tabindex="-1"><a class="header-anchor" href="#_3-3-core-techniques"><span>3.3 Core Techniques</span></a></h3><ul><li><strong>Scope Rules:</strong> Define building parts and transformations.</li><li><strong>Splitting and Repeating:</strong> Generate facades, floors, and repeating patterns.</li><li><strong>Occlusion Checks:</strong> Ensure elements do not intersect incorrectly.</li><li><strong>Snapping:</strong> Align elements to maintain structure.</li></ul><h3 id="_3-4-implementation-and-examples" tabindex="-1"><a class="header-anchor" href="#_3-4-implementation-and-examples"><span>3.4 Implementation and Examples</span></a></h3><ul><li>Applied to historical and modern cityscapes (e.g., <strong>Pompeii, Beverly Hills</strong>).</li><li>Discussion on performance and scalability.</li></ul><h3 id="_3-5-conclusion-and-future-work" tabindex="-1"><a class="header-anchor" href="#_3-5-conclusion-and-future-work"><span>3.5 Conclusion and Future Work</span></a></h3><ul><li>Plans to improve real-time rendering.</li><li>Potential extensions for interior modeling.</li></ul><h2 id="_4-one-thing-i-liked" tabindex="-1"><a class="header-anchor" href="#_4-one-thing-i-liked"><span>4. One Thing I Liked</span></a></h2><p>One of the most useful aspects of the paper is the <strong>integration of procedural modeling with geometric constraints</strong>. Unlike older methods that generate buildings without structural awareness, CGA Shape ensures <strong>elements like doors, windows, and floors align properly</strong>. This makes it particularly useful for <strong>large-scale city generation</strong> where both efficiency and realism are needed.</p><h2 id="_5-what-i-did-not-like" tabindex="-1"><a class="header-anchor" href="#_5-what-i-did-not-like"><span>5. What I Did Not Like</span></a></h2><p>While the paper presents a <strong>strong procedural approach</strong>, it mainly focuses on <strong>exteriors</strong> and does not discuss <strong>interior layouts</strong> in depth. For real-world applications, integrating <strong>interior spaces</strong> would make the system much more useful for architects and urban planners. Additionally, <strong>performance trade-offs</strong> for extremely detailed models could have been explored more.</p><h2 id="_6-questions-for-the-authors" tabindex="-1"><a class="header-anchor" href="#_6-questions-for-the-authors"><span>6. Questions for the Authors</span></a></h2><ol><li><strong>How well does CGA Shape handle non-standard building shapes?</strong> Many modern buildings have curved or irregular designs—does the system require special rules for these cases?</li><li><strong>Could CGA Shape be extended to model building interiors?</strong> While great for exteriors, could similar rules be applied for floorplans and room layouts?</li><li><strong>What are the memory and computational limits for large-scale city models?</strong> The paper mentions billion-polygon cities, but what are the practical constraints for real-time applications?</li><li><strong>Could CGA Shape work with AI-based techniques?</strong> With recent advances in AI-generated content, do you see a way to integrate <strong>machine learning</strong> to optimize or automate rule generation?</li></ol>',26)]))}const c=n(a,[["render",r],["__file","cities.html.vue"]]),u=JSON.parse(`{"path":"/education/ms/6600/eval/week1/cities.html","title":"Procedural Modeling of Buildings","lang":"en-US","frontmatter":{"description":"Procedural Modeling of Buildings 1. Paper Title, Authors, and Affiliations Title: Procedural Modeling of Buildings Authors: Pascal Müller, Peter Wonka, Simon Haegler, Andreas Ul...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/education/ms/6600/eval/week1/cities.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"Procedural Modeling of Buildings"}],["meta",{"property":"og:description","content":"Procedural Modeling of Buildings 1. Paper Title, Authors, and Affiliations Title: Procedural Modeling of Buildings Authors: Pascal Müller, Peter Wonka, Simon Haegler, Andreas Ul..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-05-28T16:32:52.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-28T16:32:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Procedural Modeling of Buildings\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-28T16:32:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":2,"title":"1. Paper Title, Authors, and Affiliations","slug":"_1-paper-title-authors-and-affiliations","link":"#_1-paper-title-authors-and-affiliations","children":[]},{"level":2,"title":"2. Main Contribution","slug":"_2-main-contribution","link":"#_2-main-contribution","children":[]},{"level":2,"title":"3. Outline of the Major Topics","slug":"_3-outline-of-the-major-topics","link":"#_3-outline-of-the-major-topics","children":[{"level":3,"title":"3.1 Introduction and Motivation","slug":"_3-1-introduction-and-motivation","link":"#_3-1-introduction-and-motivation","children":[]},{"level":3,"title":"3.2 CGA Shape: A New Approach","slug":"_3-2-cga-shape-a-new-approach","link":"#_3-2-cga-shape-a-new-approach","children":[]},{"level":3,"title":"3.3 Core Techniques","slug":"_3-3-core-techniques","link":"#_3-3-core-techniques","children":[]},{"level":3,"title":"3.4 Implementation and Examples","slug":"_3-4-implementation-and-examples","link":"#_3-4-implementation-and-examples","children":[]},{"level":3,"title":"3.5 Conclusion and Future Work","slug":"_3-5-conclusion-and-future-work","link":"#_3-5-conclusion-and-future-work","children":[]}]},{"level":2,"title":"4. One Thing I Liked","slug":"_4-one-thing-i-liked","link":"#_4-one-thing-i-liked","children":[]},{"level":2,"title":"5. What I Did Not Like","slug":"_5-what-i-did-not-like","link":"#_5-what-i-did-not-like","children":[]},{"level":2,"title":"6. Questions for the Authors","slug":"_6-questions-for-the-authors","link":"#_6-questions-for-the-authors","children":[]}],"git":{"createdTime":1748449972000,"updatedTime":1748449972000,"contributors":[{"name":"David","email":"l729641074@163.com","commits":1}]},"readingTime":{"minutes":1.85,"words":554},"filePathRelative":"education/ms/6600/eval/week1/cities.md","localizedDate":"May 28, 2025","excerpt":"\\n<h2>1. Paper Title, Authors, and Affiliations</h2>\\n<p><strong>Title</strong>: Procedural Modeling of Buildings</p>\\n<p><strong>Authors</strong>: Pascal Müller, Peter Wonka, Simon Haegler, Andreas Ulmer, Luc Van Gool</p>\\n<p><strong>Affiliations</strong>:</p>\\n<ul>\\n<li>Pascal Müller, Simon Haegler, Andreas Ulmer, Luc Van Gool – ETH Zürich</li>\\n<li>Peter Wonka – Arizona State University / ETH Zürich / K.U. Leuven</li>\\n</ul>","autoDesc":true}`);export{c as comp,u as data};
