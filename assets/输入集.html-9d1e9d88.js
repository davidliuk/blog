const n=JSON.parse(`{"key":"v-28281b72","path":"/cs/algo/summary/optimise/decrease-conquer/binary/binary-search/%E8%BE%93%E5%85%A5%E9%9B%86.html","title":"输入集","lang":"en-US","frontmatter":{"description":"输入集 排序数组 以下题目均默认在非严格递增的数组上搜索，如果在非严格递减的数组上搜索，仅需把大于小于号取反，如&gt;=变为&lt;=，&lt;=变为&gt;= 问题列表见右侧TOC目录： 在排序数组中查找数字 // in: nums[], target int pos = searchFirst(0, nums.length - 1, (mid) -&gt; nums[mid] &gt;= target); return nums[pos] == target? pos: -1;","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/algo/summary/optimise/decrease-conquer/binary/binary-search/%E8%BE%93%E5%85%A5%E9%9B%86.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"输入集"}],["meta",{"property":"og:description","content":"输入集 排序数组 以下题目均默认在非严格递增的数组上搜索，如果在非严格递减的数组上搜索，仅需把大于小于号取反，如&gt;=变为&lt;=，&lt;=变为&gt;= 问题列表见右侧TOC目录： 在排序数组中查找数字 // in: nums[], target int pos = searchFirst(0, nums.length - 1, (mid) -&gt; nums[mid] &gt;= target); return nums[pos] == target? pos: -1;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-02-01T13:44:44.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-02-01T13:44:44.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/cs/algo/summary/optimise/decrease-conquer/binary/binary-search/%E8%BE%93%E5%85%A5%E9%9B%86.html"}]]},"headers":[{"level":2,"title":"排序数组","slug":"排序数组","link":"#排序数组","children":[{"level":3,"title":"在排序数组中查找数字","slug":"在排序数组中查找数字","link":"#在排序数组中查找数字","children":[]},{"level":3,"title":"在排序数组中查找数字第一个位置","slug":"在排序数组中查找数字第一个位置","link":"#在排序数组中查找数字第一个位置","children":[]},{"level":3,"title":"在排序数组中查找数字插入位置","slug":"在排序数组中查找数字插入位置","link":"#在排序数组中查找数字插入位置","children":[]},{"level":3,"title":"在排序数组中查找数字末一个位置","slug":"在排序数组中查找数字末一个位置","link":"#在排序数组中查找数字末一个位置","children":[]},{"level":3,"title":"在排序数组中查找数字的范围","slug":"在排序数组中查找数字的范围","link":"#在排序数组中查找数字的范围","children":[]},{"level":3,"title":"在排序数组中查找数字的个数","slug":"在排序数组中查找数字的个数","link":"#在排序数组中查找数字的个数","children":[]},{"level":3,"title":"在排序矩阵中查找数字","slug":"在排序矩阵中查找数字","link":"#在排序矩阵中查找数字","children":[]}]},{"level":2,"title":"转序数组","slug":"转序数组","link":"#转序数组","children":[{"level":3,"title":"山脉数组","slug":"山脉数组","link":"#山脉数组","children":[]},{"level":3,"title":"旋转排序数组","slug":"旋转排序数组","link":"#旋转排序数组","children":[]}]}],"git":{"createdTime":1675259084000,"updatedTime":1675259084000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":1.81,"words":544},"localizedDate":"February 1, 2023","filePathRelative":"cs/algo/summary/optimise/decrease-conquer/binary/binary-search/输入集.md","excerpt":"<h1> 输入集</h1>\\n<h2> 排序数组</h2>\\n<p>以下题目均默认在非严格递增的数组上搜索，如果在非严格递减的数组上搜索，仅需把大于小于号取反，如&gt;=变为&lt;=，&lt;=变为&gt;=</p>\\n<p>问题列表见右侧TOC目录：</p>\\n<h3> 在排序数组中查找数字</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token comment\\">// in: nums[], target</span>\\n<span class=\\"token keyword\\">int</span> pos <span class=\\"token operator\\">=</span> <span class=\\"token function\\">searchFirst</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> nums<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span>mid<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-&gt;</span> nums<span class=\\"token punctuation\\">[</span>mid<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&gt;=</span> target<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">return</span> nums<span class=\\"token punctuation\\">[</span>pos<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> target<span class=\\"token operator\\">?</span> pos<span class=\\"token operator\\">:</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
