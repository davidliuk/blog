import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as o,o as n}from"./app-C_tIvXCt.js";const a={};function s(c,e){return n(),t("div",null,e[0]||(e[0]=[o('<h1 id="subdivision-techniques" tabindex="-1"><a class="header-anchor" href="#subdivision-techniques"><span>Subdivision Techniques</span></a></h1><h2 id="catmull-clark-subdivision" tabindex="-1"><a class="header-anchor" href="#catmull-clark-subdivision"><span>Catmull-Clark Subdivision</span></a></h2><ol start="0"><li><p>Initial mesh</p></li><li><p>For each Face, compute its centroid</p><p>Centroid = average of all vertices</p><p><code>f=sum(e)/n</code></p></li><li><p>Compute the smoothed midpoint of each edge in the mesh</p><p>split all edges</p><p><code>e=(v1+v2+f1+f2)/4</code></p><p><code>e=(v1+v2+f)/3</code> (border case, only 1 incident face)</p></li><li><p>Smooth the original vertices</p><p>barycenter of the input components</p><p><code>v&#39; = (n-2)v/n + sum(e)/n^2 + sum(f)/n^2</code></p><p>v is the vertex’s original position</p><p>sum(e) is the sum of all adjacent midpoints</p><p>sum(f) is the sum of the centroids of all faces incident to v</p><p>n is the number of adjacent midpoints</p></li><li><p>For each original face, split that face into N quadrangle faces</p><p>1st subface is orginal face, 2-4th would be new face</p></li></ol><hr>',4)]))}const d=i(a,[["render",s],["__file","subdivision.html.vue"]]),r=JSON.parse(`{"path":"/education/ms/5600/subdivision.html","title":"Subdivision Techniques","lang":"en-US","frontmatter":{"description":"Subdivision Techniques Catmull-Clark Subdivision Initial mesh For each Face, compute its centroid Centroid = average of all vertices f=sum(e)/n Compute the smoothed midpoint of ...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/education/ms/5600/subdivision.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"Subdivision Techniques"}],["meta",{"property":"og:description","content":"Subdivision Techniques Catmull-Clark Subdivision Initial mesh For each Face, compute its centroid Centroid = average of all vertices f=sum(e)/n Compute the smoothed midpoint of ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-09T03:55:12.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-09T03:55:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Subdivision Techniques\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-09T03:55:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":2,"title":"Catmull-Clark Subdivision","slug":"catmull-clark-subdivision","link":"#catmull-clark-subdivision","children":[]}],"git":{"createdTime":1730928664000,"updatedTime":1731124512000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro-3.local","commits":1}]},"readingTime":{"minutes":0.46,"words":137},"filePathRelative":"education/ms/5600/subdivision.md","localizedDate":"November 6, 2024","excerpt":"\\n<h2>Catmull-Clark Subdivision</h2>\\n<ol start=\\"0\\">\\n<li>\\n<p>Initial mesh</p>\\n</li>\\n<li>\\n<p>For each Face, compute its centroid</p>\\n<p>Centroid = average of all vertices</p>\\n<p><code>f=sum(e)/n</code></p>\\n</li>\\n<li>\\n<p>Compute the smoothed midpoint of each edge in the mesh</p>\\n<p>split all edges</p>\\n<p><code>e=(v1+v2+f1+f2)/4</code></p>\\n<p><code>e=(v1+v2+f)/3</code> (border case, only 1 incident face)</p>\\n</li>\\n<li>\\n<p>Smooth the original vertices</p>\\n<p>barycenter of the input components</p>\\n<p><code>v' = (n-2)v/n + sum(e)/n^2 + sum(f)/n^2</code></p>\\n<p>v is the vertex’s original position</p>\\n<p>sum(e) is the sum of all adjacent midpoints</p>\\n<p>sum(f) is the sum of the centroids of all faces incident to v</p>\\n<p>n is the number of adjacent midpoints</p>\\n</li>\\n<li>\\n<p>For each original face, split that face into N quadrangle faces</p>\\n<p>1st subface is orginal face, 2-4th would be new face</p>\\n</li>\\n</ol>","autoDesc":true}`);export{d as comp,r as data};
