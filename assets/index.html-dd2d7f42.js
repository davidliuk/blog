const e=JSON.parse(`{"key":"v-604b10c2","path":"/cs/algo/summary/optimise/decrease-conquer/","title":"减治","lang":"en-US","frontmatter":{"description":"减治 在广义“有序“的线性结构上搜索 四类减治问题 反向排序：两侧性质相反 二分查找：每次减一半 双指针：减少组合复杂度的空间 结构排序：每次减一半 基于二分查找存储化的结构 数组：树状数组 链表：跳表 树： B+树 线段树 分块树","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/algo/summary/optimise/decrease-conquer/"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"减治"}],["meta",{"property":"og:description","content":"减治 在广义“有序“的线性结构上搜索 四类减治问题 反向排序：两侧性质相反 二分查找：每次减一半 双指针：减少组合复杂度的空间 结构排序：每次减一半 基于二分查找存储化的结构 数组：树状数组 链表：跳表 树： B+树 线段树 分块树"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-01-29T15:51:30.000Z"}],["meta",{"property":"article:author","content":"David Liu"}],["meta",{"property":"article:modified_time","content":"2023-01-29T15:51:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"减治\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-29T15:51:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":3,"title":"四类减治问题","slug":"四类减治问题","link":"#四类减治问题","children":[]}],"git":{"createdTime":1674813807000,"updatedTime":1675007490000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":2}]},"readingTime":{"minutes":0.52,"words":155},"filePathRelative":"cs/algo/summary/optimise/decrease-conquer/README.md","localizedDate":"January 27, 2023","excerpt":"<h1> 减治</h1>\\n<p>在广义“有序“的线性结构上搜索</p>\\n<h3> 四类减治问题</h3>\\n<p><strong>反向排序</strong>：两侧性质相反</p>\\n<ul>\\n<li>二分查找：每次减一半</li>\\n<li>双指针：减少组合复杂度的空间</li>\\n</ul>\\n<p><strong>结构排序</strong>：每次减一半</p>\\n<ul>\\n<li>基于二分查找存储化的结构\\n<ul>\\n<li>数组：树状数组</li>\\n<li>链表：跳表</li>\\n<li>树：\\n<ul>\\n<li>B+树</li>\\n<li>线段树</li>\\n<li>分块树</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{e as data};
