const e=JSON.parse(`{"key":"v-6805b83a","path":"/cs/middleware/rabbitmq/%E4%B8%BA%E4%BB%80%E4%B9%88%E7%94%A8.html","title":"为什么用 RabbitMQ","lang":"en-US","frontmatter":{"description":"为什么用 RabbitMQ RabbitMQ 高性能的原因 使用语言：erlang 1）Erlang是面向并发的语言，支持协程，且进程间上下文切换效率远高于C语言和Java，进一步提高了RabbitMQ并发性能 2）Erlang的网络性能有着和原生Socket一样的延迟，RabbitMQ的网络IO性能极高 3）使用AMQP协议 erlang特点 1）通用的面向并发编程语言，适用于分布式系统 2）基于虚拟机解释运行，支持跨平台部署 3）进程间上下切换效率远高于C语言 4）有着和原生Socket一样的延时","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/middleware/rabbitmq/%E4%B8%BA%E4%BB%80%E4%B9%88%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"为什么用 RabbitMQ"}],["meta",{"property":"og:description","content":"为什么用 RabbitMQ RabbitMQ 高性能的原因 使用语言：erlang 1）Erlang是面向并发的语言，支持协程，且进程间上下文切换效率远高于C语言和Java，进一步提高了RabbitMQ并发性能 2）Erlang的网络性能有着和原生Socket一样的延迟，RabbitMQ的网络IO性能极高 3）使用AMQP协议 erlang特点 1）通用的面向并发编程语言，适用于分布式系统 2）基于虚拟机解释运行，支持跨平台部署 3）进程间上下切换效率远高于C语言 4）有着和原生Socket一样的延时"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-04-03T03:29:06.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-04-03T03:29:06.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/cs/middleware/rabbitmq/%E4%B8%BA%E4%BB%80%E4%B9%88%E7%94%A8.html"}]]},"headers":[{"level":3,"title":"RabbitMQ 高性能的原因","slug":"rabbitmq-高性能的原因","link":"#rabbitmq-高性能的原因","children":[]},{"level":3,"title":"erlang特点","slug":"erlang特点","link":"#erlang特点","children":[]},{"level":3,"title":"使用背书","slug":"使用背书","link":"#使用背书","children":[]},{"level":3,"title":"消息流转流程","slug":"消息流转流程","link":"#消息流转流程","children":[]},{"level":3,"title":"合理的交换机和队列设置","slug":"合理的交换机和队列设置","link":"#合理的交换机和队列设置","children":[]},{"level":3,"title":"使用自动化配置","slug":"使用自动化配置","link":"#使用自动化配置","children":[]}],"git":{"createdTime":1680090419000,"updatedTime":1680492546000,"contributors":[{"name":"davidliuk","email":"l729641074@163.com","commits":2}]},"readingTime":{"minutes":1.89,"words":566},"localizedDate":"March 29, 2023","filePathRelative":"cs/middleware/rabbitmq/为什么用.md","excerpt":"<h1> 为什么用 RabbitMQ</h1>\\n<h3> RabbitMQ 高性能的原因</h3>\\n<p>使用语言：erlang</p>\\n<p>1）Erlang是面向并发的语言，支持协程，且进程间上下文切换效率远高于C语言和Java，进一步提高了RabbitMQ并发性能\\n2）Erlang的网络性能有着和原生Socket一样的延迟，RabbitMQ的网络IO性能极高\\n3）使用AMQP协议</p>\\n<h3> erlang特点</h3>\\n<p>1）通用的面向并发编程语言，适用于分布式系统\\n2）基于虚拟机解释运行，支持跨平台部署\\n3）进程间上下切换效率远高于C语言\\n4）有着和原生Socket一样的延时</p>","autoDesc":true}`);export{e as data};
