import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,d as a,o as s}from"./app-ChU1gMRF.js";const o={};function p(c,e){return s(),l("div",null,e[0]||(e[0]=[a(`<h1 id="_1-unix-常用指令" tabindex="-1"><a class="header-anchor" href="#_1-unix-常用指令"><span>1. UNIX 常用指令</span></a></h1><p>wildcard character</p><h2 id="命令格式" tabindex="-1"><a class="header-anchor" href="#命令格式"><span>命令格式</span></a></h2><p>三部分：</p><ul><li><p>cmd</p></li><li><p>opts</p><p>分类：</p><ul><li><code>-</code>：简写</li><li><code>--</code>：全称，增加可读性（脚本里面一般用全写）</li></ul><p>常见：</p><ul><li><code>-a</code>: 全部的</li><li><code>-l</code>: 长的、全部信息</li><li><code>-R</code>: 递归的（删除文件夹等用）</li><li><code>-v</code>: verbose 显示冗余信息，（普通的时候会省略一些东西），这个可以显示全</li></ul></li><li><p>args</p><p>参数可以有多个</p></li></ul><p>概念一致性：每处功能的</p><p>常用命令如下：</p><ol><li><code>ls</code>：列出当前目录下的文件和文件夹。</li><li><code>cd</code>：切换当前目录。</li><li><code>mkdir</code>：创建一个新的目录。</li><li><code>rm</code>：删除文件或目录。</li><li><code>cp</code>：复制文件或目录。</li><li><code>mv</code>：移动文件或目录。</li><li><code>cat</code>：查看文件内容。</li><li><code>grep</code>：在文件中查找指定的字符串。</li><li><code>chmod</code>：修改文件或目录的权限。</li><li><code>sudo</code>：以超级用户身份执行命令。</li></ol><p>Linux 的运行原理是基于内核的，内核是操作系统的核心部分，它负责管理计算机的硬件资源和提供基本的服务。Linux 内核是一个模块化的系统，可以根据需要加载不同的模块来提供不同的功能。Linux 还有一个重要的特点是它是一个多用户系统，多个用户可以同时使用同一台计算机，每个用户都有自己的账户和权限。</p><p><code>top</code>命令是一个常用的 Linux 系统监控工具，可以实时显示系统的运行状态，包括 CPU、内存、进程等信息。以下是一些常用的<code>top</code>命令选项：</p><ul><li><code>-d {{秒数}}</code>：指定刷新时间间隔，默认是 3 秒。</li><li><code>-u {{用户名}}</code>：只显示指定用户的进程。</li><li><code>-p {{进程ID}}</code>：只显示指定进程的信息。</li><li><code>M</code>：按内存使用量排序。</li><li><code>P</code>：按 CPU 使用量排序。</li><li><code>q</code>：退出<code>top</code>命令。</li></ul><p><code>top</code>命令的输出结果包括以下信息：</p><ul><li><code>top</code>：当前时间和系统运行时间。</li><li><code>Tasks</code>：进程总数、运行中的进程数、睡眠中的进程数等信息。</li><li><code>CPU</code>：CPU 使用率、用户态 CPU 使用率、系统态 CPU 使用率等信息。</li><li><code>Mem</code>：内存使用情况，包括总内存、已用内存、空闲内存等信息。</li><li><code>Swap</code>：交换空间使用情况，包括总交换空间、已用交换空间、空闲交换空间等信息。</li><li><code>PID</code>：进程 ID。</li><li><code>USER</code>：进程所属用户。</li><li><code>%CPU</code>：进程占用 CPU 的百分比。</li><li><code>%MEM</code>：进程占用内存的百分比。</li><li><code>TIME+</code>：进程运行时间。</li><li><code>COMMAND</code>：进程命令行。</li></ul><h2 id="指令分类" tabindex="-1"><a class="header-anchor" href="#指令分类"><span>指令分类</span></a></h2><p>输入的时候，按 tab 键可以自动补齐</p><p>可以写脚本里，只写一次就方便了，全自动</p><h3 id="工具类" tabindex="-1"><a class="header-anchor" href="#工具类"><span>工具类</span></a></h3><p>man：教程文档</p><blockquote><p>Manual 可以找到所有的东西，包括全部的参考文档和 C 的函数文档 Unix 的原生的</p><p>Info ：GNU</p><p>see also 比较重要</p><p>eg. man epoll, man 7 ip</p><p>man -k</p><p>第一个可省略参数：手册第几章如 3 是 C 语言变成手册，一共 8 章</p><ol><li>cmd 命令</li><li>系统调用，Linux 原理，操作系统的接口，系统级编程时用，对外提供的接口</li><li>库函数（C 语言的）</li><li>驱动设备</li><li>标准系统文件格式</li><li>游戏、没用</li><li>教材文件文档，如 man 7 ip</li><li>如：man 8 mandb</li></ol></blockquote><h3 id="用户相关" tabindex="-1"><a class="header-anchor" href="#用户相关"><span>用户相关</span></a></h3><p><code>whoami</code> 查看当前用户</p><p><code>su</code> 切换用户</p><p><code>su</code> 命令只切换目录，但是不切换环境；</p><p><code>su -</code>就可以同时切换到目标用户的环境</p><blockquote><p>switch user</p></blockquote><p><code>logout</code>, <code>exit</code></p><blockquote><p>退出服务器</p></blockquote><h3 id="目录操作" tabindex="-1"><a class="header-anchor" href="#目录操作"><span>目录操作</span></a></h3><p><code>mkdir</code> 新增目录</p><blockquote><p>make dir</p></blockquote><p><code>rm</code> 删除</p><blockquote><p>remove</p><p>-rf</p></blockquote><p><code>pwd</code> 当前目录</p><blockquote><p>print work dir</p></blockquote><p><code>ls</code> 查看目录下文件</p><blockquote><p>list</p><p>ls -l</p></blockquote><p><code>cd</code> 切换目录</p><blockquote><p>Change dir</p></blockquote><h3 id="文件操作" tabindex="-1"><a class="header-anchor" href="#文件操作"><span>文件操作</span></a></h3><h4 id="查找文件" tabindex="-1"><a class="header-anchor" href="#查找文件"><span>查找文件</span></a></h4><p><code>find</code></p><ul><li><code>-exec {} /</code> 各自的执行</li><li><code>-exec {} +</code> 一次性执行</li></ul><h4 id="查看文件" tabindex="-1"><a class="header-anchor" href="#查看文件"><span>查看文件</span></a></h4><p><code>cat</code></p><blockquote><p>拼接，但是可以用来看内容</p><p><a href="https://blog.csdn.net/qq_46416934/article/details/126747074" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/qq_46416934/article/details/126747074</a></p></blockquote><p>head</p><blockquote><p>看头几行，默认 10 行</p><p>-n 5 看 5 行</p></blockquote><p>tail</p><blockquote><p>看尾几行，默认 10 行</p><ul><li><code>-n 5</code> 看末尾 5 行</li><li><code>-n +5</code> 从第5行开始往后看</li></ul></blockquote><p>more</p><blockquote><p>看很多的文本，只能向下翻，不能往上</p><ul><li>回车往下一行</li><li>空格向下一屏</li></ul></blockquote><p>less</p><blockquote><p>j 和 k，看上和看下、空格向下一屏，按 q 出去</p><p>Unix 服务器（生产环境）一般没有 less</p></blockquote><h4 id="增" tabindex="-1"><a class="header-anchor" href="#增"><span>增</span></a></h4><p>touch</p><blockquote><p>如果文件不存在，则新建一个文件</p><p><code>touch a.txt b.txt c.txt</code> 一次性创建多个文件<br><code>touch a{1..10}.txt</code> 一次性创建多个文件<br><code>touch a{1..10}.txt b{1..10}.txt</code> 一次性创建多个文件</p></blockquote><p>vim</p><blockquote><p>编辑文件<br><code>vim a.txt</code> 编辑文件<br><code>vimtutor</code> vim 教程<br><code>vimtutor zh</code> vim 中文教程<br><code>vimtutor en</code> vim 英文教程<br><code>vimtutor zh_cn</code> vim 中文教程<br><code>vimtutor en_us</code> vim 英文教程<br><code>vimtutor zh_cn.utf-8</code> vim 中文教程</p></blockquote><p>cp</p><blockquote><p>copy，复制一个文件</p><p>.和..分别是当前目录和上级目录</p><p>加-R 可以复制目录（recursal）</p><p><code>.bak</code>就是备份文件</p><p><code>cp a a.bak</code></p></blockquote><h4 id="改" tabindex="-1"><a class="header-anchor" href="#改"><span>改</span></a></h4><p>touch</p><blockquote><p>修改文件的时间戳<br><code>touch a.txt</code> 修改文件的访问和修改时间戳到目前时间<br><code>touch -a a.txt</code> 仅修改文件的访问时间戳<br><code>touch -m a.txt</code> 仅修改文件的修改时间戳</p></blockquote><p>mv</p><blockquote><p>重命名，后面一个跟新名称</p><p>移动目录，路径+/</p></blockquote><h3 id="文本操作" tabindex="-1"><a class="header-anchor" href="#文本操作"><span>文本操作</span></a></h3><h4 id="查" tabindex="-1"><a class="header-anchor" href="#查"><span>查</span></a></h4><p>grep</p><blockquote><p>检索命令，还支持正则表达式, <code>grep -r &lt;pattern&gt; /path/to</code></p></blockquote><h4 id="改-1" tabindex="-1"><a class="header-anchor" href="#改-1"><span>改</span></a></h4><p>sed</p><blockquote><p>替换</p><p>sed &#39;s/stringa1/stringa2/g&#39; example.txt 将 example.txt 文件中的 &quot;string1&quot; 替换成 &quot;string2&quot;</p></blockquote><p><code>cut</code> 命令是一个用于裁剪文本的命令行工具。 <code>-d</code> 选项指定分隔符为 <code>:</code>， <code>-f1</code> 选项指定只显示每行的第一个字段</p><h4 id="统计" tabindex="-1"><a class="header-anchor" href="#统计"><span>统计</span></a></h4><p>wc -l 统计行数</p><p>Eg. <code>grep -r &quot;mysqli&quot; /path/to/src/ | cut -d: -f1 | wc -l</code></p><h3 id="进程管理" tabindex="-1"><a class="header-anchor" href="#进程管理"><span>进程管理</span></a></h3><h4 id="新建" tabindex="-1"><a class="header-anchor" href="#新建"><span>新建</span></a></h4><p>fork 创建子进程</p><p>top 进程资源占用情况</p><p>ps 命令，用于将某个时间点的进程运行情况选取下来并输出，process 之意</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-A</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ：所有的进程均显示出来</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ：不与terminal有关的所有进程</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ：有效用户的相关进程</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ：一般与a参数一起使用，可列出较完整的信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-l</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ：较长，较详细地将PID的信息列出</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ps</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> aux</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 查看系统所有的进程数据</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ps</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ax</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 查看不与terminal有关的所有进程</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -lA</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 查看系统所有的进程数据</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ps</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> axjf</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 查看连同一部分进程树状态</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>kill 命令,用于向某个工作（%jobnumber）或者是某个 PID（数字）传送一个信号，它通常与 ps 和 jobs 命令一起使用</p><p>命令格式 : kill[命令参数][进程id]</p><p>命令参数:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>-l  信号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称</span></span>
<span class="line"><span>-a  当处理当前进程时，不限制命令名和进程号的对应关系</span></span>
<span class="line"><span>-p  指定kill 命令只打印相关进程的进程号，而不发送任何信号</span></span>
<span class="line"><span>-s  指定发送信号</span></span>
<span class="line"><span>-u  指定用户</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>procs 显示进程数</strong></p><p>r 等待运行的进程。系统上的负载越多，等待运行 CPU 周期的进程数量越多。</p><p>b 不可中断睡眠的进程，也称为“被阻塞”的进程。这些进程最有可能等待 I/O，但也可能等待其他事情。</p><h3 id="性能分析" tabindex="-1"><a class="header-anchor" href="#性能分析"><span>性能分析</span></a></h3><p>free：命令可以显示 Linux 系统中空闲的、已用的物理内存及 swap 内存,及被内核使用的 buffer。</p><p>mpstat：用于获取 CPU 相关统计信息</p><p>iostat：性能评估的一个主要部分就是磁盘性能，iostat 命令提供了存储接口的性能指标。</p><p>vmstat：显示所有与内存和进程相关信息的命令</p><p>netstat：用于显示各种网络相关信息，如网络连接，路由表，接口状态 (Interface Statistics)，masquerade 连接，多播成员 (Multicast<br> Memberships) 等等。</p><p><strong>wpd,free,buff,cache 显示了内存值班</strong></p><p>wpd 虚拟内存或交换内存的数量（以 KB 为单位）</p><p>free 可用物理内存的数量（以 KB 为单位）</p><p>buff 用作缓冲区的内存数量（以 KB 为单位）</p><p>cache 用作缓存的物理内存数量（以 KB 为单位）</p><p><a href="https://www.cnblogs.com/xiaoxi-jinchen/p/16250684.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/xiaoxi-jinchen/p/16250684.html</a></p><h3 id="开关机" tabindex="-1"><a class="header-anchor" href="#开关机"><span>开关机</span></a></h3><p>shutdown -h now 关闭系统(1)<br> init 0 关闭系统(2)<br> telinit 0 关闭系统(3)<br> shutdown -h hours:minutes &amp; 按预定时间关闭系统<br> shutdown -c 取消按预定时间关闭系统<br> shutdown -r now 重启(1)<br> reboot 重启(2)<br> logout 注销<br> time 测算一个命令（即程序）的执行时间</p><h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h3><p>epoll</p><blockquote><p>epoll 的 web server，IO 多路复用</p></blockquote><p>echo</p><blockquote><p>print，经常用在 shell 脚本编程中，用来输出内容，默认，末尾换行</p></blockquote>`,108)]))}const d=i(o,[["render",p],["__file","1.1 basic-cmd.html.vue"]]),r=JSON.parse(`{"path":"/se/devops/unix/basic/1.1%20basic-cmd.html","title":"1. UNIX 常用指令","lang":"en-US","frontmatter":{"description":"1. UNIX 常用指令 wildcard character 命令格式 三部分： cmd opts 分类： -：简写 --：全称，增加可读性（脚本里面一般用全写） 常见： -a: 全部的 -l: 长的、全部信息 -R: 递归的（删除文件夹等用） -v: verbose 显示冗余信息，（普通的时候会省略一些东西），这个可以显示全 args 参数可以有多...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/devops/unix/basic/1.1%20basic-cmd.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"1. UNIX 常用指令"}],["meta",{"property":"og:description","content":"1. UNIX 常用指令 wildcard character 命令格式 三部分： cmd opts 分类： -：简写 --：全称，增加可读性（脚本里面一般用全写） 常见： -a: 全部的 -l: 长的、全部信息 -R: 递归的（删除文件夹等用） -v: verbose 显示冗余信息，（普通的时候会省略一些东西），这个可以显示全 args 参数可以有多..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-05-08T07:35:02.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-08T07:35:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1. UNIX 常用指令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-08T07:35:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":2,"title":"命令格式","slug":"命令格式","link":"#命令格式","children":[]},{"level":2,"title":"指令分类","slug":"指令分类","link":"#指令分类","children":[{"level":3,"title":"工具类","slug":"工具类","link":"#工具类","children":[]},{"level":3,"title":"用户相关","slug":"用户相关","link":"#用户相关","children":[]},{"level":3,"title":"目录操作","slug":"目录操作","link":"#目录操作","children":[]},{"level":3,"title":"文件操作","slug":"文件操作","link":"#文件操作","children":[]},{"level":3,"title":"文本操作","slug":"文本操作","link":"#文本操作","children":[]},{"level":3,"title":"进程管理","slug":"进程管理","link":"#进程管理","children":[]},{"level":3,"title":"性能分析","slug":"性能分析","link":"#性能分析","children":[]},{"level":3,"title":"开关机","slug":"开关机","link":"#开关机","children":[]},{"level":3,"title":"其他","slug":"其他","link":"#其他","children":[]}]}],"git":{"createdTime":1669446166000,"updatedTime":1715153702000,"contributors":[{"name":"liudawei47","email":"liudawei47@jd.com","commits":5},{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":3},{"name":"davidliu","email":"liudawei47@jd.com","commits":2},{"name":"davidliuk","email":"l729641074@163.com","commits":1}]},"readingTime":{"minutes":7.07,"words":2121},"filePathRelative":"se/devops/unix/basic/1.1 basic-cmd.md","localizedDate":"November 26, 2022","excerpt":"\\n<p>wildcard character</p>\\n<h2>命令格式</h2>\\n<p>三部分：</p>\\n<ul>\\n<li>\\n<p>cmd</p>\\n</li>\\n<li>\\n<p>opts</p>\\n<p>分类：</p>\\n<ul>\\n<li><code>-</code>：简写</li>\\n<li><code>--</code>：全称，增加可读性（脚本里面一般用全写）</li>\\n</ul>\\n<p>常见：</p>\\n<ul>\\n<li><code>-a</code>: 全部的</li>\\n<li><code>-l</code>: 长的、全部信息</li>\\n<li><code>-R</code>: 递归的（删除文件夹等用）</li>\\n<li><code>-v</code>: verbose 显示冗余信息，（普通的时候会省略一些东西），这个可以显示全</li>\\n</ul>\\n</li>\\n<li>\\n<p>args</p>\\n<p>参数可以有多个</p>\\n</li>\\n</ul>","autoDesc":true}`);export{d as comp,r as data};
