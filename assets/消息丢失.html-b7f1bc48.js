const t=JSON.parse(`{"key":"v-fa02c2e6","path":"/cs/middleware/rabbitmq/problem/%E6%B6%88%E6%81%AF%E4%B8%A2%E5%A4%B1.html","title":"消息丢失","lang":"en-US","frontmatter":{"description":"消息丢失 产生原因 消息到 MQ 的过程中搞丢，MQ 自己搞丢，MQ 到消费过程中搞丢。 第一种：生产者弄丢了数据。生产者将数据发送到 RabbitMQ 的时候，可能数据就在半路给搞丢了，因为网络问题或服务器宕机等。 第二种：RabbitMQ 弄丢了数据。MQ还没有持久化自己挂了 第三种：消费端弄丢了数据。刚消费到，还没处理，结果进程挂了，比如重启了。 解决方案 生产者到 RabbitMQ：事务机制和 Confirm 机制，注意：事务机制和 Confirm 机制是互斥的，两者不能共存，会导致 RabbitMQ 报错。 RabbitMQ 自身：持久化、集群、普通模式、镜像模式。 RabbitMQ 到消费者：basicAck 机制、死信队列、消息补偿机制。","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/middleware/rabbitmq/problem/%E6%B6%88%E6%81%AF%E4%B8%A2%E5%A4%B1.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"消息丢失"}],["meta",{"property":"og:description","content":"消息丢失 产生原因 消息到 MQ 的过程中搞丢，MQ 自己搞丢，MQ 到消费过程中搞丢。 第一种：生产者弄丢了数据。生产者将数据发送到 RabbitMQ 的时候，可能数据就在半路给搞丢了，因为网络问题或服务器宕机等。 第二种：RabbitMQ 弄丢了数据。MQ还没有持久化自己挂了 第三种：消费端弄丢了数据。刚消费到，还没处理，结果进程挂了，比如重启了。 解决方案 生产者到 RabbitMQ：事务机制和 Confirm 机制，注意：事务机制和 Confirm 机制是互斥的，两者不能共存，会导致 RabbitMQ 报错。 RabbitMQ 自身：持久化、集群、普通模式、镜像模式。 RabbitMQ 到消费者：basicAck 机制、死信队列、消息补偿机制。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-06-08T07:41:54.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-06-08T07:41:54.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/cs/middleware/rabbitmq/problem/%E6%B6%88%E6%81%AF%E4%B8%A2%E5%A4%B1.html"}]]},"headers":[{"level":2,"title":"产生原因","slug":"产生原因","link":"#产生原因","children":[]},{"level":2,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[{"level":3,"title":"针对生产者","slug":"针对生产者","link":"#针对生产者","children":[]},{"level":3,"title":"针对RabbitMQ","slug":"针对rabbitmq","link":"#针对rabbitmq","children":[]},{"level":3,"title":"针对消费者","slug":"针对消费者","link":"#针对消费者","children":[]}]}],"git":{"createdTime":1680090419000,"updatedTime":1686210114000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":3},{"name":"davidliuk","email":"l729641074@163.com","commits":1}]},"readingTime":{"minutes":6.21,"words":1864},"localizedDate":"March 29, 2023","filePathRelative":"cs/middleware/rabbitmq/problem/消息丢失.md","excerpt":"<h1> 消息丢失</h1>\\n<h2> 产生原因</h2>\\n<p>消息到 MQ 的过程中搞丢，MQ 自己搞丢，MQ 到消费过程中搞丢。</p>\\n<ul>\\n<li>第一种：生产者弄丢了数据。生产者将数据发送到 RabbitMQ 的时候，可能数据就在半路给搞丢了，因为网络问题或服务器宕机等。</li>\\n<li>第二种：RabbitMQ 弄丢了数据。MQ还没有持久化自己挂了</li>\\n<li>第三种：消费端弄丢了数据。刚消费到，还没处理，结果进程挂了，比如重启了。</li>\\n</ul>\\n<h2> 解决方案</h2>\\n<ul>\\n<li>生产者到 RabbitMQ：事务机制和 Confirm 机制，注意：事务机制和 Confirm 机制是互斥的，两者不能共存，会导致 RabbitMQ 报错。</li>\\n<li>RabbitMQ 自身：持久化、集群、普通模式、镜像模式。</li>\\n<li>RabbitMQ 到消费者：basicAck 机制、死信队列、消息补偿机制。</li>\\n</ul>","autoDesc":true}`);export{t as data};
