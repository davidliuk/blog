import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as e,o as i}from"./app-B6aCd_WP.js";const s={};function o(r,a){return i(),n("div",null,a[0]||(a[0]=[e('<h1 id="dfa-nfa-regular-languages" tabindex="-1"><a class="header-anchor" href="#dfa-nfa-regular-languages"><span>DFA, NFA, Regular Languages</span></a></h1><ol><li>Using deterministic finite automata (DFAs).</li><li>Using nondeterministic finite automata (NFAs).</li><li>Using a closure definition involving, union, concatenation, and Kleene ∗.</li><li>Using regular expressions.</li><li>Using right-invariant equivalence relations of finite index (the Myhill-Nerode charac-<br> terization).</li><li>Using right-linear context-free grammars.</li></ol><ul><li>DFA</li><li>NFA</li></ul><p>closure</p><p>regular expressions</p><p>right-invariant equivalence relations of finite index</p><h2 id="dfa" tabindex="-1"><a class="header-anchor" href="#dfa"><span>DFA</span></a></h2><h2 id="the-cross-product-construction" tabindex="-1"><a class="header-anchor" href="#the-cross-product-construction"><span>The “Cross-product” Construction</span></a></h2><h2 id="morphisms-f-maps-b-maps-and-homomorphisms-of-dfa-s" tabindex="-1"><a class="header-anchor" href="#morphisms-f-maps-b-maps-and-homomorphisms-of-dfa-s"><span>Morphisms, F-Maps, B-Maps and Homomorphisms of DFA’s</span></a></h2><h2 id="nfa" tabindex="-1"><a class="header-anchor" href="#nfa"><span>NFA</span></a></h2><p>smallest DFA</p><p>transition table <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span></p><p>值的格子是集合，多一列Epsilon输入，不接受Epsilon移动的状态这里就是空集合</p><h2 id="closure" tabindex="-1"><a class="header-anchor" href="#closure"><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>-Closure</span></a></h2><h2 id="converting-an-nfa-into-a-dfa" tabindex="-1"><a class="header-anchor" href="#converting-an-nfa-into-a-dfa"><span>Converting an NFA into a DFA</span></a></h2><p>An Algorithm to convert an NFA into a DFA: The “subset construction”</p><h2 id="finite-state-automata-with-output-transducers" tabindex="-1"><a class="header-anchor" href="#finite-state-automata-with-output-transducers"><span>Finite State Automata With Output: Transducers</span></a></h2><h2 id="an-application-of-nfa-s-text-search" tabindex="-1"><a class="header-anchor" href="#an-application-of-nfa-s-text-search"><span>An Application of NFA’s: Text Search</span></a></h2>',18)]))}const p=t(s,[["render",o],["__file","3.html.vue"]]),m=JSON.parse(`{"path":"/education/ms/5110/part1/3.html","title":"DFA, NFA, Regular Languages","lang":"en-US","frontmatter":{"description":"DFA, NFA, Regular Languages Using deterministic finite automata (DFAs). Using nondeterministic finite automata (NFAs). Using a closure definition involving, union, concatenation...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/education/ms/5110/part1/3.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"DFA, NFA, Regular Languages"}],["meta",{"property":"og:description","content":"DFA, NFA, Regular Languages Using deterministic finite automata (DFAs). Using nondeterministic finite automata (NFAs). Using a closure definition involving, union, concatenation..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-05-28T16:32:52.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-28T16:32:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DFA, NFA, Regular Languages\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-28T16:32:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":2,"title":"DFA","slug":"dfa","link":"#dfa","children":[]},{"level":2,"title":"The “Cross-product” Construction","slug":"the-cross-product-construction","link":"#the-cross-product-construction","children":[]},{"level":2,"title":"Morphisms, F-Maps, B-Maps and Homomorphisms of DFA’s","slug":"morphisms-f-maps-b-maps-and-homomorphisms-of-dfa-s","link":"#morphisms-f-maps-b-maps-and-homomorphisms-of-dfa-s","children":[]},{"level":2,"title":"NFA","slug":"nfa","link":"#nfa","children":[]},{"level":2,"title":"-Closure","slug":"closure","link":"#closure","children":[]},{"level":2,"title":"Converting an NFA into a DFA","slug":"converting-an-nfa-into-a-dfa","link":"#converting-an-nfa-into-a-dfa","children":[]},{"level":2,"title":"Finite State Automata With Output: Transducers","slug":"finite-state-automata-with-output-transducers","link":"#finite-state-automata-with-output-transducers","children":[]},{"level":2,"title":"An Application of NFA’s: Text Search","slug":"an-application-of-nfa-s-text-search","link":"#an-application-of-nfa-s-text-search","children":[]}],"git":{"createdTime":1737557380000,"updatedTime":1748449972000,"contributors":[{"name":"David","email":"l729641074@163.com","commits":2}]},"readingTime":{"minutes":0.5,"words":150},"filePathRelative":"education/ms/5110/part1/3.md","localizedDate":"January 22, 2025","excerpt":"\\n<ol>\\n<li>Using deterministic finite automata (DFAs).</li>\\n<li>Using nondeterministic finite automata (NFAs).</li>\\n<li>Using a closure definition involving, union, concatenation, and Kleene ∗.</li>\\n<li>Using regular expressions.</li>\\n<li>Using right-invariant equivalence relations of finite index (the Myhill-Nerode charac-<br>\\nterization).</li>\\n<li>Using right-linear context-free grammars.</li>\\n</ol>","autoDesc":true}`);export{p as comp,m as data};
