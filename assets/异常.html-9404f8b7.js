const e=JSON.parse(`{"key":"v-6789a301","path":"/se/lang/java/basic/%E5%BC%82%E5%B8%B8.html","title":"异常","lang":"en-US","frontmatter":{"description":"异常 Exception 和 Error 区别 所有异常都有一个共同的祖先：Throwable 类。该类有两个重要的子类: Exception：程序本身可以处理的异常，可以通过 catch 来进行捕获。Exception 又可以分为： Checked Exception (受检查异常，必须处理) Unchecked Exception (不受检查异常，可以不处理)。 Error：Error 属于程序无法处理的错误 ，我们没办法通过 catch 来进行捕获不建议通过catch捕获 。例如 Java 虚拟机运行错误（Virtual MachineError） 虚拟机内存不够错误（OutOfMemoryError） 栈溢出错误（StackOverFlowError） 类定义错误（NoClassDefFoundError） 这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/lang/java/basic/%E5%BC%82%E5%B8%B8.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"异常"}],["meta",{"property":"og:description","content":"异常 Exception 和 Error 区别 所有异常都有一个共同的祖先：Throwable 类。该类有两个重要的子类: Exception：程序本身可以处理的异常，可以通过 catch 来进行捕获。Exception 又可以分为： Checked Exception (受检查异常，必须处理) Unchecked Exception (不受检查异常，可以不处理)。 Error：Error 属于程序无法处理的错误 ，我们没办法通过 catch 来进行捕获不建议通过catch捕获 。例如 Java 虚拟机运行错误（Virtual MachineError） 虚拟机内存不够错误（OutOfMemoryError） 栈溢出错误（StackOverFlowError） 类定义错误（NoClassDefFoundError） 这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-08-21T10:17:45.000Z"}],["meta",{"property":"article:author","content":"David Liu"}],["meta",{"property":"article:modified_time","content":"2023-08-21T10:17:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"异常\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-21T10:17:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":3,"title":"Exception 和 Error 区别","slug":"exception-和-error-区别","link":"#exception-和-error-区别","children":[]},{"level":3,"title":"Checked Exception 和 Unchecked Exception 区别","slug":"checked-exception-和-unchecked-exception-区别","link":"#checked-exception-和-unchecked-exception-区别","children":[]},{"level":2,"title":"异常处理","slug":"异常处理","link":"#异常处理","children":[{"level":3,"title":"try","slug":"try","link":"#try","children":[]}]}],"git":{"createdTime":1680090419000,"updatedTime":1692613065000,"contributors":[{"name":"davidliuk","email":"l729641074@163.com","commits":2},{"name":"liudawei47","email":"liudawei47@jd.com","commits":1},{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":3.13,"words":939},"filePathRelative":"se/lang/java/basic/异常.md","localizedDate":"March 29, 2023","excerpt":"<h1> 异常</h1>\\n<p><img src=\\"https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/types-of-exceptions-in-java.png\\" alt=\\"Java 异常类层次结构图\\" loading=\\"lazy\\"></p>\\n<h3> Exception 和 Error 区别</h3>\\n<p>所有异常都有一个共同的祖先：<code>Throwable</code> 类。该类有两个重要的子类:</p>\\n<ul>\\n<li>\\n<p><strong><code>Exception</code></strong>：程序本身可以处理的异常，可以通过 <code>catch</code> 来进行捕获。<code>Exception</code> 又可以分为：</p>\\n<ul>\\n<li>Checked Exception (受检查异常，必须处理)</li>\\n<li>Unchecked Exception (不受检查异常，可以不处理)。</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong><code>Error</code></strong>：<code>Error</code> 属于程序无法处理的错误 ，我们没办法通过 <code>catch</code> 来进行捕获不建议通过<code>catch</code>捕获 。例如</p>\\n<ul>\\n<li>Java 虚拟机运行错误（<code>Virtual MachineError</code>）</li>\\n<li>虚拟机内存不够错误（<code>OutOfMemoryError</code>）</li>\\n<li>栈溢出错误（<code>StackOverFlowError</code>）</li>\\n<li>类定义错误（<code>NoClassDefFoundError</code>）</li>\\n</ul>\\n<p>这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。</p>\\n</li>\\n</ul>","autoDesc":true}`);export{e as data};
