const e=JSON.parse('{"key":"v-041e4908","path":"/se/framework/orm/mybatis/%E5%8F%82%E6%95%B0.html","title":"参数","lang":"en-US","frontmatter":{"description":"参数 占位符 ${}是 Properties 文件中的变量占位符，它可以用于标签属性值和 sql 内部，属于静态文本替换，比如${driver}会被静态替换为com.mysql.jdbc. Driver。 字符串拼接 #{}是 sql 的参数占位符，MyBatis 会将 sql 中的#{}替换为? 号，在 sql 执行前会使用 PreparedStatement 的参数设置方法，按序给 sql 的? 号占位符设置参数值，比如 ps.setInt(0, parameterValue)，#{item.name} 的取值方式为使用反射从参数对象中获取 item 对象的 name 属性值，相当于 param.getItem().getName()。","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/framework/orm/mybatis/%E5%8F%82%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"David\'s Blog"}],["meta",{"property":"og:title","content":"参数"}],["meta",{"property":"og:description","content":"参数 占位符 ${}是 Properties 文件中的变量占位符，它可以用于标签属性值和 sql 内部，属于静态文本替换，比如${driver}会被静态替换为com.mysql.jdbc. Driver。 字符串拼接 #{}是 sql 的参数占位符，MyBatis 会将 sql 中的#{}替换为? 号，在 sql 执行前会使用 PreparedStatement 的参数设置方法，按序给 sql 的? 号占位符设置参数值，比如 ps.setInt(0, parameterValue)，#{item.name} 的取值方式为使用反射从参数对象中获取 item 对象的 name 属性值，相当于 param.getItem().getName()。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-17T10:10:52.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-05-17T10:10:52.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/se/framework/orm/mybatis/%E5%8F%82%E6%95%B0.html"}]]},"headers":[{"level":2,"title":"占位符","slug":"占位符","link":"#占位符","children":[]}],"git":{"createdTime":1672229303000,"updatedTime":1684318252000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":3},{"name":"davidliuk","email":"l729641074@163.com","commits":1}]},"readingTime":{"minutes":1.56,"words":469},"localizedDate":"December 28, 2022","filePathRelative":"se/framework/orm/mybatis/参数.md","excerpt":"<h1> 参数</h1>\\n<h2> 占位符</h2>\\n<ul>\\n<li>\\n<p><code>${}</code>是 Properties 文件中的变量占位符，它可以用于标签属性值和 sql 内部，属于<strong>静态文本替换</strong>，比如${driver}会被静态替换为<code>com.mysql.jdbc. Driver</code>。</p>\\n<p>字符串拼接</p>\\n</li>\\n<li>\\n<p><code>#{}</code>是 sql 的参数占位符，MyBatis 会将 sql 中的<code>#{}</code>替换为? 号，在 sql 执行前会使用 PreparedStatement 的参数设置方法，按序给 sql 的? 号占位符设置参数值，比如 ps.setInt(0, parameterValue)，<code>#{item.name}</code> 的取值方式为使用反射从参数对象中获取 item 对象的 name 属性值，相当于 <code>param.getItem().getName()</code>。</p>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
