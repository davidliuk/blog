const e=JSON.parse(`{"key":"v-31055127","path":"/se/framework/spring/core/beans/%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96.html","title":"","lang":"en-US","frontmatter":{"description":"循环依赖 Spring 通过三级缓存解决循环依赖问题，具体过程如下： 创建对象：当 Spring 容器创建一个对象时，会将该对象放入一级缓存中。 属性注入：当 Spring 容器对该对象进行属性注入时，如果发现该对象依赖于另一个对象，会先创建另一个对象并放入一级缓存中，然后将该对象放入二级缓存中。 循环依赖：如果发现另一个对象也依赖于该对象，会从二级缓存中获取该对象并注入到另一个对象中，然后将另一个对象放入二级缓存中。 初始化：当所有对象的属性都注入完成后，会按照依赖关系依次初始化对象，并将对象放入三级缓存中。 返回对象：当所有对象都初始化完成后，会从三级缓存中获取需要返回的对象，并将三级缓存清空。","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/framework/spring/core/beans/%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:description","content":"循环依赖 Spring 通过三级缓存解决循环依赖问题，具体过程如下： 创建对象：当 Spring 容器创建一个对象时，会将该对象放入一级缓存中。 属性注入：当 Spring 容器对该对象进行属性注入时，如果发现该对象依赖于另一个对象，会先创建另一个对象并放入一级缓存中，然后将该对象放入二级缓存中。 循环依赖：如果发现另一个对象也依赖于该对象，会从二级缓存中获取该对象并注入到另一个对象中，然后将另一个对象放入二级缓存中。 初始化：当所有对象的属性都注入完成后，会按照依赖关系依次初始化对象，并将对象放入三级缓存中。 返回对象：当所有对象都初始化完成后，会从三级缓存中获取需要返回的对象，并将三级缓存清空。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-05-17T10:10:52.000Z"}],["meta",{"property":"article:author","content":"David Liu"}],["meta",{"property":"article:modified_time","content":"2023-05-17T10:10:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-17T10:10:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":2,"title":"循环依赖","slug":"循环依赖","link":"#循环依赖","children":[]}],"git":{"createdTime":1684318252000,"updatedTime":1684318252000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":4.05,"words":1215},"filePathRelative":"se/framework/spring/core/beans/循环依赖.md","localizedDate":"May 17, 2023","excerpt":"<h2> 循环依赖</h2>\\n<p>Spring 通过三级缓存解决循环依赖问题，具体过程如下：</p>\\n<ol>\\n<li>\\n<p>创建对象：当 Spring 容器创建一个对象时，会将该对象放入一级缓存中。</p>\\n</li>\\n<li>\\n<p>属性注入：当 Spring 容器对该对象进行属性注入时，如果发现该对象依赖于另一个对象，会先创建另一个对象并放入一级缓存中，然后将该对象放入二级缓存中。</p>\\n</li>\\n<li>\\n<p>循环依赖：如果发现另一个对象也依赖于该对象，会从二级缓存中获取该对象并注入到另一个对象中，然后将另一个对象放入二级缓存中。</p>\\n</li>\\n<li>\\n<p>初始化：当所有对象的属性都注入完成后，会按照依赖关系依次初始化对象，并将对象放入三级缓存中。</p>\\n</li>\\n<li>\\n<p>返回对象：当所有对象都初始化完成后，会从三级缓存中获取需要返回的对象，并将三级缓存清空。</p>\\n</li>\\n</ol>","autoDesc":true}`);export{e as data};
