const a=JSON.parse(`{"key":"v-5b97dc51","path":"/cs/database/mongodb/0.%20%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8.html","title":"","lang":"en-US","frontmatter":{"description":"$ docker run -itd --name mongo -p 27017:27017 mongo --auth $ docker exec -it mongo mongosh admin # 创建一个名为 admin，密码为 123456 的用户。 &gt; db.createUser({ user:'admin',pwd:'123456',roles:[ { role:'userAdminAnyDatabase', db: 'admin'},\\"readWriteAnyDatabase\\"]}); # 尝试使用上面创建的用户信息进行连接。 &gt; db.auth('admin', '123456')","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/database/mongodb/0.%20%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:description","content":"$ docker run -itd --name mongo -p 27017:27017 mongo --auth $ docker exec -it mongo mongosh admin # 创建一个名为 admin，密码为 123456 的用户。 &gt; db.createUser({ user:'admin',pwd:'123456',roles:[ { role:'userAdminAnyDatabase', db: 'admin'},\\"readWriteAnyDatabase\\"]}); # 尝试使用上面创建的用户信息进行连接。 &gt; db.auth('admin', '123456')"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-01-03T11:47:15.000Z"}],["meta",{"property":"article:author","content":"David Liu"}],["meta",{"property":"article:modified_time","content":"2023-01-03T11:47:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-03T11:47:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[],"git":{"createdTime":1672746435000,"updatedTime":1672746435000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":0.21,"words":62},"filePathRelative":"cs/database/mongodb/0. 安装使用.md","localizedDate":"January 3, 2023","excerpt":"<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code>$ <span class=\\"token function\\">docker</span> run <span class=\\"token parameter variable\\">-itd</span> <span class=\\"token parameter variable\\">--name</span> mongo <span class=\\"token parameter variable\\">-p</span> <span class=\\"token number\\">27017</span>:27017 mongo <span class=\\"token parameter variable\\">--auth</span>\\n$ <span class=\\"token function\\">docker</span> <span class=\\"token builtin class-name\\">exec</span> <span class=\\"token parameter variable\\">-it</span> mongo mongosh admin\\n<span class=\\"token comment\\"># 创建一个名为 admin，密码为 123456 的用户。</span>\\n<span class=\\"token operator\\">&gt;</span>  db.createUser<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span> user:<span class=\\"token string\\">'admin'</span>,pwd:<span class=\\"token string\\">'123456'</span>,roles:<span class=\\"token punctuation\\">[</span> <span class=\\"token punctuation\\">{</span> role:<span class=\\"token string\\">'userAdminAnyDatabase'</span>, db: <span class=\\"token string\\">'admin'</span><span class=\\"token punctuation\\">}</span>,<span class=\\"token string\\">\\"readWriteAnyDatabase\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\"># 尝试使用上面创建的用户信息进行连接。</span>\\n<span class=\\"token operator\\">&gt;</span> db.auth<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'admin'</span>, <span class=\\"token string\\">'123456'</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{a as data};
