import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,d as a,o as i}from"./app-DtA_0glx.js";const r={};function n(o,e){return i(),l("div",null,e[0]||(e[0]=[a('<h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h2><ul><li>Index(索引)：作为名词理解的话，索引是一类拥有相似特征的文档的集合比如商品索引、商家索引、订单索引，有点类似于SQL中的数据库表。作为动词理解的话，索引就是将一份文档保存在一个索引中。</li><li>Document(文档)：可搜索最小单位，用于存储数据，一般为JSON格式。文档由一个或者多个字<br> 段(Field)组成，字段类型可以是布尔，数值，字符串、二进制、日期等数据类型。</li><li>Type(字段类型)：每个文档在ES中都必须设定它的类型。ES7.0之前，一个Index可以有多个 Type。6.0开始，Type已经被Deprecated。7.0开始，一个索引只能创建一个Type：<code>_doc</code>。8.0之后，Type被完全删除，删除的原因看这里：<a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.17/removal-of-types.html" target="_blank" rel="noopener noreferrer">https://www.elastic.co/guide/en/elasticsearch/reference/7.17/removal-of-types.html</a>.</li><li>Mapping(映射)：定义字段名称、数据类型、优化信息（比如是否索引）、分词器，有点类似于数据库中的表结构定义。一个Index对应一个Mapping。</li><li>Node(节点)：相当于一个ES实例，多个节点构成一个集群。</li><li>Cluster(集群)：多个ES节点的集合，用于解决单个节点无法处理的搜索需求和数据存储需求。</li><li>Shard(分片)：Index(索引)被分为多个碎片存储在不同的Node节点上的分片中，以提高性能和吞吐量。</li><li>Replica(副本)：Index副本，每个Index有一个或多个副本，以提高拓展功能和吞吐量。</li><li>DSL(查询语言)：基于JSON的查询语言，类似于SQL语句。</li></ul><p>MySQL与Elasticsearch的概念简单类比：</p><table><thead><tr><th>MySQL</th><th>Elasticsearch</th></tr></thead><tbody><tr><td>Table(表)</td><td>Index</td></tr><tr><td>Row(行)</td><td>Document</td></tr><tr><td>Column(列)</td><td>Field</td></tr><tr><td>Schema(约束)</td><td>Mapping</td></tr><tr><td>SQL(查询语言)</td><td>DSL</td></tr></tbody></table><h2 id="数据同步" tabindex="-1"><a class="header-anchor" href="#数据同步"><span>数据同步</span></a></h2><p>Elasticsearch和MySQL同步的策略有哪些？</p><p>我们可以将同步类型分为全量同步和增量同步。</p><p>全量同步即建好Elasticsearch索引后一次性导入MySQL所有数据。全量同步有很多现成的工具可以用比如go-mysql--elasticsearch、Datax。</p><p>另外，除了插件之外，像我们比较熟悉的Canal除了支持binlog实时增量同步数据库之外也支持全量同步。</p><p>增量同步即对ySQL中新增，修改，删除的数据进行同步：</p><ul><li>同步双写：修改数据时同步到Elasticsearch.。这种方式性能较差、存在丢数据风险且会耦合大量数据同步代码，一般不会使用。</li><li>异步双写：修改数据时，使用MQ异步写入Elasticsearch提高效率。这种方式引入了新的组件和服务，增加了系统整体复杂性。</li><li>定时器：定时同步数据到Elasticsearch。这种方式时效性差，通常用于数据实时性不高的场景</li><li><strong>Canal</strong>：binlog同步组件，使用Canal可以做到业务代码完全解耦，API完全解耦，零代码实现准实时同步，Canal通过解析 MySQL 的binlog日志文件进行数据同步。</li></ul><p>Canal 增量数据同步 Elasticsearch 的原理了解吗？</p><p>这个在Canal官方文档中有详细介绍到，原理非常简单：</p><ol><li>Canal模拟MySQL Slave节点与MySQL Master节点的交互协议，把自己伪装成一个MySQL Slave节点，向MySQL Master节点请求binlog;</li><li>MySQL Master节点接收到请求之后，根据偏移量将新的binlog发送给MySQL Slave节点；</li><li>Canal接收到binlog之后，就可以对这部分日志进行解析，获取主库的结构及数据变更。</li></ol>',14)]))}const p=t(r,[["render",n],["__file","概念.html.vue"]]),s=JSON.parse(`{"path":"/cs/middleware/es/%E6%A6%82%E5%BF%B5.html","title":"","lang":"en-US","frontmatter":{"description":"基本概念 Index(索引)：作为名词理解的话，索引是一类拥有相似特征的文档的集合比如商品索引、商家索引、订单索引，有点类似于SQL中的数据库表。作为动词理解的话，索引就是将一份文档保存在一个索引中。 Document(文档)：可搜索最小单位，用于存储数据，一般为JSON格式。文档由一个或者多个字 段(Field)组成，字段类型可以是布尔，数值，字符串...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/middleware/es/%E6%A6%82%E5%BF%B5.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:description","content":"基本概念 Index(索引)：作为名词理解的话，索引是一类拥有相似特征的文档的集合比如商品索引、商家索引、订单索引，有点类似于SQL中的数据库表。作为动词理解的话，索引就是将一份文档保存在一个索引中。 Document(文档)：可搜索最小单位，用于存储数据，一般为JSON格式。文档由一个或者多个字 段(Field)组成，字段类型可以是布尔，数值，字符串..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-05-08T07:35:02.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-08T07:35:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-08T07:35:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":2,"title":"数据同步","slug":"数据同步","link":"#数据同步","children":[]}],"git":{"createdTime":1715153702000,"updatedTime":1715153702000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":1}]},"readingTime":{"minutes":2.96,"words":889},"filePathRelative":"cs/middleware/es/概念.md","localizedDate":"May 8, 2024","excerpt":"<h2>基本概念</h2>\\n<ul>\\n<li>Index(索引)：作为名词理解的话，索引是一类拥有相似特征的文档的集合比如商品索引、商家索引、订单索引，有点类似于SQL中的数据库表。作为动词理解的话，索引就是将一份文档保存在一个索引中。</li>\\n<li>Document(文档)：可搜索最小单位，用于存储数据，一般为JSON格式。文档由一个或者多个字<br>\\n段(Field)组成，字段类型可以是布尔，数值，字符串、二进制、日期等数据类型。</li>\\n<li>Type(字段类型)：每个文档在ES中都必须设定它的类型。ES7.0之前，一个Index可以有多个 Type。6.0开始，Type已经被Deprecated。7.0开始，一个索引只能创建一个Type：<code>_doc</code>。8.0之后，Type被完全删除，删除的原因看这里：<a href=\\"https://www.elastic.co/guide/en/elasticsearch/reference/7.17/removal-of-types.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.elastic.co/guide/en/elasticsearch/reference/7.17/removal-of-types.html</a>.</li>\\n<li>Mapping(映射)：定义字段名称、数据类型、优化信息（比如是否索引）、分词器，有点类似于数据库中的表结构定义。一个Index对应一个Mapping。</li>\\n<li>Node(节点)：相当于一个ES实例，多个节点构成一个集群。</li>\\n<li>Cluster(集群)：多个ES节点的集合，用于解决单个节点无法处理的搜索需求和数据存储需求。</li>\\n<li>Shard(分片)：Index(索引)被分为多个碎片存储在不同的Node节点上的分片中，以提高性能和吞吐量。</li>\\n<li>Replica(副本)：Index副本，每个Index有一个或多个副本，以提高拓展功能和吞吐量。</li>\\n<li>DSL(查询语言)：基于JSON的查询语言，类似于SQL语句。</li>\\n</ul>","autoDesc":true}`);export{p as comp,s as data};
