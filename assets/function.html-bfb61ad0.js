import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as d,c as l,a,b as i,e as r,d as e}from"./app-9107e99b.js";const p={},o=e('<h1 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h1><h2 id="聚合函数" tabindex="-1"><a class="header-anchor" href="#聚合函数" aria-hidden="true">#</a> 聚合函数</h2><p>最大值，最小值</p><p><strong>聚合函数类型</strong></p><ul><li>AVG()</li><li>SUM()</li><li>MAX()</li><li>MIN()</li><li>COUNT()</li></ul><h2 id="窗口函数" tabindex="-1"><a class="header-anchor" href="#窗口函数" aria-hidden="true">#</a> 窗口函数</h2>',6),c={href:"https://zhuanlan.zhihu.com/p/92654574",target:"_blank",rel:"noopener noreferrer"},u=e(`<p>窗口函数，也叫OLAP函数（Online Anallytical Processing，联机分析处理），可以对数据库数据进行实时分析处理。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&lt;</span>窗口函数<span class="token operator">&gt;</span> <span class="token keyword">over</span> <span class="token punctuation">(</span><span class="token keyword">partition</span> <span class="token keyword">by</span> <span class="token operator">&lt;</span>用于分组的列名<span class="token operator">&gt;</span>
                <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token operator">&lt;</span>用于排序的列名<span class="token operator">&gt;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>&lt;窗口函数&gt;的位置，可以放以下两种函数：</p><p>1） 专用窗口函数，包括后面要讲到的rank, dense_rank, row_number等专用窗口函数。</p><p>2） 聚合函数，如sum. avg, count, max, min等</p><p>因为窗口函数是对where或者group by子句处理后的结果进行操作，所以<strong>窗口函数原则上只能写在select子句中</strong>。</p><p>1）同时具有分组和排序的功能</p><p>2）不减少原表的行数</p><p>加distinct会显著提速</p><ul><li>rank, dense_rank, row_number</li><li>lag</li><li>lead</li></ul><h3 id="前后类" tabindex="-1"><a class="header-anchor" href="#前后类" aria-hidden="true">#</a> 前后类</h3><p><strong>Lag</strong> 和<strong>Lead</strong> 函数可以在一次查询中取出同一字段的<strong>前N行</strong> 的数据和<strong>后N行</strong> 的值。这种操作可以使用对相同表的表连接来实现，不过使用LAG和LEAD有更高的效率。</p><p><code>Lead (expression, offset, default) over(partition-clause order-by-clause)</code></p><p>参数说明：</p><ul><li>offset 偏移，表示查询其后第n条记录， 如果不提供这个参数，就是默认为1；</li><li>default 默认值，如果没有找到。如果没有设置，且找不到，那么就返回Null；</li><li>query_partition_clause 分区语句，对结果集合分区的语句，是可选的，如果没有就是所有的一个分区；</li><li>Order_by_clause 排序语句 必须需要 , 如果没有order by 子句，就不是“连续”的。</li></ul><p>Lead向下（后），Lag向上（前）</p><h2 id="处理函数" tabindex="-1"><a class="header-anchor" href="#处理函数" aria-hidden="true">#</a> 处理函数</h2><h3 id="字符串处理函数" tabindex="-1"><a class="header-anchor" href="#字符串处理函数" aria-hidden="true">#</a> 字符串处理函数</h3><h3 id="数字处理函数" tabindex="-1"><a class="header-anchor" href="#数字处理函数" aria-hidden="true">#</a> 数字处理函数</h3><p>在 SQL 中，可以使用 ROUND 函数来保留指定位数的小数。ROUND 函数的语法如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ROUND(number, decimal_places)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中，number 是要进行舍入的数字，decimal_places 是要保留的小数位数。例如，要将一个数保留两位小数，可以使用以下 SQL 语句：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SELECT ROUND(number, 2) FROM table_name;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中，number 是要进行舍入的数字，2 是要保留的小数位数。执行该 SQL 语句后，将返回一个保留两位小数的结果集。</p><p>需要注意的是，ROUND 函数会根据第二个参数进行四舍五入操作。如果要对小数进行截断操作，可以使用 TRUNCATE 函数。TRUNCATE 函数的语法如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>TRUNCATE(number, decimal_places)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中，number 是要进行截断的数字，decimal_places 是要保留的小数位数。例如，要将一个数截断到两位小数，可以使用以下 SQL 语句：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SELECT TRUNCATE(number, 2) FROM table_name;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行该 SQL 语句后，将返回一个截断到两位小数的结果集。</p><h3 id="日期处理函数" tabindex="-1"><a class="header-anchor" href="#日期处理函数" aria-hidden="true">#</a> 日期处理函数</h3><p><code>TIMESTAMPDIFF</code></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>ADDDATE: ADDDATE<span class="token punctuation">(</span><span class="token keyword">date</span><span class="token punctuation">,</span> <span class="token keyword">INTERVAL</span> <span class="token keyword">value</span> addunit<span class="token punctuation">)</span> 
<span class="token comment">#ADDDATE(&#39;yyyyMMdd&#39;,INTERVAL 1 day)</span>

DATEDIFF: DATEDIFF<span class="token punctuation">(</span>date1<span class="token punctuation">,</span> date2<span class="token punctuation">)</span> <span class="token comment">#date1-date2</span>

TIMESTAMPDIFF: TIMESTAMPDIFF<span class="token punctuation">(</span><span class="token keyword">DAY</span><span class="token punctuation">,</span><span class="token string">&#39;2023-01-01&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2022-12-21&#39;</span><span class="token punctuation">)</span>
DATE_SUB: DATE_SUB<span class="token punctuation">(</span><span class="token string">&#39;2023-12-29&#39;</span><span class="token punctuation">,</span><span class="token keyword">INTERVAL</span> <span class="token number">2</span> <span class="token keyword">DAY</span><span class="token punctuation">)</span> <span class="token comment">#2023-12-27</span>
DATE_ADD: 同上
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ADDDATE()函数用于将指定的时间间隔添加到日期值date是表示日期的值，它可以是 String、DATE（YEAR、MONTH 和 DAY）、DATETIME（HOURS、MINUTES 或 SECONDS）或 TIMESTAMP 类型。</p><p>ADDDATE( date , INTERVAL value addunit )</p><p>ADDDATE( date , days )</p><table><thead><tr><th>date</th><th>必填。要修改的日期</th></tr></thead><tbody><tr><td>days</td><td>必填。要添加到日期的天数</td></tr><tr><td>value</td><td>必填。要添加的时间/日期间隔的值。允许正值和负值</td></tr><tr><td>addunit</td><td>必填。要添加的间隔类型。可以是以下值之一：MICROSECON 、 DSECOND、MINUTE、HOUR、DAY、WEEK、MONTH、QUARTER、YEAR、 SECOND_MICROSECOND、YEAR_MONTH、MINUTE_MICROSECOND、MINUTE_SECOND 、HOUR_MICROSECOND、HOUR_SECOND 、HOUR_MINUTE、DAY_MICROSECOND、DAY_SECOND、DAY_MINUTE、DAY_HOUR</td></tr></tbody></table><p><code>update salary set sex=IF(sex=&#39;f&#39;,&#39;m&#39;,&#39;f&#39;)</code></p>`,37);function h(m,v){const n=t("ExternalLinkIcon");return d(),l("div",null,[o,a("p",null,[a("a",c,[i("https://zhuanlan.zhihu.com/p/92654574"),r(n)])]),u])}const D=s(p,[["render",h],["__file","function.html.vue"]]);export{D as default};
