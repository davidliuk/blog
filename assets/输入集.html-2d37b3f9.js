import{_ as n,V as s,W as a,a0 as t}from"./framework-705b829b.js";const p={},e=t(`<h1 id="输入集" tabindex="-1"><a class="header-anchor" href="#输入集" aria-hidden="true">#</a> 输入集</h1><h2 id="排序数组" tabindex="-1"><a class="header-anchor" href="#排序数组" aria-hidden="true">#</a> 排序数组</h2><p>以下题目均默认在非严格递增的数组上搜索，如果在非严格递减的数组上搜索，仅需把大于小于号取反，如&gt;=变为&lt;=，&lt;=变为&gt;=</p><p>问题列表见右侧TOC目录：</p><h3 id="在排序数组中查找数字" tabindex="-1"><a class="header-anchor" href="#在排序数组中查找数字" aria-hidden="true">#</a> 在排序数组中查找数字</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// in: nums[], target</span>
<span class="token keyword">int</span> pos <span class="token operator">=</span> <span class="token function">searchFirst</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> nums<span class="token punctuation">[</span>pos<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token operator">?</span> pos<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在排序数组中查找数字第一个位置" tabindex="-1"><a class="header-anchor" href="#在排序数组中查找数字第一个位置" aria-hidden="true">#</a> 在排序数组中查找数字第一个位置</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// in: nums[], target</span>
<span class="token keyword">int</span> pos <span class="token operator">=</span> <span class="token function">searchFirst</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> nums<span class="token punctuation">[</span>pos<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token operator">?</span> pos<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在排序数组中查找数字插入位置" tabindex="-1"><a class="header-anchor" href="#在排序数组中查找数字插入位置" aria-hidden="true">#</a> 在排序数组中查找数字插入位置</h3><p>查找数字插入位置，如果已经存在则返回位置</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// in: nums[], target</span>
<span class="token keyword">int</span> pos <span class="token operator">=</span> <span class="token function">searchFirst</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> pos<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在排序数组中查找数字末一个位置" tabindex="-1"><a class="header-anchor" href="#在排序数组中查找数字末一个位置" aria-hidden="true">#</a> 在排序数组中查找数字末一个位置</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// in: nums[], target</span>
<span class="token keyword">int</span> pos <span class="token operator">=</span> <span class="token function">searchLast</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> nums<span class="token punctuation">[</span>pos<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token operator">?</span> pos<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在排序数组中查找数字的范围" tabindex="-1"><a class="header-anchor" href="#在排序数组中查找数字的范围" aria-hidden="true">#</a> 在排序数组中查找数字的范围</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// in: nums[], target</span>
<span class="token keyword">int</span> first <span class="token operator">=</span> <span class="token function">searchFirst</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> last <span class="token operator">=</span> <span class="token function">searchLast</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> nums<span class="token punctuation">[</span>first<span class="token punctuation">]</span> <span class="token operator">!=</span> target<span class="token operator">?</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>first<span class="token punctuation">,</span> last<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在排序数组中查找数字的个数" tabindex="-1"><a class="header-anchor" href="#在排序数组中查找数字的个数" aria-hidden="true">#</a> 在排序数组中查找数字的个数</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// in: nums[], target</span>
<span class="token keyword">int</span> first <span class="token operator">=</span> <span class="token function">searchFirst</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> last <span class="token operator">=</span> <span class="token function">searchLast</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> nums<span class="token punctuation">[</span>first<span class="token punctuation">]</span> <span class="token operator">!=</span> target<span class="token operator">?</span> <span class="token number">0</span><span class="token operator">:</span> last <span class="token operator">-</span> first <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在排序矩阵中查找数字" tabindex="-1"><a class="header-anchor" href="#在排序矩阵中查找数字" aria-hidden="true">#</a> 在排序矩阵中查找数字</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 排序矩阵，每一行从左往右递增，且下一行最小元素比上一行最大元素大</span>
<span class="token comment">// 二维坐标转换一维坐标</span>
<span class="token comment">// x, y -&gt; x * m + y</span>
<span class="token comment">// index -&gt; x = index / m, y = index % m</span>
<span class="token keyword">boolean</span> <span class="token function">searchMatrix</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> matrix<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>matrix <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> matrix<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span>
        matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token function">searchFirst</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">*</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token function">get</span><span class="token punctuation">(</span>matrix<span class="token punctuation">,</span> mid<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span>
    
    <span class="token keyword">return</span> <span class="token function">get</span><span class="token punctuation">(</span>matrix<span class="token punctuation">,</span> start<span class="token punctuation">)</span> <span class="token operator">==</span> target<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> matrix<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> x <span class="token operator">=</span> index <span class="token operator">/</span> matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span> y <span class="token operator">=</span> index <span class="token operator">%</span> matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">return</span> matrix<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="转序数组" tabindex="-1"><a class="header-anchor" href="#转序数组" aria-hidden="true">#</a> 转序数组</h2><h3 id="山峰数组" tabindex="-1"><a class="header-anchor" href="#山峰数组" aria-hidden="true">#</a> 山峰数组</h3><h3 id="旋转数组" tabindex="-1"><a class="header-anchor" href="#旋转数组" aria-hidden="true">#</a> 旋转数组</h3>`,22),o=[e];function c(l,u){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","输入集.html.vue"]]);export{r as default};
