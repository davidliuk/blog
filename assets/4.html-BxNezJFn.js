import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as o,o as i}from"./app-CybQbXIt.js";const a={};function s(r,e){return i(),n("div",null,e[0]||(e[0]=[o('<h1 id="quiz-4" tabindex="-1"><a class="header-anchor" href="#quiz-4"><span>Quiz 4</span></a></h1><h3 id="q1" tabindex="-1"><a class="header-anchor" href="#q1"><span>Q1</span></a></h3><h3 id="question-3" tabindex="-1"><a class="header-anchor" href="#question-3"><span>Question 3</span></a></h3><p>Can the memory footprint of a half-edge mesh be known simply by being told how many Faces, Half-Edges, and Vertices are in the mesh, and none of the connectivity information? Why or why not?</p><hr><p>Yes, because half-edge mesh has fixed size of data structure elements; each face, half-edge, and vertex uses a fixed amount of memory, their counts alone determine the total footprint without needing connectivity details. The actual connectivity (which elements point to which) does not affect the amount of memory required to store these pointers; it only affects their values. Since the sizes of the data fields are constant, the total memory footprint depends only on the number of elements.</p><h3 id="question-4" tabindex="-1"><a class="header-anchor" href="#question-4"><span>Question 4</span></a></h3><p>Why do we use vectors of unique pointers to own our mesh components&#39; memory, rather than having every mesh component store shared pointers to its connected elements? Your answer should consider both the runtime tradeoff of unique vs shared pointers as well as code organization.</p><hr><p>We use unique pointers to manage memory for mesh components because they avoid the overhead of reference counting required by shared pointers, improving runtime performance. Unique pointers also provide clear, single ownership of each component&#39;s memory, preventing cyclic dependencies and simplifying memory management, making the code more maintainable.</p>',10)]))}const c=t(a,[["render",s],["__file","4.html.vue"]]),d=JSON.parse(`{"path":"/education/ms/5600/quiz/4.html","title":"Quiz 4","lang":"en-US","frontmatter":{"description":"Quiz 4 Q1 Question 3 Can the memory footprint of a half-edge mesh be known simply by being told how many Faces, Half-Edges, and Vertices are in the mesh, and none of the connect...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/education/ms/5600/quiz/4.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"Quiz 4"}],["meta",{"property":"og:description","content":"Quiz 4 Q1 Question 3 Can the memory footprint of a half-edge mesh be known simply by being told how many Faces, Half-Edges, and Vertices are in the mesh, and none of the connect..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-09T05:50:09.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-09T05:50:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Quiz 4\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-09T05:50:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":3,"title":"Q1","slug":"q1","link":"#q1","children":[]},{"level":3,"title":"Question 3","slug":"question-3","link":"#question-3","children":[]},{"level":3,"title":"Question 4","slug":"question-4","link":"#question-4","children":[]}],"git":{"createdTime":1731131409000,"updatedTime":1731131409000,"contributors":[{"name":"David Liu","email":"liudawei@seas.upenn.edu","commits":1}]},"readingTime":{"minutes":0.72,"words":217},"filePathRelative":"education/ms/5600/quiz/4.md","localizedDate":"November 9, 2024","excerpt":"\\n<h3>Q1</h3>\\n<h3>Question 3</h3>\\n<p>Can the memory footprint of a half-edge mesh be known simply by being told how many Faces, Half-Edges, and Vertices are in the mesh, and none of the connectivity information? Why or why not?</p>\\n<hr>\\n<p>Yes, because half-edge mesh has fixed size of data structure elements; each face, half-edge, and vertex uses a fixed amount of memory, their counts alone determine the total footprint without needing connectivity details. The actual connectivity (which elements point to which) does not affect the amount of memory required to store these pointers; it only affects their values. Since the sizes of the data fields are constant, the total memory footprint depends only on the number of elements.</p>","autoDesc":true}`);export{c as comp,d as data};
