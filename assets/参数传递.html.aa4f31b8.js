import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as i,f as h}from"./app.133d30c8.js";const p={},r=h('<h1 id="参数传递" tabindex="-1"><a class="header-anchor" href="#参数传递" aria-hidden="true">#</a> 参数传递</h1><p>值传递、引用传递、</p><p>指针传递（C类特有）</p><h3 id="值传递" tabindex="-1"><a class="header-anchor" href="#值传递" aria-hidden="true">#</a> 值传递</h3><p>文件复制</p><p>Java的八大基本数据类型都是值传递</p><p>C++中默认值传递</p><p>Python中没有值传递</p><p>Python的不可变类型可以认为是值传递的（其实本质上还是引用传递）</p><h3 id="引用传递" tabindex="-1"><a class="header-anchor" href="#引用传递" aria-hidden="true">#</a> 引用传递</h3><p>可以理解为别名、代号、文件的快捷方式</p><p>Java除了基本数据类型以外的其他数据都是引用传递</p><p>C++中在参数列表中加地址符&amp;修饰</p><p>Python中全是引用传递</p><h3 id="数组的引用传递" tabindex="-1"><a class="header-anchor" href="#数组的引用传递" aria-hidden="true">#</a> 数组的引用传递</h3><h3 id="修改实例和修改引用" tabindex="-1"><a class="header-anchor" href="#修改实例和修改引用" aria-hidden="true">#</a> 修改实例和修改引用</h3><p>&quot;.&quot;, &quot;[]&quot;修改的是实例</p><p>否则修改的是引用</p><p>堆空间、</p><ul><li>存放new得到的对象</li><li>无限制（剩余内存的大小）</li></ul><p>栈空间</p><ul><li>存放对象的引用</li><li>值类型变量</li><li>C++函数中的数组（C++危险的地方）</li><li>有限制，一般很小，MB量级</li><li>函数调用栈</li></ul><h4 id="函数调用栈" tabindex="-1"><a class="header-anchor" href="#函数调用栈" aria-hidden="true">#</a> 函数调用栈</h4><p>每调用一个函数就放入到筒里，</p><p>递归需谨慎</p><p>递归调用容易爆栈、人为调用栈不会爆栈</p><p>出发在c/c++的函数中定义大数组 -- 危险行为</p><h3 id="递归三要素" tabindex="-1"><a class="header-anchor" href="#递归三要素" aria-hidden="true">#</a> 递归三要素</h3><p>递归的定义</p><p>递归的拆解</p><p>递归的出口</p>',31),d=[r];function t(n,l){return e(),i("div",null,d)}const s=a(p,[["render",t],["__file","参数传递.html.vue"]]);export{s as default};
