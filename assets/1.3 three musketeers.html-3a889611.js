import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as d,c as t,d as a}from"./app-9107e99b.js";const i={},r=a(`<h1 id="三剑客" tabindex="-1"><a class="header-anchor" href="#三剑客" aria-hidden="true">#</a> 三剑客</h1><blockquote><p>The Three Musketeers</p></blockquote><p>Linux 三剑客：grep、sed、awk</p><h2 id="grep" tabindex="-1"><a class="header-anchor" href="#grep" aria-hidden="true">#</a> grep</h2><p>Global Regular Expression Print</p><ul><li>-o选项表示只输出匹配到的内容，而不是整行；</li><li>-E选项表示使用扩展的正则表达式；</li><li>\\b表示单词边界，用于确保匹配的是完整的IP地址；</li><li>[0-9]{1,3}表示匹配1到3位数字；</li><li>.表示匹配点号</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">grep</span> <span class="token parameter variable">-oE</span> <span class="token string">&quot;<span class="token entity" title="\\b">\\b</span>([0-9]{1,3}\\.){3}[0-9]{1,3}<span class="token entity" title="\\b">\\b</span>&quot;</span> logfile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="regular-expressions-正则表达式" tabindex="-1"><a class="header-anchor" href="#regular-expressions-正则表达式" aria-hidden="true">#</a> REGULAR EXPRESSIONS 正则表达式</h3><h4 id="括号表达式" tabindex="-1"><a class="header-anchor" href="#括号表达式" aria-hidden="true">#</a> 括号表达式</h4><p>括号表达式：[], ()</p><h4 id="字符类" tabindex="-1"><a class="header-anchor" href="#字符类" aria-hidden="true">#</a> 字符类</h4><p>POSIX 字符类</p><ul><li><code>[:alnum:]</code>：匹配任意字母和数字字符。</li><li><code>[:alpha:]</code>：匹配任意字母字符。</li><li><code>[:blank:]</code>：匹配空格和制表符（Tab）字符。</li><li><code>[:cntrl:]</code>：匹配控制字符。</li><li><code>[:digit:]</code>：匹配任意数字字符。</li><li><code>[:graph:]</code>：匹配可打印字符，不包括空格。</li><li><code>[:lower:]</code>：匹配任意小写字母字符。</li><li><code>[:print:]</code>：匹配可打印字符，包括空格。</li><li><code>[:punct:]</code>：匹配标点符号和其他特殊字符。</li><li><code>[:space:]</code>：匹配空白字符，包括空格、制表符、换行符等。</li><li><code>[:upper:]</code>：匹配任意大写字母字符。</li><li><code>[:xdigit:]</code>：匹配十六进制数字字符。</li></ul><h4 id="repetition" tabindex="-1"><a class="header-anchor" href="#repetition" aria-hidden="true">#</a> Repetition</h4><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td><code>?</code></td><td>前面的项是可选的，最多匹配一次。</td></tr><tr><td><code>*</code></td><td>前面的项将被匹配零次或多次。</td></tr><tr><td><code>+</code></td><td>前面的项将被匹配一次或多次。</td></tr><tr><td><code>{n}</code></td><td>前面的项恰好匹配 n 次。</td></tr><tr><td><code>{n,}</code></td><td>前面的项匹配 n 次或更多次。</td></tr><tr><td><code>{,m}</code></td><td>前面的项最多匹配 m 次。这是 GNU 扩展。</td></tr><tr><td><code>{n,m}</code></td><td>前面的项至少匹配 n 次，但不超过 m 次。</td></tr></tbody></table><h2 id="sed" tabindex="-1"><a class="header-anchor" href="#sed" aria-hidden="true">#</a> sed</h2><p>Stream Editor</p><ul><li><code>s</code>: 替换</li><li><code>d</code>: 删除</li><li><code>i</code>: 插入</li></ul><h2 id="awk" tabindex="-1"><a class="header-anchor" href="#awk" aria-hidden="true">#</a> awk</h2><p>awk 是三位创始人名字的简称</p><p action="">pattern</p>`,21),o=[r];function l(c,n){return d(),t("div",null,o)}const p=e(i,[["render",l],["__file","1.3 three musketeers.html.vue"]]);export{p as default};
