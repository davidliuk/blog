import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,d as a,o as i}from"./app-DtA_0glx.js";const n={};function r(s,e){return i(),o("div",null,e[0]||(e[0]=[a('<h2 id="ec" tabindex="-1"><a class="header-anchor" href="#ec"><span>EC</span></a></h2><h3 id="联机" tabindex="-1"><a class="header-anchor" href="#联机"><span>联机</span></a></h3><ul><li>本地：地图的主人是host，大家和他联系去交互数据</li><li>服务器：×</li></ul><p>同步：pos，camera</p><p>还得渲染动作了</p><p>如果做生物的话，每个动物的信息也需要同步了，动态的比较复杂，还涉及寻路</p><h3 id="ray-tracing" tabindex="-1"><a class="header-anchor" href="#ray-tracing"><span>Ray Tracing</span></a></h3><p>影子</p><p>post processing Camera Overlay</p><ul><li>南瓜头</li><li>水下</li><li>中毒</li><li>致盲</li></ul><hr><ul><li><strong>Post-process Camera Overlay (20 points):</strong> When the <code>Player</code> enters <code>WATER</code> or <code>LAVA</code> blocks, rather than displaying a simple blue or red screen overlay, apply some sort of interesting fluid-like screen distortion and coloration instead. You should use noise functions to distort your player&#39;s view, and the distortion should animate as a function of time.</li><li><strong>Third-Person Mode (20 points):</strong> Allow the player to switch to a third-person camera view by pressing a key on the keyboard. In this view, the <code>Player</code> must be visible to the user as a 3D <em>animated</em> model. The model&#39;s animations must include leg movement when walking and arm movement when adding or removing a block. The <code>Camera</code> must still face where the <code>Player</code> is facing, but should be located somewhere behind the <code>Player</code>.</li></ul>',12)]))}const d=t(n,[["render",r],["__file","ms3.html.vue"]]),p=JSON.parse(`{"path":"/education/ms/5600/pj/ms3.html","title":"","lang":"en-US","frontmatter":{"description":"EC 联机 本地：地图的主人是host，大家和他联系去交互数据 服务器：× 同步：pos，camera 还得渲染动作了 如果做生物的话，每个动物的信息也需要同步了，动态的比较复杂，还涉及寻路 Ray Tracing 影子 post processing Camera Overlay 南瓜头 水下 中毒 致盲 Post-process Camera Ov...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/education/ms/5600/pj/ms3.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:description","content":"EC 联机 本地：地图的主人是host，大家和他联系去交互数据 服务器：× 同步：pos，camera 还得渲染动作了 如果做生物的话，每个动物的信息也需要同步了，动态的比较复杂，还涉及寻路 Ray Tracing 影子 post processing Camera Overlay 南瓜头 水下 中毒 致盲 Post-process Camera Ov..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-09T05:50:09.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-09T05:50:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-09T05:50:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":2,"title":"EC","slug":"ec","link":"#ec","children":[{"level":3,"title":"联机","slug":"联机","link":"#联机","children":[]},{"level":3,"title":"Ray Tracing","slug":"ray-tracing","link":"#ray-tracing","children":[]}]}],"git":{"createdTime":1731131409000,"updatedTime":1731131409000,"contributors":[{"name":"David Liu","email":"liudawei@seas.upenn.edu","commits":1}]},"readingTime":{"minutes":0.74,"words":221},"filePathRelative":"education/ms/5600/pj/ms3.md","localizedDate":"November 9, 2024","excerpt":"<h2>EC</h2>\\n<h3>联机</h3>\\n<ul>\\n<li>本地：地图的主人是host，大家和他联系去交互数据</li>\\n<li>服务器：×</li>\\n</ul>\\n<p>同步：pos，camera</p>\\n<p>还得渲染动作了</p>\\n<p>如果做生物的话，每个动物的信息也需要同步了，动态的比较复杂，还涉及寻路</p>\\n<h3>Ray Tracing</h3>\\n<p>影子</p>\\n<p>post processing Camera Overlay</p>\\n<ul>\\n<li>南瓜头</li>\\n<li>水下</li>\\n<li>中毒</li>\\n<li>致盲</li>\\n</ul>\\n<hr>\\n<ul>\\n<li><strong>Post-process Camera Overlay (20 points):</strong> When the <code>Player</code> enters <code>WATER</code> or <code>LAVA</code> blocks, rather than displaying a simple blue or red screen overlay, apply some sort of interesting fluid-like screen distortion and coloration instead. You should use noise functions to distort your player's view, and the distortion should animate as a function of time.</li>\\n<li><strong>Third-Person Mode (20 points):</strong> Allow the player to switch to a third-person camera view by pressing a key on the keyboard. In this view, the <code>Player</code> must be visible to the user as a 3D <em>animated</em> model. The model's animations must include leg movement when walking and arm movement when adding or removing a block. The <code>Camera</code> must still face where the <code>Player</code> is facing, but should be located somewhere behind the <code>Player</code>.</li>\\n</ul>","autoDesc":true}`);export{d as comp,p as data};
