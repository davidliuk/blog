import{_ as e,V as n,W as t,X as s,Y as a,a0 as l}from"./framework-705b829b.js";const m={},i=s("h1",{id:"哈希函数",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#哈希函数","aria-hidden":"true"},"#"),a(" 哈希函数")],-1),r=s("h2",{id:"hash函数",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#hash函数","aria-hidden":"true"},"#"),a(" Hash函数")],-1),p=s("p",null,"哈希函数",-1),c=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"H"),s("mo",null,":"),s("mo",{stretchy:"false"},"{"),s("mn",null,"0"),s("mo",{separator:"true"},","),s("mn",null,"1"),s("msup",null,[s("mo",{stretchy:"false"},"}"),s("mo",null,"∗")]),s("mo",null,"→"),s("mo",{stretchy:"false"},"{"),s("mn",null,"0"),s("mo",{separator:"true"},","),s("mn",null,"1"),s("msup",null,[s("mo",{stretchy:"false"},"}"),s("mi",null,"k")]),s("mo",{separator:"true"},","),s("mi",null,"k"),s("mo",null,"∈"),s("msup",null,[s("mi",null,"N"),s("mo",null,"+")])]),s("annotation",{encoding:"application/x-tex"},"H: \\{0,1\\}^*\\rightarrow\\{0,1\\}^k,k\\in N^+")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},":"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"{"),s("span",{class:"mord"},"0"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},[s("span",{class:"mclose"},"}"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6887em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mbin mtight"},"∗")])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0991em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"{"),s("span",{class:"mord"},"0"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},[s("span",{class:"mclose"},"}"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8491em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03148em"}},"k")])])])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7713em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7713em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mbin mtight"},"+")])])])])])])])])])])],-1),h=s("p",null,"可以把任意长度的输入，映射到固定长度上的输出",-1),o=s("p",null,"性质：",-1),g=s("ul",null,[s("li",null,"collision- resistant 抗碰撞"),s("li",null,"hiding 隐藏"),s("li",null,"Puzzle- friendly")],-1),u=s("h3",{id:"collision-resistant-抗碰撞",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#collision-resistant-抗碰撞","aria-hidden":"true"},"#"),a(" collision- resistant 抗碰撞")],-1),d=s("p",null,[a("定义："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"∀"),s("mi",null,"x"),s("mi",{mathvariant:"normal"},"¬"),s("mi",{mathvariant:"normal"},"∃"),s("mi",null,"y"),s("mo",{mathvariant:"normal"},"≠"),s("mi",null,"x"),s("mo",{separator:"true"},","),s("mi",null,"H"),s("mo",{stretchy:"false"},"("),s("mi",null,"x"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mi",null,"H"),s("mo",{stretchy:"false"},"("),s("mi",null,"y"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\forall x\\neg\\exist y\\ne x,H(x)=H(y)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},"∀"),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mord"},"¬∃"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},[s("span",{class:"mrel"},[s("span",{class:"mord vbox"},[s("span",{class:"thinbox"},[s("span",{class:"rlap"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"inner"},[s("span",{class:"mord"},[s("span",{class:"mrel"},"")])]),s("span",{class:"fix"})])])])]),s("span",{class:"mrel"},"=")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mclose"},")")])])])],-1),y=l('<p>即x与H(x)是绑定关系，</p><p>如迅雷文件下面有一个MD5, SHA1, SHA256，来保证下载的文件与上传的文件相同</p><p>牵一发而动全身，任何轻微的改动，都会对MD5值造成重大的改变</p><p>任何大小的文件，都能映射到一个固定长度的字符串上</p><ul><li>用的比较多的就是：SHA-256</li><li>MD、SHA-1被淘汰，被破解了</li></ul><p>hash as message digest 信息摘要，不用担心内容溢出</p><h3 id="hiding-隐藏性" tabindex="-1"><a class="header-anchor" href="#hiding-隐藏性" aria-hidden="true">#</a> Hiding 隐藏性</h3><p>给H(x)很难找到x</p><p>预测股票哪支大涨</p><p>承诺</p><p>让大家看部分，证明确实有答案，但是不能全让看</p><p>知道花钱的事实，但是不知道花了多少钱</p><p>每次给看部分，验证正确性，然后，</p><p>在不让别人知道答案的情况下，证明我知道解法。</p><p><strong>零知识证明 zero-knowledge proof</strong></p><h3 id="puzzle-friendly" tabindex="-1"><a class="header-anchor" href="#puzzle-friendly" aria-hidden="true">#</a> Puzzle- friendly</h3><p>对每个可能输出值y，如果k是</p>',17),x=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"H"),s("mo",{stretchy:"false"},"("),s("mi",null,"k"),s("mi",{mathvariant:"normal"},"∣"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"x"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mi",null,"y")]),s("annotation",{encoding:"application/x-tex"},"H(k||x)=y")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord"},"∣∣"),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y")])])])],-1),_=l('<p>比特币要求每10分钟出一块</p><p>挖矿x是一个随机数，</p><h2 id="哈希指针和数据结构" tabindex="-1"><a class="header-anchor" href="#哈希指针和数据结构" aria-hidden="true">#</a> 哈希指针和数据结构</h2><p>哈希函数抗碰撞，用哈希函数来作为指针，找到下一位区块</p><p>两类节点</p><ul><li>权节点：需要记录所有的交易信息</li><li>轻节点：只保留一个哈希，这个哈希就可以囊括整个链所有的信息</li></ul><p>根节点哈希值会包含所有</p><p>实验有这个默克尔哈希树，自己构建</p><p>随便选去一个哈希函数，然后可以拿数组实现这个算法</p><p>证明元素不存在于默克尔树的方法：对data排序，就可以看到这个元素是否在里面</p><p>Tree holds many items but just need to remember the root hash</p><p>Can verify membership in O(log n) time/space</p><p>Variant: sorted Merkle tree can verify non-membership in O(log n)</p><p>(show items before, after the missing one)</p>',14),f=[i,r,p,c,h,o,g,u,d,y,x,_];function v(b,k){return n(),t("div",null,f)}const w=e(m,[["render",v],["__file","4. 哈希函数.html.vue"]]);export{w as default};
