const e=JSON.parse(`{"key":"v-6cb8d900","path":"/cs/algo/summary/13.%20%E9%9D%9E%E9%80%92%E5%BD%92%E5%8F%98%E9%87%8F%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86.html","title":"","lang":"en-US","frontmatter":{"description":"Binary Search Tree Iterator 实现hasNext和next两个方法 这个主要就需要背了 非递归需要实现栈 这个栈的定义是栈内元素是所有路径上的元素 截屏2022-07-11 18.05.24 这个实现比较灵活，这样通过把right和left互换，实现prev操作找前继结点 另一种非递归的实现 一个节点一旦被print过，就可以...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/algo/summary/13.%20%E9%9D%9E%E9%80%92%E5%BD%92%E5%8F%98%E9%87%8F%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:description","content":"Binary Search Tree Iterator 实现hasNext和next两个方法 这个主要就需要背了 非递归需要实现栈 这个栈的定义是栈内元素是所有路径上的元素 截屏2022-07-11 18.05.24 这个实现比较灵活，这样通过把right和left互换，实现prev操作找前继结点 另一种非递归的实现 一个节点一旦被print过，就可以..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-04T02:34:19.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-04T02:34:19.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/cs/algo/summary/13.%20%E9%9D%9E%E9%80%92%E5%BD%92%E5%8F%98%E9%87%8F%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86.html"}]]},"excerpt":"","headers":[],"git":{"createdTime":1670121259000,"updatedTime":1670121259000,"contributors":[{"name":"DavidLiu","email":"l729641074@163.com","commits":1}]},"readingTime":{"minutes":0.75,"words":224},"filePathRelative":"cs/algo/summary/13. 非递归变量二叉树遍历.md","localizedDate":"December 4, 2022"}`);export{e as data};
