const e=JSON.parse(`{"key":"v-2b707058","path":"/cs/database/mysql/index/4.%20%E4%BD%BF%E7%94%A8%E8%A7%84%E5%88%99.html","title":"使用原则","lang":"en-US","frontmatter":{"description":"使用原则 最左前缀法则 如果索引了多列（联合索引），要遵守最左前缀法则。最左前缀法则指的是查询从索引的最左列开始，并且不跳过索引中的列。 如果跳跃某一列，索引将部分失效(后面的字段索引失效)。 最左前缀匹配原则指的是，在使用联合索引时，MySQL 会根据联合索引中的字段顺序，从左到右依次到查询条件中去匹配，如果查询条件中存在与联合索引中最左侧字段相匹配的字段，则就会使用该字段过滤一批数据，直至联合索引中全部字段匹配完成，或者在执行过程中遇到范围查询（如 &gt;、&lt;）才会停止匹配。对于 &gt;=、&lt;=、BETWEEN、like 前缀匹配的范围查询，并不会停止匹配。所以，我们在使用联合索引时，可以将区分度高的字段放在最左边，这也可以过滤更多数据。","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/database/mysql/index/4.%20%E4%BD%BF%E7%94%A8%E8%A7%84%E5%88%99.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"使用原则"}],["meta",{"property":"og:description","content":"使用原则 最左前缀法则 如果索引了多列（联合索引），要遵守最左前缀法则。最左前缀法则指的是查询从索引的最左列开始，并且不跳过索引中的列。 如果跳跃某一列，索引将部分失效(后面的字段索引失效)。 最左前缀匹配原则指的是，在使用联合索引时，MySQL 会根据联合索引中的字段顺序，从左到右依次到查询条件中去匹配，如果查询条件中存在与联合索引中最左侧字段相匹配的字段，则就会使用该字段过滤一批数据，直至联合索引中全部字段匹配完成，或者在执行过程中遇到范围查询（如 &gt;、&lt;）才会停止匹配。对于 &gt;=、&lt;=、BETWEEN、like 前缀匹配的范围查询，并不会停止匹配。所以，我们在使用联合索引时，可以将区分度高的字段放在最左边，这也可以过滤更多数据。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-17T10:10:52.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-05-17T10:10:52.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/cs/database/mysql/index/4.%20%E4%BD%BF%E7%94%A8%E8%A7%84%E5%88%99.html"}]]},"headers":[{"level":2,"title":"最左前缀法则","slug":"最左前缀法则","link":"#最左前缀法则","children":[{"level":3,"title":"索引下推","slug":"索引下推","link":"#索引下推","children":[]},{"level":3,"title":"范围查询","slug":"范围查询","link":"#范围查询","children":[]},{"level":3,"title":"隐式转换","slug":"隐式转换","link":"#隐式转换","children":[]},{"level":3,"title":"模糊查询","slug":"模糊查询","link":"#模糊查询","children":[]}]},{"level":2,"title":"索引失效","slug":"索引失效","link":"#索引失效","children":[{"level":3,"title":"索引列函数","slug":"索引列函数","link":"#索引列函数","children":[]},{"level":3,"title":"索引列隐式转换","slug":"索引列隐式转换","link":"#索引列隐式转换","children":[]},{"level":3,"title":"模糊查询","slug":"模糊查询-1","link":"#模糊查询-1","children":[]},{"level":3,"title":"or 连接的条件","slug":"or-连接的条件","link":"#or-连接的条件","children":[]},{"level":3,"title":"数据分布影响","slug":"数据分布影响","link":"#数据分布影响","children":[]}]},{"level":2,"title":"SQL 提示","slug":"sql-提示","link":"#sql-提示","children":[]},{"level":2,"title":"覆盖索引","slug":"覆盖索引","link":"#覆盖索引","children":[]},{"level":2,"title":"前缀索引","slug":"前缀索引","link":"#前缀索引","children":[]},{"level":2,"title":"单列索引与联合索引","slug":"单列索引与联合索引","link":"#单列索引与联合索引","children":[]},{"level":2,"title":"索引优化方法","slug":"索引优化方法","link":"#索引优化方法","children":[]},{"level":2,"title":"设计原则","slug":"设计原则","link":"#设计原则","children":[]}],"git":{"createdTime":1672746435000,"updatedTime":1684318252000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":4},{"name":"davidliuk","email":"l729641074@163.com","commits":3}]},"readingTime":{"minutes":8.2,"words":2461},"localizedDate":"January 3, 2023","filePathRelative":"cs/database/mysql/index/4. 使用规则.md","excerpt":"<h1> 使用原则</h1>\\n<h2> 最左前缀法则</h2>\\n<p>如果索引了多列（联合索引），要遵守最左前缀法则。最左前缀法则指的是查询从索引的最左列开始，并且不跳过索引中的列。</p>\\n<p>如果跳跃某一列，索引将部分失效(后面的字段索引失效)。</p>\\n<p>最左前缀匹配原则指的是，在使用联合索引时，<strong>MySQL</strong> 会根据联合索引中的字段顺序，从左到右依次到查询条件中去匹配，如果查询条件中存在与联合索引中最左侧字段相匹配的字段，则就会使用该字段过滤一批数据，直至联合索引中全部字段匹配完成，或者在执行过程中遇到范围查询（如 <strong><code>&gt;</code></strong>、<strong><code>&lt;</code></strong>）才会停止匹配。对于 <strong><code>&gt;=</code></strong>、<strong><code>&lt;=</code></strong>、<strong><code>BETWEEN</code></strong>、<strong><code>like</code></strong> 前缀匹配的范围查询，并不会停止匹配。所以，我们在使用联合索引时，可以将区分度高的字段放在最左边，这也可以过滤更多数据。</p>","autoDesc":true}`);export{e as data};
