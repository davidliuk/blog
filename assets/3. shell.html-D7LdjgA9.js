import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as l,o as e}from"./app-DIqbhby7.js";const n={};function h(t,i){return e(),a("div",null,i[0]||(i[0]=[l(`<h1 id="_3-shell" tabindex="-1"><a class="header-anchor" href="#_3-shell"><span>3. Shell</span></a></h1><h3 id="基本语法" tabindex="-1"><a class="header-anchor" href="#基本语法"><span>基本语法</span></a></h3><ol><li>注释：<code>#</code></li><li>输出：<code>echo</code></li><li>输入：<code>read</code>, 从标准输入读入一个字符串</li><li>换行: <code>\\</code>, 一条单一长命令内也可以换行</li></ol><p>第一行文件头<code>#!</code>，标志该文件是 shell 脚本类型。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>文件头：文件的前 16 个 bit（前两个字节/英文字符）是 magic number，来说明文件类型，然后用后面的东西解释（sh 可以 ls 也可以，都行，但是能做的内容不一样多）</p><p>eg. 0xCAFEBABE 是 Java class 类型</p><h3 id="连接命令" tabindex="-1"><a class="header-anchor" href="#连接命令"><span>连接命令</span></a></h3><p>在 Linux 中，可以使用以下符号来连接两个命令：</p><ol><li><p>分号 <code>;</code>: 分号用于分隔两个命令，不考虑前一个命令的执行结果，无论成功与否都会继续执行后续命令。</p></li><li><p>逻辑与 <code>&amp;&amp;</code>: 逻辑与运算符用于连接两个命令，只有前一个命令成功执行（返回状态码为 0）后，才会执行后续命令。</p></li><li><p>逻辑或 <code>||</code>: 逻辑或运算符用于连接两个命令，只有前一个命令失败执行（返回状态码非 0）后，才会执行后续命令。</p></li></ol><p>这些符号可以根据需要在 shell 脚本或命令行中使用，以控制命令的执行顺序和条件。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">command1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">command2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">command3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> || </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">command4</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">command1</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">command2</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">command3</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  || </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">command4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="执行方法" tabindex="-1"><a class="header-anchor" href="#执行方法"><span>执行方法</span></a></h2><ul><li><code>sh [文件名字]</code></li><li><code>chmod -x [文件名字]</code> 增加执行权限，然后 <code>[文件名字]</code></li><li><code>source [文件名字]</code>，将会在当前 shell 中运行 execute 命令</li><li><code>. [文件名字]</code>，将会在当前 shell 中运行 execute 命令，可以接入/修改环境中定义的变量</li></ul><p>脚本语言里面，变量基本上不需要声明类型，直接=赋值即可</p><p>shell 变量名称喜欢全大写，</p><ul><li>单引号：单独当作字符串本身，不会进行转义</li><li>双引号：会进行转义变量或表达式</li><li>连续的字符可以省略引号，但是如果有括号、空格等符号，则“单引号、双引号、花括号等”无法省略。</li></ul><h2 id="变量类型" tabindex="-1"><a class="header-anchor" href="#变量类型"><span>变量类型</span></a></h2><p>在 Shell 脚本中，变量的类型是动态的，也就是说，Shell 不需要显式声明变量的类型。以下是在 Shell 中常见的变量类型：</p><ol><li><p><strong>字符串变量：</strong> 用于存储文本数据。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;John&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>整数变量：</strong> 用于存储整数数据。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">age</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">25</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>数组变量：</strong> 用于存储多个值的列表。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">fruits</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;apple&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;banana&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;orange&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>关联数组变量：</strong> 用于存储键值对的列表。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">declare</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -A</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> person</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">person[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;name&quot;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;John&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">person[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;age&quot;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=25</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>环境变量：</strong> 用于存储系统环境和配置信息。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/usr/local/bin:/usr/bin:/bin&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>只读变量：不允许修改的变量<code>readonly a=&quot;sss&quot;</code></p></li><li><p>局部变量：<code>local</code>，声明函数等代码块中的局部变量</p></li></ol><p>请注意，Shell 中的变量默认都是字符串类型，包括整数变量。如果需要进行数值计算，Shell 会自动进行类型转换。如果需要显式地将变量解释为整数，可以使用<code>declare</code>或<code>typeset</code>命令。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">declare</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> num</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>此外，还可以使用<code>readonly</code>关键字将变量声明为只读，以防止其被修改。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">readonly</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;John&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这些是 Shell 脚本中常见的变量类型。Shell 还支持其他特殊类型，如文件描述符和命令替换等。确保在编写 Shell 脚本时参考相关文档和语法规范。</p><h3 id="可选变量" tabindex="-1"><a class="header-anchor" href="#可选变量"><span>可选变量</span></a></h3><p><code>getopts</code>命令获取和解析命令行选项（options）。解析单个字符的命令行。每个选项使用一个字母表示，后面可以跟一个冒号表示该选项需要一个参数值。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> getopts</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;:a:b:c&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> opt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  case</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $opt</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">    a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">      echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Option -a is set with value </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$OPTARG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ;;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">    b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">      echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Option -b is set with value </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$OPTARG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ;;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">    c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">      echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Option -c is set&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ;;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    \\?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">      echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Invalid option: -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$OPTARG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ;;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  esac</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">done</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="变量引用" tabindex="-1"><a class="header-anchor" href="#变量引用"><span>变量引用</span></a></h3><p>就是在变量名前面 + <code>$</code>符号</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$HELLO</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">HELLO</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">HELLO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">4</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #引用切片完整版，取3开始的4个字符</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">HELLO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">4</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #开头的4个字符，可以随意缺省部分</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">HELLO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">3</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #3开头往后所有字符</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">apps</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[0]</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #apps数组的第0位</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #object关联数组的第name字段</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>变量引用切片，第一位是起始索引，第二位是保留的位数</p><h4 id="字符串操作" tabindex="-1"><a class="header-anchor" href="#字符串操作"><span>字符串操作</span></a></h4><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$HELLO</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">HELLO</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">HELLO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">4</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #引用切片完整版，取3开始的4个字符</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">HELLO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">4</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #开头的4个字符，可以随意缺省部分</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">HELLO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">3</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #3开头往后所有字符</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">^</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #首字母大写</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">^^</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #全部大写</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #首字母小写</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,,</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #全部小写</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">length</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">string</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #字符串长度</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pattern</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">replacement</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #替换第一个匹配项</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">//</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pattern</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">replacement</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #替换所有匹配项</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="特殊变量" tabindex="-1"><a class="header-anchor" href="#特殊变量"><span>特殊变量</span></a></h4><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$#</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #传入的参数个数</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">$0</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #sh脚本的名</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$n</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #就是输入的第 n 个参数</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">$@</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #所有参数作为独立字符串返回</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$*</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #将所有命令行参数作为单个字符串返回，参数之间使用第一个字符在IFS环境变量中指定的分隔符进行分隔（默认为空格）。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$?</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #The status of last CMD，上一个命令的返回值（成功是0，失败是1等）</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$$</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #PID</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$!</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #最后一个在后台运行的进程的PID</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PIPESTATUS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[@]</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #上一行指令的所有管道的状态</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">BASH_SOURCE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[0]</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #Bash内置的数组，包含了当前正在执行的脚本文件的路径。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字符串（变量值）拼接，直接 echo 后面变量挨着写即可</p><p>变量默认值（常用于取不一定设置的环境变量时）</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">COLOR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">green</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #无的时候用-后面替换</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">COLOR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">green</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #无的时候用=后面替换，并将这个变量赋值</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">COLOR</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #获取COLOR变量的字符串长度</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">COLORS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[@]</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #获取COLORS数组的长度</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">!</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">prefix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">*</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #获取以prefix开头的变量名列表</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">!</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">prefix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #获取以prefix开头的变量名列表</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ps 看进程</p><p>env 是 set 的子集</p><p>export 可以把 set 里面的变量升级为环境变量</p><p>环境变量：可以通过父进程传递给子进程的</p><p>环境变量是在操作系统中定义的全局变量，可以在整个系统中被访问和使用。它们存储了与系统操作和配置相关的信息，如路径、默认设置和用户首选项等。</p><p>在 Shell 脚本中，可以通过以下方式来访问和使用环境变量：</p><ol><li><p>查看环境变量：使用<code>env</code>命令可以列出当前系统中定义的所有环境变量。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">env</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或者使用<code>printenv</code>命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">printenv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>获取环境变量的值：可以使用<code>$</code>符号后跟环境变量的名称来获取其值。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $HOME</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>上述示例中，<code>$HOME</code>表示<code>HOME</code>环境变量的值。</p></li><li><p>设置环境变量：可以使用<code>export</code>命令来设置环境变量。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> MY_VARIABLE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello World&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>上述示例中，<code>MY_VARIABLE</code>是新定义的环境变量，其值为<code>Hello World</code>。通过<code>export</code>命令，将其设置为全局环境变量，可以在脚本的其他地方访问该变量。</p></li><li><p>取消环境变量：可以使用<code>unset</code>命令来取消设置的环境变量。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">unset</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MY_VARIABLE</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>上述示例中，<code>MY_VARIABLE</code>环境变量将被取消，并从环境中移除。</p></li></ol><p>环境变量在 Shell 脚本中非常有用，可以用于存储和传递系统配置、用户首选项和其他重要信息。通过合理地使用环境变量，可以提高脚本的灵活性和可配置性。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$PATH</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #就是加上这个&quot;.&quot;#当前目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">恢复的话就是，PATH</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">2</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="条件测试" tabindex="-1"><a class="header-anchor" href="#条件测试"><span>条件测试</span></a></h3><ul><li><code>test 条件</code></li><li><code>[ 条件 ]</code></li></ul><p>测试工具主要就是<code>$?</code></p><p>其实就是在运行一些命令（实际上并不是在变成）</p><p>0-255，只用了 8 个 bit</p><p>shell 里面 0 是真，其他都是假（与 C 相反）</p><h4 id="权限测试" tabindex="-1"><a class="header-anchor" href="#权限测试"><span>权限测试</span></a></h4><ul><li>test -w 文件名，测试他的执行权限</li><li><code>[ -w a.c ]</code>方括号语法，注意空格一个都不能差，不然报错</li></ul><h4 id="字符测试" tabindex="-1"><a class="header-anchor" href="#字符测试"><span>字符测试</span></a></h4><ul><li><code>!=</code>:</li><li><code>=</code>:</li><li><code>=~</code>: 正则表达式匹配</li></ul><h4 id="数字测试" tabindex="-1"><a class="header-anchor" href="#数字测试"><span>数字测试</span></a></h4><ul><li><code>-gt</code></li><li><code>-lt</code></li><li><code>-ne</code></li><li><code>-eq</code></li></ul><h3 id="命令替换" tabindex="-1"><a class="header-anchor" href="#命令替换"><span>命令替换</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 执行命令</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 执行命令</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&lt;(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 用作将命令的输出作为文本进行处理</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="loop" tabindex="-1"><a class="header-anchor" href="#loop"><span>loop</span></a></h2><h3 id="for" tabindex="-1"><a class="header-anchor" href="#for"><span>for</span></a></h3><p>字符串有空格分割的话，<code>for each</code> 的时候就相当于数组</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> variable</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 执行操作</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">done</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>命令行参数扩展：<code>{prefix..suffix}</code>，如果有多组的话会排列组合，数字可以多位数字，但是字符只能单位字符，否则不解析，字符类会在 ascII 表上的排序。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1..5}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 执行操作，例如打印数字</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">done</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ((</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)); </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 执行操作，例如打印数字</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">done</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="while-until" tabindex="-1"><a class="header-anchor" href="#while-until"><span>while &amp; until</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> condition</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 执行操作</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">done</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">counter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">1</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">until</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$counter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> -gt</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $counter</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    counter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$((</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">counter</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">done</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行数学运算<code>$((1+1))</code></p><h2 id="branch" tabindex="-1"><a class="header-anchor" href="#branch"><span>branch</span></a></h2><h3 id="if" tabindex="-1"><a class="header-anchor" href="#if"><span>if</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [condition]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # code</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">elif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [condition]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # code</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [condition]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # code</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">fi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="case" tabindex="-1"><a class="header-anchor" href="#case"><span>case</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">case</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $opt</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">   pattern1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ;;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">   pattern2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ;;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   *)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ;;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">   \\?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ;;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">esac</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="i-o" tabindex="-1"><a class="header-anchor" href="#i-o"><span>I/O</span></a></h2><p><code>echo</code></p><p><code>read</code>，读取用户输入的字符</p><p><code>tee</code> 可以把命令的流分成两叉，常用在既把输出到文件又输出他</p><h2 id="重定向" tabindex="-1"><a class="header-anchor" href="#重定向"><span>重定向</span></a></h2><h3 id="输出重定向" tabindex="-1"><a class="header-anchor" href="#输出重定向"><span>输出重定向</span></a></h3><p><code>&gt;</code>: 标准输出重定向，覆盖原有内容</p><p><code>&gt;&gt;</code>: 标准输出追加重定向，将命令的标准输出追加到文件中，如果文件不存在则创建。写在末尾</p><p><code>2&gt;</code>: 标准错误输出重定向</p><p><code>n&gt;</code>: 文件描述符输出重定向</p><p><code>$&gt;</code>, <code>&gt;$</code>: 标准输出和错误输出合并重定向</p><p><code>m&gt;&amp;n</code>: 文件描述符合并重定向</p><h3 id="输入重定向" tabindex="-1"><a class="header-anchor" href="#输入重定向"><span>输入重定向</span></a></h3><p><code>&lt;</code>: 标准输入重定向</p><p><code>&lt;&lt;</code>: Here Document，通过文档重定向将一块文本作为命令的输入。在 Here Document 中，文本块的起始标记和结束标记必须单独占据一行，并且结束标记必须顶格写。标记的命名可以根据实际情况来选择，但必须保证起始标记和结束标记一致。</p><p><code>n&lt;</code>: 文件描述符输入重定向</p><h2 id="引号" tabindex="-1"><a class="header-anchor" href="#引号"><span>引号</span></a></h2><p>&#39; &#39;只是当做字符串</p><p>&quot; &quot;可以转义里面的变量或者公式进行输出</p><p>\` \`命令替换</p><h2 id="函数" tabindex="-1"><a class="header-anchor" href="#函数"><span>函数</span></a></h2><p>想要获取输入的参数就用，$1, $2 等</p><p><code>return</code> 返回值，只能是在 0-255 之间的整数，调用者通过<code>$?</code>获取</p><p>字符可以用<code>echo</code>，调用者通过<code>$(func)</code>调用并获取结果</p><p>include：.</p><p>随机数</p><p><code>$RANDOM</code>: 生成一个介于 0 到 32767 之间的随机整数</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/urandom</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">od</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -N2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -An</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">awk</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> f=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> r=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{printf &quot;%i\\n&quot;, f + r * $1 / 65536}&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">random_number</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">od</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -An</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -N2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/urandom</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">awk</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> min=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> max=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{print min + int(($1 \\* (max-min+1)) / 32768)}&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>echo &quot;随机数: $random_number&quot;</p><p>这条命令的作用是生成一个在给定范围内随机分布的整数。</p><p>具体原理如下：</p><p><code>cat /dev/urandom</code>: /dev/urandom 是 Linux 系统中的一个特殊设备文件，可以读取其内容来获取伪随机数。cat 命令用于将 /dev/urandom 的内容输出到标准输出。</p><p><code>od -N2 -An -i</code>: od 命令用于将二进制数据转换为不同的格式进行展示。-N2 表示只读取两个字节，-An 表示不输出地址，-i 表示将字节解析为整数。</p><p><code>awk -v f=1 -v r=100 &#39;{printf &quot;%i\\n&quot;, f + r * $1 / 65536}&#39;</code>: 这部分利用 awk 命令对输入进行处理。首先，-v f=1 和 -v r=100 分别定义了 awk 的变量 f 和 r，分别表示范围的起始值和区间长度。然后，{printf &quot;%i\\n&quot;, f + r * $1 / 65536} 用于计算并输出在给定范围内的随机整数。其中，$1 表示 awk 的第一个输入字段，即前一步 od 命令输出的整数，65536 是一个常数，用于将取值范围归一化到 0~1 之间，然后利用乘法和加法操作将其映射到给定的范围内。</p><p>综合起来，这条命令的原理是从 /dev/urandom 中读取随机字节，然后通过 od 命令转换为整数，并通过 awk 命令将这些整数映射到给定的范围内，生成随机分布的整数。</p><h2 id="set" tabindex="-1"><a class="header-anchor" href="#set"><span>set</span></a></h2><p>set 命令可以用来查看当前的 shell 参数设置。它可以显示当前 shell 的各种设置：</p><ul><li>显示已定义的变量和函数。</li><li>显示 shell 的设置选项，如： <ul><li><code>-e</code>（如果有语句执行错误，就立即退出）</li><li><code>-u</code>（如果使用未初始化的变量，则报错）</li></ul></li><li>显示当前的位置参数。</li><li>如果在 set 命令后面跟上选项，可以用来修改 shell 的设置。</li></ul><p>具体选项如下：</p><ul><li><code>set</code>: 显示所有已经定义的变量和函数</li><li><code>set -o</code>: 显示当前的 shell 设置（选项）</li><li><code>set -e</code>（或<code>-o errexit</code>）：如果有任何命令执行失败（返回非零状态码），则立即退出 shell。</li><li><code>set -u</code>（或<code>-o nounset</code>）：如果使用未初始化的变量，则报错并退出 shell。</li><li><code>set -x</code>（或<code>-o xtrace</code>）：调试模式,在执行每个命令之前，显示命令的详细输出。</li><li><code>set -o pipefail</code>: 如果管道中的任何命令失败，则整个管道被视为失败。</li><li><code>set -n</code>: 只进行语法检查，而不执行命令。</li><li><code>set -f</code>: 禁用文件名扩展（通配符）。</li><li><code>set -v</code>（或 <code>-o verbose</code>）：在执行命令之前显示命令的详细输出。</li><li><code>set +H</code>（或 <code>+o histexpand</code>）：禁用命令行历史展开。</li><li><code>set +B</code>（或 <code>+o braceexpand</code>）：禁用大括号扩展。</li><li><code>set +C</code>（或 <code>+o noclobber</code>）：禁止使用重定向创建已存在的文件。</li></ul>`,118)]))}const p=s(n,[["render",h],["__file","3. shell.html.vue"]]),r=JSON.parse(`{"path":"/se/devops/unix/basic/3.%20shell.html","title":"3. Shell","lang":"en-US","frontmatter":{"description":"3. Shell 基本语法 注释：# 输出：echo 输入：read, 从标准输入读入一个字符串 换行: \\\\, 一条单一长命令内也可以换行 第一行文件头#!，标志该文件是 shell 脚本类型。 文件头：文件的前 16 个 bit（前两个字节/英文字符）是 magic number，来说明文件类型，然后用后面的东西解释（sh 可以 ls 也可以，都行，...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/devops/unix/basic/3.%20shell.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"3. Shell"}],["meta",{"property":"og:description","content":"3. Shell 基本语法 注释：# 输出：echo 输入：read, 从标准输入读入一个字符串 换行: \\\\, 一条单一长命令内也可以换行 第一行文件头#!，标志该文件是 shell 脚本类型。 文件头：文件的前 16 个 bit（前两个字节/英文字符）是 magic number，来说明文件类型，然后用后面的东西解释（sh 可以 ls 也可以，都行，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-01-08T03:06:14.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-08T03:06:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3. Shell\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-08T03:06:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":3,"title":"基本语法","slug":"基本语法","link":"#基本语法","children":[]},{"level":3,"title":"连接命令","slug":"连接命令","link":"#连接命令","children":[]},{"level":2,"title":"执行方法","slug":"执行方法","link":"#执行方法","children":[]},{"level":2,"title":"变量类型","slug":"变量类型","link":"#变量类型","children":[{"level":3,"title":"可选变量","slug":"可选变量","link":"#可选变量","children":[]},{"level":3,"title":"变量引用","slug":"变量引用","link":"#变量引用","children":[]},{"level":3,"title":"条件测试","slug":"条件测试","link":"#条件测试","children":[]},{"level":3,"title":"命令替换","slug":"命令替换","link":"#命令替换","children":[]}]},{"level":2,"title":"loop","slug":"loop","link":"#loop","children":[{"level":3,"title":"for","slug":"for","link":"#for","children":[]},{"level":3,"title":"while & until","slug":"while-until","link":"#while-until","children":[]}]},{"level":2,"title":"branch","slug":"branch","link":"#branch","children":[{"level":3,"title":"if","slug":"if","link":"#if","children":[]},{"level":3,"title":"case","slug":"case","link":"#case","children":[]}]},{"level":2,"title":"I/O","slug":"i-o","link":"#i-o","children":[]},{"level":2,"title":"重定向","slug":"重定向","link":"#重定向","children":[{"level":3,"title":"输出重定向","slug":"输出重定向","link":"#输出重定向","children":[]},{"level":3,"title":"输入重定向","slug":"输入重定向","link":"#输入重定向","children":[]}]},{"level":2,"title":"引号","slug":"引号","link":"#引号","children":[]},{"level":2,"title":"函数","slug":"函数","link":"#函数","children":[]},{"level":2,"title":"set","slug":"set","link":"#set","children":[]}],"git":{"createdTime":1669446166000,"updatedTime":1704683174000,"contributors":[{"name":"liudawei47","email":"liudawei47@jd.com","commits":6},{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":2},{"name":"davidliu","email":"liudawei47@jd.com","commits":1},{"name":"davidliuk","email":"l729641074@163.com","commits":1}]},"readingTime":{"minutes":11.13,"words":3339},"filePathRelative":"se/devops/unix/basic/3. shell.md","localizedDate":"November 26, 2022","excerpt":"\\n<h3>基本语法</h3>\\n<ol>\\n<li>注释：<code>#</code></li>\\n<li>输出：<code>echo</code></li>\\n<li>输入：<code>read</code>, 从标准输入读入一个字符串</li>\\n<li>换行: <code>\\\\</code>, 一条单一长命令内也可以换行</li>\\n</ol>\\n<p>第一行文件头<code>#!</code>，标志该文件是 shell 脚本类型。</p>\\n<div class=\\"language-sh line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"sh\\" data-title=\\"sh\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">#!/bin/sh</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{p as comp,r as data};
