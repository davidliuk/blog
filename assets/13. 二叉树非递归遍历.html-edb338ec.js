const t=JSON.parse(`{"key":"v-870d6bd8","path":"/cs/algo/summary/13.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E9%9D%9E%E9%80%92%E5%BD%92%E9%81%8D%E5%8E%86.html","title":"二叉树非递归遍历","lang":"en-US","frontmatter":{"description":"二叉树非递归遍历 Binary Search Tree Iterator 实现hasNext和next两个方法 这个主要就需要背了 非递归需要实现栈 这个栈的定义是栈内元素是所有路径上的元素 这个实现比较灵活，这样通过把right和left互换，实现prev操作找前继结点","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/algo/summary/13.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E9%9D%9E%E9%80%92%E5%BD%92%E9%81%8D%E5%8E%86.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"二叉树非递归遍历"}],["meta",{"property":"og:description","content":"二叉树非递归遍历 Binary Search Tree Iterator 实现hasNext和next两个方法 这个主要就需要背了 非递归需要实现栈 这个栈的定义是栈内元素是所有路径上的元素 这个实现比较灵活，这样通过把right和left互换，实现prev操作找前继结点"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-01-01T14:28:09.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-01-01T14:28:09.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/cs/algo/summary/13.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E9%9D%9E%E9%80%92%E5%BD%92%E9%81%8D%E5%8E%86.html"}]]},"headers":[],"git":{"createdTime":1672547091000,"updatedTime":1672583289000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":2}]},"readingTime":{"minutes":0.78,"words":234},"localizedDate":"January 1, 2023","filePathRelative":"cs/algo/summary/13. 二叉树非递归遍历.md","excerpt":"<h1> 二叉树非递归遍历</h1>\\n<p>Binary Search Tree Iterator</p>\\n<p>实现hasNext和next两个方法</p>\\n<p>这个主要就需要背了</p>\\n<p>非递归需要实现栈</p>\\n<p>这个栈的定义是栈内元素是所有路径上的元素</p>\\n<p><img src=\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-07-11 18.05.24.png\\" alt=\\"截屏2022-07-11 18.05.24\\" loading=\\"lazy\\"></p>\\n<p>这个实现比较灵活，这样通过把right和left互换，实现prev操作找前继结点</p>","autoDesc":true}`);export{t as data};
