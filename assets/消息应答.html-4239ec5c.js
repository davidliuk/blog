import{_ as a,V as e,W as r,a0 as p}from"./framework-705b829b.js";const i={},d=p('<h1 id="消息应答与确认" tabindex="-1"><a class="header-anchor" href="#消息应答与确认" aria-hidden="true">#</a> 消息应答与确认</h1><h2 id="消息应答" tabindex="-1"><a class="header-anchor" href="#消息应答" aria-hidden="true">#</a> 消息应答</h2><p>消费者完成一个任务可能需要一段时间，如果其中一个消费者处理一个长的任务并仅只完成了部分突然它挂掉了，会发生什么情况。RabbitMQ一旦向消费者传递了一条消息，便立即将该消息标记为刷除。在这种情况下，突然有个消费者挂掉了，我们将丢失正在处理的消息。以及后续发送给该消费这的消息，因为它无法接收到。</p><p>为了保证消息在发送过程中不丢失，rabbitmq引入消息应答机制，消息应答就是：消费者在接收到消息并且处理该消息之后，告诉rabbitmq它己经处理了，rabbitmq可以把该消息删除了。</p><p>方式</p><h3 id="自动应答" tabindex="-1"><a class="header-anchor" href="#自动应答" aria-hidden="true">#</a> 自动应答</h3><p>接受到消息就当作应答了</p><p>不可靠，生产中不推荐</p><h3 id="手动应答" tabindex="-1"><a class="header-anchor" href="#手动应答" aria-hidden="true">#</a> 手动应答</h3><p>工作线程执行完成以后手动应答。</p><ul><li><p>肯定确认</p><p><code>basicAck</code></p></li><li><p>否定确认</p><p><code>basicNack</code>（可以批量应答）</p><p><code>basicReject</code>（不可批量）</p></li></ul><p>批量应答好处：可以减少网络拥堵</p><p>推荐不开启批量应答，因为后面的应答了不代表前面的处理完了，这样可能产生丢失</p><h3 id="消息自动重新入队" tabindex="-1"><a class="header-anchor" href="#消息自动重新入队" aria-hidden="true">#</a> 消息自动重新入队</h3><p>如果消费者由于某些原因失去连接（其通道已关闭，连接已关闭或TCP连接丢失），导致消息未发送ACK确认，RabbitMQ将了解到消息未完全处理，并将对其重新排队。如果此时其他消费者可以处理，它将很快将其重新分发给另一个消费者。这样，即使某个消费者偶尔死亡，也可以确保不会丢失任何消息。</p><h2 id="高级消息确认" tabindex="-1"><a class="header-anchor" href="#高级消息确认" aria-hidden="true">#</a> 高级消息确认</h2><p>解决问题：</p><p>生产者发消息给MQ（交换机或队列）收不到的时候要进行确认机制处理，如果收不到就放到缓存中，以后重试。</p><p>生产者角度</p><h3 id="确认机制-confirm-确认模式" tabindex="-1"><a class="header-anchor" href="#确认机制-confirm-确认模式" aria-hidden="true">#</a> 确认机制：Confirm 确认模式</h3><p>：交换机确认</p><p>配置文件</p><ul><li><p>NONE</p><p>禁用发布确认模式，默认值</p></li><li><p>CORRELATION</p><p>发布消息成功后会触发回调方法</p><p>异步批量确认</p></li><li><p>SIMPLE</p><p>同步确认消息，发一条确认一条，浪费时间</p><p>722ms</p></li></ul><h3 id="回退消息-return-回退模式" tabindex="-1"><a class="header-anchor" href="#回退消息-return-回退模式" aria-hidden="true">#</a> 回退消息：return 回退模式</h3><p>：Mandatory参数</p><p>交换机收到后，发现消息不可送达时，把消息返回生产者</p>',26),h=[d];function c(t,n){return e(),r("div",null,h)}const o=a(i,[["render",c],["__file","消息应答.html.vue"]]);export{o as default};
