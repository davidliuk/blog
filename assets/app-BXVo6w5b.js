const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index.html-CYizlaki.js","assets/plugin-vue_export-helper-DlAUqK2U.js","assets/me.html-BtW4mQXE.js","assets/index.html-f4sk1vYu.js","assets/index.html-DQfY91Qj.js","assets/index.html-C0TnRCpJ.js","assets/index.html-BFOS8cr-.js","assets/index.html-DwVMZpgR.js","assets/intro.html-BhKGxu_8.js","assets/slides.html-Dn7-DzGj.js","assets/index.html-CkhrVL7P.js","assets/index.html-B_dm6IAY.js","assets/actions.html-CbxEHf1y.js","assets/gemini.html-gswM_0dI.js","assets/gpts.html-C33LBhb7.js","assets/prompt.html-f1JFlxwf.js","assets/index.html-CaonY_mC.js","assets/techniques.html-CjhsZ9Ne.js","assets/index.html-BH5qXvy_.js","assets/classification.html-vb_VDleY.js","assets/graph.html-CFpnllCA.js","assets/tensor.html-76rpGjnM.js","assets/workflow.html-BUW4DPbC.js","assets/index.html-lpVi-MGD.js","assets/index.html-Dka8bf8V.js","assets/2ptr.html-c6Pz-17q.js","assets/index.html-7sIS9ggG.js","assets/big-integer.html-ClaALWzQ.js","assets/binary-tree.html-BTuqHLaI.js","assets/div-conq.html-D2GS-BFw.js","assets/greater.html-DHHMhq2-.js","assets/island.html-zwC8j_jp.js","assets/minmax.html-ghQcHMGe.js","assets/monotonic-stack.html-BLdsnpZq.js","assets/quick.html-BKakaGT7.js","assets/sort.html-DTjGvG7I.js","assets/substring.html-CLGBm5rB.js","assets/trie.html-Bg7KCxdk.js","assets/index.html-DFrpd6wi.js","assets/index.html-spPdkYuV.js","assets/index.html-WIZ-pPyg.js","assets/index.html-fp2aGGS5.js","assets/index.html-DQLbLW1V.js","assets/display.html-9KXHton9.js","assets/input.html-CRZUWXKD.js","assets/laptop.html-BVijs9p2.js","assets/protocal.html-BXJXaTSr.js","assets/index.html-CledlhHo.js","assets/disease.html-Ew4lT7_h.js","assets/训练计划.html-C0eqaxjE.js","assets/index.html-BKUBcIGF.js","assets/brewing.html-CCiRdjcF.js","assets/commute.html-Bz4dk4V_.js","assets/farm.html-DcSE6QEz.js","assets/mine.html-DkduQKZs.js","assets/pet.html-D_XRd5aW.js","assets/redstone.html-DGxaZHwn.js","assets/villager.html-DgfGOyXQ.js","assets/mod.html-DjTR3lQc.js","assets/index.html-B-qXWZF1.js","assets/index.html-DzbTi6Wf.js","assets/index.html-Cxo5JdPf.js","assets/index.html-Pbtn_Ef5.js","assets/arthas.html-BEfI2jqd.js","assets/grafana.html-DLdp53At.js","assets/prometheus.html-DS47p5ie.js","assets/skywalking.html-BfLFNhuU.js","assets/jmeter.html-DTP9C_as.js","assets/index.html-CcsuwA5H.js","assets/index.html-h6zz5u7M.js","assets/index.html-CY2GeI4r.js","assets/grammar.html-CRhDo1qT.js","assets/vocabulary.html-CSGKRFkZ.js","assets/index.html-B9Ug7fQ-.js","assets/disable.html-D8Dew4lL.js","assets/encrypt.html-CluLY5Op.js","assets/markdown.html-5OSnfeFs.js","assets/page.html-CzCaGsLd.js","assets/cherry.html-COtMd3if.js","assets/dragonfruit.html-C0DJ-w9D.js","assets/strawberry.html-bFDcn0D1.js","assets/tomato.html-CKMUjpmp.js","assets/index.html-CPjt0Ul-.js","assets/1. 真实案例.html-lpP4Cs24.js","assets/2. 最长回文子串.html-BOAQlY27.js","assets/3. 代码质量.html-C-tCxxYH.js","assets/31. 低于On的算法.html-DWN5HluC.js","assets/39. 外排序算法与数组合并类.html-D4ha1x17.js","assets/4. 复杂度理论.html-CoVqwWoF.js","assets/5. 排序.html-CMZVD39_.js","assets/index.html-C01kLF8l.js","assets/index.html-C9oFhp3u.js","assets/bitmap.html-e9rJpn3-.js","assets/bloomfilter.html-BgYD4c8n.js","assets/mapreduce.html-CttPFWL7.js","assets/topk.html-BlWd0wz2.js","assets/分而治之.html-zeY2nxX0.js","assets/外排序.html-C5utiAJz.js","assets/概率类.html-BKWoKr7m.js","assets/相似检测.html-B9Xa1Lt9.js","assets/距离.html-DLMjqPbn.js","assets/面经.html-CHoG9HBp.js","assets/index.html-Cye-218y.js","assets/prefix.html-B-NoBuMW.js","assets/rmq.html-DhjztPGb.js","assets/segment-tree.html-BGvajoBY.js","assets/suffix.html-CiMh-YDV.js","assets/index.html-C2cyDCwK.js","assets/parentheses.html-oPr0uVcZ.js","assets/index.html-D5Qm-946.js","assets/index.html-kFGKCovh.js","assets/减治优化.html-CPBNTEX_.js","assets/动态规划.html-Bxx1mdgm.js","assets/index.html-BUygG5mI.js","assets/index.html-B-w9Dyuz.js","assets/index.html-BSr4ZXnM.js","assets/BFS.html-CEbbgT3q.js","assets/DFS.html-B03ynSUF.js","assets/FOR.html-CQ5S6DCm.js","assets/index.html-Cv9CyEQw.js","assets/index.html-dHxp6KYZ.js","assets/index.html-BGrkEpSl.js","assets/二进.html-DP9kK_AM.js","assets/余数.html-BlON8QJU.js","assets/因数.html-DBViwSav.js","assets/概率.html-BQGqtafa.js","assets/运算.html-I5JmQCKN.js","assets/进制.html-DjFeISRD.js","assets/index.html-Bjg3CpJd.js","assets/middle.html-DjoBfz7j.js","assets/index.html-Ddq8LH5E.js","assets/index.html-CfC7diBb.js","assets/index.html-4d9xwa3x.js","assets/index.html-CHV7-dB3.js","assets/index.html-DCjsZsHV.js","assets/index.html-DZtwq59B.js","assets/aggregation.html-BdftE7O7.js","assets/engine.html-s6oeovJp.js","assets/使用.html-1e6Utp8v.js","assets/index.html-Cldi6yCb.js","assets/index.html-DVbnlRTQ.js","assets/index.html-DsletjC2.js","assets/存储过程.html-DwIUVEWd.js","assets/index.html-BwJZc9BP.js","assets/index.html-DYhrG78W.js","assets/availability.html-BvxgostO.js","assets/optimization.html-DKOyOuKa.js","assets/pagination.html-Drjj9W6s.js","assets/index.html-D5AzQ7Ak.js","assets/index.html-jaWl2qc9.js","assets/为什么用.html-Cavmf2vz.js","assets/延迟队列.html-DwuxYz44.js","assets/死信队列.html-CGi9Tv-Q.js","assets/消息应答.html-ByrW18JU.js","assets/消息模型.html-BIal7Z4E.js","assets/消息转换器.html-Bi0_syls.js","assets/1. 绪论.html-IbD1oEWY.js","assets/2. 知识表示与知识图谱.html-BF9eQHW1.js","assets/3. 确定性推理.html-BAXCdpXl.js","assets/4. 不确定性推理.html-D6o5jgQo.js","assets/5. 搜索求解策略.html-B93Kysgp.js","assets/6. 智能计算及其应用.html-ZMO3OFxI.js","assets/7. 专家系统.html-BgsKAghh.js","assets/8. 人工神经网络.html-CmtO11rZ.js","assets/index.html-q_fFErhJ.js","assets/1. 概论.html-tvBFQRtE.js","assets/2. 谓词.html-D8QiwULP.js","assets/3. 推理.html-DZUjrLSR.js","assets/4. 不确定性推理方法.html-D1Qvc2-G.js","assets/5. 搜索策略.html-Dr3m3r8i.js","assets/6. 智能计算.html-BYqaStHx.js","assets/7. 专家系统和机器学习.html-CaSWoO62.js","assets/8. BP.html-BKsl3hFS.js","assets/index.html-BMl93M2v.js","assets/1. 区块链发展.html-BEEGKOjk.js","assets/2. 密码学基础.html-BxU2J4ha.js","assets/3. 秘密共享.html-eZAbhYPa.js","assets/4. 哈希函数.html-CSDU2NZC.js","assets/5. 数字货币.html-BMQW7D74.js","assets/6. 共识机制.html-bGLHD17M.js","assets/7. pow.html-MiegJsJM.js","assets/8. Fabric.html-CCeTKQ9F.js","assets/index.html-Cu_0WDaj.js","assets/1. 判别学习方法.html-Cmx8wiTQ.js","assets/2. 生成学习方法.html-_nFp4UBe.js","assets/3. 决策树.html-HSHB1IYS.js","assets/4. 集成学习.html-s6MZiXd4.js","assets/5. 随机森林.html-CdtnH08s.js","assets/6. SVM.html-BtePpduQ.js","assets/7. CNN.html-Ds6n1-yf.js","assets/8. RNN.html-BmFySEOc.js","assets/index.html-gaoQNKm-.js","assets/rl.html-MOhnKPic.js","assets/1. 命题逻辑.html-D69PKkm6.js","assets/2. 谓词逻辑.html-B3GoobEL.js","assets/3. 集合论.html-CI1zj1U4.js","assets/4. 二元关系.html-BWFNiZ-H.js","assets/5. 函数.html--dph2X8b.js","assets/6. 图论.html-DhuajDjz.js","assets/index.html-Cn8kOnlL.js","assets/实验.html-Cx2d23dI.js","assets/总复习.html-CBDko4TS.js","assets/index.html-Dx8peSRX.js","assets/1. VR.html-D3zlNj8o.js","assets/2. VRML.html-B4bM-Szo.js","assets/3. CG Intro.html-DjDyYd7j.js","assets/4. 3ds.html-CwS7uoJ8.js","assets/5. VR应用设计.html-DaBRmCdU.js","assets/index.html-D9UaBO9d.js","assets/index.html-CUQ4oYb6.js","assets/reference.html-CQtCcmzU.js","assets/1.html-UTLkrjxN.js","assets/2.html-BvNOOUkk.js","assets/3.html-BKNof94u.js","assets/index.html-D9eCGVPq.js","assets/lang.html-DO6VVWDi.js","assets/2.html-BxIfoQOs.js","assets/index.html-Y6eekJVn.js","assets/3D-Rendering.html-CpQPLx3u.js","assets/index.html-Ch5j31Re.js","assets/color.html-BvOQHqaL.js","assets/cpp.html-DSE4mYMb.js","assets/game-paradigm.html-DegwXgMd.js","assets/l-sys.html-BhxTzgPE.js","assets/mesh.html-CHiLJUtP.js","assets/multithreading.html-CFDGFRjq.js","assets/noise.html-CMI3L3Ni.js","assets/opengl.html-p9DySz_j.js","assets/rasterization.html-D9hRkeC5.js","assets/ray-tracing.html-BlLUQlPi.js","assets/scene-graph.html-O88cSMJo.js","assets/subdivision.html-ZZXuwXrR.js","assets/transformations.html-BNhCOC9e.js","assets/virtual-cameras.html-kZNTRqKp.js","assets/index.html-D-MrQHsA.js","assets/behavioral.html-CyGYr5z7.js","assets/coordinate-systems.html-SLk9zbtQ.js","assets/dynamics.html-rrn93gTm.js","assets/facial.html-sqwyY-Ds.js","assets/feedback.html-Dl87X8k4.js","assets/interpolation.html-DXe-d2X4.js","assets/kinematics.html-BYEUQkfT.js","assets/optimization.html-B-Shmog-.js","assets/simulation.html-BDVOjDkO.js","assets/index.html-BKovT2dS.js","assets/dcc.html-e4WobH6V.js","assets/engine.html-BVDomWNB.js","assets/multiplatform.html-CwxCyPsz.js","assets/pattern.html-DgT8Bcb-.js","assets/shader.html-DkOcY7jf.js","assets/vulkan.html-Da527W2z.js","assets/index.html-BxsDUCyX.js","assets/实物类.html-oZga6OnC.js","assets/游戏类.html-CygHTgA2.js","assets/管理类.html-CO11-j45.js","assets/预定类.html-5qFMJa8S.js","assets/index.html-DJ3hcY1B.js","assets/index.html-CaxrR5BQ.js","assets/api.html-qLQrPQ0S.js","assets/comet.html-YKMccjSk.js","assets/cron.html-Dh6HxPkQ.js","assets/file.html-BtKJQFV2.js","assets/iq.html-Cuk9HQ_X.js","assets/lbs.html-c9vY_7sy.js","assets/readlist.html-D9lNgnGj.js","assets/stack.html-DoSenR0p.js","assets/versioning.html-4Y_hkazD.js","assets/index.html-CQ6mfI2s.js","assets/cd.html-CtSDSNnG.js","assets/ci.html-BGOB3hZv.js","assets/makefile.html-C4KDVsJU.js","assets/index.html-CHSENrZA.js","assets/docker-file.html-DQLaqGEO.js","assets/network.html-BHc1RzEE.js","assets/persistence.html-DSX5LCDN.js","assets/index.html-D74tQf4D.js","assets/archetecture.html-BpSVMHwX.js","assets/installation.html-B3GN54zV.js","assets/index.html-DEAN6GUT.js","assets/index.html-CQX9thuH.js","assets/memory.html-TCWVVQqZ.js","assets/modules.html-DNFj6zjO.js","assets/oop.html-D58WAi_5.js","assets/reference.html-DuTjfdER.js","assets/index.html-CdbuU1uv.js","assets/MPG.html-3q4EZr-_.js","assets/tool-chain.html-BzXE6uyL.js","assets/优化.html-D4i_Nh0l.js","assets/工程规范.html-nzWup0FR.js","assets/并发.html-iU_CQi0h.js","assets/并发安全.html-DfUcTdnE.js","assets/排查.html-BZ-OkP4O.js","assets/语法.html-CJEjwtpX.js","assets/index.html-BqtW0sZ-.js","assets/basic.html-DPm3PLxs.js","assets/index.html-CCmHAPBm.js","assets/class.html-C9iIDByr.js","assets/collections.html-DE84N-Zm.js","assets/decorators.html-BJrhxMDT.js","assets/engineering.html-65Q6JNVE.js","assets/function.html-BGXlf3HS.js","assets/gc.html-Nw-EziDH.js","assets/iterator.html-sVAMvNhE.js","assets/loop.html-auFWrlxy.js","assets/memory.html-ZQdV_Rs3.js","assets/module.html-Ly5zItD4.js","assets/multithreading.html-CkEJPFhE.js","assets/object.html-Dm_Yx4IS.js","assets/package.html-DSEb9BcY.js","assets/patch.html-9Z9ztWwo.js","assets/stl.html-DhOsBmWP.js","assets/index.html-B65UgEOV.js","assets/submodule.html-C7IFKRnd.js","assets/index.html-C5pAmR7G.js","assets/block.html-CeQEASj9.js","assets/operator.html-CeOdHJNd.js","assets/alist.html-BClJ80f4.js","assets/pm.html-CDTLO4Rn.js","assets/xdm.html-DDIrN8cD.js","assets/mermaid.html-DSHvk140.js","assets/plantUML.html-pqKViffd.js","assets/index.html-CeYSwx2R.js","assets/bugfix.html-9qopr8vq.js","assets/it.html-DhnJUq6q.js","assets/index.html-CYMDJuKc.js","assets/代数.html-CUXzNSHC.js","assets/几何.html-CbUa6NX3.js","assets/数分.html-Bi0c0lY2.js","assets/数论.html-Bt5m68vk.js","assets/答案.html-Cq7Z6NZO.js","assets/错题.html-C4UOkDbN.js","assets/index.html-xMqVLe_J.js","assets/index.html-BmXt2BO_.js","assets/4. 对话串联法.html-_rSXHcdM.js","assets/5. 讲座分层法.html-DqOid8vO.js","assets/index.html-DvvLRWiA.js","assets/学科积累.html-CMQBTGTD.js","assets/真题营.html-Cw8uzGap.js","assets/表达积累.html-BJL-3Cf6.js","assets/1. 阅读方法论.html-VCQdoXap.js","assets/2. 长难单句.html-FZhLAUS9.js","assets/3. 文章段落.html-BeM1lHMg.js","assets/4. 逻辑考点.html-CGGFKh3Y.js","assets/5. 文章结构.html-OAGjpPJX.js","assets/6. 阅读笔记.html-6P7lwlwC.js","assets/index.html-sOmNZ8vC.js","assets/index.html-ByStGQsA.js","assets/task1.html-BjjgtHOd.js","assets/task2.html-gEC4_S6S.js","assets/task3.html-DH94fIL3.js","assets/task4.html-BlRtDzAt.js","assets/读音.html-CkCjJGeg.js","assets/1. 结构.html-BGLt7g74.js","assets/2. 主体段.html-DmuQAWdy.js","assets/3. 语料1.html-Dk_VU163.js","assets/4. 语料2.html-J6g90KiS.js","assets/5. 综合写作.html-DrlFwJLY.js","assets/6. 讨论板.html-C9CmpvA0.js","assets/index.html-DpcMzgu8.js","assets/段落语料.html-nJ7WGMHe.js","assets/练习.html-f1sR1wDd.js","assets/1.html-uwUFxIoJ.js","assets/2.html-BMQgcFqZ.js","assets/3.html-CyyQtfa3.js","assets/4.html-CviiV7jX.js","assets/1.html-Ds0sxixH.js","assets/2.html-Dqn_FUsT.js","assets/3.html-7q0t02XQ.js","assets/4.html-64ilqCsa.js","assets/28. 双指针.html-wZ--Lq6Z.js","assets/29. 双指针.html-CLbUYEkK.js","assets/4. 双指针.html-BGC7T95P.js","assets/8. 双指针.html-B9OSBdWH.js","assets/11. BFS.html-BMpADnU7.js","assets/14. BFS.html-C2_PNsjh.js","assets/32. 全子集问题.html-zQujO_PZ.js","assets/33. 双向BFS.html-OlVegKfd.js","assets/30. 二分法实战.html-D94Nhxxz.js","assets/7. 二分法.html-DvCt7hg1.js","assets/9. 二分法.html-Cpb_sJ4q.js","assets/12. 递归、遍历、分治.html-Bv1VGm6L.js","assets/13. 二叉树非递归遍历.html-DretTmdL.js","assets/15. 二叉树分治法.html-BzoMLjSp.js","assets/16. 组合类DFS.html-D4HFrWSl.js","assets/17. 排列式DFS.html-CnM4JAw2.js","assets/20. DFS.html-BWO6Hgh7.js","assets/22. 记忆化搜索.html-BicIDtdQ.js","assets/26. 记忆化搜索.html-DoFAVJYX.js","assets/34. Morris.html-DHbpmLaD.js","assets/35. BST CRUD.html-DfTRdFAc.js","assets/36. 非递归.html-CXawD_2z.js","assets/37. DFS.html-DZhIYLzC.js","assets/6. 递归.html-Lb2n0Ln3.js","assets/23. 动态规划.html-kimZr01g.js","assets/24. 使用场景.html-In-bz5JR.js","assets/25. 背包型.html-p0UuD6nj.js","assets/27. 动态规划优化.html-DjrbmgQE.js","assets/40. 区间型.html-ceuHCVYq.js","assets/41. 匹配型.html-DgUhx36_.js","assets/42. 划分型.html-CcAjsoP0.js","assets/43. 接龙型.html-DiJjkm4Y.js","assets/10. 队列.html-DTz3pw6q.js","assets/18. 哈希表.html-DpPP4cHE.js","assets/19. Heap.html-ipbwvr7d.js","assets/21. 哈希表和堆.html-Djcm04Ny.js","assets/38. 数据结构设计.html-BjrQiKCa.js","assets/index.html-KJDJZBjF.js","assets/index.html-C4wEkn83.js","assets/博弈型.html-KYAAGsDa.js","assets/概率型.html-BNRs4L5F.js","assets/组合型.html-BFJrp329.js","assets/计数型.html-NWMUHFO8.js","assets/01bfs.html-BJmhlnfe.js","assets/BeFS.html-CC7-pwxz.js","assets/BiBFS.html-Br5wWKhV.js","assets/index.html-U39oNyNa.js","assets/optimization.html-BwuhB-TY.js","assets/shortest-path.html-CqvzLbeO.js","assets/solution.html-DLtOkz_z.js","assets/topo.html-iwI-tkwC.js","assets/时间模拟.html-G_IjyVLw.js","assets/连通块.html-BZuEyMAg.js","assets/index.html-BsjpPgwh.js","assets/index.html-BxmnRgsm.js","assets/index.html-CrRk5TfN.js","assets/connectivity.html-CumByStE.js","assets/net-flow.html-Bq3mQbiL.js","assets/shortest-path.html-BELRZ4oi.js","assets/ufs.html-ChktBu8v.js","assets/图的存储.html-UafZkKTp.js","assets/index.html-DDi92nVO.js","assets/cdn.html-B3fcGitP.js","assets/dns.html-h0lY6HpV.js","assets/dowload.html-atD6Xxz4.js","assets/http.html-B-DmS-XO.js","assets/http2.html-CFFomlTu.js","assets/https.html-C5C-Xz8L.js","assets/mail.html-CQlcpcoS.js","assets/nginx.html-BDC6t1m6.js","assets/proxy.html-CBAkUN9l.js","assets/quic.html-DbX0_nvj.js","assets/rpc.html-DyC87MvK.js","assets/ssh.html-ntPNisNm.js","assets/websocket.html-BGmayjgg.js","assets/IP.html-D94KAO8Z.js","assets/NAT.html-CUakW0iV.js","assets/TCP.html-BySHyIn_.js","assets/UDP.html-BQXoODrN.js","assets/index.html-CJOq7fNw.js","assets/index.html-Da9lRPLO.js","assets/device.html-C6tpYf-S.js","assets/dma.html-JNuD2KX0.js","assets/patterns.html-DKcg5MiD.js","assets/index.html-DMSduFFU.js","assets/index.html-B-TQhbWL.js","assets/index.html-CzwnXEX0.js","assets/ipc.html-D3k3ApDL.js","assets/itc.html-D98Mvlla.js","assets/schedule.html-yRUgFZvJ.js","assets/cache.html-_E8ehSj_.js","assets/mode.html-D-z-xjLS.js","assets/index.html-pOzJvRmH.js","assets/replica.html-DmKnfav0.js","assets/sharding.html-BnnLyrdx.js","assets/配置.html-BhKid_C9.js","assets/1. 体系结构.html-1cTfv8Jd.js","assets/2. 存储引擎.html-7_WR4jfS.js","assets/1. 索引结构.html-B_bYmghA.js","assets/2. 索引分类.html-BQpH0Ok8.js","assets/3. 性能分析.html-CLs_KTMo.js","assets/4. 使用规则.html-BO0LPYVH.js","assets/index.html-BCB5_haj.js","assets/1. 全局锁.html-BqncF1O0.js","assets/2. 表级锁.html-228BSZ1O.js","assets/3. 行级锁.html-mDGP3hDm.js","assets/index.html--8UuwscL.js","assets/index.html-D8pNhg8J.js","assets/Buffer Pool.html-ChXei7XF.js","assets/1. ACID.html-CaDAbwTf.js","assets/2. 并发问题.html-D9Ju8Ylz.js","assets/3. 隔离级别.html-CHpsD2S5.js","assets/4. 传播机制.html-a1kc1ueb.js","assets/index.html-Bs3tLvyb.js","assets/index.html-IH4809lT.js","assets/cluster.html-CAg2itYH.js","assets/multi-level.html-Ynfb8bdK.js","assets/replication.html-YmO1nn76.js","assets/sentinel.html-Dw5cheJ_.js","assets/index.html-CmV8XhKz.js","assets/jedis.html-DVB2DP9q.js","assets/spring-data-redis.html-CS8ZBAOG.js","assets/generic.html-YinTEA_C.js","assets/hash.html-CknuBD9z.js","assets/list.html-Bc_fMrra.js","assets/set.html-B2w09YPx.js","assets/sorted-set.html-Z1mrNOCh.js","assets/string.html-UrZSZxxG.js","assets/feature.html-Bk8C2e49.js","assets/AOF.html-C6hqM3Zq.js","assets/RDB.html-jxXEFzbz.js","assets/index.html-KrfI6r9e.js","assets/index.html-wvYLzyUH.js","assets/branch.html-eWd2s4Yb.js","assets/clause.html-bkBc9A_3.js","assets/function.html-D1v4nZP1.js","assets/join.html-CvSjjMUu.js","assets/set.html-BvUOylLu.js","assets/sort.html-D8jlDBVA.js","assets/subquery.html-BA2ttiBE.js","assets/form.html-Cj7GyeDg.js","assets/书写规范.html-DytLnazi.js","assets/命名规范.html-DKQAT4Fx.js","assets/设计规范.html-o86nI8sp.js","assets/index.html-BXHOGLHr.js","assets/pagination.html-CDjG-unp.js","assets/冷热分离.html-CbHk_GLf.js","assets/慢查询.html-C5F4Pe5Q.js","assets/超时取消订单.html-DHzbB3Q1.js","assets/幂等性.html-CvvbHuxJ.js","assets/消息丢失.html-CnPviS2I.js","assets/消息积压.html-CxTb2pV3.js","assets/补偿机制.html-DEYK89i7.js","assets/智能计算论文.html-DL-Af_zz.js","assets/期末.html-BheT5fGl.js","assets/期中考试.html-DUqvBZPL.js","assets/index.html-Df2F0Bv4.js","assets/大纲.html-D2sSbdAo.js","assets/资料.html-BTQO74Oe.js","assets/实验1.html-DJN83T9d.js","assets/实验2.html-Uyxqw2iY.js","assets/实验3.html-CzjRqi8z.js","assets/测验1.html-qiQ-jbJo.js","assets/测验2.html-B8-Uxx-p.js","assets/大作业.html-C_W9WVyF.js","assets/讲稿.html-IYIJy8D6.js","assets/作业1 HMD.html-JvP2z_39.js","assets/作业2 技术天花板.html-Ciz_NFMQ.js","assets/作业3 产品定位.html-CfvBKw4A.js","assets/作业4 互评.html-DXWYko_R.js","assets/作业4 产品设计与互评.html-CiKiK6KB.js","assets/作业5 草图场景与原型设计.html-CFYpA2w3.js","assets/作业6 大作业.html-DUQe_fig.js","assets/评语.html-DX1qEeLz.js","assets/1.1.html-CqEpvG9U.js","assets/1.html-ERAo5Wbb.js","assets/2.1.html-NOuXb2nY.js","assets/2.html-Cs_iHxBu.js","assets/3.html-BAJ9_cG1.js","assets/4.html-Dj1bwG8r.js","assets/10.html-Bfjis7IE.js","assets/2.html-DeKuhH5C.js","assets/3.html-DWe3mNms.js","assets/4.html-QdPPdaxZ.js","assets/5.html-6WH9YGLI.js","assets/6.html-DJxOEts-.js","assets/7.html-BY_kbewk.js","assets/8.html-Du8YFJjz.js","assets/9.html-BSXF9fxb.js","assets/1.html-ekhkmni7.js","assets/Practice-Models.html-Bn-MEgDj.js","assets/02.html-BS8Aqsrf.js","assets/1.html-De8d2FDI.js","assets/2.html-DqKBqtCg.js","assets/3.html-CND_o-fG.js","assets/4.html-CFHpxo1F.js","assets/5.html-DPG9e9Hn.js","assets/6.html-CsHAiSHX.js","assets/7.html-BImYFf11.js","assets/index.html--1rtk4K6.js","assets/ms1.html-BRZUxWnb.js","assets/ms2.html-D6I5KT90.js","assets/ms3.html-BNLIJ17i.js","assets/sky.html-BEX9qpKJ.js","assets/weather.html-uOP-u-La.js","assets/1.html-D2lLrqfL.js","assets/2.html-DSYfS0rt.js","assets/3.html-BoPBCAsJ.js","assets/4.html-CTo_9tNJ.js","assets/5.html-yZMGimgh.js","assets/6.html-ChWVuv_o.js","assets/7.html-DpWEVgAo.js","assets/3.html-B7932h9C.js","assets/4.html-CUf2g22C.js","assets/5.html-DaTMW6mm.js","assets/animation.html-DO86I5cH.js","assets/binding.html-CJKisUcq.js","assets/blending.html-0SNoe-Ex.js","assets/locomotion.html-CqWtHqgK.js","assets/mocap.html-ckuBJ01I.js","assets/1.html-imIhsYbx.js","assets/2.html-DIST3xBN.js","assets/3.html-BjmPdz6h.js","assets/4.html-_tXne7bt.js","assets/5.html-DtJib7d-.js","assets/6.html-BQYu5Nbr.js","assets/7.html-BDHuNnZj.js","assets/8.html-D3hCLG5Q.js","assets/final.html-DeB8f7Zd.js","assets/mid-sample.html-DdwmDddv.js","assets/mid.html-CPO48_TM.js","assets/solution.html-DidgnR_O.js","assets/1.1.html-SrKJCEhr.js","assets/1.2.html-CoLE2obh.js","assets/2.html-DBMchGUX.js","assets/3.html-uIGV_lQG.js","assets/4.html-DYpGkmHX.js","assets/5.html-TignC259.js","assets/6.html-DMnHM_Dg.js","assets/7.html-CDENX7SF.js","assets/8.html-BU_Nrly_.js","assets/1.html-B6S7AEcQ.js","assets/2.html-Bqku_q1L.js","assets/3.html-DNBSpc2i.js","assets/4.html-BW4FYcLt.js","assets/5.html-zr-dgbiq.js","assets/6.html-DUdqp2mq.js","assets/pool.html-CO04579P.js","assets/prototype.html-CUQwztMC.js","assets/singleton.html-DXvTt1eI.js","assets/adapter.html-D-3bM2BG.js","assets/index.html-CO831a1l.js","assets/cap.html-BPcOS8r8.js","assets/problems.html-B0Nz7rP-.js","assets/scaling.html-D46C_nAV.js","assets/index.html-BBdeoUKN.js","assets/dtp.html-B7Gqg9zn.js","assets/comment.html-DVBSTVtx.js","assets/feed.html-DLLFvxnr.js","assets/flash-sale.html-Dwk2L3qN.js","assets/monitor.html-DYInFaOx.js","assets/user.html-DtVM64gk.js","assets/trace-note.html-ASVQZirx.js","assets/twitter.html-DnPiQPTw.js","assets/常见.html-BNwneDKn.js","assets/authorization.html-CN_8GGDM.js","assets/encryption.html-rSiOH43v.js","assets/DNS-DRBD-network.html-DUVfS7Ux.js","assets/index.html-Dep8VGTj.js","assets/load-assessment-and-tuning.html-DSzrcMaN.js","assets/optimize-server-and-topology.html-x162X_aK.js","assets/redundancy-and-load-balancing.html-B9YGb5nZ.js","assets/1.1 basic-cmd.html-Bdj6bCvp.js","assets/1.2. vi.html-Bx60Xyek.js","assets/1.3 three musketeers.html-DXf4W97g.js","assets/10. scheduled-tasks.html-CFj4NdlB.js","assets/11. backups.html-8mNyshJ-.js","assets/12. software-management.html-DP8cGrZw.js","assets/2. account-management.html-CI5PzCuL.js","assets/3. shell.html-CgwjTm9f.js","assets/4.1 booting.html-D9IAgTTG.js","assets/4.2 systemd.html-BZslVkvR.js","assets/5. access-ctrl.html-BW8YkZWN.js","assets/6. process-ctrl.html-CeR0PKnA.js","assets/7. Filesystem.html-DrW4_0bb.js","assets/8. Storage.html-CveZzHAt.js","assets/9. Disk Quota.html-IXkyFBQx.js","assets/index.html-BvtBHPlK.js","assets/network-management.html-BX42UCJL.js","assets/network-services.html-BFLD8olI.js","assets/rescue.html-DWlbuRFG.js","assets/security.html-EyAOhhK5.js","assets/build.html-DngVDXoU.js","assets/cv.html-C-NkBOJb.js","assets/gl.html-DW3lHjIU.js","assets/pm.html-WPwooidY.js","assets/qt.html-DgLBzCOO.js","assets/anchor.html-BUFIrU8K.js","assets/feature.html-CVjMmoU0.js","assets/closure.html-6YwN4Nlv.js","assets/design-pattern.html-8cPLPAfd.js","assets/promise.html-B23YcP7l.js","assets/index.html-DzLHx1oQ.js","assets/代码规范.html-DjhC8Iq6.js","assets/关键字.html-JYNTorwx.js","assets/异常.html-CpMso4Vj.js","assets/运算符.html-CwrtCsew.js","assets/Concurrent.html-9Xhin_Pw.js","assets/index.html-CBELcEQv.js","assets/collection.html-Du4hQ_Ia.js","assets/map.html-D7wJQ_F4.js","assets/index.html-C14o6fDz.js","assets/java11.html-majRJFKd.js","assets/java17.html-CObuqKvq.js","assets/java21.html-CWsNa78w.js","assets/java8.html-Dou623NO.js","assets/index.html-BYRUf7zB.js","assets/nio.html-FGuK0y3e.js","assets/index.html-DaP9vXNp.js","assets/参数.html-CdxNz3o1.js","assets/问题排查.html-BT_GG7ij.js","assets/index.html-Be3C3_sV.js","assets/index.html-CPE_A-L9.js","assets/index.html-CxzV71EA.js","assets/新方法.html-wn4ORI1I.js","assets/单词.html-1_sLCf57.js","assets/句子.html-rRvlAOSn.js","assets/基础.html-DEZsPkgo.js","assets/段落.html-DpHNj7wr.js","assets/1. 中心逻辑精听法.html-lnhfyHWx.js","assets/2. 题型.html-Vkcfeg3e.js","assets/3. 笔记法.html-C1Hh9VOM.js","assets/index.html-cAT-UJ8E.js","assets/Untitled.html-C39sVC0b.js","assets/对话.html-Oj7w6B0g.js","assets/方法.html-BnFFJxH1.js","assets/1. 中心逻辑.html-CO1xiBkP.js","assets/2. 出题思路.html-BoUoEymW.js","assets/3. 笔记方法.html-CEM4HFhe.js","assets/4. 讲座总结.html-CAB-ySg8.js","assets/5. 对话串联.html-BUmA9sH0.js","assets/内容思路.html-BsGAG6es.js","assets/新方法.html-BougPBwG.js","assets/讲座专题.html-C5IZhEkh.js","assets/对话练习.html-DTwrRwJO.js","assets/讲座练习.html-BZkER2i4.js","assets/1.html-Bp0xWwG2.js","assets/2.html-Cr3Pw74o.js","assets/3.html-DctHb_wV.js","assets/index.html-DIA1KMjD.js","assets/BEAT.html-BXpskPrs.js","assets/练习.html-BWVjT5Tq.js","assets/1.  总结题.html-dUzWsx3n.js","assets/10. 表格题.html-HnIHV0PJ.js","assets/2. 词汇题.html-BWgi3v4x.js","assets/3. 指代题.html-BOdBNRPG.js","assets/4. 简化题.html-CmQITIxF.js","assets/5. 插入题.html-CIXScdnG.js","assets/6. 细节题.html-Br2ZIrVW.js","assets/7. 排除题.html-CHRgQ0OE.js","assets/8. 推断题.html-xzQwHsGm.js","assets/9. 目的题.html--LbX8gyg.js","assets/BEAT.html-DhCzxiDP.js","assets/index.html-DL31c4nf.js","assets/Untitled.html-ijY4nAeW.js","assets/发音雕刻.html-fa1nI5LI.js","assets/工作类.html-DuoHjSNc.js","assets/教育类.html-UqN23al2.js","assets/生活类.html-nSO7iCls.js","assets/综合口语.html-2EIXhJIy.js","assets/观点.html-BZ2vvF-f.js","assets/题目.html-pXkxTavI.js","assets/高频真题.html-BT0jHOmQ.js","assets/1.html-DiEVaIRW.js","assets/10..html-pwx5wwlH.js","assets/12.html-uclgVUkB.js","assets/14. .html-BboXaNMr.js","assets/15.html-BUIdjf3Q.js","assets/16.html-n6QoixZc.js","assets/17.html-CF6dbYMN.js","assets/18.html-COeJJLuE.js","assets/19.html-rB9e5PBf.js","assets/20.html-MFFv8aL3.js","assets/21.html-Cp_HeTcE.js","assets/23.html-Do0Dr4-G.js","assets/24.html-B4jmIIhE.js","assets/25.html-B6js6ALx.js","assets/26.html-DLi_MAwe.js","assets/27.html-DMOe0oMu.js","assets/28.html-D8A4X-ff.js","assets/29.html-Dwhg2Fuz.js","assets/7. .html-Dt_UiTlT.js","assets/9. .html-CNW9FJa0.js","assets/index.html-DnPu9D3k.js","assets/index.html-icnBHPiq.js","assets/1.html-DKvQcuPm.js","assets/10.html-B-2Z9Wqd.js","assets/2.html-2wXx-P8J.js","assets/3.html-BVk6LmbA.js","assets/4.html-DjhJIteY.js","assets/5.html-BSz3SdCY.js","assets/6.html-DlwWShNk.js","assets/7.html-DdJ__Bzw.js","assets/8.html-C41Z6WHf.js","assets/9.html-ImNKWCZB.js","assets/index.html-D40a32Se.js","assets/task2.html-BKMyHTlc.js","assets/task3.html-DbgGLCIG.js","assets/task4.html-DUqEaWF7.js","assets/X.html-B6OJat44.js","assets/index.html-DRiJaK90.js","assets/教育类.html-CZxxqFki.js","assets/生活类.html-J_Tlbtlt.js","assets/index.html-BvvagwW9.js","assets/Untitled.html-V38XTXfu.js","assets/万能原因.html-DDxppTAg.js","assets/模板.html-lib9rHyR.js","assets/练习.html-DcTGgboS.js","assets/综合写作.html-BMpCcFjy.js","assets/表达与句式.html-Dwkd628H.js","assets/造句.html-_A7USwfi.js","assets/题目.html-BLaEaRvY.js","assets/高频话题.html-CmdY08xP.js","assets/新版练习.html-peqdVT_8.js","assets/独立题.html-BiFGKUJN.js","assets/综合题.html-BkpnoPd-.js","assets/讨论板.html-BD23XXaT.js","assets/index.html-jIzfdOos.js","assets/index.html-DJM3yPoh.js","assets/monotic-stack.html-DV_B0iP5.js","assets/monotic.html-4m3_HHM1.js","assets/index.html-6xAGKYvv.js","assets/中位数.html-DCOImHw0.js","assets/区间.html-DvwRhFkR.js","assets/反悔.html-CJs-oi2_.js","assets/合并.html-TaHBSqJd.js","assets/序列.html-CSgCSORm.js","assets/背包.html-DLdRW0v0.js","assets/index.html-D9OMtj9v.js","assets/区间型.html-DK6LdHrA.js","assets/2d.html-u_IXGf5r.js","assets/坐标型.html-DYE-kC2j.js","assets/划分型.html-DOyTJkOE.js","assets/双序型.html-D-EW5kLv.js","assets/序列型.html-CgoFqz6P.js","assets/股票问题.html-h4eHVsJ7.js","assets/数位型.html-C5VDrLv1.js","assets/树上型.html-BBsafpZy.js","assets/状压型.html-DX-2ddZY.js","assets/状态型.html-36isKsvw.js","assets/背包型.html-CxAzrp_Y.js","assets/kth.html-DU1NUJQd.js","assets/优化.html-nREnR7WK.js","assets/具体方案.html-BHeEfkXM.js","assets/进阶.html-CtXUddDc.js","assets/难题.html-BkXBcnnz.js","assets/index.html-foJ_OZ2a.js","assets/index.html-DI-VgQSJ.js","assets/单向递归.html-Dz1C3RD1.js","assets/双向递归.html-B1jFsAka.js","assets/多向递归.html-BkSwkUE7.js","assets/非递归.html-C-SpaQKg.js","assets/index.html-WOQcB2tX.js","assets/1. 虚拟头节点.html-BvRGWAul.js","assets/2. 基本技巧.html-ENEKUkqR.js","assets/3. 反转链表.html-k4rAImhL.js","assets/4. 链表中点.html-C1RE7wJM.js","assets/5. 链表求环.html-DCKdKjKC.js","assets/index.html-CJXjZB1w.js","assets/BST.html-CnObh8RH.js","assets/index.html-CAkluYy1.js","assets/dfs.html-D6L8IcbB.js","assets/1. 逻辑存储结构.html-DbKrd-P_.js","assets/2. 引擎架构.html-C4lZFZEq.js","assets/3. 事务原理.html-DhqCEphF.js","assets/index.html-BV03OjX6.js","assets/批处理优化.html-DzBAVrPs.js","assets/键值设计.html-DPtfeJse.js","assets/distributed-lock.html-BzykBW4Q.js","assets/follow.html-Bl0AibHn.js","assets/global-id.html-B-vn-J5W.js","assets/nearby.html-CWQIMh90.js","assets/rate.html-C_pzrJT3.js","assets/seckill.html-_qApFHQn.js","assets/sign.html-mKlAxHHr.js","assets/uvpv.html-CL_MpcqS.js","assets/atomic.html-Clr8ZDzI.js","assets/bigkey.html-Blp8Kwwu.js","assets/cache-preheat.html-VFKNnqki.js","assets/cache-problem.html-UnMhJNKQ.js","assets/consistency.html-D07urFdL.js","assets/hotkey.html-D2p3MBhB.js","assets/index.html-Di_fb2D6.js","assets/基本类型.html-DXKn6gXT.js","assets/数据结构.html-DX4P4uj7.js","assets/特殊类型.html-C2aYoXn-.js","assets/内存淘汰策略.html-Ba6jRaJ2.js","assets/过期删除策略.html-CqYKrLi1.js","assets/线程模型.html-BaqYzFWA.js","assets/index.html-AYIUagSX.js","assets/flex.html-Bx2MVLoL.js","assets/forkjoin.html-BDW-krIe.js","assets/future.html-CEso8I-8.js","assets/index.html-CXUgN5OD.js","assets/jmm.html-BeQiAQWq.js","assets/volatile.html-BAuFNcgn.js","assets/AQS.html-6-f8Ye1C.js","assets/Condition.html-jgJhb9Kh.js","assets/CountDownLatch.html-B8bRsSBv.js","assets/CyclicBarrier.html-Bh5Jgb44.js","assets/Semaphore.html-DvtngHBy.js","assets/index.html-D8RXzO7I.js","assets/local.html-Bn4IWgzL.js","assets/pool.html-BLqtbba8.js","assets/state.html-CF5lsBIN.js","assets/virtual.html-DMdrFvO-.js","assets/内部类.html-QE8dQWf3.js","assets/工具类.html-CEsoUDmO.js","assets/常见类.html-B48-8y82.js","assets/面向对象.html-DR8ygBlv.js","assets/基本类型.html-mUERlBTW.js","assets/数组.html-xwYyaJwd.js","assets/泛型.html-DLUIonMh.js","assets/类型转换.html-DqW02isK.js","assets/knife4j.html-3fDkOoYN.js","assets/swagger.html-CuclJGL6.js","assets/index.html-Duoa5kk-.js","assets/index.html-jz7LPHtC.js","assets/常见问题.html-BM0UT8Bf.js","assets/oss.html-DlGRoZiL.js","assets/index.html-Db5w2rZD.js","assets/设计模式.html-W13unLUv.js","assets/jmm.html-Cz1grRZQ.js","assets/2. 长难句.html-8vt89w-H.js","assets/3. 单句功能判断方法论.html-Ct8LiwJK.js","assets/4. 句间关系与句子功能.html-DghmwkRc.js","assets/6. 全文结构与主旨题.html-DSkg5EcA.js","assets/7. 功能线综合练习.html-Bi9878ZA.js","assets/8. 高效信息提取与信息题.html-DVULpEVE.js","assets/9. 功能与信息线综合.html-Byvrgsw3.js","assets/index.html-SERtbYc7.js","assets/1. 事实信息题.html-D0R1Mo6k.js","assets/10. 归纳与解释.html-BtEol7Ij.js","assets/2.0 主旨题.html-bv16d7mL.js","assets/2.1 句子作用题.html-B4DoYPjM.js","assets/2.2 信息目的题.html-BJMm4Cw2.js","assets/3. 推断题.html-AhPhnT6x.js","assets/4. 可多选题.html-kASk3j6P.js","assets/5. 态度题.html-DYFNFUBA.js","assets/7. 类比题.html-BrxBP2ga.js","assets/8. 否定事实信息题.html-cjnUvYH8.js","assets/9. 词汇题.html-DgyjADbO.js","assets/index.html--8OQRmAT.js","assets/index.html-CjKFrWSG.js","assets/练习.html-CtOPg-AX.js","assets/index.html-C9fqLgaP.js","assets/练习.html-C95x0gGH.js","assets/index.html-CI_qFI7d.js","assets/index.html-OHdePKRq.js","assets/index.html-DoxkJaEB.js","assets/index.html-BPJ2o8zl.js","assets/index.html-DdukaIVn.js","assets/浮点数.html-DHabfvHK.js","assets/答案集.html-jhELWWcn.js","assets/输入集.html-B54DaQQv.js","assets/index.html-NhN6_qLj.js","assets/分割.html-xHeWCvfV.js","assets/选择.html-Cql78rLh.js","assets/index.html-tW3TCSjY.js","assets/index.html-CNhISv_q.js","assets/queue.html-Dl-0Lf0z.js","assets/index.html-SB96NPvO.js","assets/monotonic.html-jrm0oChI.js","assets/index.html-B4KUd4CX.js","assets/index.html-BxS6JAuN.js","assets/乐观锁.html-DSS2mC3w.js","assets/悲观锁.html-BTtiJLk2.js","assets/index.html-mSvOcVgs.js","assets/index.html-CrwDZZ07.js","assets/index.html-DOJ-SzZW.js","assets/参数.html-8-Dt02y8.js","assets/查询.html-DFjFIgb0.js","assets/标签.html-Be6_qYok.js","assets/index.html-Dl1eh1MB.js","assets/config.html-Bdcb2oAr.js","assets/devtool.html-DhujIsmc.js","assets/index.html-BS8avbvz.js","assets/index.html-BXtDw43e.js","assets/index.html-CYQVYfpH.js","assets/interceptor.html-BVxV74kR.js","assets/servlet.html-URyh6rMm.js","assets/index.html-BHNN35db.js","assets/Untitled.html-DwMG6Xze.js","assets/内存区域.html-Dq5E_LTS.js","assets/内存泄漏.html-CEtAc1dL.js","assets/对象内存.html-DYR5anKF.js","assets/分代收集理论.html-Cw4kwhZw.js","assets/垃圾回收算法.html-CawzQgo8.js","assets/垃圾收集器.html-DAfLsPN0.js","assets/对象死亡判定.html-CNsGMQv3.js","assets/引用类型.html-CB0Y4Y49.js","assets/index.html-BmBSy9AQ.js","assets/类加载器.html-9vGzbGPi.js","assets/类加载过程.html-BMbkkCHs.js","assets/结构.html-DRWV6RsD.js","assets/bucket.html-DXU4gzm6.js","assets/counting.html-CRBVGaIW.js","assets/radix.html-DBvrEvRd.js","assets/merge.html-DhbkDG_R.js","assets/partition.html-BLS8buHo.js","assets/index.html-oNkWzz2X.js","assets/条件查询.html-Bqs2SCcS.js","assets/查询投影.html-ChvlDUic.js","assets/index.html-DcWay6fc.js","assets/原理.html-25rFbwZc.js","assets/应用场景.html-D6HyRYLW.js","assets/用法.html-BEQ1Pv6R.js","assets/后处理器.html-CenzSq0T.js","assets/基本概念.html-D92IggNG.js","assets/循环依赖.html-HsSMTDrz.js","assets/生命周期.html-CqgtLUPh.js","assets/ioc.html-C6qniR4m.js","assets/事务.html-CVdJjW4a.js","assets/404.html-BKp-glv1.js","assets/index.html-C_PWTHu6.js","assets/index.html-T01bpzz-.js","assets/index.html-CsO4iMlM.js","assets/index.html-d0JBExve.js","assets/index.html-Fqh5Cf1E.js","assets/index.html-MHBH4N5k.js","assets/index.html-CynXjjh1.js","assets/index.html-LTRJyXFG.js","assets/index.html-DkYY_T2H.js","assets/index.html-a0Xd6ang.js","assets/index.html-JFXSgD-p.js","assets/index.html-DIHu3Wue.js","assets/index.html-CGilUIWL.js","assets/index.html-CPzmBzyk.js","assets/index.html-DU5J2fqU.js","assets/index.html-mAg8E1W1.js","assets/index.html-Dfi5y1rj.js","assets/index.html-Dy4WmBV-.js","assets/index.html-Dek_aqha.js","assets/index.html-BDvb_phY.js","assets/index.html-CpXQ6u_D.js","assets/index.html-DD97lgXx.js","assets/index.html-DAeBQqCS.js","assets/index.html-DIurdJEv.js","assets/index.html-yNMe-GVI.js","assets/index.html-BYGT1hyO.js","assets/index.html-eKj3HlWl.js","assets/index.html-BQ1vKS7Q.js","assets/index.html-sZaz6TuL.js","assets/index.html-BlY4lCih.js","assets/index.html-CANRqZSw.js","assets/index.html-NaUBBkac.js","assets/index.html-CTcoYAeY.js","assets/index.html-CkEiwB6O.js","assets/index.html-C9X5HToF.js","assets/index.html-uk39BgCr.js","assets/index.html-7stcXN2Y.js","assets/index.html-C0DUJom0.js","assets/index.html-qig86Dcd.js","assets/index.html-BlOcyKU-.js","assets/index.html-LgZShfvL.js","assets/index.html-DHv1DDWK.js","assets/index.html-BSx-jOtg.js","assets/index.html-CEdIsTS_.js","assets/index.html-CaHgtG9J.js","assets/index.html-h8FjrG6t.js","assets/index.html-Dx_fIYc1.js","assets/index.html-BE8DEt2e.js","assets/index.html-BG5q131_.js","assets/index.html-2f50H4Ob.js","assets/index.html-D39FbO_l.js","assets/index.html-XzTsWtMH.js","assets/index.html-Czd7T7be.js","assets/index.html-G5C4oUG-.js","assets/index.html-DtlGqGKb.js","assets/index.html-CBZDar2o.js","assets/index.html-Dl5WJR4C.js","assets/index.html-U1tLqsvK.js","assets/index.html-BiIR8xlV.js","assets/index.html-DyzQx3FB.js","assets/index.html-Ck3jfX1d.js","assets/index.html-M1l8KL8Y.js","assets/index.html-BjA8yy-9.js","assets/index.html-Cc9Xp6MD.js","assets/index.html-BwFTARME.js","assets/index.html-BY_hqbr8.js","assets/index.html-DN1DbDrH.js","assets/index.html-7GN0vf72.js","assets/index.html-DjIQJUoW.js","assets/index.html-BmVYq75t.js","assets/index.html-CpTwXCep.js","assets/index.html-D9nevkOl.js","assets/index.html-5S3Wjrem.js","assets/index.html-BFSAF5b2.js","assets/index.html--s848iUB.js","assets/index.html-BXJkvnXv.js","assets/index.html-BjPi5-qD.js","assets/index.html-L3etfFaw.js","assets/index.html-CoVQWgD-.js","assets/index.html-5VWQVnXC.js","assets/index.html-qA-LYNiI.js","assets/index.html-B3QZ1m25.js","assets/index.html-BcH07hxp.js","assets/index.html-yYWx9zCX.js","assets/index.html-B_fZae4f.js","assets/index.html-DQF33Ag7.js","assets/index.html-CkL-d0qa.js","assets/index.html-DpWJwhB1.js","assets/index.html-BaeulSBF.js","assets/index.html-dEtcJIqp.js","assets/index.html-DkdKGJvS.js","assets/index.html-DEe8NWnH.js","assets/index.html-D0rAYfLL.js","assets/index.html-Bhfj6Jme.js","assets/index.html-EL2gLr9B.js","assets/index.html-CHymOKUj.js","assets/index.html-BXCicKci.js","assets/index.html-x-Vv0064.js","assets/index.html-DGv39_rn.js","assets/index.html-DaCDD8fG.js","assets/index.html-BMYe-5tx.js","assets/index.html-CnWc0x1m.js","assets/index.html-BCrzKzNx.js","assets/index.html-5oEsgWR6.js","assets/index.html-CWDDXHbZ.js","assets/index.html-DIY4gbR8.js","assets/index.html-CXDyxOlG.js","assets/index.html-CsawqEx8.js","assets/index.html-I-hSTCwT.js","assets/index.html-Ce9ZIgSe.js","assets/index.html-DxOi76NW.js","assets/index.html-BX6SKWn_.js","assets/index.html-DlhfcoAp.js","assets/index.html-2Lc9acHO.js","assets/index.html-DpdVD25A.js","assets/index.html-B5O6u6Kw.js","assets/index.html-yI_rKyZs.js","assets/index.html-B1uBf8Je.js","assets/index.html-DEJIsm_V.js","assets/index.html-CzLEerKa.js","assets/index.html-Czb112j3.js","assets/index.html-R7HGqRAe.js","assets/index.html-VQZFx5-g.js","assets/index.html-bl993uQq.js","assets/index.html-sCPCLzfh.js","assets/index.html-DsXL5wBw.js","assets/index.html-CjRlMuQY.js","assets/index.html-6nGlJG6s.js","assets/index.html-Q2nnQ28r.js","assets/index.html-CjjkWVlG.js","assets/index.html-BbNVHUx-.js","assets/index.html-C99Ii4_J.js","assets/index.html-CZunN5BL.js","assets/index.html-CmtarDSG.js","assets/index.html-B3_Qih_P.js","assets/index.html-DA3GbElA.js","assets/index.html-Cfcheft2.js","assets/index.html-C8Scpfws.js","assets/index.html-C8x7efyz.js","assets/index.html-D4ujoP3f.js","assets/index.html-B6bdk4Sv.js","assets/index.html-BDd_5i8c.js","assets/index.html-CSSK1wxo.js","assets/index.html-DvlpxdqF.js","assets/index.html-C5_-EUg7.js","assets/index.html-Fp0jNquR.js","assets/index.html-C7JK82YE.js","assets/index.html-DWxAB2F6.js","assets/index.html-JHFpH_ev.js","assets/index.html-KNnEoNhn.js","assets/index-BYq9jyaM.js","assets/index-5XSeGWxe.js","assets/index-B9oRC6ej.js","assets/vue-repl-Cgu1dNxF.js","assets/commonjsHelpers-BFTU3MAI-BYTysl7I.js","assets/codemirror-editor-BaH0YJqt.js"])))=>i.map(i=>d[i]);
var T0=Object.defineProperty;var I0=(s,e,i)=>e in s?T0(s,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):s[e]=i;var Ma=(s,e,i)=>I0(s,typeof e!="symbol"?e+"":e,i);const L0="modulepreload",x0=function(s){return"/blog/"+s},_p={},l=function(e,i,n){let t=Promise.resolve();if(i&&i.length>0){document.getElementsByTagName("link");const r=document.querySelector("meta[property=csp-nonce]"),p=(r==null?void 0:r.nonce)||(r==null?void 0:r.getAttribute("nonce"));t=Promise.allSettled(i.map(o=>{if(o=x0(o),o in _p)return;_p[o]=!0;const d=o.endsWith(".css"),c=d?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${o}"]${c}`))return;const u=document.createElement("link");if(u.rel=d?"stylesheet":L0,d||(u.as="script"),u.crossOrigin="",u.href=o,p&&u.setAttribute("nonce",p),document.head.appendChild(u),d)return new Promise((m,g)=>{u.addEventListener("load",m),u.addEventListener("error",()=>g(new Error(`Unable to preload CSS for ${o}`)))})}))}function a(r){const p=new Event("vite:preloadError",{cancelable:!0});if(p.payload=r,window.dispatchEvent(p),!p.defaultPrevented)throw r}return t.then(r=>{for(const p of r||[])p.status==="rejected"&&a(p.reason);return e().catch(a)})};/**
* @vue/shared v3.5.12
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function Fn(s){const e=Object.create(null);for(const i of s.split(","))e[i]=1;return i=>i in e}const gs={},rn=[],Ke=()=>{},O0=()=>!1,vt=s=>s.charCodeAt(0)===111&&s.charCodeAt(1)===110&&(s.charCodeAt(2)>122||s.charCodeAt(2)<97),ur=s=>s.startsWith("onUpdate:"),Vs=Object.assign,mr=(s,e)=>{const i=s.indexOf(e);i>-1&&s.splice(i,1)},P0=Object.prototype.hasOwnProperty,_s=(s,e)=>P0.call(s,e),is=Array.isArray,pn=s=>ka(s)==="[object Map]",nd=s=>ka(s)==="[object Set]",ts=s=>typeof s=="function",xs=s=>typeof s=="string",li=s=>typeof s=="symbol",Is=s=>s!==null&&typeof s=="object",td=s=>(Is(s)||ts(s))&&ts(s.then)&&ts(s.catch),ad=Object.prototype.toString,ka=s=>ad.call(s),R0=s=>ka(s).slice(8,-1),ld=s=>ka(s)==="[object Object]",gr=s=>xs(s)&&s!=="NaN"&&s[0]!=="-"&&""+parseInt(s,10)===s,on=Fn(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Ea=s=>{const e=Object.create(null);return i=>e[i]||(e[i]=s(i))},S0=/-(\w)/g,ae=Ea(s=>s.replace(S0,(e,i)=>i?i.toUpperCase():"")),V0=/\B([A-Z])/g,We=Ea(s=>s.replace(V0,"-$1").toLowerCase()),ft=Ea(s=>s.charAt(0).toUpperCase()+s.slice(1)),qa=Ea(s=>s?`on${ft(s)}`:""),pe=(s,e)=>!Object.is(s,e),Yt=(s,...e)=>{for(let i=0;i<s.length;i++)s[i](...e)},En=(s,e,i,n=!1)=>{Object.defineProperty(s,e,{configurable:!0,enumerable:!1,writable:n,value:i})},fl=s=>{const e=parseFloat(s);return isNaN(e)?s:e},N0=s=>{const e=xs(s)?Number(s):NaN;return isNaN(e)?s:e};let Bp;const ya=()=>Bp||(Bp=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function Aa(s){if(is(s)){const e={};for(let i=0;i<s.length;i++){const n=s[i],t=xs(n)?q0(n):Aa(n);if(t)for(const a in t)e[a]=t[a]}return e}else if(xs(s)||Is(s))return s}const z0=/;(?![^(]*\))/g,j0=/:([^]+)/,M0=/\/\*[^]*?\*\//g;function q0(s){const e={};return s.replace(M0,"").split(z0).forEach(i=>{if(i){const n=i.split(j0);n.length>1&&(e[n[0].trim()]=n[1].trim())}}),e}function G0(s){let e="";if(!s||xs(s))return e;for(const i in s){const n=s[i];if(xs(n)||typeof n=="number"){const t=i.startsWith("--")?i:We(i);e+=`${t}:${n};`}}return e}function va(s){let e="";if(xs(s))e=s;else if(is(s))for(let i=0;i<s.length;i++){const n=va(s[i]);n&&(e+=n+" ")}else if(Is(s))for(const i in s)s[i]&&(e+=i+" ");return e.trim()}const rd="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",H0=Fn(rd),bp=Fn(rd+",async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected");function kr(s){return!!s||s===""}const U0=Fn("accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap"),$0=Fn("xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xmlns:xlink,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan");function K0(s){if(s==null)return!1;const e=typeof s;return e==="string"||e==="number"||e==="boolean"}const W0=/[ !"#$%&'()*+,./:;<=>?@[\\\]^`{|}~]/g;function Q0(s,e){return s.replace(W0,i=>`\\${i}`)}const pd=s=>!!(s&&s.__v_isRef===!0),J0=s=>xs(s)?s:s==null?"":is(s)||Is(s)&&(s.toString===ad||!ts(s.toString))?pd(s)?J0(s.value):JSON.stringify(s,od,2):String(s),od=(s,e)=>pd(e)?od(s,e.value):pn(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((i,[n,t],a)=>(i[Ga(n,a)+" =>"]=t,i),{})}:nd(e)?{[`Set(${e.size})`]:[...e.values()].map(i=>Ga(i))}:li(e)?Ga(e):Is(e)&&!is(e)&&!ld(e)?String(e):e,Ga=(s,e="")=>{var i;return li(s)?`Symbol(${(i=s.description)!=null?i:e})`:s};/**
* @vue/reactivity v3.5.12
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let ie;class Y0{constructor(e=!1){this.detached=e,this._active=!0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=ie,!e&&ie&&(this.index=(ie.scopes||(ie.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let e,i;if(this.scopes)for(e=0,i=this.scopes.length;e<i;e++)this.scopes[e].pause();for(e=0,i=this.effects.length;e<i;e++)this.effects[e].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let e,i;if(this.scopes)for(e=0,i=this.scopes.length;e<i;e++)this.scopes[e].resume();for(e=0,i=this.effects.length;e<i;e++)this.effects[e].resume()}}run(e){if(this._active){const i=ie;try{return ie=this,e()}finally{ie=i}}}on(){ie=this}off(){ie=this.parent}stop(e){if(this._active){let i,n;for(i=0,n=this.effects.length;i<n;i++)this.effects[i].stop();for(i=0,n=this.cleanups.length;i<n;i++)this.cleanups[i]();if(this.scopes)for(i=0,n=this.scopes.length;i<n;i++)this.scopes[i].stop(!0);if(!this.detached&&this.parent&&!e){const t=this.parent.scopes.pop();t&&t!==this&&(this.parent.scopes[this.index]=t,t.index=this.index)}this.parent=void 0,this._active=!1}}}function hd(){return ie}function X0(s,e=!1){ie&&ie.cleanups.push(s)}let Fs;const Ha=new WeakSet;class dd{constructor(e){this.fn=e,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,ie&&ie.active&&ie.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,Ha.has(this)&&(Ha.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||ud(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,wp(this),md(this);const e=Fs,i=xe;Fs=this,xe=!0;try{return this.fn()}finally{gd(this),Fs=e,xe=i,this.flags&=-3}}stop(){if(this.flags&1){for(let e=this.deps;e;e=e.nextDep)Ar(e);this.deps=this.depsTail=void 0,wp(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?Ha.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){_l(this)&&this.run()}get dirty(){return _l(this)}}let cd=0,Qn,Jn;function ud(s,e=!1){if(s.flags|=8,e){s.next=Jn,Jn=s;return}s.next=Qn,Qn=s}function Er(){cd++}function yr(){if(--cd>0)return;if(Jn){let e=Jn;for(Jn=void 0;e;){const i=e.next;e.next=void 0,e.flags&=-9,e=i}}let s;for(;Qn;){let e=Qn;for(Qn=void 0;e;){const i=e.next;if(e.next=void 0,e.flags&=-9,e.flags&1)try{e.trigger()}catch(n){s||(s=n)}e=i}}if(s)throw s}function md(s){for(let e=s.deps;e;e=e.nextDep)e.version=-1,e.prevActiveLink=e.dep.activeLink,e.dep.activeLink=e}function gd(s){let e,i=s.depsTail,n=i;for(;n;){const t=n.prevDep;n.version===-1?(n===i&&(i=t),Ar(n),Z0(n)):e=n,n.dep.activeLink=n.prevActiveLink,n.prevActiveLink=void 0,n=t}s.deps=e,s.depsTail=i}function _l(s){for(let e=s.deps;e;e=e.nextDep)if(e.dep.version!==e.version||e.dep.computed&&(kd(e.dep.computed)||e.dep.version!==e.version))return!0;return!!s._dirty}function kd(s){if(s.flags&4&&!(s.flags&16)||(s.flags&=-17,s.globalVersion===tt))return;s.globalVersion=tt;const e=s.dep;if(s.flags|=2,e.version>0&&!s.isSSR&&s.deps&&!_l(s)){s.flags&=-3;return}const i=Fs,n=xe;Fs=s,xe=!0;try{md(s);const t=s.fn(s._value);(e.version===0||pe(t,s._value))&&(s._value=t,e.version++)}catch(t){throw e.version++,t}finally{Fs=i,xe=n,gd(s),s.flags&=-3}}function Ar(s,e=!1){const{dep:i,prevSub:n,nextSub:t}=s;if(n&&(n.nextSub=t,s.prevSub=void 0),t&&(t.prevSub=n,s.nextSub=void 0),i.subs===s&&(i.subs=n,!n&&i.computed)){i.computed.flags&=-5;for(let a=i.computed.deps;a;a=a.nextDep)Ar(a,!0)}!e&&!--i.sc&&i.map&&i.map.delete(i.key)}function Z0(s){const{prevDep:e,nextDep:i}=s;e&&(e.nextDep=i,s.prevDep=void 0),i&&(i.prevDep=e,s.nextDep=void 0)}let xe=!0;const Ed=[];function ri(){Ed.push(xe),xe=!1}function pi(){const s=Ed.pop();xe=s===void 0?!0:s}function wp(s){const{cleanup:e}=s;if(s.cleanup=void 0,e){const i=Fs;Fs=void 0;try{e()}finally{Fs=i}}}let tt=0;class s2{constructor(e,i){this.sub=e,this.dep=i,this.version=i.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class fa{constructor(e){this.computed=e,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0}track(e){if(!Fs||!xe||Fs===this.computed)return;let i=this.activeLink;if(i===void 0||i.sub!==Fs)i=this.activeLink=new s2(Fs,this),Fs.deps?(i.prevDep=Fs.depsTail,Fs.depsTail.nextDep=i,Fs.depsTail=i):Fs.deps=Fs.depsTail=i,yd(i);else if(i.version===-1&&(i.version=this.version,i.nextDep)){const n=i.nextDep;n.prevDep=i.prevDep,i.prevDep&&(i.prevDep.nextDep=n),i.prevDep=Fs.depsTail,i.nextDep=void 0,Fs.depsTail.nextDep=i,Fs.depsTail=i,Fs.deps===i&&(Fs.deps=n)}return i}trigger(e){this.version++,tt++,this.notify(e)}notify(e){Er();try{for(let i=this.subs;i;i=i.prevSub)i.sub.notify()&&i.sub.dep.notify()}finally{yr()}}}function yd(s){if(s.dep.sc++,s.sub.flags&4){const e=s.dep.computed;if(e&&!s.dep.subs){e.flags|=20;for(let n=e.deps;n;n=n.nextDep)yd(n)}const i=s.dep.subs;i!==s&&(s.prevSub=i,i&&(i.nextSub=s)),s.dep.subs=s}}const ia=new WeakMap,Vi=Symbol(""),Bl=Symbol(""),at=Symbol("");function Ys(s,e,i){if(xe&&Fs){let n=ia.get(s);n||ia.set(s,n=new Map);let t=n.get(i);t||(n.set(i,t=new fa),t.map=n,t.key=i),t.track()}}function ni(s,e,i,n,t,a){const r=ia.get(s);if(!r){tt++;return}const p=o=>{o&&o.trigger()};if(Er(),e==="clear")r.forEach(p);else{const o=is(s),d=o&&gr(i);if(o&&i==="length"){const c=Number(n);r.forEach((u,m)=>{(m==="length"||m===at||!li(m)&&m>=c)&&p(u)})}else switch((i!==void 0||r.has(void 0))&&p(r.get(i)),d&&p(r.get(at)),e){case"add":o?d&&p(r.get("length")):(p(r.get(Vi)),pn(s)&&p(r.get(Bl)));break;case"delete":o||(p(r.get(Vi)),pn(s)&&p(r.get(Bl)));break;case"set":pn(s)&&p(r.get(Vi));break}}yr()}function e2(s,e){const i=ia.get(s);return i&&i.get(e)}function Yi(s){const e=os(s);return e===s?e:(Ys(e,"iterate",at),we(s)?e:e.map(Xs))}function _a(s){return Ys(s=os(s),"iterate",at),s}const i2={__proto__:null,[Symbol.iterator](){return Ua(this,Symbol.iterator,Xs)},concat(...s){return Yi(this).concat(...s.map(e=>is(e)?Yi(e):e))},entries(){return Ua(this,"entries",s=>(s[1]=Xs(s[1]),s))},every(s,e){return Je(this,"every",s,e,void 0,arguments)},filter(s,e){return Je(this,"filter",s,e,i=>i.map(Xs),arguments)},find(s,e){return Je(this,"find",s,e,Xs,arguments)},findIndex(s,e){return Je(this,"findIndex",s,e,void 0,arguments)},findLast(s,e){return Je(this,"findLast",s,e,Xs,arguments)},findLastIndex(s,e){return Je(this,"findLastIndex",s,e,void 0,arguments)},forEach(s,e){return Je(this,"forEach",s,e,void 0,arguments)},includes(...s){return $a(this,"includes",s)},indexOf(...s){return $a(this,"indexOf",s)},join(s){return Yi(this).join(s)},lastIndexOf(...s){return $a(this,"lastIndexOf",s)},map(s,e){return Je(this,"map",s,e,void 0,arguments)},pop(){return Nn(this,"pop")},push(...s){return Nn(this,"push",s)},reduce(s,...e){return Cp(this,"reduce",s,e)},reduceRight(s,...e){return Cp(this,"reduceRight",s,e)},shift(){return Nn(this,"shift")},some(s,e){return Je(this,"some",s,e,void 0,arguments)},splice(...s){return Nn(this,"splice",s)},toReversed(){return Yi(this).toReversed()},toSorted(s){return Yi(this).toSorted(s)},toSpliced(...s){return Yi(this).toSpliced(...s)},unshift(...s){return Nn(this,"unshift",s)},values(){return Ua(this,"values",Xs)}};function Ua(s,e,i){const n=_a(s),t=n[e]();return n!==s&&!we(s)&&(t._next=t.next,t.next=()=>{const a=t._next();return a.value&&(a.value=i(a.value)),a}),t}const n2=Array.prototype;function Je(s,e,i,n,t,a){const r=_a(s),p=r!==s&&!we(s),o=r[e];if(o!==n2[e]){const u=o.apply(s,a);return p?Xs(u):u}let d=i;r!==s&&(p?d=function(u,m){return i.call(this,Xs(u),m,s)}:i.length>2&&(d=function(u,m){return i.call(this,u,m,s)}));const c=o.call(r,d,n);return p&&t?t(c):c}function Cp(s,e,i,n){const t=_a(s);let a=i;return t!==s&&(we(s)?i.length>3&&(a=function(r,p,o){return i.call(this,r,p,o,s)}):a=function(r,p,o){return i.call(this,r,Xs(p),o,s)}),t[e](a,...n)}function $a(s,e,i){const n=os(s);Ys(n,"iterate",at);const t=n[e](...i);return(t===-1||t===!1)&&_r(i[0])?(i[0]=os(i[0]),n[e](...i)):t}function Nn(s,e,i=[]){ri(),Er();const n=os(s)[e].apply(s,i);return yr(),pi(),n}const t2=Fn("__proto__,__v_isRef,__isVue"),Ad=new Set(Object.getOwnPropertyNames(Symbol).filter(s=>s!=="arguments"&&s!=="caller").map(s=>Symbol[s]).filter(li));function a2(s){li(s)||(s=String(s));const e=os(this);return Ys(e,"has",s),e.hasOwnProperty(s)}class vd{constructor(e=!1,i=!1){this._isReadonly=e,this._isShallow=i}get(e,i,n){const t=this._isReadonly,a=this._isShallow;if(i==="__v_isReactive")return!t;if(i==="__v_isReadonly")return t;if(i==="__v_isShallow")return a;if(i==="__v_raw")return n===(t?a?g2:bd:a?Bd:_d).get(e)||Object.getPrototypeOf(e)===Object.getPrototypeOf(n)?e:void 0;const r=is(e);if(!t){let o;if(r&&(o=i2[i]))return o;if(i==="hasOwnProperty")return a2}const p=Reflect.get(e,i,Ms(e)?e:n);return(li(i)?Ad.has(i):t2(i))||(t||Ys(e,"get",i),a)?p:Ms(p)?r&&gr(i)?p:p.value:Is(p)?t?Gi(p):_t(p):p}}class fd extends vd{constructor(e=!1){super(!1,e)}set(e,i,n,t){let a=e[i];if(!this._isShallow){const o=zi(a);if(!we(n)&&!zi(n)&&(a=os(a),n=os(n)),!is(e)&&Ms(a)&&!Ms(n))return o?!1:(a.value=n,!0)}const r=is(e)&&gr(i)?Number(i)<e.length:_s(e,i),p=Reflect.set(e,i,n,Ms(e)?e:t);return e===os(t)&&(r?pe(n,a)&&ni(e,"set",i,n):ni(e,"add",i,n)),p}deleteProperty(e,i){const n=_s(e,i);e[i];const t=Reflect.deleteProperty(e,i);return t&&n&&ni(e,"delete",i,void 0),t}has(e,i){const n=Reflect.has(e,i);return(!li(i)||!Ad.has(i))&&Ys(e,"has",i),n}ownKeys(e){return Ys(e,"iterate",is(e)?"length":Vi),Reflect.ownKeys(e)}}class l2 extends vd{constructor(e=!1){super(!0,e)}set(e,i){return!0}deleteProperty(e,i){return!0}}const r2=new fd,p2=new l2,o2=new fd(!0);const bl=s=>s,Nt=s=>Reflect.getPrototypeOf(s);function h2(s,e,i){return function(...n){const t=this.__v_raw,a=os(t),r=pn(a),p=s==="entries"||s===Symbol.iterator&&r,o=s==="keys"&&r,d=t[s](...n),c=i?bl:e?wl:Xs;return!e&&Ys(a,"iterate",o?Bl:Vi),{next(){const{value:u,done:m}=d.next();return m?{value:u,done:m}:{value:p?[c(u[0]),c(u[1])]:c(u),done:m}},[Symbol.iterator](){return this}}}}function zt(s){return function(...e){return s==="delete"?!1:s==="clear"?void 0:this}}function d2(s,e){const i={get(t){const a=this.__v_raw,r=os(a),p=os(t);s||(pe(t,p)&&Ys(r,"get",t),Ys(r,"get",p));const{has:o}=Nt(r),d=e?bl:s?wl:Xs;if(o.call(r,t))return d(a.get(t));if(o.call(r,p))return d(a.get(p));a!==r&&a.get(t)},get size(){const t=this.__v_raw;return!s&&Ys(os(t),"iterate",Vi),Reflect.get(t,"size",t)},has(t){const a=this.__v_raw,r=os(a),p=os(t);return s||(pe(t,p)&&Ys(r,"has",t),Ys(r,"has",p)),t===p?a.has(t):a.has(t)||a.has(p)},forEach(t,a){const r=this,p=r.__v_raw,o=os(p),d=e?bl:s?wl:Xs;return!s&&Ys(o,"iterate",Vi),p.forEach((c,u)=>t.call(a,d(c),d(u),r))}};return Vs(i,s?{add:zt("add"),set:zt("set"),delete:zt("delete"),clear:zt("clear")}:{add(t){!e&&!we(t)&&!zi(t)&&(t=os(t));const a=os(this);return Nt(a).has.call(a,t)||(a.add(t),ni(a,"add",t,t)),this},set(t,a){!e&&!we(a)&&!zi(a)&&(a=os(a));const r=os(this),{has:p,get:o}=Nt(r);let d=p.call(r,t);d||(t=os(t),d=p.call(r,t));const c=o.call(r,t);return r.set(t,a),d?pe(a,c)&&ni(r,"set",t,a):ni(r,"add",t,a),this},delete(t){const a=os(this),{has:r,get:p}=Nt(a);let o=r.call(a,t);o||(t=os(t),o=r.call(a,t)),p&&p.call(a,t);const d=a.delete(t);return o&&ni(a,"delete",t,void 0),d},clear(){const t=os(this),a=t.size!==0,r=t.clear();return a&&ni(t,"clear",void 0,void 0),r}}),["keys","values","entries",Symbol.iterator].forEach(t=>{i[t]=h2(t,s,e)}),i}function vr(s,e){const i=d2(s,e);return(n,t,a)=>t==="__v_isReactive"?!s:t==="__v_isReadonly"?s:t==="__v_raw"?n:Reflect.get(_s(i,t)&&t in n?i:n,t,a)}const c2={get:vr(!1,!1)},u2={get:vr(!1,!0)},m2={get:vr(!0,!1)};const _d=new WeakMap,Bd=new WeakMap,bd=new WeakMap,g2=new WeakMap;function k2(s){switch(s){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function E2(s){return s.__v_skip||!Object.isExtensible(s)?0:k2(R0(s))}function _t(s){return zi(s)?s:fr(s,!1,r2,c2,_d)}function wd(s){return fr(s,!1,o2,u2,Bd)}function Gi(s){return fr(s,!0,p2,m2,bd)}function fr(s,e,i,n,t){if(!Is(s)||s.__v_raw&&!(e&&s.__v_isReactive))return s;const a=t.get(s);if(a)return a;const r=E2(s);if(r===0)return s;const p=new Proxy(s,r===2?n:i);return t.set(s,p),p}function hn(s){return zi(s)?hn(s.__v_raw):!!(s&&s.__v_isReactive)}function zi(s){return!!(s&&s.__v_isReadonly)}function we(s){return!!(s&&s.__v_isShallow)}function _r(s){return s?!!s.__v_raw:!1}function os(s){const e=s&&s.__v_raw;return e?os(e):s}function y2(s){return!_s(s,"__v_skip")&&Object.isExtensible(s)&&En(s,"__v_skip",!0),s}const Xs=s=>Is(s)?_t(s):s,wl=s=>Is(s)?Gi(s):s;function Ms(s){return s?s.__v_isRef===!0:!1}function Y(s){return Cd(s,!1)}function ys(s){return Cd(s,!0)}function Cd(s,e){return Ms(s)?s:new A2(s,e)}class A2{constructor(e,i){this.dep=new fa,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=i?e:os(e),this._value=i?e:Xs(e),this.__v_isShallow=i}get value(){return this.dep.track(),this._value}set value(e){const i=this._rawValue,n=this.__v_isShallow||we(e)||zi(e);e=n?e:os(e),pe(e,i)&&(this._rawValue=e,this._value=n?e:Xs(e),this.dep.trigger())}}function Ai(s){return Ms(s)?s.value:s}const v2={get:(s,e,i)=>e==="__v_raw"?s:Ai(Reflect.get(s,e,i)),set:(s,e,i,n)=>{const t=s[e];return Ms(t)&&!Ms(i)?(t.value=i,!0):Reflect.set(s,e,i,n)}};function Dd(s){return hn(s)?s:new Proxy(s,v2)}class f2{constructor(e){this.__v_isRef=!0,this._value=void 0;const i=this.dep=new fa,{get:n,set:t}=e(i.track.bind(i),i.trigger.bind(i));this._get=n,this._set=t}get value(){return this._value=this._get()}set value(e){this._set(e)}}function Br(s){return new f2(s)}function mA(s){const e=is(s)?new Array(s.length):{};for(const i in s)e[i]=Fd(s,i);return e}class _2{constructor(e,i,n){this._object=e,this._key=i,this._defaultValue=n,this.__v_isRef=!0,this._value=void 0}get value(){const e=this._object[this._key];return this._value=e===void 0?this._defaultValue:e}set value(e){this._object[this._key]=e}get dep(){return e2(os(this._object),this._key)}}class B2{constructor(e){this._getter=e,this.__v_isRef=!0,this.__v_isReadonly=!0,this._value=void 0}get value(){return this._value=this._getter()}}function Tn(s,e,i){return Ms(s)?s:ts(s)?new B2(s):Is(s)&&arguments.length>1?Fd(s,e,i):Y(s)}function Fd(s,e,i){const n=s[e];return Ms(n)?n:new _2(s,e,i)}class b2{constructor(e,i,n){this.fn=e,this.setter=i,this._value=void 0,this.dep=new fa(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=tt-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!i,this.isSSR=n}notify(){if(this.flags|=16,!(this.flags&8)&&Fs!==this)return ud(this,!0),!0}get value(){const e=this.dep.track();return kd(this),e&&(e.version=this.dep.version),this._value}set value(e){this.setter&&this.setter(e)}}function w2(s,e,i=!1){let n,t;return ts(s)?n=s:(n=s.get,t=s.set),new b2(n,t,i)}const jt={},na=new WeakMap;let xi;function C2(s,e=!1,i=xi){if(i){let n=na.get(i);n||na.set(i,n=[]),n.push(s)}}function D2(s,e,i=gs){const{immediate:n,deep:t,once:a,scheduler:r,augmentJob:p,call:o}=i,d=w=>t?w:we(w)||t===!1||t===0?ti(w,1):ti(w);let c,u,m,g,k=!1,A=!1;if(Ms(s)?(u=()=>s.value,k=we(s)):hn(s)?(u=()=>d(s),k=!0):is(s)?(A=!0,k=s.some(w=>hn(w)||we(w)),u=()=>s.map(w=>{if(Ms(w))return w.value;if(hn(w))return d(w);if(ts(w))return o?o(w,2):w()})):ts(s)?e?u=o?()=>o(s,2):s:u=()=>{if(m){ri();try{m()}finally{pi()}}const w=xi;xi=c;try{return o?o(s,3,[g]):s(g)}finally{xi=w}}:u=Ke,e&&t){const w=u,P=t===!0?1/0:t;u=()=>ti(w(),P)}const f=hd(),v=()=>{c.stop(),f&&mr(f.effects,c)};if(a&&e){const w=e;e=(...P)=>{w(...P),v()}}let b=A?new Array(s.length).fill(jt):jt;const E=w=>{if(!(!(c.flags&1)||!c.dirty&&!w))if(e){const P=c.run();if(t||k||(A?P.some((M,z)=>pe(M,b[z])):pe(P,b))){m&&m();const M=xi;xi=c;try{const z=[P,b===jt?void 0:A&&b[0]===jt?[]:b,g];o?o(e,3,z):e(...z),b=P}finally{xi=M}}}else c.run()};return p&&p(E),c=new dd(u),c.scheduler=r?()=>r(E,!1):E,g=w=>C2(w,!1,c),m=c.onStop=()=>{const w=na.get(c);if(w){if(o)o(w,4);else for(const P of w)P();na.delete(c)}},e?n?E(!0):b=c.run():r?r(E.bind(null,!0),!0):c.run(),v.pause=c.pause.bind(c),v.resume=c.resume.bind(c),v.stop=v,v}function ti(s,e=1/0,i){if(e<=0||!Is(s)||s.__v_skip||(i=i||new Set,i.has(s)))return s;if(i.add(s),e--,Ms(s))ti(s.value,e,i);else if(is(s))for(let n=0;n<s.length;n++)ti(s[n],e,i);else if(nd(s)||pn(s))s.forEach(n=>{ti(n,e,i)});else if(ld(s)){for(const n in s)ti(s[n],e,i);for(const n of Object.getOwnPropertySymbols(s))Object.prototype.propertyIsEnumerable.call(s,n)&&ti(s[n],e,i)}return s}/**
* @vue/runtime-core v3.5.12
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const Yn=[];let Ka=!1;function ui(s,...e){if(Ka)return;Ka=!0,ri();const i=Yn.length?Yn[Yn.length-1].component:null,n=i&&i.appContext.config.warnHandler,t=F2();if(n)In(n,i,11,[s+e.map(a=>{var r,p;return(p=(r=a.toString)==null?void 0:r.call(a))!=null?p:JSON.stringify(a)}).join(""),i&&i.proxy,t.map(({vnode:a})=>`at <${Ac(i,a.type)}>`).join(`
`),t]);else{const a=[`[Vue warn]: ${s}`,...e];t.length&&a.push(`
`,...T2(t)),console.warn(...a)}pi(),Ka=!1}function F2(){let s=Yn[Yn.length-1];if(!s)return[];const e=[];for(;s;){const i=e[0];i&&i.vnode===s?i.recurseCount++:e.push({vnode:s,recurseCount:0});const n=s.component&&s.component.parent;s=n&&n.vnode}return e}function T2(s){const e=[];return s.forEach((i,n)=>{e.push(...n===0?[]:[`
`],...I2(i))}),e}function I2({vnode:s,recurseCount:e}){const i=e>0?`... (${e} recursive calls)`:"",n=s.component?s.component.parent==null:!1,t=` at <${Ac(s.component,s.type,n)}`,a=">"+i;return s.props?[t,...L2(s.props),a]:[t+a]}function L2(s){const e=[],i=Object.keys(s);return i.slice(0,3).forEach(n=>{e.push(...Td(n,s[n]))}),i.length>3&&e.push(" ..."),e}function Td(s,e,i){return xs(e)?(e=JSON.stringify(e),i?e:[`${s}=${e}`]):typeof e=="number"||typeof e=="boolean"||e==null?i?e:[`${s}=${e}`]:Ms(e)?(e=Td(s,os(e.value),!0),i?e:[`${s}=Ref<`,e,">"]):ts(e)?[`${s}=fn${e.name?`<${e.name}>`:""}`]:(e=os(e),i?e:[`${s}=`,e])}function In(s,e,i,n){try{return n?s(...n):s()}catch(t){Bt(t,e,i)}}function Oe(s,e,i,n){if(ts(s)){const t=In(s,e,i,n);return t&&td(t)&&t.catch(a=>{Bt(a,e,i)}),t}if(is(s)){const t=[];for(let a=0;a<s.length;a++)t.push(Oe(s[a],e,i,n));return t}}function Bt(s,e,i,n=!0){const t=e?e.vnode:null,{errorHandler:a,throwUnhandledErrorInProduction:r}=e&&e.appContext.config||gs;if(e){let p=e.parent;const o=e.proxy,d=`https://vuejs.org/error-reference/#runtime-${i}`;for(;p;){const c=p.ec;if(c){for(let u=0;u<c.length;u++)if(c[u](s,o,d)===!1)return}p=p.parent}if(a){ri(),In(a,null,10,[s,o,d]),pi();return}}x2(s,i,t,n,r)}function x2(s,e,i,n=!0,t=!1){if(t)throw s;console.error(s)}const ne=[];let Ge=-1;const dn=[];let gi=null,en=0;const Id=Promise.resolve();let ta=null;function Qe(s){const e=ta||Id;return s?e.then(this?s.bind(this):s):e}function O2(s){let e=Ge+1,i=ne.length;for(;e<i;){const n=e+i>>>1,t=ne[n],a=lt(t);a<s||a===s&&t.flags&2?e=n+1:i=n}return e}function br(s){if(!(s.flags&1)){const e=lt(s),i=ne[ne.length-1];!i||!(s.flags&2)&&e>=lt(i)?ne.push(s):ne.splice(O2(e),0,s),s.flags|=1,Ld()}}function Ld(){ta||(ta=Id.then(xd))}function P2(s){is(s)?dn.push(...s):gi&&s.id===-1?gi.splice(en+1,0,s):s.flags&1||(dn.push(s),s.flags|=1),Ld()}function Dp(s,e,i=Ge+1){for(;i<ne.length;i++){const n=ne[i];if(n&&n.flags&2){if(s&&n.id!==s.uid)continue;ne.splice(i,1),i--,n.flags&4&&(n.flags&=-2),n(),n.flags&4||(n.flags&=-2)}}}function aa(s){if(dn.length){const e=[...new Set(dn)].sort((i,n)=>lt(i)-lt(n));if(dn.length=0,gi){gi.push(...e);return}for(gi=e,en=0;en<gi.length;en++){const i=gi[en];i.flags&4&&(i.flags&=-2),i.flags&8||i(),i.flags&=-2}gi=null,en=0}}const lt=s=>s.id==null?s.flags&2?-1:1/0:s.id;function xd(s){try{for(Ge=0;Ge<ne.length;Ge++){const e=ne[Ge];e&&!(e.flags&8)&&(e.flags&4&&(e.flags&=-2),In(e,e.i,e.i?15:14),e.flags&4||(e.flags&=-2))}}finally{for(;Ge<ne.length;Ge++){const e=ne[Ge];e&&(e.flags&=-2)}Ge=-1,ne.length=0,aa(),ta=null,(ne.length||dn.length)&&xd()}}let Ue,Hn=[],Cl=!1;function Ba(s,...e){Ue?Ue.emit(s,...e):Cl||Hn.push({event:s,args:e})}function Od(s,e){var i,n;Ue=s,Ue?(Ue.enabled=!0,Hn.forEach(({event:t,args:a})=>Ue.emit(t,...a)),Hn=[]):typeof window<"u"&&window.HTMLElement&&!((n=(i=window.navigator)==null?void 0:i.userAgent)!=null&&n.includes("jsdom"))?((e.__VUE_DEVTOOLS_HOOK_REPLAY__=e.__VUE_DEVTOOLS_HOOK_REPLAY__||[]).push(a=>{Od(a,e)}),setTimeout(()=>{Ue||(e.__VUE_DEVTOOLS_HOOK_REPLAY__=null,Cl=!0,Hn=[])},3e3)):(Cl=!0,Hn=[])}function R2(s,e){Ba("app:init",s,e,{Fragment:Hs,Text:vi,Comment:Ks,Static:un})}function S2(s){Ba("app:unmount",s)}const V2=wr("component:added"),Pd=wr("component:updated"),N2=wr("component:removed"),z2=s=>{Ue&&typeof Ue.cleanupBuffer=="function"&&!Ue.cleanupBuffer(s)&&N2(s)};/*! #__NO_SIDE_EFFECTS__ */function wr(s){return e=>{Ba(s,e.appContext.app,e.uid,e.parent?e.parent.uid:void 0,e)}}function j2(s,e,i){Ba("component:emit",s.appContext.app,s,e,i)}let $s=null,Rd=null;function la(s){const e=$s;return $s=s,Rd=s&&s.type.__scopeId||null,e}function M2(s,e=$s,i){if(!e||s._n)return s;const n=(...t)=>{n._d&&jp(-1);const a=la(e);let r;try{r=s(...t)}finally{la(a),n._d&&jp(1)}return Pd(e),r};return n._n=!0,n._c=!0,n._d=!0,n}function gA(s,e){if($s===null)return s;const i=Da($s),n=s.dirs||(s.dirs=[]);for(let t=0;t<e.length;t++){let[a,r,p,o=gs]=e[t];a&&(ts(a)&&(a={mounted:a,updated:a}),a.deep&&ti(r),n.push({dir:a,instance:i,value:r,oldValue:void 0,arg:p,modifiers:o}))}return s}function He(s,e,i,n){const t=s.dirs,a=e&&e.dirs;for(let r=0;r<t.length;r++){const p=t[r];a&&(p.oldValue=a[r].value);let o=p.dir[n];o&&(ri(),Oe(o,i,8,[s.el,p,s,e]),pi())}}const q2=Symbol("_vte"),Sd=s=>s.__isTeleport,ki=Symbol("_leaveCb"),Mt=Symbol("_enterCb");function Vd(){const s={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return us(()=>{s.isMounted=!0}),Fr(()=>{s.isUnmounting=!0}),s}const fe=[Function,Array],Nd={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:fe,onEnter:fe,onAfterEnter:fe,onEnterCancelled:fe,onBeforeLeave:fe,onLeave:fe,onAfterLeave:fe,onLeaveCancelled:fe,onBeforeAppear:fe,onAppear:fe,onAfterAppear:fe,onAppearCancelled:fe},zd=s=>{const e=s.subTree;return e.component?zd(e.component):e},G2={name:"BaseTransition",props:Nd,setup(s,{slots:e}){const i=bi(),n=Vd();return()=>{const t=e.default&&Cr(e.default(),!0);if(!t||!t.length)return;const a=jd(t),r=os(s),{mode:p}=r;if(n.isLeaving)return Wa(a);const o=Fp(a);if(!o)return Wa(a);let d=rt(o,r,n,i,m=>d=m);o.type!==Ks&&ji(o,d);const c=i.subTree,u=c&&Fp(c);if(u&&u.type!==Ks&&!Pi(o,u)&&zd(i).type!==Ks){const m=rt(u,r,n,i);if(ji(u,m),p==="out-in"&&o.type!==Ks)return n.isLeaving=!0,m.afterLeave=()=>{n.isLeaving=!1,i.job.flags&8||i.update(),delete m.afterLeave},Wa(a);p==="in-out"&&o.type!==Ks&&(m.delayLeave=(g,k,A)=>{const f=Md(n,u);f[String(u.key)]=u,g[ki]=()=>{k(),g[ki]=void 0,delete d.delayedLeave},d.delayedLeave=A})}return a}}};function jd(s){let e=s[0];if(s.length>1){for(const i of s)if(i.type!==Ks){e=i;break}}return e}const H2=G2;function Md(s,e){const{leavingVNodes:i}=s;let n=i.get(e.type);return n||(n=Object.create(null),i.set(e.type,n)),n}function rt(s,e,i,n,t){const{appear:a,mode:r,persisted:p=!1,onBeforeEnter:o,onEnter:d,onAfterEnter:c,onEnterCancelled:u,onBeforeLeave:m,onLeave:g,onAfterLeave:k,onLeaveCancelled:A,onBeforeAppear:f,onAppear:v,onAfterAppear:b,onAppearCancelled:E}=e,w=String(s.key),P=Md(i,s),M=(V,I)=>{V&&Oe(V,n,9,I)},z=(V,I)=>{const G=I[1];M(V,I),is(V)?V.every(R=>R.length<=1)&&G():V.length<=1&&G()},Z={mode:r,persisted:p,beforeEnter(V){let I=o;if(!i.isMounted)if(a)I=f||o;else return;V[ki]&&V[ki](!0);const G=P[w];G&&Pi(s,G)&&G.el[ki]&&G.el[ki](),M(I,[V])},enter(V){let I=d,G=c,R=u;if(!i.isMounted)if(a)I=v||d,G=b||c,R=E||u;else return;let ss=!1;const rs=V[Mt]=Es=>{ss||(ss=!0,Es?M(R,[V]):M(G,[V]),Z.delayedLeave&&Z.delayedLeave(),V[Mt]=void 0)};I?z(I,[V,rs]):rs()},leave(V,I){const G=String(s.key);if(V[Mt]&&V[Mt](!0),i.isUnmounting)return I();M(m,[V]);let R=!1;const ss=V[ki]=rs=>{R||(R=!0,I(),rs?M(A,[V]):M(k,[V]),V[ki]=void 0,P[G]===s&&delete P[G])};P[G]=s,g?z(g,[V,ss]):ss()},clone(V){const I=rt(V,e,i,n,t);return t&&t(I),I}};return Z}function Wa(s){if(bt(s))return s=fi(s),s.children=null,s}function Fp(s){if(!bt(s))return Sd(s.type)&&s.children?jd(s.children):s;const{shapeFlag:e,children:i}=s;if(i){if(e&16)return i[0];if(e&32&&ts(i.default))return i.default()}}function ji(s,e){s.shapeFlag&6&&s.component?(s.transition=e,ji(s.component.subTree,e)):s.shapeFlag&128?(s.ssContent.transition=e.clone(s.ssContent),s.ssFallback.transition=e.clone(s.ssFallback)):s.transition=e}function Cr(s,e=!1,i){let n=[],t=0;for(let a=0;a<s.length;a++){let r=s[a];const p=i==null?r.key:String(i)+String(r.key!=null?r.key:a);r.type===Hs?(r.patchFlag&128&&t++,n=n.concat(Cr(r.children,e,p))):(e||r.type!==Ks)&&n.push(p!=null?fi(r,{key:p}):r)}if(t>1)for(let a=0;a<n.length;a++)n[a].patchFlag=-2;return n}/*! #__NO_SIDE_EFFECTS__ */function S(s,e){return ts(s)?Vs({name:s.name},e,{setup:s}):s}function Dr(s){s.ids=[s.ids[0]+s.ids[2]+++"-",0,0]}function kA(s){const e=bi(),i=ys(null);if(e){const t=e.refs===gs?e.refs={}:e.refs;Object.defineProperty(t,s,{enumerable:!0,get:()=>i.value,set:a=>i.value=a})}return i}function ra(s,e,i,n,t=!1){if(is(s)){s.forEach((k,A)=>ra(k,e&&(is(e)?e[A]:e),i,n,t));return}if(Ni(n)&&!t)return;const a=n.shapeFlag&4?Da(n.component):n.el,r=t?null:a,{i:p,r:o}=s,d=e&&e.r,c=p.refs===gs?p.refs={}:p.refs,u=p.setupState,m=os(u),g=u===gs?()=>!1:k=>_s(m,k);if(d!=null&&d!==o&&(xs(d)?(c[d]=null,g(d)&&(u[d]=null)):Ms(d)&&(d.value=null)),ts(o))In(o,p,12,[r,c]);else{const k=xs(o),A=Ms(o);if(k||A){const f=()=>{if(s.f){const v=k?g(o)?u[o]:c[o]:o.value;t?is(v)&&mr(v,a):is(v)?v.includes(a)||v.push(a):k?(c[o]=[a],g(o)&&(u[o]=c[o])):(o.value=[a],s.k&&(c[s.k]=o.value))}else k?(c[o]=r,g(o)&&(u[o]=r)):A&&(o.value=r,s.k&&(c[s.k]=r))};r?(f.id=-1,me(f,i)):f()}}}let Tp=!1;const Fi=()=>{Tp||(console.error("Hydration completed but contains mismatches."),Tp=!0)},U2=s=>s.namespaceURI.includes("svg")&&s.tagName!=="foreignObject",$2=s=>s.namespaceURI.includes("MathML"),qt=s=>{if(s.nodeType===1){if(U2(s))return"svg";if($2(s))return"mathml"}},Oi=s=>s.nodeType===8;function K2(s){const{mt:e,p:i,o:{patchProp:n,createText:t,nextSibling:a,parentNode:r,remove:p,insert:o,createComment:d}}=s,c=(E,w)=>{if(!w.hasChildNodes()){ui("Attempting to hydrate existing markup but container is empty. Performing full mount instead."),i(null,E,w),aa(),w._vnode=E;return}u(w.firstChild,E,null,null,null),aa(),w._vnode=E},u=(E,w,P,M,z,Z=!1)=>{Z=Z||!!w.dynamicChildren;const V=Oi(E)&&E.data==="[",I=()=>A(E,w,P,M,z,V),{type:G,ref:R,shapeFlag:ss,patchFlag:rs}=w;let Es=E.nodeType;w.el=E,En(E,"__vnode",w,!0),En(E,"__vueParentComponent",P,!0),rs===-2&&(Z=!1,w.dynamicChildren=null);let $=null;switch(G){case vi:Es!==3?w.children===""?(o(w.el=t(""),r(E),E),$=E):$=I():(E.data!==w.children&&(ui("Hydration text mismatch in",E.parentNode,`
  - rendered on server: ${JSON.stringify(E.data)}
  - expected on client: ${JSON.stringify(w.children)}`),Fi(),E.data=w.children),$=a(E));break;case Ks:b(E)?($=a(E),v(w.el=E.content.firstChild,E,P)):Es!==8||V?$=I():$=a(E);break;case un:if(V&&(E=a(E),Es=E.nodeType),Es===1||Es===3){$=E;const j=!w.children.length;for(let J=0;J<w.staticCount;J++)j&&(w.children+=$.nodeType===1?$.outerHTML:$.data),J===w.staticCount-1&&(w.anchor=$),$=a($);return V?a($):$}else I();break;case Hs:V?$=k(E,w,P,M,z,Z):$=I();break;default:if(ss&1)(Es!==1||w.type.toLowerCase()!==E.tagName.toLowerCase())&&!b(E)?$=I():$=m(E,w,P,M,z,Z);else if(ss&6){w.slotScopeIds=z;const j=r(E);if(V?$=f(E):Oi(E)&&E.data==="teleport start"?$=f(E,E.data,"teleport end"):$=a(E),e(w,j,null,P,M,qt(j),Z),Ni(w)){let J;V?(J=Ss(Hs),J.anchor=$?$.previousSibling:j.lastChild):J=E.nodeType===3?gc(""):Ss("div"),J.el=E,w.component.subTree=J}}else ss&64?Es!==8?$=I():$=w.type.hydrate(E,w,P,M,z,Z,s,g):ss&128?$=w.type.hydrate(E,w,P,M,qt(r(E)),z,Z,s,u):ui("Invalid HostVNode type:",G,`(${typeof G})`)}return R!=null&&ra(R,null,M,w),$},m=(E,w,P,M,z,Z)=>{Z=Z||!!w.dynamicChildren;const{type:V,props:I,patchFlag:G,shapeFlag:R,dirs:ss,transition:rs}=w,Es=V==="input"||V==="option";if(Es||G!==-1){ss&&He(w,null,P,"created");let $=!1;if(b(E)){$=tc(null,rs)&&P&&P.vnode.props&&P.vnode.props.appear;const J=E.content.firstChild;$&&rs.beforeEnter(J),v(J,E,P),w.el=E=J}if(R&16&&!(I&&(I.innerHTML||I.textContent))){let J=g(E.firstChild,w,E,P,M,z,Z),ls=!1;for(;J;){Un(E,1)||(ls||(ui("Hydration children mismatch on",E,`
Server rendered element contains more child nodes than client vdom.`),ls=!0),Fi());const zs=J;J=J.nextSibling,p(zs)}}else if(R&8){let J=w.children;J[0]===`
`&&(E.tagName==="PRE"||E.tagName==="TEXTAREA")&&(J=J.slice(1)),E.textContent!==J&&(Un(E,0)||(ui("Hydration text content mismatch on",E,`
  - rendered on server: ${E.textContent}
  - expected on client: ${w.children}`),Fi()),E.textContent=w.children)}if(I){const J=E.tagName.includes("-");for(const ls in I)!(ss&&ss.some(zs=>zs.dir.created))&&W2(E,ls,I[ls],w,P)&&Fi(),(Es&&(ls.endsWith("value")||ls==="indeterminate")||vt(ls)&&!on(ls)||ls[0]==="."||J)&&n(E,ls,null,I[ls],void 0,P)}let j;(j=I&&I.onVnodeBeforeMount)&&_e(j,P,w),ss&&He(w,null,P,"beforeMount"),((j=I&&I.onVnodeMounted)||ss||$)&&dc(()=>{j&&_e(j,P,w),$&&rs.enter(E),ss&&He(w,null,P,"mounted")},M)}return E.nextSibling},g=(E,w,P,M,z,Z,V)=>{V=V||!!w.dynamicChildren;const I=w.children,G=I.length;let R=!1;for(let ss=0;ss<G;ss++){const rs=V?I[ss]:I[ss]=be(I[ss]),Es=rs.type===vi;E?(Es&&!V&&ss+1<G&&be(I[ss+1]).type===vi&&(o(t(E.data.slice(rs.children.length)),P,a(E)),E.data=rs.children),E=u(E,rs,M,z,Z,V)):Es&&!rs.children?o(rs.el=t(""),P):(Un(P,1)||(R||(ui("Hydration children mismatch on",P,`
Server rendered element contains fewer child nodes than client vdom.`),R=!0),Fi()),i(null,rs,P,null,M,z,qt(P),Z))}return E},k=(E,w,P,M,z,Z)=>{const{slotScopeIds:V}=w;V&&(z=z?z.concat(V):V);const I=r(E),G=g(a(E),w,I,P,M,z,Z);return G&&Oi(G)&&G.data==="]"?a(w.anchor=G):(Fi(),o(w.anchor=d("]"),I,G),G)},A=(E,w,P,M,z,Z)=>{if(Un(E.parentElement,1)||(ui(`Hydration node mismatch:
- rendered on server:`,E,E.nodeType===3?"(text)":Oi(E)&&E.data==="["?"(start of fragment)":"",`
- expected on client:`,w.type),Fi()),w.el=null,Z){const G=f(E);for(;;){const R=a(E);if(R&&R!==G)p(R);else break}}const V=a(E),I=r(E);return p(E),i(null,w,I,V,P,M,qt(I),z),V},f=(E,w="[",P="]")=>{let M=0;for(;E;)if(E=a(E),E&&Oi(E)&&(E.data===w&&M++,E.data===P)){if(M===0)return a(E);M--}return E},v=(E,w,P)=>{const M=w.parentNode;M&&M.replaceChild(E,w);let z=P;for(;z;)z.vnode.el===w&&(z.vnode.el=z.subTree.el=E),z=z.parent},b=E=>E.nodeType===1&&E.tagName==="TEMPLATE";return[c,u]}function W2(s,e,i,n,t){let a,r,p,o;if(e==="class")p=s.getAttribute("class"),o=va(i),Q2(Ip(p||""),Ip(o))||(a=2,r="class");else if(e==="style"){p=s.getAttribute("style")||"",o=xs(i)?i:G0(Aa(i));const d=Lp(p),c=Lp(o);if(n.dirs)for(const{dir:u,value:m}of n.dirs)u.name==="show"&&!m&&c.set("display","none");t&&qd(t,n,c),J2(d,c)||(a=3,r="style")}else(s instanceof SVGElement&&$0(e)||s instanceof HTMLElement&&(bp(e)||U0(e)))&&(bp(e)?(p=s.hasAttribute(e),o=kr(i)):i==null?(p=s.hasAttribute(e),o=!1):(s.hasAttribute(e)?p=s.getAttribute(e):e==="value"&&s.tagName==="TEXTAREA"?p=s.value:p=!1,o=K0(i)?String(i):!1),p!==o&&(a=4,r=e));if(a!=null&&!Un(s,a)){const d=m=>m===!1?"(not rendered)":`${r}="${m}"`,c=`Hydration ${Gd[a]} mismatch on`,u=`
  - rendered on server: ${d(p)}
  - expected on client: ${d(o)}
  Note: this mismatch is check-only. The DOM will not be rectified in production due to performance overhead.
  You should fix the source of the mismatch.`;return ui(c,s,u),!0}return!1}function Ip(s){return new Set(s.trim().split(/\s+/))}function Q2(s,e){if(s.size!==e.size)return!1;for(const i of s)if(!e.has(i))return!1;return!0}function Lp(s){const e=new Map;for(const i of s.split(";")){let[n,t]=i.split(":");n=n.trim(),t=t&&t.trim(),n&&t&&e.set(n,t)}return e}function J2(s,e){if(s.size!==e.size)return!1;for(const[i,n]of s)if(n!==e.get(i))return!1;return!0}function qd(s,e,i){const n=s.subTree;if(s.getCssVars&&(e===n||n&&n.type===Hs&&n.children.includes(e))){const t=s.getCssVars();for(const a in t)i.set(`--${Q0(a)}`,String(t[a]))}e===n&&s.parent&&qd(s.parent,s.vnode,i)}const xp="data-allow-mismatch",Gd={0:"text",1:"children",2:"class",3:"style",4:"attribute"};function Un(s,e){if(e===0||e===1)for(;s&&!s.hasAttribute(xp);)s=s.parentElement;const i=s&&s.getAttribute(xp);if(i==null)return!1;if(i==="")return!0;{const n=i.split(",");return e===0&&n.includes("children")?!0:i.split(",").includes(Gd[e])}}ya().requestIdleCallback;ya().cancelIdleCallback;function Y2(s,e){if(Oi(s)&&s.data==="["){let i=1,n=s.nextSibling;for(;n;){if(n.nodeType===1){if(e(n)===!1)break}else if(Oi(n))if(n.data==="]"){if(--i===0)break}else n.data==="["&&i++;n=n.nextSibling}}else e(s)}const Ni=s=>!!s.type.__asyncLoader;/*! #__NO_SIDE_EFFECTS__ */function X2(s){ts(s)&&(s={loader:s});const{loader:e,loadingComponent:i,errorComponent:n,delay:t=200,hydrate:a,timeout:r,suspensible:p=!0,onError:o}=s;let d=null,c,u=0;const m=()=>(u++,d=null,g()),g=()=>{let k;return d||(k=d=e().catch(A=>{if(A=A instanceof Error?A:new Error(String(A)),o)return new Promise((f,v)=>{o(A,()=>f(m()),()=>v(A),u+1)});throw A}).then(A=>k!==d&&d?d:(A&&(A.__esModule||A[Symbol.toStringTag]==="Module")&&(A=A.default),c=A,A)))};return S({name:"AsyncComponentWrapper",__asyncLoader:g,__asyncHydrate(k,A,f){const v=a?()=>{const b=a(f,E=>Y2(k,E));b&&(A.bum||(A.bum=[])).push(b)}:f;c?v():g().then(()=>!A.isUnmounted&&v())},get __asyncResolved(){return c},setup(){const k=Us;if(Dr(k),c)return()=>Qa(c,k);const A=E=>{d=null,Bt(E,k,13,!n)};if(p&&k.suspense||yn)return g().then(E=>()=>Qa(E,k)).catch(E=>(A(E),()=>n?Ss(n,{error:E}):null));const f=Y(!1),v=Y(),b=Y(!!t);return t&&setTimeout(()=>{b.value=!1},t),r!=null&&setTimeout(()=>{if(!f.value&&!v.value){const E=new Error(`Async component timed out after ${r}ms.`);A(E),v.value=E}},r),g().then(()=>{f.value=!0,k.parent&&bt(k.parent.vnode)&&k.parent.update()}).catch(E=>{A(E),v.value=E}),()=>{if(f.value&&c)return Qa(c,k);if(v.value&&n)return Ss(n,{error:v.value});if(i&&!b.value)return Ss(i)}}})}function Qa(s,e){const{ref:i,props:n,children:t,ce:a}=e.vnode,r=Ss(s,n,t);return r.ref=i,r.ce=a,delete e.vnode.ce,r}const bt=s=>s.type.__isKeepAlive;function Z2(s,e){Hd(s,"a",e)}function sg(s,e){Hd(s,"da",e)}function Hd(s,e,i=Us){const n=s.__wdc||(s.__wdc=()=>{let t=i;for(;t;){if(t.isDeactivated)return;t=t.parent}return s()});if(ba(e,n,i),i){let t=i.parent;for(;t&&t.parent;)bt(t.parent.vnode)&&eg(n,e,i,t),t=t.parent}}function eg(s,e,i,n){const t=ba(e,s,n,!0);Hi(()=>{mr(n[e],t)},i)}function ba(s,e,i=Us,n=!1){if(i){const t=i[s]||(i[s]=[]),a=e.__weh||(e.__weh=(...r)=>{ri();const p=wt(i),o=Oe(e,i,s,r);return p(),pi(),o});return n?t.unshift(a):t.push(a),a}}const oi=s=>(e,i=Us)=>{(!yn||s==="sp")&&ba(s,(...n)=>e(...n),i)},ig=oi("bm"),us=oi("m"),ng=oi("bu"),Ud=oi("u"),Fr=oi("bum"),Hi=oi("um"),tg=oi("sp"),ag=oi("rtg"),lg=oi("rtc");function rg(s,e=Us){ba("ec",s,e)}const pg="components";function Pe(s,e){return hg(pg,s,!0,e)||s}const og=Symbol.for("v-ndc");function hg(s,e,i=!0,n=!1){const t=$s||Us;if(t){const a=t.type;{const p=yc(a,!1);if(p&&(p===e||p===ae(e)||p===ft(ae(e))))return a}const r=Op(t[s]||a[s],e)||Op(t.appContext[s],e);return!r&&n?a:r}}function Op(s,e){return s&&(s[e]||s[ae(e)]||s[ft(ae(e))])}function EA(s,e,i,n){let t;const a=i,r=is(s);if(r||xs(s)){const p=r&&hn(s);let o=!1;p&&(o=!we(s),s=_a(s)),t=new Array(s.length);for(let d=0,c=s.length;d<c;d++)t[d]=e(o?Xs(s[d]):s[d],d,void 0,a)}else if(typeof s=="number"){t=new Array(s);for(let p=0;p<s;p++)t[p]=e(p+1,p,void 0,a)}else if(Is(s))if(s[Symbol.iterator])t=Array.from(s,(p,o)=>e(p,o,void 0,a));else{const p=Object.keys(s);t=new Array(p.length);for(let o=0,d=p.length;o<d;o++){const c=p[o];t[o]=e(s[c],c,o,a)}}else t=[];return t}function yA(s,e,i={},n,t){if($s.ce||$s.parent&&Ni($s.parent)&&$s.parent.ce)return e!=="default"&&(i.name=e),Ll(),xl(Hs,null,[Ss("slot",i,n)],64);let a=s[e];a&&a._c&&(a._d=!1),Ll();const r=a&&$d(a(i)),p=i.key||r&&r.key,o=xl(Hs,{key:(p&&!li(p)?p:`_${e}`)+(!r&&n?"_fb":"")},r||[],r&&s._===1?64:-2);return a&&a._c&&(a._d=!0),o}function $d(s){return s.some(e=>ot(e)?!(e.type===Ks||e.type===Hs&&!$d(e.children)):!0)?s:null}const Dl=s=>s?kc(s)?Da(s):Dl(s.parent):null,Xn=Vs(Object.create(null),{$:s=>s,$el:s=>s.vnode.el,$data:s=>s.data,$props:s=>s.props,$attrs:s=>s.attrs,$slots:s=>s.slots,$refs:s=>s.refs,$parent:s=>Dl(s.parent),$root:s=>Dl(s.root),$host:s=>s.ce,$emit:s=>s.emit,$options:s=>Tr(s),$forceUpdate:s=>s.f||(s.f=()=>{br(s.update)}),$nextTick:s=>s.n||(s.n=Qe.bind(s.proxy)),$watch:s=>Lg.bind(s)}),Ja=(s,e)=>s!==gs&&!s.__isScriptSetup&&_s(s,e),dg={get({_:s},e){if(e==="__v_skip")return!0;const{ctx:i,setupState:n,data:t,props:a,accessCache:r,type:p,appContext:o}=s;let d;if(e[0]!=="$"){const g=r[e];if(g!==void 0)switch(g){case 1:return n[e];case 2:return t[e];case 4:return i[e];case 3:return a[e]}else{if(Ja(n,e))return r[e]=1,n[e];if(t!==gs&&_s(t,e))return r[e]=2,t[e];if((d=s.propsOptions[0])&&_s(d,e))return r[e]=3,a[e];if(i!==gs&&_s(i,e))return r[e]=4,i[e];Fl&&(r[e]=0)}}const c=Xn[e];let u,m;if(c)return e==="$attrs"&&Ys(s.attrs,"get",""),c(s);if((u=p.__cssModules)&&(u=u[e]))return u;if(i!==gs&&_s(i,e))return r[e]=4,i[e];if(m=o.config.globalProperties,_s(m,e))return m[e]},set({_:s},e,i){const{data:n,setupState:t,ctx:a}=s;return Ja(t,e)?(t[e]=i,!0):n!==gs&&_s(n,e)?(n[e]=i,!0):_s(s.props,e)||e[0]==="$"&&e.slice(1)in s?!1:(a[e]=i,!0)},has({_:{data:s,setupState:e,accessCache:i,ctx:n,appContext:t,propsOptions:a}},r){let p;return!!i[r]||s!==gs&&_s(s,r)||Ja(e,r)||(p=a[0])&&_s(p,r)||_s(n,r)||_s(Xn,r)||_s(t.config.globalProperties,r)},defineProperty(s,e,i){return i.get!=null?s._.accessCache[e]=0:_s(i,"value")&&this.set(s,e,i.value,null),Reflect.defineProperty(s,e,i)}};function pa(s){return is(s)?s.reduce((e,i)=>(e[i]=null,e),{}):s}function AA(s,e){return!s||!e?s||e:is(s)&&is(e)?s.concat(e):Vs({},pa(s),pa(e))}let Fl=!0;function cg(s){const e=Tr(s),i=s.proxy,n=s.ctx;Fl=!1,e.beforeCreate&&Pp(e.beforeCreate,s,"bc");const{data:t,computed:a,methods:r,watch:p,provide:o,inject:d,created:c,beforeMount:u,mounted:m,beforeUpdate:g,updated:k,activated:A,deactivated:f,beforeDestroy:v,beforeUnmount:b,destroyed:E,unmounted:w,render:P,renderTracked:M,renderTriggered:z,errorCaptured:Z,serverPrefetch:V,expose:I,inheritAttrs:G,components:R,directives:ss,filters:rs}=e;if(d&&ug(d,n,null),r)for(const j in r){const J=r[j];ts(J)&&(n[j]=J.bind(i))}if(t){const j=t.call(i,i);Is(j)&&(s.data=_t(j))}if(Fl=!0,a)for(const j in a){const J=a[j],ls=ts(J)?J.bind(i,i):ts(J.get)?J.get.bind(i,i):Ke,zs=!ts(J)&&ts(J.set)?J.set.bind(i):Ke,js=B({get:ls,set:zs});Object.defineProperty(n,j,{enumerable:!0,configurable:!0,get:()=>js.value,set:vs=>js.value=vs})}if(p)for(const j in p)Kd(p[j],n,i,j);if(o){const j=ts(o)?o.call(i):o;Reflect.ownKeys(j).forEach(J=>{Ce(J,j[J])})}c&&Pp(c,s,"c");function $(j,J){is(J)?J.forEach(ls=>j(ls.bind(i))):J&&j(J.bind(i))}if($(ig,u),$(us,m),$(ng,g),$(Ud,k),$(Z2,A),$(sg,f),$(rg,Z),$(lg,M),$(ag,z),$(Fr,b),$(Hi,w),$(tg,V),is(I))if(I.length){const j=s.exposed||(s.exposed={});I.forEach(J=>{Object.defineProperty(j,J,{get:()=>i[J],set:ls=>i[J]=ls})})}else s.exposed||(s.exposed={});P&&s.render===Ke&&(s.render=P),G!=null&&(s.inheritAttrs=G),R&&(s.components=R),ss&&(s.directives=ss),V&&Dr(s)}function ug(s,e,i=Ke){is(s)&&(s=Tl(s));for(const n in s){const t=s[n];let a;Is(t)?"default"in t?a=bs(t.from||n,t.default,!0):a=bs(t.from||n):a=bs(t),Ms(a)?Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:()=>a.value,set:r=>a.value=r}):e[n]=a}}function Pp(s,e,i){Oe(is(s)?s.map(n=>n.bind(e.proxy)):s.bind(e.proxy),e,i)}function Kd(s,e,i,n){let t=n.includes(".")?rc(i,n):()=>i[n];if(xs(s)){const a=e[s];ts(a)&&ds(t,a)}else if(ts(s))ds(t,s.bind(i));else if(Is(s))if(is(s))s.forEach(a=>Kd(a,e,i,n));else{const a=ts(s.handler)?s.handler.bind(i):e[s.handler];ts(a)&&ds(t,a,s)}}function Tr(s){const e=s.type,{mixins:i,extends:n}=e,{mixins:t,optionsCache:a,config:{optionMergeStrategies:r}}=s.appContext,p=a.get(e);let o;return p?o=p:!t.length&&!i&&!n?o=e:(o={},t.length&&t.forEach(d=>oa(o,d,r,!0)),oa(o,e,r)),Is(e)&&a.set(e,o),o}function oa(s,e,i,n=!1){const{mixins:t,extends:a}=e;a&&oa(s,a,i,!0),t&&t.forEach(r=>oa(s,r,i,!0));for(const r in e)if(!(n&&r==="expose")){const p=mg[r]||i&&i[r];s[r]=p?p(s[r],e[r]):e[r]}return s}const mg={data:Rp,props:Sp,emits:Sp,methods:$n,computed:$n,beforeCreate:ee,created:ee,beforeMount:ee,mounted:ee,beforeUpdate:ee,updated:ee,beforeDestroy:ee,beforeUnmount:ee,destroyed:ee,unmounted:ee,activated:ee,deactivated:ee,errorCaptured:ee,serverPrefetch:ee,components:$n,directives:$n,watch:kg,provide:Rp,inject:gg};function Rp(s,e){return e?s?function(){return Vs(ts(s)?s.call(this,this):s,ts(e)?e.call(this,this):e)}:e:s}function gg(s,e){return $n(Tl(s),Tl(e))}function Tl(s){if(is(s)){const e={};for(let i=0;i<s.length;i++)e[s[i]]=s[i];return e}return s}function ee(s,e){return s?[...new Set([].concat(s,e))]:e}function $n(s,e){return s?Vs(Object.create(null),s,e):e}function Sp(s,e){return s?is(s)&&is(e)?[...new Set([...s,...e])]:Vs(Object.create(null),pa(s),pa(e??{})):e}function kg(s,e){if(!s)return e;if(!e)return s;const i=Vs(Object.create(null),s);for(const n in e)i[n]=ee(s[n],e[n]);return i}function Wd(){return{app:null,config:{isNativeTag:O0,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Eg=0;function yg(s,e){return function(n,t=null){ts(n)||(n=Vs({},n)),t!=null&&!Is(t)&&(t=null);const a=Wd(),r=new WeakSet,p=[];let o=!1;const d=a.app={_uid:Eg++,_component:n,_props:t,_container:null,_context:a,_instance:null,version:Pl,get config(){return a.config},set config(c){},use(c,...u){return r.has(c)||(c&&ts(c.install)?(r.add(c),c.install(d,...u)):ts(c)&&(r.add(c),c(d,...u))),d},mixin(c){return a.mixins.includes(c)||a.mixins.push(c),d},component(c,u){return u?(a.components[c]=u,d):a.components[c]},directive(c,u){return u?(a.directives[c]=u,d):a.directives[c]},mount(c,u,m){if(!o){const g=d._ceVNode||Ss(n,t);return g.appContext=a,m===!0?m="svg":m===!1&&(m=void 0),u&&e?e(g,c):s(g,c,m),o=!0,d._container=c,c.__vue_app__=d,d._instance=g.component,R2(d,Pl),Da(g.component)}},onUnmount(c){p.push(c)},unmount(){o&&(Oe(p,d._instance,16),s(null,d._container),d._instance=null,S2(d),delete d._container.__vue_app__)},provide(c,u){return a.provides[c]=u,d},runWithContext(c){const u=cn;cn=d;try{return c()}finally{cn=u}}};return d}}let cn=null;function Ce(s,e){if(Us){let i=Us.provides;const n=Us.parent&&Us.parent.provides;n===i&&(i=Us.provides=Object.create(n)),i[s]=e}}function bs(s,e,i=!1){const n=Us||$s;if(n||cn){const t=cn?cn._context.provides:n?n.parent==null?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides:void 0;if(t&&s in t)return t[s];if(arguments.length>1)return i&&ts(e)?e.call(n&&n.proxy):e}}const Qd={},Jd=()=>Object.create(Qd),Yd=s=>Object.getPrototypeOf(s)===Qd;function Ag(s,e,i,n=!1){const t={},a=Jd();s.propsDefaults=Object.create(null),Xd(s,e,t,a);for(const r in s.propsOptions[0])r in t||(t[r]=void 0);i?s.props=n?t:wd(t):s.type.props?s.props=t:s.props=a,s.attrs=a}function vg(s,e,i,n){const{props:t,attrs:a,vnode:{patchFlag:r}}=s,p=os(t),[o]=s.propsOptions;let d=!1;if((n||r>0)&&!(r&16)){if(r&8){const c=s.vnode.dynamicProps;for(let u=0;u<c.length;u++){let m=c[u];if(Ca(s.emitsOptions,m))continue;const g=e[m];if(o)if(_s(a,m))g!==a[m]&&(a[m]=g,d=!0);else{const k=ae(m);t[k]=Il(o,p,k,g,s,!1)}else g!==a[m]&&(a[m]=g,d=!0)}}}else{Xd(s,e,t,a)&&(d=!0);let c;for(const u in p)(!e||!_s(e,u)&&((c=We(u))===u||!_s(e,c)))&&(o?i&&(i[u]!==void 0||i[c]!==void 0)&&(t[u]=Il(o,p,u,void 0,s,!0)):delete t[u]);if(a!==p)for(const u in a)(!e||!_s(e,u))&&(delete a[u],d=!0)}d&&ni(s.attrs,"set","")}function Xd(s,e,i,n){const[t,a]=s.propsOptions;let r=!1,p;if(e)for(let o in e){if(on(o))continue;const d=e[o];let c;t&&_s(t,c=ae(o))?!a||!a.includes(c)?i[c]=d:(p||(p={}))[c]=d:Ca(s.emitsOptions,o)||(!(o in n)||d!==n[o])&&(n[o]=d,r=!0)}if(a){const o=os(i),d=p||gs;for(let c=0;c<a.length;c++){const u=a[c];i[u]=Il(t,o,u,d[u],s,!_s(d,u))}}return r}function Il(s,e,i,n,t,a){const r=s[i];if(r!=null){const p=_s(r,"default");if(p&&n===void 0){const o=r.default;if(r.type!==Function&&!r.skipFactory&&ts(o)){const{propsDefaults:d}=t;if(i in d)n=d[i];else{const c=wt(t);n=d[i]=o.call(null,e),c()}}else n=o;t.ce&&t.ce._setProp(i,n)}r[0]&&(a&&!p?n=!1:r[1]&&(n===""||n===We(i))&&(n=!0))}return n}const fg=new WeakMap;function Zd(s,e,i=!1){const n=i?fg:e.propsCache,t=n.get(s);if(t)return t;const a=s.props,r={},p=[];let o=!1;if(!ts(s)){const c=u=>{o=!0;const[m,g]=Zd(u,e,!0);Vs(r,m),g&&p.push(...g)};!i&&e.mixins.length&&e.mixins.forEach(c),s.extends&&c(s.extends),s.mixins&&s.mixins.forEach(c)}if(!a&&!o)return Is(s)&&n.set(s,rn),rn;if(is(a))for(let c=0;c<a.length;c++){const u=ae(a[c]);Vp(u)&&(r[u]=gs)}else if(a)for(const c in a){const u=ae(c);if(Vp(u)){const m=a[c],g=r[u]=is(m)||ts(m)?{type:m}:Vs({},m),k=g.type;let A=!1,f=!0;if(is(k))for(let v=0;v<k.length;++v){const b=k[v],E=ts(b)&&b.name;if(E==="Boolean"){A=!0;break}else E==="String"&&(f=!1)}else A=ts(k)&&k.name==="Boolean";g[0]=A,g[1]=f,(A||_s(g,"default"))&&p.push(u)}}const d=[r,p];return Is(s)&&n.set(s,d),d}function Vp(s){return s[0]!=="$"&&!on(s)}const sc=s=>s[0]==="_"||s==="$stable",Ir=s=>is(s)?s.map(be):[be(s)],_g=(s,e,i)=>{if(e._n)return e;const n=M2((...t)=>Ir(e(...t)),i);return n._c=!1,n},ec=(s,e,i)=>{const n=s._ctx;for(const t in s){if(sc(t))continue;const a=s[t];if(ts(a))e[t]=_g(t,a,n);else if(a!=null){const r=Ir(a);e[t]=()=>r}}},ic=(s,e)=>{const i=Ir(e);s.slots.default=()=>i},nc=(s,e,i)=>{for(const n in e)(i||n!=="_")&&(s[n]=e[n])},Bg=(s,e,i)=>{const n=s.slots=Jd();if(s.vnode.shapeFlag&32){const t=e._;t?(nc(n,e,i),i&&En(n,"_",t,!0)):ec(e,n)}else e&&ic(s,e)},bg=(s,e,i)=>{const{vnode:n,slots:t}=s;let a=!0,r=gs;if(n.shapeFlag&32){const p=e._;p?i&&p===1?a=!1:nc(t,e,i):(a=!e.$stable,ec(e,t)),r=e}else e&&(ic(s,e),r={default:1});if(a)for(const p in t)!sc(p)&&r[p]==null&&delete t[p]},me=dc;function wg(s){return Cg(s,K2)}function Cg(s,e){const i=ya();i.__VUE__=!0,Od(i.__VUE_DEVTOOLS_GLOBAL_HOOK__,i);const{insert:n,remove:t,patchProp:a,createElement:r,createText:p,createComment:o,setText:d,setElementText:c,parentNode:u,nextSibling:m,setScopeId:g=Ke,insertStaticContent:k}=s,A=(y,_,C,L=null,F=null,x=null,U=void 0,q=null,N=!!_.dynamicChildren)=>{if(y===_)return;y&&!Pi(y,_)&&(L=D(y),vs(y,F,x,!0),y=null),_.patchFlag===-2&&(N=!1,_.dynamicChildren=null);const{type:O,ref:ns,shapeFlag:W}=_;switch(O){case vi:f(y,_,C,L);break;case Ks:v(y,_,C,L);break;case un:y==null&&b(_,C,L,U);break;case Hs:R(y,_,C,L,F,x,U,q,N);break;default:W&1?P(y,_,C,L,F,x,U,q,N):W&6?ss(y,_,C,L,F,x,U,q,N):(W&64||W&128)&&O.process(y,_,C,L,F,x,U,q,N,X)}ns!=null&&F&&ra(ns,y&&y.ref,x,_||y,!_)},f=(y,_,C,L)=>{if(y==null)n(_.el=p(_.children),C,L);else{const F=_.el=y.el;_.children!==y.children&&d(F,_.children)}},v=(y,_,C,L)=>{y==null?n(_.el=o(_.children||""),C,L):_.el=y.el},b=(y,_,C,L)=>{[y.el,y.anchor]=k(y.children,_,C,L,y.el,y.anchor)},E=({el:y,anchor:_},C,L)=>{let F;for(;y&&y!==_;)F=m(y),n(y,C,L),y=F;n(_,C,L)},w=({el:y,anchor:_})=>{let C;for(;y&&y!==_;)C=m(y),t(y),y=C;t(_)},P=(y,_,C,L,F,x,U,q,N)=>{_.type==="svg"?U="svg":_.type==="math"&&(U="mathml"),y==null?M(_,C,L,F,x,U,q,N):V(y,_,F,x,U,q,N)},M=(y,_,C,L,F,x,U,q)=>{let N,O;const{props:ns,shapeFlag:W,transition:es,dirs:as}=y;if(N=y.el=r(y.type,x,ns&&ns.is,ns),W&8?c(N,y.children):W&16&&Z(y.children,N,null,L,F,Ya(y,x),U,q),as&&He(y,null,L,"created"),z(N,y,y.scopeId,U,L),ns){for(const Ds in ns)Ds!=="value"&&!on(Ds)&&a(N,Ds,null,ns[Ds],x,L);"value"in ns&&a(N,"value",null,ns.value,x),(O=ns.onVnodeBeforeMount)&&_e(O,L,y)}En(N,"__vnode",y,!0),En(N,"__vueParentComponent",L,!0),as&&He(y,null,L,"beforeMount");const cs=tc(F,es);cs&&es.beforeEnter(N),n(N,_,C),((O=ns&&ns.onVnodeMounted)||cs||as)&&me(()=>{O&&_e(O,L,y),cs&&es.enter(N),as&&He(y,null,L,"mounted")},F)},z=(y,_,C,L,F)=>{if(C&&g(y,C),L)for(let x=0;x<L.length;x++)g(y,L[x]);if(F){let x=F.subTree;if(_===x||hc(x.type)&&(x.ssContent===_||x.ssFallback===_)){const U=F.vnode;z(y,U,U.scopeId,U.slotScopeIds,F.parent)}}},Z=(y,_,C,L,F,x,U,q,N=0)=>{for(let O=N;O<y.length;O++){const ns=y[O]=q?Ei(y[O]):be(y[O]);A(null,ns,_,C,L,F,x,U,q)}},V=(y,_,C,L,F,x,U)=>{const q=_.el=y.el;q.__vnode=_;let{patchFlag:N,dynamicChildren:O,dirs:ns}=_;N|=y.patchFlag&16;const W=y.props||gs,es=_.props||gs;let as;if(C&&Ti(C,!1),(as=es.onVnodeBeforeUpdate)&&_e(as,C,_,y),ns&&He(_,y,C,"beforeUpdate"),C&&Ti(C,!0),(W.innerHTML&&es.innerHTML==null||W.textContent&&es.textContent==null)&&c(q,""),O?I(y.dynamicChildren,O,q,C,L,Ya(_,F),x):U||J(y,_,q,null,C,L,Ya(_,F),x,!1),N>0){if(N&16)G(q,W,es,C,F);else if(N&2&&W.class!==es.class&&a(q,"class",null,es.class,F),N&4&&a(q,"style",W.style,es.style,F),N&8){const cs=_.dynamicProps;for(let Ds=0;Ds<cs.length;Ds++){const Bs=cs[Ds],de=W[Bs],Js=es[Bs];(Js!==de||Bs==="value")&&a(q,Bs,de,Js,F,C)}}N&1&&y.children!==_.children&&c(q,_.children)}else!U&&O==null&&G(q,W,es,C,F);((as=es.onVnodeUpdated)||ns)&&me(()=>{as&&_e(as,C,_,y),ns&&He(_,y,C,"updated")},L)},I=(y,_,C,L,F,x,U)=>{for(let q=0;q<_.length;q++){const N=y[q],O=_[q],ns=N.el&&(N.type===Hs||!Pi(N,O)||N.shapeFlag&70)?u(N.el):C;A(N,O,ns,null,L,F,x,U,!0)}},G=(y,_,C,L,F)=>{if(_!==C){if(_!==gs)for(const x in _)!on(x)&&!(x in C)&&a(y,x,_[x],null,F,L);for(const x in C){if(on(x))continue;const U=C[x],q=_[x];U!==q&&x!=="value"&&a(y,x,q,U,F,L)}"value"in C&&a(y,"value",_.value,C.value,F)}},R=(y,_,C,L,F,x,U,q,N)=>{const O=_.el=y?y.el:p(""),ns=_.anchor=y?y.anchor:p("");let{patchFlag:W,dynamicChildren:es,slotScopeIds:as}=_;as&&(q=q?q.concat(as):as),y==null?(n(O,C,L),n(ns,C,L),Z(_.children||[],C,ns,F,x,U,q,N)):W>0&&W&64&&es&&y.dynamicChildren?(I(y.dynamicChildren,es,C,F,x,U,q),(_.key!=null||F&&_===F.subTree)&&ac(y,_,!0)):J(y,_,C,ns,F,x,U,q,N)},ss=(y,_,C,L,F,x,U,q,N)=>{_.slotScopeIds=q,y==null?_.shapeFlag&512?F.ctx.activate(_,C,L,U,N):rs(_,C,L,F,x,U,N):Es(y,_,N)},rs=(y,_,C,L,F,x,U)=>{const q=y.component=Gg(y,L,F);if(bt(y)&&(q.ctx.renderer=X),Hg(q,!1,U),q.asyncDep){if(F&&F.registerDep(q,$,U),!y.el){const N=q.subTree=Ss(Ks);v(null,N,_,C)}}else $(q,y,_,C,F,x,U)},Es=(y,_,C)=>{const L=_.component=y.component;if(Rg(y,_,C))if(L.asyncDep&&!L.asyncResolved){j(L,_,C);return}else L.next=_,L.update();else _.el=y.el,L.vnode=_},$=(y,_,C,L,F,x,U)=>{const q=()=>{if(y.isMounted){let{next:W,bu:es,u:as,parent:cs,vnode:Ds}=y;{const ce=lc(y);if(ce){W&&(W.el=Ds.el,j(y,W,U)),ce.asyncDep.then(()=>{y.isUnmounted||q()});return}}let Bs=W,de;Ti(y,!1),W?(W.el=Ds.el,j(y,W,U)):W=Ds,es&&Yt(es),(de=W.props&&W.props.onVnodeBeforeUpdate)&&_e(de,cs,W,Ds),Ti(y,!0);const Js=Xa(y),Ie=y.subTree;y.subTree=Js,A(Ie,Js,u(Ie.el),D(Ie),y,F,x),W.el=Js.el,Bs===null&&Sg(y,Js.el),as&&me(as,F),(de=W.props&&W.props.onVnodeUpdated)&&me(()=>_e(de,cs,W,Ds),F),Pd(y)}else{let W;const{el:es,props:as}=_,{bm:cs,m:Ds,parent:Bs,root:de,type:Js}=y,Ie=Ni(_);if(Ti(y,!1),cs&&Yt(cs),!Ie&&(W=as&&as.onVnodeBeforeMount)&&_e(W,Bs,_),Ti(y,!0),es&&ws){const ce=()=>{y.subTree=Xa(y),ws(es,y.subTree,y,F,null)};Ie&&Js.__asyncHydrate?Js.__asyncHydrate(es,y,ce):ce()}else{de.ce&&de.ce._injectChildStyle(Js);const ce=y.subTree=Xa(y);A(null,ce,C,L,y,F,x),_.el=ce.el}if(Ds&&me(Ds,F),!Ie&&(W=as&&as.onVnodeMounted)){const ce=_;me(()=>_e(W,Bs,ce),F)}(_.shapeFlag&256||Bs&&Ni(Bs.vnode)&&Bs.vnode.shapeFlag&256)&&y.a&&me(y.a,F),y.isMounted=!0,V2(y),_=C=L=null}};y.scope.on();const N=y.effect=new dd(q);y.scope.off();const O=y.update=N.run.bind(N),ns=y.job=N.runIfDirty.bind(N);ns.i=y,ns.id=y.uid,N.scheduler=()=>br(ns),Ti(y,!0),O()},j=(y,_,C)=>{_.component=y;const L=y.vnode.props;y.vnode=_,y.next=null,vg(y,_.props,L,C),bg(y,_.children,C),ri(),Dp(y),pi()},J=(y,_,C,L,F,x,U,q,N=!1)=>{const O=y&&y.children,ns=y?y.shapeFlag:0,W=_.children,{patchFlag:es,shapeFlag:as}=_;if(es>0){if(es&128){zs(O,W,C,L,F,x,U,q,N);return}else if(es&256){ls(O,W,C,L,F,x,U,q,N);return}}as&8?(ns&16&&Qs(O,F,x),W!==O&&c(C,W)):ns&16?as&16?zs(O,W,C,L,F,x,U,q,N):Qs(O,F,x,!0):(ns&8&&c(C,""),as&16&&Z(W,C,L,F,x,U,q,N))},ls=(y,_,C,L,F,x,U,q,N)=>{y=y||rn,_=_||rn;const O=y.length,ns=_.length,W=Math.min(O,ns);let es;for(es=0;es<W;es++){const as=_[es]=N?Ei(_[es]):be(_[es]);A(y[es],as,C,null,F,x,U,q,N)}O>ns?Qs(y,F,x,!0,!1,W):Z(_,C,L,F,x,U,q,N,W)},zs=(y,_,C,L,F,x,U,q,N)=>{let O=0;const ns=_.length;let W=y.length-1,es=ns-1;for(;O<=W&&O<=es;){const as=y[O],cs=_[O]=N?Ei(_[O]):be(_[O]);if(Pi(as,cs))A(as,cs,C,null,F,x,U,q,N);else break;O++}for(;O<=W&&O<=es;){const as=y[W],cs=_[es]=N?Ei(_[es]):be(_[es]);if(Pi(as,cs))A(as,cs,C,null,F,x,U,q,N);else break;W--,es--}if(O>W){if(O<=es){const as=es+1,cs=as<ns?_[as].el:L;for(;O<=es;)A(null,_[O]=N?Ei(_[O]):be(_[O]),C,cs,F,x,U,q,N),O++}}else if(O>es)for(;O<=W;)vs(y[O],F,x,!0),O++;else{const as=O,cs=O,Ds=new Map;for(O=cs;O<=es;O++){const ue=_[O]=N?Ei(_[O]):be(_[O]);ue.key!=null&&Ds.set(ue.key,O)}let Bs,de=0;const Js=es-cs+1;let Ie=!1,ce=0;const Vn=new Array(Js);for(O=0;O<Js;O++)Vn[O]=0;for(O=as;O<=W;O++){const ue=y[O];if(de>=Js){vs(ue,F,x,!0);continue}let Me;if(ue.key!=null)Me=Ds.get(ue.key);else for(Bs=cs;Bs<=es;Bs++)if(Vn[Bs-cs]===0&&Pi(ue,_[Bs])){Me=Bs;break}Me===void 0?vs(ue,F,x,!0):(Vn[Me-cs]=O+1,Me>=ce?ce=Me:Ie=!0,A(ue,_[Me],C,null,F,x,U,q,N),de++)}const vp=Ie?Dg(Vn):rn;for(Bs=vp.length-1,O=Js-1;O>=0;O--){const ue=cs+O,Me=_[ue],fp=ue+1<ns?_[ue+1].el:L;Vn[O]===0?A(null,Me,C,fp,F,x,U,q,N):Ie&&(Bs<0||O!==vp[Bs]?js(Me,C,fp,2):Bs--)}}},js=(y,_,C,L,F=null)=>{const{el:x,type:U,transition:q,children:N,shapeFlag:O}=y;if(O&6){js(y.component.subTree,_,C,L);return}if(O&128){y.suspense.move(_,C,L);return}if(O&64){U.move(y,_,C,X);return}if(U===Hs){n(x,_,C);for(let W=0;W<N.length;W++)js(N[W],_,C,L);n(y.anchor,_,C);return}if(U===un){E(y,_,C);return}if(L!==2&&O&1&&q)if(L===0)q.beforeEnter(x),n(x,_,C),me(()=>q.enter(x),F);else{const{leave:W,delayLeave:es,afterLeave:as}=q,cs=()=>n(x,_,C),Ds=()=>{W(x,()=>{cs(),as&&as()})};es?es(x,cs,Ds):Ds()}else n(x,_,C)},vs=(y,_,C,L=!1,F=!1)=>{const{type:x,props:U,ref:q,children:N,dynamicChildren:O,shapeFlag:ns,patchFlag:W,dirs:es,cacheIndex:as}=y;if(W===-2&&(F=!1),q!=null&&ra(q,null,C,y,!0),as!=null&&(_.renderCache[as]=void 0),ns&256){_.ctx.deactivate(y);return}const cs=ns&1&&es,Ds=!Ni(y);let Bs;if(Ds&&(Bs=U&&U.onVnodeBeforeUnmount)&&_e(Bs,_,y),ns&6)re(y.component,C,L);else{if(ns&128){y.suspense.unmount(C,L);return}cs&&He(y,null,_,"beforeUnmount"),ns&64?y.type.remove(y,_,C,X,L):O&&!O.hasOnce&&(x!==Hs||W>0&&W&64)?Qs(O,_,C,!1,!0):(x===Hs&&W&384||!F&&ns&16)&&Qs(N,_,C),L&&qs(y)}(Ds&&(Bs=U&&U.onVnodeUnmounted)||cs)&&me(()=>{Bs&&_e(Bs,_,y),cs&&He(y,null,_,"unmounted")},C)},qs=y=>{const{type:_,el:C,anchor:L,transition:F}=y;if(_===Hs){ve(C,L);return}if(_===un){w(y);return}const x=()=>{t(C),F&&!F.persisted&&F.afterLeave&&F.afterLeave()};if(y.shapeFlag&1&&F&&!F.persisted){const{leave:U,delayLeave:q}=F,N=()=>U(C,x);q?q(y.el,x,N):N()}else x()},ve=(y,_)=>{let C;for(;y!==_;)C=m(y),t(y),y=C;t(_)},re=(y,_,C)=>{const{bum:L,scope:F,job:x,subTree:U,um:q,m:N,a:O}=y;Np(N),Np(O),L&&Yt(L),F.stop(),x&&(x.flags|=8,vs(U,y,_,C)),q&&me(q,_),me(()=>{y.isUnmounted=!0},_),_&&_.pendingBranch&&!_.isUnmounted&&y.asyncDep&&!y.asyncResolved&&y.suspenseId===_.pendingId&&(_.deps--,_.deps===0&&_.resolve()),z2(y)},Qs=(y,_,C,L=!1,F=!1,x=0)=>{for(let U=x;U<y.length;U++)vs(y[U],_,C,L,F)},D=y=>{if(y.shapeFlag&6)return D(y.component.subTree);if(y.shapeFlag&128)return y.suspense.next();const _=m(y.anchor||y.el),C=_&&_[q2];return C?m(C):_};let K=!1;const H=(y,_,C)=>{y==null?_._vnode&&vs(_._vnode,null,null,!0):A(_._vnode||null,y,_,null,null,null,C),_._vnode=y,K||(K=!0,Dp(),aa(),K=!1)},X={p:A,um:vs,m:js,r:qs,mt:rs,mc:Z,pc:J,pbc:I,n:D,o:s};let ms,ws;return e&&([ms,ws]=e(X)),{render:H,hydrate:ms,createApp:yg(H,ms)}}function Ya({type:s,props:e},i){return i==="svg"&&s==="foreignObject"||i==="mathml"&&s==="annotation-xml"&&e&&e.encoding&&e.encoding.includes("html")?void 0:i}function Ti({effect:s,job:e},i){i?(s.flags|=32,e.flags|=4):(s.flags&=-33,e.flags&=-5)}function tc(s,e){return(!s||s&&!s.pendingBranch)&&e&&!e.persisted}function ac(s,e,i=!1){const n=s.children,t=e.children;if(is(n)&&is(t))for(let a=0;a<n.length;a++){const r=n[a];let p=t[a];p.shapeFlag&1&&!p.dynamicChildren&&((p.patchFlag<=0||p.patchFlag===32)&&(p=t[a]=Ei(t[a]),p.el=r.el),!i&&p.patchFlag!==-2&&ac(r,p)),p.type===vi&&(p.el=r.el)}}function Dg(s){const e=s.slice(),i=[0];let n,t,a,r,p;const o=s.length;for(n=0;n<o;n++){const d=s[n];if(d!==0){if(t=i[i.length-1],s[t]<d){e[n]=t,i.push(n);continue}for(a=0,r=i.length-1;a<r;)p=a+r>>1,s[i[p]]<d?a=p+1:r=p;d<s[i[a]]&&(a>0&&(e[n]=i[a-1]),i[a]=n)}}for(a=i.length,r=i[a-1];a-- >0;)i[a]=r,r=e[r];return i}function lc(s){const e=s.subTree.component;if(e)return e.asyncDep&&!e.asyncResolved?e:lc(e)}function Np(s){if(s)for(let e=0;e<s.length;e++)s[e].flags|=8}const Fg=Symbol.for("v-scx"),Tg=()=>bs(Fg);function Lr(s,e){return wa(s,null,e)}function Ig(s,e){return wa(s,null,{flush:"sync"})}function ds(s,e,i){return wa(s,e,i)}function wa(s,e,i=gs){const{immediate:n,deep:t,flush:a,once:r}=i,p=Vs({},i),o=e&&n||!e&&a!=="post";let d;if(yn){if(a==="sync"){const g=Tg();d=g.__watcherHandles||(g.__watcherHandles=[])}else if(!o){const g=()=>{};return g.stop=Ke,g.resume=Ke,g.pause=Ke,g}}const c=Us;p.call=(g,k,A)=>Oe(g,c,k,A);let u=!1;a==="post"?p.scheduler=g=>{me(g,c&&c.suspense)}:a!=="sync"&&(u=!0,p.scheduler=(g,k)=>{k?g():br(g)}),p.augmentJob=g=>{e&&(g.flags|=4),u&&(g.flags|=2,c&&(g.id=c.uid,g.i=c))};const m=D2(s,e,p);return yn&&(d?d.push(m):o&&m()),m}function Lg(s,e,i){const n=this.proxy,t=xs(s)?s.includes(".")?rc(n,s):()=>n[s]:s.bind(n,n);let a;ts(e)?a=e:(a=e.handler,i=e);const r=wt(this),p=wa(t,a.bind(n),i);return r(),p}function rc(s,e){const i=e.split(".");return()=>{let n=s;for(let t=0;t<i.length&&n;t++)n=n[i[t]];return n}}function vA(s,e,i=gs){const n=bi(),t=ae(e),a=We(e),r=pc(s,t),p=Br((o,d)=>{let c,u=gs,m;return Ig(()=>{const g=s[t];pe(c,g)&&(c=g,d())}),{get(){return o(),i.get?i.get(c):c},set(g){const k=i.set?i.set(g):g;if(!pe(k,c)&&!(u!==gs&&pe(g,u)))return;const A=n.vnode.props;A&&(e in A||t in A||a in A)&&(`onUpdate:${e}`in A||`onUpdate:${t}`in A||`onUpdate:${a}`in A)||(c=g,d()),n.emit(`update:${e}`,k),pe(g,k)&&pe(g,u)&&!pe(k,m)&&d(),u=g,m=k}}});return p[Symbol.iterator]=()=>{let o=0;return{next(){return o<2?{value:o++?r||gs:p,done:!1}:{done:!0}}}},p}const pc=(s,e)=>e==="modelValue"||e==="model-value"?s.modelModifiers:s[`${e}Modifiers`]||s[`${ae(e)}Modifiers`]||s[`${We(e)}Modifiers`];function xg(s,e,...i){if(s.isUnmounted)return;const n=s.vnode.props||gs;let t=i;const a=e.startsWith("update:"),r=a&&pc(n,e.slice(7));r&&(r.trim&&(t=i.map(c=>xs(c)?c.trim():c)),r.number&&(t=i.map(fl))),j2(s,e,t);let p,o=n[p=qa(e)]||n[p=qa(ae(e))];!o&&a&&(o=n[p=qa(We(e))]),o&&Oe(o,s,6,t);const d=n[p+"Once"];if(d){if(!s.emitted)s.emitted={};else if(s.emitted[p])return;s.emitted[p]=!0,Oe(d,s,6,t)}}function oc(s,e,i=!1){const n=e.emitsCache,t=n.get(s);if(t!==void 0)return t;const a=s.emits;let r={},p=!1;if(!ts(s)){const o=d=>{const c=oc(d,e,!0);c&&(p=!0,Vs(r,c))};!i&&e.mixins.length&&e.mixins.forEach(o),s.extends&&o(s.extends),s.mixins&&s.mixins.forEach(o)}return!a&&!p?(Is(s)&&n.set(s,null),null):(is(a)?a.forEach(o=>r[o]=null):Vs(r,a),Is(s)&&n.set(s,r),r)}function Ca(s,e){return!s||!vt(e)?!1:(e=e.slice(2).replace(/Once$/,""),_s(s,e[0].toLowerCase()+e.slice(1))||_s(s,We(e))||_s(s,e))}function Xa(s){const{type:e,vnode:i,proxy:n,withProxy:t,propsOptions:[a],slots:r,attrs:p,emit:o,render:d,renderCache:c,props:u,data:m,setupState:g,ctx:k,inheritAttrs:A}=s,f=la(s);let v,b;try{if(i.shapeFlag&4){const w=t||n,P=w;v=be(d.call(P,w,c,u,g,m,k)),b=p}else{const w=e;v=be(w.length>1?w(u,{attrs:p,slots:r,emit:o}):w(u,null)),b=e.props?p:Og(p)}}catch(w){Zn.length=0,Bt(w,s,1),v=Ss(Ks)}let E=v;if(b&&A!==!1){const w=Object.keys(b),{shapeFlag:P}=E;w.length&&P&7&&(a&&w.some(ur)&&(b=Pg(b,a)),E=fi(E,b,!1,!0))}return i.dirs&&(E=fi(E,null,!1,!0),E.dirs=E.dirs?E.dirs.concat(i.dirs):i.dirs),i.transition&&ji(E,i.transition),v=E,la(f),v}const Og=s=>{let e;for(const i in s)(i==="class"||i==="style"||vt(i))&&((e||(e={}))[i]=s[i]);return e},Pg=(s,e)=>{const i={};for(const n in s)(!ur(n)||!(n.slice(9)in e))&&(i[n]=s[n]);return i};function Rg(s,e,i){const{props:n,children:t,component:a}=s,{props:r,children:p,patchFlag:o}=e,d=a.emitsOptions;if(e.dirs||e.transition)return!0;if(i&&o>=0){if(o&1024)return!0;if(o&16)return n?zp(n,r,d):!!r;if(o&8){const c=e.dynamicProps;for(let u=0;u<c.length;u++){const m=c[u];if(r[m]!==n[m]&&!Ca(d,m))return!0}}}else return(t||p)&&(!p||!p.$stable)?!0:n===r?!1:n?r?zp(n,r,d):!0:!!r;return!1}function zp(s,e,i){const n=Object.keys(e);if(n.length!==Object.keys(s).length)return!0;for(let t=0;t<n.length;t++){const a=n[t];if(e[a]!==s[a]&&!Ca(i,a))return!0}return!1}function Sg({vnode:s,parent:e},i){for(;e;){const n=e.subTree;if(n.suspense&&n.suspense.activeBranch===s&&(n.el=s.el),n===s)(s=e.vnode).el=i,e=e.parent;else break}}const hc=s=>s.__isSuspense;function dc(s,e){e&&e.pendingBranch?is(s)?e.effects.push(...s):e.effects.push(s):P2(s)}const Hs=Symbol.for("v-fgt"),vi=Symbol.for("v-txt"),Ks=Symbol.for("v-cmt"),un=Symbol.for("v-stc"),Zn=[];let Ee=null;function Ll(s=!1){Zn.push(Ee=s?null:[])}function Vg(){Zn.pop(),Ee=Zn[Zn.length-1]||null}let pt=1;function jp(s){pt+=s,s<0&&Ee&&(Ee.hasOnce=!0)}function cc(s){return s.dynamicChildren=pt>0?Ee||rn:null,Vg(),pt>0&&Ee&&Ee.push(s),s}function fA(s,e,i,n,t,a){return cc(mc(s,e,i,n,t,a,!0))}function xl(s,e,i,n,t){return cc(Ss(s,e,i,n,t,!0))}function ot(s){return s?s.__v_isVNode===!0:!1}function Pi(s,e){return s.type===e.type&&s.key===e.key}const uc=({key:s})=>s??null,Xt=({ref:s,ref_key:e,ref_for:i})=>(typeof s=="number"&&(s=""+s),s!=null?xs(s)||Ms(s)||ts(s)?{i:$s,r:s,k:e,f:!!i}:s:null);function mc(s,e=null,i=null,n=0,t=null,a=s===Hs?0:1,r=!1,p=!1){const o={__v_isVNode:!0,__v_skip:!0,type:s,props:e,key:e&&uc(e),ref:e&&Xt(e),scopeId:Rd,slotScopeIds:null,children:i,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:a,patchFlag:n,dynamicProps:t,dynamicChildren:null,appContext:null,ctx:$s};return p?(xr(o,i),a&128&&s.normalize(o)):i&&(o.shapeFlag|=xs(i)?8:16),pt>0&&!r&&Ee&&(o.patchFlag>0||a&6)&&o.patchFlag!==32&&Ee.push(o),o}const Ss=Ng;function Ng(s,e=null,i=null,n=0,t=null,a=!1){if((!s||s===og)&&(s=Ks),ot(s)){const p=fi(s,e,!0);return i&&xr(p,i),pt>0&&!a&&Ee&&(p.shapeFlag&6?Ee[Ee.indexOf(s)]=p:Ee.push(p)),p.patchFlag=-2,p}if(Jg(s)&&(s=s.__vccOpts),e){e=zg(e);let{class:p,style:o}=e;p&&!xs(p)&&(e.class=va(p)),Is(o)&&(_r(o)&&!is(o)&&(o=Vs({},o)),e.style=Aa(o))}const r=xs(s)?1:hc(s)?128:Sd(s)?64:Is(s)?4:ts(s)?2:0;return mc(s,e,i,n,t,r,a,!0)}function zg(s){return s?_r(s)||Yd(s)?Vs({},s):s:null}function fi(s,e,i=!1,n=!1){const{props:t,ref:a,patchFlag:r,children:p,transition:o}=s,d=e?jg(t||{},e):t,c={__v_isVNode:!0,__v_skip:!0,type:s.type,props:d,key:d&&uc(d),ref:e&&e.ref?i&&a?is(a)?a.concat(Xt(e)):[a,Xt(e)]:Xt(e):a,scopeId:s.scopeId,slotScopeIds:s.slotScopeIds,children:p,target:s.target,targetStart:s.targetStart,targetAnchor:s.targetAnchor,staticCount:s.staticCount,shapeFlag:s.shapeFlag,patchFlag:e&&s.type!==Hs?r===-1?16:r|16:r,dynamicProps:s.dynamicProps,dynamicChildren:s.dynamicChildren,appContext:s.appContext,dirs:s.dirs,transition:o,component:s.component,suspense:s.suspense,ssContent:s.ssContent&&fi(s.ssContent),ssFallback:s.ssFallback&&fi(s.ssFallback),el:s.el,anchor:s.anchor,ctx:s.ctx,ce:s.ce};return o&&n&&ji(c,o.clone(c)),c}function gc(s=" ",e=0){return Ss(vi,null,s,e)}function _A(s,e){const i=Ss(un,null,s);return i.staticCount=e,i}function BA(s="",e=!1){return e?(Ll(),xl(Ks,null,s)):Ss(Ks,null,s)}function be(s){return s==null||typeof s=="boolean"?Ss(Ks):is(s)?Ss(Hs,null,s.slice()):ot(s)?Ei(s):Ss(vi,null,String(s))}function Ei(s){return s.el===null&&s.patchFlag!==-1||s.memo?s:fi(s)}function xr(s,e){let i=0;const{shapeFlag:n}=s;if(e==null)e=null;else if(is(e))i=16;else if(typeof e=="object")if(n&65){const t=e.default;t&&(t._c&&(t._d=!1),xr(s,t()),t._c&&(t._d=!0));return}else{i=32;const t=e._;!t&&!Yd(e)?e._ctx=$s:t===3&&$s&&($s.slots._===1?e._=1:(e._=2,s.patchFlag|=1024))}else ts(e)?(e={default:e,_ctx:$s},i=32):(e=String(e),n&64?(i=16,e=[gc(e)]):i=8);s.children=e,s.shapeFlag|=i}function jg(...s){const e={};for(let i=0;i<s.length;i++){const n=s[i];for(const t in n)if(t==="class")e.class!==n.class&&(e.class=va([e.class,n.class]));else if(t==="style")e.style=Aa([e.style,n.style]);else if(vt(t)){const a=e[t],r=n[t];r&&a!==r&&!(is(a)&&a.includes(r))&&(e[t]=a?[].concat(a,r):r)}else t!==""&&(e[t]=n[t])}return e}function _e(s,e,i,n=null){Oe(s,e,7,[i,n])}const Mg=Wd();let qg=0;function Gg(s,e,i){const n=s.type,t=(e?e.appContext:s.appContext)||Mg,a={uid:qg++,vnode:s,type:n,parent:e,appContext:t,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new Y0(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(t.provides),ids:e?e.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Zd(n,t),emitsOptions:oc(n,t),emit:null,emitted:null,propsDefaults:gs,inheritAttrs:n.inheritAttrs,ctx:gs,data:gs,props:gs,attrs:gs,slots:gs,refs:gs,setupState:gs,setupContext:null,suspense:i,suspenseId:i?i.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return a.ctx={_:a},a.root=e?e.root:a,a.emit=xg.bind(null,a),s.ce&&s.ce(a),a}let Us=null;const bi=()=>Us||$s;let ha,Ol;{const s=ya(),e=(i,n)=>{let t;return(t=s[i])||(t=s[i]=[]),t.push(n),a=>{t.length>1?t.forEach(r=>r(a)):t[0](a)}};ha=e("__VUE_INSTANCE_SETTERS__",i=>Us=i),Ol=e("__VUE_SSR_SETTERS__",i=>yn=i)}const wt=s=>{const e=Us;return ha(s),s.scope.on(),()=>{s.scope.off(),ha(e)}},Mp=()=>{Us&&Us.scope.off(),ha(null)};function kc(s){return s.vnode.shapeFlag&4}let yn=!1;function Hg(s,e=!1,i=!1){e&&Ol(e);const{props:n,children:t}=s.vnode,a=kc(s);Ag(s,n,a,e),Bg(s,t,i);const r=a?Ug(s,e):void 0;return e&&Ol(!1),r}function Ug(s,e){const i=s.type;s.accessCache=Object.create(null),s.proxy=new Proxy(s.ctx,dg);const{setup:n}=i;if(n){ri();const t=s.setupContext=n.length>1?Kg(s):null,a=wt(s),r=In(n,s,0,[s.props,t]),p=td(r);if(pi(),a(),(p||s.sp)&&!Ni(s)&&Dr(s),p){if(r.then(Mp,Mp),e)return r.then(o=>{qp(s,o,e)}).catch(o=>{Bt(o,s,0)});s.asyncDep=r}else qp(s,r,e)}else Ec(s,e)}function qp(s,e,i){ts(e)?s.type.__ssrInlineRender?s.ssrRender=e:s.render=e:Is(e)&&(s.devtoolsRawSetupState=e,s.setupState=Dd(e)),Ec(s,i)}let Gp;function Ec(s,e,i){const n=s.type;if(!s.render){if(!e&&Gp&&!n.render){const t=n.template||Tr(s).template;if(t){const{isCustomElement:a,compilerOptions:r}=s.appContext.config,{delimiters:p,compilerOptions:o}=n,d=Vs(Vs({isCustomElement:a,delimiters:p},r),o);n.render=Gp(t,d)}}s.render=n.render||Ke}{const t=wt(s);ri();try{cg(s)}finally{pi(),t()}}}const $g={get(s,e){return Ys(s,"get",""),s[e]}};function Kg(s){const e=i=>{s.exposed=i||{}};return{attrs:new Proxy(s.attrs,$g),slots:s.slots,emit:s.emit,expose:e}}function Da(s){return s.exposed?s.exposeProxy||(s.exposeProxy=new Proxy(Dd(y2(s.exposed)),{get(e,i){if(i in e)return e[i];if(i in Xn)return Xn[i](s)},has(e,i){return i in e||i in Xn}})):s.proxy}const Wg=/(?:^|[-_])(\w)/g,Qg=s=>s.replace(Wg,e=>e.toUpperCase()).replace(/[-_]/g,"");function yc(s,e=!0){return ts(s)?s.displayName||s.name:s.name||e&&s.__name}function Ac(s,e,i=!1){let n=yc(e);if(!n&&e.__file){const t=e.__file.match(/([^/\\]+)\.\w+$/);t&&(n=t[1])}if(!n&&s&&s.parent){const t=a=>{for(const r in a)if(a[r]===e)return r};n=t(s.components||s.parent.type.components)||t(s.appContext.components)}return n?Qg(n):i?"App":"Anonymous"}function Jg(s){return ts(s)&&"__vccOpts"in s}const B=(s,e)=>w2(s,e,yn);function h(s,e,i){const n=arguments.length;return n===2?Is(e)&&!is(e)?ot(e)?Ss(s,null,[e]):Ss(s,e):Ss(s,null,e):(n>3?i=Array.prototype.slice.call(arguments,2):n===3&&ot(i)&&(i=[i]),Ss(s,e,i))}const Pl="3.5.12";/**
* @vue/runtime-dom v3.5.12
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Rl;const Hp=typeof window<"u"&&window.trustedTypes;if(Hp)try{Rl=Hp.createPolicy("vue",{createHTML:s=>s})}catch{}const vc=Rl?s=>Rl.createHTML(s):s=>s,Yg="http://www.w3.org/2000/svg",Xg="http://www.w3.org/1998/Math/MathML",ei=typeof document<"u"?document:null,Up=ei&&ei.createElement("template"),Zg={insert:(s,e,i)=>{e.insertBefore(s,i||null)},remove:s=>{const e=s.parentNode;e&&e.removeChild(s)},createElement:(s,e,i,n)=>{const t=e==="svg"?ei.createElementNS(Yg,s):e==="mathml"?ei.createElementNS(Xg,s):i?ei.createElement(s,{is:i}):ei.createElement(s);return s==="select"&&n&&n.multiple!=null&&t.setAttribute("multiple",n.multiple),t},createText:s=>ei.createTextNode(s),createComment:s=>ei.createComment(s),setText:(s,e)=>{s.nodeValue=e},setElementText:(s,e)=>{s.textContent=e},parentNode:s=>s.parentNode,nextSibling:s=>s.nextSibling,querySelector:s=>ei.querySelector(s),setScopeId(s,e){s.setAttribute(e,"")},insertStaticContent(s,e,i,n,t,a){const r=i?i.previousSibling:e.lastChild;if(t&&(t===a||t.nextSibling))for(;e.insertBefore(t.cloneNode(!0),i),!(t===a||!(t=t.nextSibling)););else{Up.innerHTML=vc(n==="svg"?`<svg>${s}</svg>`:n==="mathml"?`<math>${s}</math>`:s);const p=Up.content;if(n==="svg"||n==="mathml"){const o=p.firstChild;for(;o.firstChild;)p.appendChild(o.firstChild);p.removeChild(o)}e.insertBefore(p,i)}return[r?r.nextSibling:e.firstChild,i?i.previousSibling:e.lastChild]}},hi="transition",zn="animation",An=Symbol("_vtc"),fc={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},_c=Vs({},Nd,fc),sk=s=>(s.displayName="Transition",s.props=_c,s),Mi=sk((s,{slots:e})=>h(H2,Bc(s),e)),Ii=(s,e=[])=>{is(s)?s.forEach(i=>i(...e)):s&&s(...e)},$p=s=>s?is(s)?s.some(e=>e.length>1):s.length>1:!1;function Bc(s){const e={};for(const R in s)R in fc||(e[R]=s[R]);if(s.css===!1)return e;const{name:i="v",type:n,duration:t,enterFromClass:a=`${i}-enter-from`,enterActiveClass:r=`${i}-enter-active`,enterToClass:p=`${i}-enter-to`,appearFromClass:o=a,appearActiveClass:d=r,appearToClass:c=p,leaveFromClass:u=`${i}-leave-from`,leaveActiveClass:m=`${i}-leave-active`,leaveToClass:g=`${i}-leave-to`}=s,k=ek(t),A=k&&k[0],f=k&&k[1],{onBeforeEnter:v,onEnter:b,onEnterCancelled:E,onLeave:w,onLeaveCancelled:P,onBeforeAppear:M=v,onAppear:z=b,onAppearCancelled:Z=E}=e,V=(R,ss,rs)=>{mi(R,ss?c:p),mi(R,ss?d:r),rs&&rs()},I=(R,ss)=>{R._isLeaving=!1,mi(R,u),mi(R,g),mi(R,m),ss&&ss()},G=R=>(ss,rs)=>{const Es=R?z:b,$=()=>V(ss,R,rs);Ii(Es,[ss,$]),Kp(()=>{mi(ss,R?o:a),Ze(ss,R?c:p),$p(Es)||Wp(ss,n,A,$)})};return Vs(e,{onBeforeEnter(R){Ii(v,[R]),Ze(R,a),Ze(R,r)},onBeforeAppear(R){Ii(M,[R]),Ze(R,o),Ze(R,d)},onEnter:G(!1),onAppear:G(!0),onLeave(R,ss){R._isLeaving=!0;const rs=()=>I(R,ss);Ze(R,u),Ze(R,m),wc(),Kp(()=>{R._isLeaving&&(mi(R,u),Ze(R,g),$p(w)||Wp(R,n,f,rs))}),Ii(w,[R,rs])},onEnterCancelled(R){V(R,!1),Ii(E,[R])},onAppearCancelled(R){V(R,!0),Ii(Z,[R])},onLeaveCancelled(R){I(R),Ii(P,[R])}})}function ek(s){if(s==null)return null;if(Is(s))return[Za(s.enter),Za(s.leave)];{const e=Za(s);return[e,e]}}function Za(s){return N0(s)}function Ze(s,e){e.split(/\s+/).forEach(i=>i&&s.classList.add(i)),(s[An]||(s[An]=new Set)).add(e)}function mi(s,e){e.split(/\s+/).forEach(n=>n&&s.classList.remove(n));const i=s[An];i&&(i.delete(e),i.size||(s[An]=void 0))}function Kp(s){requestAnimationFrame(()=>{requestAnimationFrame(s)})}let ik=0;function Wp(s,e,i,n){const t=s._endId=++ik,a=()=>{t===s._endId&&n()};if(i!=null)return setTimeout(a,i);const{type:r,timeout:p,propCount:o}=bc(s,e);if(!r)return n();const d=r+"end";let c=0;const u=()=>{s.removeEventListener(d,m),a()},m=g=>{g.target===s&&++c>=o&&u()};setTimeout(()=>{c<o&&u()},p+1),s.addEventListener(d,m)}function bc(s,e){const i=window.getComputedStyle(s),n=k=>(i[k]||"").split(", "),t=n(`${hi}Delay`),a=n(`${hi}Duration`),r=Qp(t,a),p=n(`${zn}Delay`),o=n(`${zn}Duration`),d=Qp(p,o);let c=null,u=0,m=0;e===hi?r>0&&(c=hi,u=r,m=a.length):e===zn?d>0&&(c=zn,u=d,m=o.length):(u=Math.max(r,d),c=u>0?r>d?hi:zn:null,m=c?c===hi?a.length:o.length:0);const g=c===hi&&/\b(transform|all)(,|$)/.test(n(`${hi}Property`).toString());return{type:c,timeout:u,propCount:m,hasTransform:g}}function Qp(s,e){for(;s.length<e.length;)s=s.concat(s);return Math.max(...e.map((i,n)=>Jp(i)+Jp(s[n])))}function Jp(s){return s==="auto"?0:Number(s.slice(0,-1).replace(",","."))*1e3}function wc(){return document.body.offsetHeight}function nk(s,e,i){const n=s[An];n&&(e=(e?[e,...n]:[...n]).join(" ")),e==null?s.removeAttribute("class"):i?s.setAttribute("class",e):s.className=e}const da=Symbol("_vod"),Cc=Symbol("_vsh"),bA={beforeMount(s,{value:e},{transition:i}){s[da]=s.style.display==="none"?"":s.style.display,i&&e?i.beforeEnter(s):jn(s,e)},mounted(s,{value:e},{transition:i}){i&&e&&i.enter(s)},updated(s,{value:e,oldValue:i},{transition:n}){!e!=!i&&(n?e?(n.beforeEnter(s),jn(s,!0),n.enter(s)):n.leave(s,()=>{jn(s,!1)}):jn(s,e))},beforeUnmount(s,{value:e}){jn(s,e)}};function jn(s,e){s.style.display=e?s[da]:"none",s[Cc]=!e}const tk=Symbol(""),ak=/(^|;)\s*display\s*:/;function lk(s,e,i){const n=s.style,t=xs(i);let a=!1;if(i&&!t){if(e)if(xs(e))for(const r of e.split(";")){const p=r.slice(0,r.indexOf(":")).trim();i[p]==null&&Zt(n,p,"")}else for(const r in e)i[r]==null&&Zt(n,r,"");for(const r in i)r==="display"&&(a=!0),Zt(n,r,i[r])}else if(t){if(e!==i){const r=n[tk];r&&(i+=";"+r),n.cssText=i,a=ak.test(i)}}else e&&s.removeAttribute("style");da in s&&(s[da]=a?n.display:"",s[Cc]&&(n.display="none"))}const Yp=/\s*!important$/;function Zt(s,e,i){if(is(i))i.forEach(n=>Zt(s,e,n));else if(i==null&&(i=""),e.startsWith("--"))s.setProperty(e,i);else{const n=rk(s,e);Yp.test(i)?s.setProperty(We(n),i.replace(Yp,""),"important"):s[n]=i}}const Xp=["Webkit","Moz","ms"],sl={};function rk(s,e){const i=sl[e];if(i)return i;let n=ae(e);if(n!=="filter"&&n in s)return sl[e]=n;n=ft(n);for(let t=0;t<Xp.length;t++){const a=Xp[t]+n;if(a in s)return sl[e]=a}return e}const Zp="http://www.w3.org/1999/xlink";function so(s,e,i,n,t,a=H0(e)){n&&e.startsWith("xlink:")?i==null?s.removeAttributeNS(Zp,e.slice(6,e.length)):s.setAttributeNS(Zp,e,i):i==null||a&&!kr(i)?s.removeAttribute(e):s.setAttribute(e,a?"":li(i)?String(i):i)}function eo(s,e,i,n,t){if(e==="innerHTML"||e==="textContent"){i!=null&&(s[e]=e==="innerHTML"?vc(i):i);return}const a=s.tagName;if(e==="value"&&a!=="PROGRESS"&&!a.includes("-")){const p=a==="OPTION"?s.getAttribute("value")||"":s.value,o=i==null?s.type==="checkbox"?"on":"":String(i);(p!==o||!("_value"in s))&&(s.value=o),i==null&&s.removeAttribute(e),s._value=i;return}let r=!1;if(i===""||i==null){const p=typeof s[e];p==="boolean"?i=kr(i):i==null&&p==="string"?(i="",r=!0):p==="number"&&(i=0,r=!0)}try{s[e]=i}catch{}r&&s.removeAttribute(t||e)}function nn(s,e,i,n){s.addEventListener(e,i,n)}function pk(s,e,i,n){s.removeEventListener(e,i,n)}const io=Symbol("_vei");function ok(s,e,i,n,t=null){const a=s[io]||(s[io]={}),r=a[e];if(n&&r)r.value=n;else{const[p,o]=hk(e);if(n){const d=a[e]=uk(n,t);nn(s,p,d,o)}else r&&(pk(s,p,r,o),a[e]=void 0)}}const no=/(?:Once|Passive|Capture)$/;function hk(s){let e;if(no.test(s)){e={};let n;for(;n=s.match(no);)s=s.slice(0,s.length-n[0].length),e[n[0].toLowerCase()]=!0}return[s[2]===":"?s.slice(3):We(s.slice(2)),e]}let el=0;const dk=Promise.resolve(),ck=()=>el||(dk.then(()=>el=0),el=Date.now());function uk(s,e){const i=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=i.attached)return;Oe(mk(n,i.value),e,5,[n])};return i.value=s,i.attached=ck(),i}function mk(s,e){if(is(e)){const i=s.stopImmediatePropagation;return s.stopImmediatePropagation=()=>{i.call(s),s._stopped=!0},e.map(n=>t=>!t._stopped&&n&&n(t))}else return e}const to=s=>s.charCodeAt(0)===111&&s.charCodeAt(1)===110&&s.charCodeAt(2)>96&&s.charCodeAt(2)<123,gk=(s,e,i,n,t,a)=>{const r=t==="svg";e==="class"?nk(s,n,r):e==="style"?lk(s,i,n):vt(e)?ur(e)||ok(s,e,i,n,a):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):kk(s,e,n,r))?(eo(s,e,n),!s.tagName.includes("-")&&(e==="value"||e==="checked"||e==="selected")&&so(s,e,n,r,a,e!=="value")):s._isVueCE&&(/[A-Z]/.test(e)||!xs(n))?eo(s,ae(e),n,a,e):(e==="true-value"?s._trueValue=n:e==="false-value"&&(s._falseValue=n),so(s,e,n,r))};function kk(s,e,i,n){if(n)return!!(e==="innerHTML"||e==="textContent"||e in s&&to(e)&&ts(i));if(e==="spellcheck"||e==="draggable"||e==="translate"||e==="form"||e==="list"&&s.tagName==="INPUT"||e==="type"&&s.tagName==="TEXTAREA")return!1;if(e==="width"||e==="height"){const t=s.tagName;if(t==="IMG"||t==="VIDEO"||t==="CANVAS"||t==="SOURCE")return!1}return to(e)&&xs(i)?!1:e in s}const Dc=new WeakMap,Fc=new WeakMap,ca=Symbol("_moveCb"),ao=Symbol("_enterCb"),Ek=s=>(delete s.props.mode,s),yk=Ek({name:"TransitionGroup",props:Vs({},_c,{tag:String,moveClass:String}),setup(s,{slots:e}){const i=bi(),n=Vd();let t,a;return Ud(()=>{if(!t.length)return;const r=s.moveClass||`${s.name||"v"}-move`;if(!_k(t[0].el,i.vnode.el,r))return;t.forEach(Ak),t.forEach(vk);const p=t.filter(fk);wc(),p.forEach(o=>{const d=o.el,c=d.style;Ze(d,r),c.transform=c.webkitTransform=c.transitionDuration="";const u=d[ca]=m=>{m&&m.target!==d||(!m||/transform$/.test(m.propertyName))&&(d.removeEventListener("transitionend",u),d[ca]=null,mi(d,r))};d.addEventListener("transitionend",u)})}),()=>{const r=os(s),p=Bc(r);let o=r.tag||Hs;if(t=[],a)for(let d=0;d<a.length;d++){const c=a[d];c.el&&c.el instanceof Element&&(t.push(c),ji(c,rt(c,p,n,i)),Dc.set(c,c.el.getBoundingClientRect()))}a=e.default?Cr(e.default()):[];for(let d=0;d<a.length;d++){const c=a[d];c.key!=null&&ji(c,rt(c,p,n,i))}return Ss(o,null,a)}}}),Tc=yk;function Ak(s){const e=s.el;e[ca]&&e[ca](),e[ao]&&e[ao]()}function vk(s){Fc.set(s,s.el.getBoundingClientRect())}function fk(s){const e=Dc.get(s),i=Fc.get(s),n=e.left-i.left,t=e.top-i.top;if(n||t){const a=s.el.style;return a.transform=a.webkitTransform=`translate(${n}px,${t}px)`,a.transitionDuration="0s",s}}function _k(s,e,i){const n=s.cloneNode(),t=s[An];t&&t.forEach(p=>{p.split(/\s+/).forEach(o=>o&&n.classList.remove(o))}),i.split(/\s+/).forEach(p=>p&&n.classList.add(p)),n.style.display="none";const a=e.nodeType===1?e:e.parentNode;a.appendChild(n);const{hasTransform:r}=bc(n);return a.removeChild(n),r}const lo=s=>{const e=s.props["onUpdate:modelValue"]||!1;return is(e)?i=>Yt(e,i):e};function Bk(s){s.target.composing=!0}function ro(s){const e=s.target;e.composing&&(e.composing=!1,e.dispatchEvent(new Event("input")))}const il=Symbol("_assign"),wA={created(s,{modifiers:{lazy:e,trim:i,number:n}},t){s[il]=lo(t);const a=n||t.props&&t.props.type==="number";nn(s,e?"change":"input",r=>{if(r.target.composing)return;let p=s.value;i&&(p=p.trim()),a&&(p=fl(p)),s[il](p)}),i&&nn(s,"change",()=>{s.value=s.value.trim()}),e||(nn(s,"compositionstart",Bk),nn(s,"compositionend",ro),nn(s,"change",ro))},mounted(s,{value:e}){s.value=e??""},beforeUpdate(s,{value:e,oldValue:i,modifiers:{lazy:n,trim:t,number:a}},r){if(s[il]=lo(r),s.composing)return;const p=(a||s.type==="number")&&!/^0\d/.test(s.value)?fl(s.value):s.value,o=e??"";p!==o&&(document.activeElement===s&&s.type!=="range"&&(n&&e===i||t&&s.value.trim()===o)||(s.value=o))}},bk=["ctrl","shift","alt","meta"],wk={stop:s=>s.stopPropagation(),prevent:s=>s.preventDefault(),self:s=>s.target!==s.currentTarget,ctrl:s=>!s.ctrlKey,shift:s=>!s.shiftKey,alt:s=>!s.altKey,meta:s=>!s.metaKey,left:s=>"button"in s&&s.button!==0,middle:s=>"button"in s&&s.button!==1,right:s=>"button"in s&&s.button!==2,exact:(s,e)=>bk.some(i=>s[`${i}Key`]&&!e.includes(i))},CA=(s,e)=>{const i=s._withMods||(s._withMods={}),n=e.join(".");return i[n]||(i[n]=(t,...a)=>{for(let r=0;r<e.length;r++){const p=wk[e[r]];if(p&&p(t,e))return}return s(t,...a)})},Ck={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},DA=(s,e)=>{const i=s._withKeys||(s._withKeys={}),n=e.join(".");return i[n]||(i[n]=t=>{if(!("key"in t))return;const a=We(t.key);if(e.some(r=>r===a||Ck[r]===a))return s(t)})},Dk=Vs({patchProp:gk},Zg);let nl,po=!1;function Fk(){return nl=po?nl:wg(Dk),po=!0,nl}const Tk=(...s)=>{const e=Fk().createApp(...s),{mount:i}=e;return e.mount=n=>{const t=Lk(n);if(t)return i(t,!0,Ik(t))},e};function Ik(s){if(s instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&s instanceof MathMLElement)return"mathml"}function Lk(s){return xs(s)?document.querySelector(s):s}var Ct=s=>/^[a-z][a-z0-9+.-]*:/.test(s)||s.startsWith("//"),xk=/.md((\?|#).*)?$/,Or=(s,e="/")=>Ct(s)||s.startsWith("/")&&!s.startsWith(e)&&!xk.test(s),Ui=s=>/^(https?:)?\/\//.test(s),oo=s=>{if(!s||s.endsWith("/"))return s;let e=s.replace(/(^|\/)README.md$/i,"$1index.html");return e.endsWith(".md")?e=`${e.substring(0,e.length-3)}.html`:e.endsWith(".html")||(e=`${e}.html`),e.endsWith("/index.html")&&(e=e.substring(0,e.length-10)),e},Ok="http://.",Pk=(s,e)=>{if(!s.startsWith("/")&&e){const i=e.slice(0,e.lastIndexOf("/"));return oo(new URL(`${i}/${s}`,Ok).pathname)}return oo(s)},Rk=(s,e)=>{const i=Object.keys(s).sort((n,t)=>{const a=t.split("/").length-n.split("/").length;return a!==0?a:t.length-n.length});for(const n of i)if(e.startsWith(n))return n;return"/"},Sk=/(#|\?)/,Ic=s=>{const[e,...i]=s.split(Sk);return{pathname:e,hashAndQueries:i.join("")}},Vk=["link","meta","script","style","noscript","template"],Nk=["title","base"],zk=([s,e,i])=>Nk.includes(s)?s:Vk.includes(s)?s==="meta"&&e.name?`${s}.${e.name}`:s==="template"&&e.id?`${s}.${e.id}`:JSON.stringify([s,Object.entries(e).map(([n,t])=>typeof t=="boolean"?t?[n,""]:null:[n,t]).filter(n=>n!=null).sort(([n],[t])=>n.localeCompare(t)),i]):null,jk=s=>{const e=new Set,i=[];return s.forEach(n=>{const t=zk(n);t&&!e.has(t)&&(e.add(t),i.push(n))}),i},Mk=s=>s.startsWith("/")?s:`/${s}`,Lc=s=>s.endsWith("/")||s.endsWith(".html")?s:`${s}/`,Pr=s=>s.endsWith("/")?s.slice(0,-1):s,xc=s=>s.startsWith("/")?s.slice(1):s,qk=s=>typeof s=="function",ai=s=>Object.prototype.toString.call(s)==="[object Object]",Ps=s=>typeof s=="string";const Gk=JSON.parse("{}"),Hk=Object.fromEntries([["/",{loader:()=>l(()=>import("./index.html-CYizlaki.js"),__vite__mapDeps([0,1])),meta:{t:"Home",i:"home"}}],["/me.html",{loader:()=>l(()=>import("./me.html-BtW4mQXE.js"),__vite__mapDeps([2,1])),meta:{t:""}}],["/ai/",{loader:()=>l(()=>import("./index.html-f4sk1vYu.js"),__vite__mapDeps([3,1])),meta:{d:1670083932e3,e:`
<p><a href="https://paperswithcode.com/" target="_blank" rel="noopener noreferrer">papers with code</a></p>
<p>深度学习 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo></mrow><annotation encoding="application/x-tex">=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span></span></span></span> 神经网络 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span></span></span></span> 机器学习 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span></span></span></span> 人工智能</p>`,r:{minutes:6.01,words:1804},t:"Artificial Intelligence",y:"a"}}],["/algo/",{loader:()=>l(()=>import("./index.html-DQfY91Qj.js"),__vite__mapDeps([4,1])),meta:{d:1670083932e3,e:`
<p>题单/路线</p>
<ul>
<li><a href="https://www.techinterviewhandbook.org/grind75/" target="_blank" rel="noopener noreferrer">Grind 75</a></li>
<li><a href="https://www.techinterviewhandbook.org/grind75/?weeks=6&amp;hours=25&amp;grouping=topics" target="_blank" rel="noopener noreferrer">Grind 169</a></li>
<li><a href="https://neetcode.io/roadmap" target="_blank" rel="noopener noreferrer">NeetCode</a>, Blind 75, NeetCode 150</li>
<li><a href="https://leetcode.com/studyplan/top-interview-150/" target="_blank" rel="noopener noreferrer">LeetCode 150</a></li>
</ul>`,r:{minutes:.98,words:294},t:"Algorithm",y:"a"}}],["/se/",{loader:()=>l(()=>import("./index.html-C0TnRCpJ.js"),__vite__mapDeps([5,1])),meta:{d:1703688112e3,e:`
<p>下面是星球提供的一些专栏（目前放在语雀），如果是备战面试的话，《Java 面试指北》和《后端面试高频系统设计&amp;场景题》是必看的。尤其是《Java 面试指北》的面试准备篇，一定要尽快抽时间看看，基本上你准备面试可能遇到的问题这里都有提到靠谱的解决办法。</p>
<ol>
<li>
<p>《Java 面试指北》(配合 JavaGuide 使用，会根据每一年的面试情况对内容进行更新完善，故不提供 PDF 版本)：<a href="https://www.yuque.com/books/share/04ac99ea-7726-4adb-8e57-bf21e2cc7183%EF%BC%88%E5%AF%86%E7%A0%81%EF%BC%9Acnk4%EF%BC%89" target="_blank" rel="noopener noreferrer">https://www.yuque.com/books/share/04ac99ea-7726-4adb-8e57-bf21e2cc7183（密码：cnk4）</a> 。</p>
<p>JavaGuide 地址：<a href="https://javaguide.cn/" target="_blank" rel="noopener noreferrer">https://javaguide.cn/</a> ，《Java 面试指北》的学习建议在这里：<a href="https://t.zsxq.com/QNFMFAU" target="_blank" rel="noopener noreferrer">https://t.zsxq.com/QNFMFAU</a> 。如果不知道《Java 面试指北》和开源版的关系，可以看看这份建议。</p>
</li>
<li>
<p>《后端面试高频系统设计&amp;场景题》：<a href="https://www.yuque.com/snailclimb/tangw3" target="_blank" rel="noopener noreferrer">https://www.yuque.com/snailclimb/tangw3</a> 密码：bonl</p>
<p>这部分内容本身是属于《Java 面试指北》的，后面由于内容篇幅较多，因此被单独提了出来。</p>
</li>
<li>
<p>《Java 必读源码系列》（目前已经整理了 Dubbo 2.6.x 、Netty 4.x、SpringBoot2.1 的源码）：<a href="https://www.yuque.com/books/share/7f846c65-f32e-4181-bf4e-f2e80d09c98a?#%EF%BC%88%E5%AF%86%E7%A0%81%EF%BC%9Aihvn%EF%BC%89%E3%80%82" target="_blank" rel="noopener noreferrer">https://www.yuque.com/books/share/7f846c65-f32e-4181-bf4e-f2e80d09c98a?#（密码：ihvn）。</a></p>
<p>欢迎在评论区说出你们想要看的框架/中间件的源码！</p>
</li>
<li>
<p>《从零开始写一个 RPC 框架》：<a href="https://www.yuque.com/books/share/b7a2512c-6f7a-4afe-9d7e-5936b4c4cab0?#%EF%BC%88%E5%AF%86%E7%A0%81%EF%BC%9Asztd%EF%BC%89" target="_blank" rel="noopener noreferrer">https://www.yuque.com/books/share/b7a2512c-6f7a-4afe-9d7e-5936b4c4cab0?#（密码：sztd）</a></p>
<p>RPC 框架地址： <a href="https://gitee.com/SnailClimb/guide-rpc-framework" target="_blank" rel="noopener noreferrer">https://gitee.com/SnailClimb/guide-rpc-framework</a> 。</p>
</li>
<li>
<p>《分布式、高并发、Devops 面试扫盲》: 已经并入《Java 面试指北》中。</p>
</li>
<li>
<p>《Kafka 常见面试题/知识点总结》：<a href="https://www.yuque.com/books/share/dd07d89b-9437-4f5c-b4f8-b294474aa992?#%EF%BC%88%E5%AF%86%E7%A0%81%EF%BC%9Anqdq%EF%BC%89" target="_blank" rel="noopener noreferrer">https://www.yuque.com/books/share/dd07d89b-9437-4f5c-b4f8-b294474aa992?#（密码：nqdq）</a></p>
</li>
<li>
<p>《程序员副业赚钱之路》 <a href="https://www.yuque.com/books/share/1bd77211-f7e0-41fd-91bb-094769c978f9?#%EF%BC%88%E5%AF%86%E7%A0%81%EF%BC%9Aew4f%EF%BC%89" target="_blank" rel="noopener noreferrer">https://www.yuque.com/books/share/1bd77211-f7e0-41fd-91bb-094769c978f9?#（密码：ew4f）</a></p>
</li>
<li>
<p>《Guide 的读书笔记与文章精选集》（经典书籍精读笔记分享）<a href="https://www.yuque.com/books/share/f63faff5-53f9-4163-a059-7be93fc538b0?#%EF%BC%88%E5%AF%86%E7%A0%81%EF%BC%9Aum0g%EF%BC%89" target="_blank" rel="noopener noreferrer">https://www.yuque.com/books/share/f63faff5-53f9-4163-a059-7be93fc538b0?#（密码：um0g）</a></p>
<p>提示：密码会定期修改，内容会不断完善。你可以对上面的专栏进行收藏，方便下次找到。</p>
<hr>
<p>一直想在星球说一下这个问题，刚好你问到了。我就拿八股文必看资料来说吧！</p>
</li>
<li>
<p>我的 JavaGuide 开源版是必须要看的，如果说你比较赶时间，想着突击面试的话，那就针对性地只看面试题，如果你时间比较多的话，我还是建议你尽量把上面的文章都看一遍。建议在线版阅读，地址：Java 面试指南 | JavaGuide(Java 面试 学习指南) 。另外，这个更新比较频繁，因此，没有提供 PDF 版本。</p>
</li>
<li>
<p>《Java 面试指北》属于是 JavaGuide 开源版的完善，两者内容互补，无重复内容，完全可以结合一起看。由于这个更新也非常频繁，同时也是为了避免外泄，所以也没有提供 PDF 版本。</p>
</li>
<li>
<p>《Java 面试指北》的面试准备篇一定一定一定要认真看！会让你准备面试的效率高很多，事半功倍。像如何准备面试、如何编写一份不错的程序员简历、具体哪些知识点是重点、源码面试怎么问等等常见问题都有详细且靠谱的解答。由于《Java 面试指北》会根据每一年的面试情况对内容进行更新完善，故不提供 PDF 版本，目前只支持在线阅读。</p>
</li>
<li>
<p>看我的这两个资料基本就差不多，知识点都涵盖到了。但是，我不可能每个知识点都研究的非常深入（正在往这个方向努力），针对你面试的公司来说（比如你要面试阿里巴巴的话，就提前找一些阿里巴巴的面经针对性复习），部分知识点还需要你自己深入研究学习。</p>
</li>
<li>
<p>如果你还是想看 PDF 版资料的话，置顶主题里就有哈：<a href="https://t.zsxq.com/iiiAqf6" target="_blank" rel="noopener noreferrer">https://t.zsxq.com/iiiAqf6</a> 。虽然这些 PDF 资料的质量没有我上面提到的在线版质量高，但是，绝对算的上是市面上流传的最优质的的 PDF 面试资料了。</p>
</li>
</ol>`,r:{minutes:3.3,words:990},t:"Software Engineering",y:"a"}}],["/test/",{loader:()=>l(()=>import("./index.html-BFOS8cr-.js"),__vite__mapDeps([6,1])),meta:{d:1700646963e3,e:`
<p>英语标准化考试，主要是语言考试和升学考试两种：</p>
<ul>
<li>
<p>English Proficiency Test</p>
<ul>
<li>TOEFL</li>
<li>IELTS</li>
<li>PTE</li>
</ul>
</li>
<li>
<p>GRE</p>
</li>
</ul>
<h2>寄送</h2>
<p>现在 GRE、TOEFL 送分都是电子送分，很快就到，但是小蜜匹配分数需要大约一周</p>
<p>cmu 虽然多个学院 gre 的 code 不同，但是也只需要寄送一份，INI 的秘书的回复</p>
<p>“If you’re applying to two programs at CMU you only need to use the institution code 2074 and the test results will be reported to the university and will be posted to the central information system which can be accessed by all departments. So you only need to report the test results once.“</p>`,r:{minutes:2.39,words:716},t:"Standardized Test",y:"a"}}],["/zh/",{loader:()=>l(()=>import("./index.html-DwVMZpgR.js"),__vite__mapDeps([7,1])),meta:{t:"主页",i:"home"}}],["/zh/intro.html",{loader:()=>l(()=>import("./intro.html-BhKGxu_8.js"),__vite__mapDeps([8,1])),meta:{d:1669430927e3,e:`
<p>将你的个人介绍和档案放置在此处。</p>
`,r:{minutes:.07,words:20},t:"介绍页",i:"info",y:"a"}}],["/zh/slides.html",{loader:()=>l(()=>import("./slides.html-Dn7-DzGj.js"),__vite__mapDeps([9,1])),meta:{d:1669430927e3,e:`<!-- markdownlint-disable MD024 MD033 MD051 -->
<p>@slidestart</p>
<!-- .slide: data-transition="slide" -->
<h2>幻灯片演示</h2>
<!-- .element: class="r-fit-text" -->
<p>一个简单的幻灯片演示与各种小贴士。</p>
<!-- .element: class="r-fit-text" -->
<blockquote>
<p>作者 Mr.Hope. 请滚动鼠标滚轮进入下一页</p>
</blockquote>
<hr>
<h2>标注幻灯片</h2>`,r:{minutes:4.5,words:1350},t:"幻灯片页",i:"slides",y:"a"}}],["/ai/aigc/",{loader:()=>l(()=>import("./index.html-CkhrVL7P.js"),__vite__mapDeps([10,1])),meta:{d:1700646963e3,e:`
<p><a href="https://civitai.com" target="_blank" rel="noopener noreferrer">Civit</a></p>
<p>Stable Diffusion</p>
<p>Control Net</p>
<p>lora</p>
`,r:{minutes:.03,words:9},t:"AIGC",y:"a"}}],["/ai/gpt/",{loader:()=>l(()=>import("./index.html-B_dm6IAY.js"),__vite__mapDeps([11,1])),meta:{d:1700646963e3,e:`
<p>提示词</p>
<ul>
<li><a href="https://chat.openai.com" target="_blank" rel="noopener noreferrer">ChatGPT</a></li>
<li><a href="https://claude.ai/" target="_blank" rel="noopener noreferrer">Claude</a></li>
<li><a href="https://bard.google.com" target="_blank" rel="noopener noreferrer">Bard</a></li>
<li><a href="https://www.bing.com/chat" target="_blank" rel="noopener noreferrer">Bing Chat</a></li>
</ul>`,r:{minutes:.09,words:26},t:"GPT",y:"a"}}],["/ai/gpt/actions.html",{loader:()=>l(()=>import("./actions.html-CbxEHf1y.js"),__vite__mapDeps([12,1])),meta:{d:1700646963e3,e:`
`,r:{minutes:0,words:1},t:"Actions",y:"a"}}],["/ai/gpt/gemini.html",{loader:()=>l(()=>import("./gemini.html-gswM_0dI.js"),__vite__mapDeps([13,1])),meta:{d:1719451307e3,e:`<p>api key</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">curl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$GOOGLE_API_KEY</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'Content-Type: application/json'</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    -X</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> POST</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">      "contents": [{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        "parts":[{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">          "text": "Write a story about a magic backpack."}]}]}'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> 2&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/dev/null</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.1,words:29},t:"",y:"a"}}],["/ai/gpt/gpts.html",{loader:()=>l(()=>import("./gpts.html-C33LBhb7.js"),__vite__mapDeps([14,1])),meta:{d:1700646963e3,e:`
<p><a href="https://www.gptshunter.com" target="_blank" rel="noopener noreferrer">GPTs hunter</a></p>
<p><a href="https://www.gptshunter.com/gpt-store/career-coach/" target="_blank" rel="noopener noreferrer">Career Coach</a></p>
<p><a href="https://www.gptshunter.com/gpt-store/it-cv-writing-assistant/" target="_blank" rel="noopener noreferrer">IT CV</a></p>`,r:{minutes:.18,words:54},t:"GPTs",y:"a"}}],["/ai/gpt/prompt.html",{loader:()=>l(()=>import("./prompt.html-f1JFlxwf.js"),__vite__mapDeps([15,1])),meta:{d:1700646963e3,e:`
<p>指令词 (Instruction)<br>
输入(Input Data)<br>
背景(Context)-可选<br>
输出要求(Output Indicator)-可选</p>
<p><a href="https://www.youtube.com/watch?v=-zEhptQjnik" target="_blank" rel="noopener noreferrer">技巧教程</a></p>
<p>技巧1：让ChatGPT扮演专家角色<br>
技巧2：告诉ChatGPT你的身份<br>
技巧3：限制ChatGPT的回答长度<br>
技巧4：让ChatGPT一步步思考<br>
技巧5：明确你的要求和目的<br>
技巧6：提供充分的背景信息<br>
技巧7：始终结构化思考你的prompt</p>`,r:{minutes:.36,words:109},t:"Prompt",y:"a"}}],["/ai/nn/",{loader:()=>l(()=>import("./index.html-CaonY_mC.js"),__vite__mapDeps([16,1])),meta:{d:1715153702e3,e:`
<p>深度学习（英語：deep learning）是机器学习的分支，是一種以人工神经网络为结构，对数据进行表征学习的算法。深度学习中的形容词“深度”是指在网络中使用多层。 早期的工作表明，线性感知器不能成为通用分类器，但具有非多项式激活函数和一个无限宽度隐藏层的网络可以成为通用分类器。</p>
<p>将1974年提出的标准反向传播算法应用于深度神经网络</p>
<h2>问题</h2>
<p>梯度消失、梯度爆炸</p>
<p>resnet：残差连接</p>
<p>激活函数（Activation Function）</p>
<p>常见的激活函数都是非线性的，因此也会给神经元引入非线性元素，使得神经网络可以逼近其他的任何非线性函数，这样可以使得神经网络应用到更多非线性模型中。</p>`,r:{minutes:3.74,words:1121},t:"Neural Network 神经网络",y:"a"}}],["/ai/nn/techniques.html",{loader:()=>l(()=>import("./techniques.html-CjhsZ9Ne.js"),__vite__mapDeps([17,1])),meta:{d:1736210466e3,e:`
<p>resnet</p>
<p>残差连接</p>
<p>激活函数（Activation Function）</p>
<p>常见的激活函数都是非线性的，因此也会给神经元引入非线性元素，使得神经网络可以逼近其他的任何非线性函数，这样可以使得神经网络应用到更多非线性模型中。</p>
<ul>
<li><strong>线性激活函数</strong>（线性方程控制输入到输出的映射，如f(x)=x等）</li>
<li><strong>非线性激活函数</strong>（非线性方程控制输入到输出的映射，比如
<ul>
<li>Sigmoid、</li>
<li>Tanh、</li>
<li>ReLU、
<ul>
<li>LReLU</li>
<li>PReLU</li>
<li>Swish</li>
</ul>
</li>
<li>Softmax 是用于多类分类问题的激活函数</li>
</ul>
</li>
</ul>`,r:{minutes:3.27,words:980},t:"Techniques",y:"a"}}],["/ai/pytorch/",{loader:()=>l(()=>import("./index.html-BH5qXvy_.js"),__vite__mapDeps([18,1])),meta:{d:1703688112e3,e:`
<p><a href="http://learnpytorch.io" target="_blank" rel="noopener noreferrer">http://learnpytorch.io</a></p>
<ul>
<li>code along</li>
<li>experiment</li>
<li>visualization</li>
</ul>
<hr>
<p>PyTorch for Deep Learning &amp; Machine Learning - Zero to Hero</p>
<p>网站</p>
<p>sota：statement</p>
`,r:{minutes:.07,words:20},t:"Pytorch",y:"a"}}],["/ai/pytorch/classification.html",{loader:()=>l(()=>import("./classification.html-vb_VDleY.js"),__vite__mapDeps([19,1])),meta:{d:1703688112e3,e:`
<h2>nn</h2>
<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">nn.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Sequential</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">	nn.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Linear</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">in_features</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.06,words:18},t:"Classification",y:"a"}}],["/ai/pytorch/graph.html",{loader:()=>l(()=>import("./graph.html-CFpnllCA.js"),__vite__mapDeps([20,1])),meta:{d:1703688112e3,e:`
<p>Computational Graph 计算图</p>
<p>描述运算的有向无环图</p>
<ul>
<li>
<p>节点 Node</p>
<p>数据：向量、矩阵、张量</p>
</li>
<li>
<p>边 Edge</p>
<p>运算：加减乘除卷积等</p>
</li>
</ul>
<hr>
<p>根据计算图的搭建方式，可以划分为：</p>
<ul>
<li>
<p>Daynamic Computational Graphs  动态图：运算与搭建同时进行（pytorch）</p>
<p>灵活、易调节</p>
</li>
<li>
<p>Static Computational Graphs 静态图：先搭建图，后运算（tensorflow）</p>
<p>高效、不灵活</p>
</li>
</ul>`,r:{minutes:.31,words:94},t:"Graph",y:"a"}}],["/ai/pytorch/tensor.html",{loader:()=>l(()=>import("./tensor.html-76rpGjnM.js"),__vite__mapDeps([21,1])),meta:{d:1703688112e3,e:`
<p>0: scalar</p>
<p>1: vector</p>
<p>2: matrix</p>
<p>3+: tensor</p>
<p>matrix, tensor 变量一般大写命名</p>
<hr>
<p>rand</p>
<p>zeros</p>
<p>ones</p>
<p>arange, 左闭右开</p>
<hr>
<p>ndim</p>
<p>dtype, 默认是float32</p>
<p>size</p>
<p>Zeros_like</p>
<p>tensor datatype is one of 3 big errors with pytorch &amp; deep learning</p>`,r:{minutes:.73,words:218},t:"Tensor",y:"a"}}],["/ai/pytorch/workflow.html",{loader:()=>l(()=>import("./workflow.html-BUW4DPbC.js"),__vite__mapDeps([22,1])),meta:{d:1703688112e3,e:`
<ol>
<li>
<p><strong>data</strong>, get data ready</p>
</li>
<li>
<p><strong>build</strong> or pick a pretrained model(to suit your problem)</p>
<ol>
<li>Pick a loss function &amp; optimizer</li>
<li>Build a training loop</li>
</ol>
</li>
<li>
<p><strong>Fit</strong> the model to the data and make a prediction</p>
</li>
<li>
<p>Evaluate the model</p>
</li>
<li>
<p>Improve through experimentation</p>
</li>
<li>
<p>Save and reload your trained model</p>
</li>
</ol>`,r:{minutes:.91,words:274},t:"Workflow",y:"a"}}],["/ai/rec/",{loader:()=>l(()=>import("./index.html-lpVi-MGD.js"),__vite__mapDeps([23,1])),meta:{d:1736210466e3,e:`
<ul>
<li>召回、粗排、精排</li>
<li>LLM for Rec (OneRec)</li>
</ul>
<p>一些 JD</p>
<p>小红书推荐算法组招聘实习生参与如下方向的技术研究和落地工作：</p>
<ol>
<li>重排算法：基于序列生成与模型评估的两阶段排序框架，从精排候选集中产生最终的展示序列，在确保推荐多样性的情况下最大化整页效率；</li>
<li>混排算法：探索如何将业务目标不同的社区笔记（for时长）、电商笔记（for成交）、广告笔记（for营收）进行统一混排，取得多方共赢的结果。</li>
<li>涉及技术点包括Listwise建模、生成模型、强化学习、运筹优化等。由于重排、混排在业界还没有固定范式，有很大创新机会，鼓励实习期间有论文产出。</li>
</ol>`,r:{minutes:1.77,words:532},t:"Recommendation System",y:"a"}}],["/ai/robo/",{loader:()=>l(()=>import("./index.html-Dka8bf8V.js"),__vite__mapDeps([24,1])),meta:{d:1703688112e3,e:`
<p>四足机器人</p>
<ul>
<li>MIT cleetah-software</li>
<li>Stanford pupper</li>
</ul>
<p>四轴无人机</p>
<p>香橙pi、树莓派</p>
`,r:{minutes:.07,words:22},t:"Robotics",y:"a"}}],["/algo/faq/2ptr.html",{loader:()=>l(()=>import("./2ptr.html-c6Pz-17q.js"),__vite__mapDeps([25,1])),meta:{d:1732244737e3,e:`
<p>双指针与隔板法</p>
<p>指针回头不能用双指针算法（因为不On了）</p>
<p>滑窗型双指针</p>
<p>滑窗每次只改入窗出窗元素</p>
<p>左减右加</p>
<p>滑动窗口写左闭右开的好，这样处理前不需要特判右指针是否越界，在while哪里就判断了</p>
`,r:{minutes:.28,words:84},t:"Two Pointers",y:"a"}}],["/algo/faq/",{loader:()=>l(()=>import("./index.html-7sIS9ggG.js"),__vite__mapDeps([26,1])),meta:{d:1732244737e3,e:`
<p>算法面试高频知识点与技巧</p>
<p>连续、非连续</p>
<ul>
<li>
<p>连续 On2：substring, subarray</p>
</li>
<li>
<p>非连续 O2n：subsequence O2n</p>
</li>
</ul>
<p>On：双指针、单调栈、快速选择、树上各类遍历与分治、n次并查集操作、n次哈希表</p>
<h2>拓展知识</h2>
<p>暴力：想到的最简单的方法</p>
<p>贪心：与别的算法结合去考90%，那种一眼看上去就知道怎么贪心的那种</p>
<p>模拟：（捡胡萝卜）他让你干什么就干什么，非常简单，没有什么算法</p>
<p>暴力：你能想到的最naive的算法</p>`,r:{minutes:1.1,words:330},t:"Frequently Asked Questions",y:"a"}}],["/algo/faq/big-integer.html",{loader:()=>l(()=>import("./big-integer.html-ClaALWzQ.js"),__vite__mapDeps([27,1])),meta:{d:1732244737e3,e:`
<p>高精度</p>
<p>超大的数，</p>
<p>加法</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 高精度加法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> B) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> A)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> C </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> t </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> ) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        t </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) t </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(t </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">%</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        t </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">/=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (t </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(t);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.88,words:265},t:"Big Integer",y:"a"}}],["/algo/faq/binary-tree.html",{loader:()=>l(()=>import("./binary-tree.html-BTuqHLaI.js"),__vite__mapDeps([28,1])),meta:{d:1732244737e3,e:`
<p>二叉树</p>
<p>力扣上很多树的题目都是可以用递归很快地解决的，而这一系列递归解法中蕴含了一种很强大的递归思维：对称性递归(symmetric recursion)</p>
<p>什么是对称性递归？就是对一个对称的数据结构（这里指二叉树）从整体的对称性思考，把大问题分解成子问题进行递归，即不是单独考虑一部分(比如树的左子树)，而是同时考虑对称的两部分(左右子树)，从而写出对称性的递归代码</p>
<h3>题型分类：</h3>
<p>可以用对称性递归解决的二叉树问题大多是判断性问题(bool 类型函数),这一类问题又可以分为以下两类：</p>
<ol>
<li>
<p>不需要构造辅助函数。</p>
<p>这一类题目有两种情况：</p>
<ul>
<li>第一种是单树问题，且不需要用到子树的某一部分(比如根节点左子树的右子树)，只要利用根节点左右子树的对称性即可进行递归。</li>
<li>第二种是双树问题，即本身题目要求比较两棵树，那么不需要构造新函数。</li>
</ul>
<p>该类型题目如下：</p>
<ol start="100">
<li>相同的树</li>
<li>翻转二叉树</li>
<li>二叉树的最大深度</li>
<li>平衡二叉树</li>
<li>二叉树的直径</li>
<li>合并二叉树</li>
<li>另一个树的子树</li>
<li>单值二叉树</li>
</ol>
</li>
<li>
<p>需要构造辅助函数。</p>
<p>这类题目通常只用根节点子树对称性无法完全解决问题，必须要用到子树的某一部分进行递归，即要调用辅助函数比较两个部分子树。形式上主函数参数列表只有一个根节点，辅助函数参数列表有两个节点。该类型题目如下：</p>
<ol start="101">
<li>对称二叉树</li>
</ol>
<p>剑指 Offer 26. 树的子结构</p>
</li>
</ol>`,r:{minutes:6.95,words:2086},t:"Binary Tree",y:"a"}}],["/algo/faq/div-conq.html",{loader:()=>l(()=>import("./div-conq.html-D2GS-BFw.js"),__vite__mapDeps([29,1])),meta:{d:1734054342e3,e:`
<p>分治（divide and conquer），全称分而治之，是一种非常重要且常见的算法策略。分治通常基于递归实现，包括“分”和“治”两个步骤。</p>
<ol>
<li><strong>分（划分阶段）</strong>：递归地将原问题分解为两个或多个子问题，直至到达最小子问题时终止。</li>
<li><strong>治（合并阶段）</strong>：从已知解的最小子问题开始，从底至顶地将子问题的解进行合并，从而构建出原问题的解。</li>
</ol>
<p>如图 12-1 所示，“归并排序”是分治策略的典型应用之一。</p>
<ol>
<li><strong>分</strong>：递归地将原数组（原问题）划分为两个子数组（子问题），直到子数组只剩一个元素（最小子问题）。</li>
<li><strong>治</strong>：从底至顶地将有序的子数组（子问题的解）进行合并，从而得到有序的原数组（原问题的解）。</li>
</ol>`,r:{minutes:3.71,words:1113},t:"Divide & Conquer",y:"a"}}],["/algo/faq/greater.html",{loader:()=>l(()=>import("./greater.html-DHHMhq2-.js"),__vite__mapDeps([30,1])),meta:{d:1734054342e3,e:`
<p>前/后<strong>最近的</strong>一个更大/小的位置：单调栈</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> largestRectangleArea</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] heights) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> heights</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> area </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 单调递增栈</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Deque</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> stack </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayDeque</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    stack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> heights[</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> heights[i]) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 左右两个小于栈顶的元素</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            area </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(area, heights[</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> stack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        stack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        area </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(area, heights[</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> stack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> area</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.66,words:199},t:"前/后一个更大/小的位置",y:"a"}}],["/algo/faq/island.html",{loader:()=>l(()=>import("./island.html-zwC8j_jp.js"),__vite__mapDeps([31,1])),meta:{d:1734054342e3,e:`
<p>三色法/淹没法：可以节省seen/visited数组</p>
<p>淹没：</p>
<ul>
<li>Lc1254 统计封闭岛屿的数目（从边框出发淹没）</li>
<li>Lc1905 统计子岛屿</li>
</ul>
`,r:{minutes:.14,words:41},t:"Island Problems",y:"a"}}],["/algo/faq/minmax.html",{loader:()=>l(()=>import("./minmax.html-ghQcHMGe.js"),__vite__mapDeps([32,1])),meta:{d:1732246606e3,e:`
<p>最小化最大值</p>
<p>二分答案</p>
`,r:{minutes:.04,words:11},t:"Minmax",y:"a"}}],["/algo/faq/monotonic-stack.html",{loader:()=>l(()=>import("./monotonic-stack.html-BLdsnpZq.js"),__vite__mapDeps([33,1])),meta:{d:1732244737e3,e:`
<p>使用场景</p>
<p>模板</p>
<p>变形：单调队列</p>
`,r:{minutes:.05,words:15},t:"单调栈",y:"a"}}],["/algo/faq/quick.html",{loader:()=>l(()=>import("./quick.html-BKakaGT7.js"),__vite__mapDeps([34,1])),meta:{d:1732244737e3,e:`
<p>时间复杂度低于 On 的算法</p>
<ol>
<li>
<p>Ologn 类</p>
<ol>
<li>
<p>二分法</p>
</li>
<li>
<p>倍增法</p>
<ol>
<li>
<p>快速幂</p>
<p>a^n % b</p>
<ul>
<li>递归写法</li>
<li>非递归：用二进制</li>
</ul>
</li>
<li>
<p>LCA</p>
</li>
<li>
<p>ST表</p>
</li>
</ol>
</li>
<li>
<p>gcd</p>
</li>
</ol>
</li>
<li>
<p>On0.5 类</p>
<ol>
<li>
<p>分解质因数/判断质数</p>
</li>
<li>
<p>分块检索法</p>
<p>将长度为 N 的区间分成 √N 的大小的小区间</p>
<p>总共 √N 个小区间，每个小区间统计局部的数据</p>
<p>因此在这些区间中进行增删查改的效率是 O(√N)</p>
</li>
</ol>
</li>
</ol>`,r:{minutes:.42,words:125},t:"Quick",y:"a"}}],["/algo/faq/sort.html",{loader:()=>l(()=>import("./sort.html-DTjGvG7I.js"),__vite__mapDeps([35,1])),meta:{d:1732246606e3,e:`
<ul>
<li>On2, Bubble Sort, Insertion Sort, Selection Sort</li>
<li>Onlogn, Merge Sort, Quick Sort, Heap Sort</li>
<li>On, Counting Sort, Radix Sort, Bucket Sort</li>
</ul>
`,r:{minutes:.07,words:22},t:"Sort",y:"a"}}],["/algo/faq/substring.html",{loader:()=>l(()=>import("./substring.html-CLGBm5rB.js"),__vite__mapDeps([36,1])),meta:{d:1732244737e3,e:`
<p>子串/子数组</p>
<p>可以考虑的算法</p>
<ol>
<li>前序型 DP</li>
<li>子串型 DP（Kadane 算法）</li>
<li>滑动窗口
<ol>
<li>滑动哈希 Robin Karp</li>
</ol>
</li>
</ol>
<p>eg. 718</p>
<p><a href="https://leetcode.cn/problems/A1NYOS/solutions/1287019/chang-jian-zi-shu-zu-wen-ti-tong-yong-ji-v0n4/?envType=study-plan-v2&amp;envId=coding-interviews-special" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/A1NYOS/solutions/1287019/chang-jian-zi-shu-zu-wen-ti-tong-yong-ji-v0n4/?envType=study-plan-v2&amp;envId=coding-interviews-special</a></p>`,r:{minutes:2.64,words:791},t:"Substring",y:"a"}}],["/algo/faq/trie.html",{loader:()=>l(()=>import("./trie.html-Bg7KCxdk.js"),__vite__mapDeps([37,1])),meta:{d:1732244737e3,e:`
<p>字典树的基本操作</p>
<ul>
<li>插入单词</li>
<li>前缀计数</li>
<li>查找单词</li>
<li>查找前缀</li>
</ul>
<p>字典树的题型</p>
<ul>
<li>
<p>直接操作字典树</p>
</li>
<li>
<p>在字典树上深度优先搜索</p>
</li>
<li>
<p>使用字典树加速其他算法，DP eg. k edit distance</p>
</li>
</ul>
<p>字典树中的相同前缀越多字典树的优化效果越明显<br>
每次添加字符串，查询字符串复杂度最优均为O(L)<br>
最坏情况仍然需要遍历整棵树来得到结果</p>
`,r:{minutes:1.63,words:490},t:"字典树",y:"a"}}],["/algo/framework/",{loader:()=>l(()=>import("./index.html-DFrpd6wi.js"),__vite__mapDeps([38,1])),meta:{d:1732244737e3,e:`
<p>结构</p>
<ul>
<li>
<p>线：减治，</p>
</li>
<li>
<p>树：分治，无重叠子问题（注意均衡的问题）</p>
<p>分治很简单也符合直觉，难点是时间复杂度估算（主方法）</p>
<p>对于分布式计算很重要，mit 6.24</p>
</li>
<li>
<p>图：动规，有重叠子问题</p>
</li>
<li>
<p>集：无序，判断存在或者数量</p>
</li>
</ul>
<p>搜索</p>
<ul>
<li>FOR：循环搜索</li>
<li>DFS：栈式搜索</li>
<li>BFS：队列搜索</li>
</ul>
<p>优化</p>
<ul>
<li>减治：无效优化</li>
<li>动规：重叠优化</li>
<li>分治：并行优化，可以分布式计算如mapreduce</li>
</ul>`,r:{minutes:.63,words:188},t:"框架",y:"a"}}],["/algo/summary/",{loader:()=>l(()=>import("./index.html-spPdkYuV.js"),__vite__mapDeps([39,1])),meta:{d:1732244737e3,e:`
<p>算法类型主要分为如下四种</p>
<ul>
<li>
<p>结构</p>
<ul>
<li>线</li>
<li>树</li>
<li>图</li>
<li>集</li>
</ul>
</li>
<li>
<p>搜索：brute force 暴力</p>
<ul>
<li><code>for</code>：固定的若干层for循环嵌套枚举，例如枚举每一个子数组（起点终点</li>
<li><code>DFS</code>：不定的若干层for循环递归枚举，例如枚举每一个子序列（每个元素</li>
<li><code>BFS</code></li>
</ul>
</li>
<li>
<p>优化</p>
<ul>
<li>剪枝：为搜索避免无效状态</li>
<li>动归：避免重复计算</li>
<li>减治：避免无效状态</li>
</ul>
</li>
<li>
<p>数学</p>
</li>
</ul>`,r:{minutes:5.8,words:1741},t:"Summary",y:"a"}}],["/cs/database/",{loader:()=>l(()=>import("./index.html-WIZ-pPyg.js"),__vite__mapDeps([40,1])),meta:{d:1679321449e3,e:`
<p>Relational DB, Document DB, Key-Value DB, Graph DB</p>
<p>常见数据库，包括关系型数据库、非关系型数据库、分布式数据库等。</p>
<ul>
<li>
<p>MySQL</p>
</li>
<li>
<p>Redis</p>
</li>
<li>
<p>MongoDB</p>
<p>LSM Tree 和 B-Tree 就是 NoSQL 和 SQL 的 trade off</p>
</li>
</ul>
<p>分类</p>
<ul>
<li>
<p>SQL</p>
<ul>
<li>
<p>Relational</p>
<p>关系：MySQL、TiDB</p>
</li>
<li>
<p>Analytical (OLAP)</p>
<p>分析：ClickHouse</p>
</li>
</ul>
</li>
<li>
<p>NoSQL</p>
<ul>
<li>
<p>Document</p>
<p>文档：MongoDB、CouchDB</p>
</li>
<li>
<p>Key-Value</p>
<p>键值：Redis、DynamoDB、RocksDB、Doris</p>
</li>
<li>
<p>Wide-Column</p>
<p>宽列：HBase、Cassandra</p>
</li>
<li>
<p>Graph</p>
<p>图表：Neo4j、 Amazon Neptune、Giraph</p>
</li>
</ul>
</li>
</ul>`,r:{minutes:1.79,words:538},t:"Database",y:"a"}}],["/education/bs/",{loader:()=>l(()=>import("./index.html-fp2aGGS5.js"),__vite__mapDeps([41,1])),meta:{d:1670083932e3,e:`
<p>Artificial Intelligence</p>
<p>自学</p>
<ul>
<li><a href="https://csdiy.wiki" target="_blank" rel="noopener noreferrer">CS DIY</a></li>
</ul>
`,r:{minutes:.03,words:10},t:"Bachelor Courses",y:"a"}}],["/education/ms/",{loader:()=>l(()=>import("./index.html-DQLbLW1V.js"),__vite__mapDeps([42,1])),meta:{d:1715153702e3,e:`
<p>Computer Graphics</p>
<p>课程</p>
<ul>
<li>CIS 5600 Interactive Computer Graphics</li>
<li>CIS 5650 GPU Programming</li>
<li>CIS 5620</li>
<li>CIS 6600</li>
<li>GAMES 101</li>
<li>GAMES 104</li>
</ul>
<p>Conferences</p>
<ul>
<li>SigGraph (Special Interest Group on GRAPHics and Interactive Techniques)</li>
<li>GDC (Game Developers Conference)</li>
<li>TOG (ACM Transactions on Graphics)</li>
</ul>`,r:{minutes:.79,words:237},t:"Master Courses",y:"a"}}],["/hobby/device/display.html",{loader:()=>l(()=>import("./display.html-9KXHton9.js"),__vite__mapDeps([43,1])),meta:{d:1732244795e3,e:`
<ul>
<li>镜面屏</li>
<li>雾面屏</li>
</ul>
<p>镜面+抗反射涂层</p>
<p>镜面雾面应该取决于你使用环境光照环境<br>
灯光柔和没有反光的地儿镜面舒服，室外的话除非你屏幕亮度超模，不然肯定雾面舒服</p>
<p>面板</p>
<ul>
<li>Fast IPS</li>
<li>HVA</li>
<li>VA</li>
<li>TN</li>
<li>OLED</li>
<li>MiniLED</li>
</ul>
<p>参数</p>
<ul>
<li>刷新率</li>
<li>原生色域 P3覆盖</li>
<li>sRGB色准</li>
<li>峰值亮度</li>
<li>对比度</li>
<li>可视角度</li>
<li>响应速度 MPRT动态</li>
</ul>`,r:{minutes:.39,words:118},t:"Display",y:"a"}}],["/hobby/device/input.html",{loader:()=>l(()=>import("./input.html-CRZUWXKD.js"),__vite__mapDeps([44,1])),meta:{d:1732244795e3,e:`
<h3>连接方式</h3>
<ol>
<li><strong>有线模式</strong>：使用USB线连接，提供稳定的传输速度，没有延迟，非常适合游戏和需要精准操作的场景。</li>
<li><strong>2.4GHz无线模式</strong>：通过2.4GHz的接收器连接，延迟低，传输稳定。适合对响应速度要求高但希望摆脱线缆的场景，尤其适合游戏玩家。</li>
<li><strong>蓝牙模式</strong>：通过蓝牙连接，适合日常办公和多设备切换，耗电较少，但延迟可能比2.4GHz稍高。</li>
</ol>
<p>三模：适合在不同的设备上快速切换，比如一台电脑和一台平板或手机。</p>`,r:{minutes:6.54,words:1961},t:"Input Devices",y:"a"}}],["/hobby/device/laptop.html",{loader:()=>l(()=>import("./laptop.html-BVijs9p2.js"),__vite__mapDeps([45,1])),meta:{d:1732244795e3,e:`
<h2>Gaming Laptop</h2>
<p>R9-7945hx&gt;&gt;&gt;&gt;i9-xxxx</p>
<hr>
<p>暗影精灵</p>
<hr>
<p>机械革命翼龙15pro</p>
<p>R7-8845h(7840h+), RTX4060</p>
<p>19.9mm 2kg</p>
<p>15.3in</p>
<p>续航：核显12h</p>
<hr>
<p>拯救者r9000p</p>
<p>R9-7945hx, RTX4060</p>
<p>2.5kg</p>
<p>16in 2.5k 244hz 500nit</p>
<p>续航：核显4h，直连1.5h</p>
<hr>`,r:{minutes:.25,words:76},t:"Laptop",y:"a"}}],["/hobby/device/protocal.html",{loader:()=>l(()=>import("./protocal.html-BXJXaTSr.js"),__vite__mapDeps([46,1])),meta:{d:1731131409e3,e:`
<p>THUNDERBOLT 2</p>
<p>ETHERNET</p>
<p>POWER CORD</p>
<p>HDMI</p>
<p>VGA: 2480 70hz</p>
<p>DP: 热拔插，免专利费</p>
<p>显示流压缩技术</p>
<p>垂直同步</p>
<p>VRR：FreeSync，G-Sync：与游戏帧数同步，硬件上避免画面撕裂</p>
<p>USB-C DP</p>
<p>DP</p>
<hr>
<p>USB 2, 支持 Type C</p>
<p>USB 3, 支持 Type C</p>
<p>USB 4, 都是 Type C，不用交授权费，更加灵活的THB 3</p>`,r:{minutes:4.66,words:1398},t:"Protocal",y:"a"}}],["/hobby/fitness/",{loader:()=>l(()=>import("./index.html-CledlhHo.js"),__vite__mapDeps([47,1])),meta:{d:1736210466e3,e:`
<p>训练金字塔</p>
<ul>
<li>专项：专项运动+专项体能</li>
<li>综合体能
<ul>
<li>6大动作系</li>
<li>力量、速度、耐力、灵敏、柔韧</li>
</ul>
</li>
<li>基础力量
<ul>
<li>基础力量训练</li>
<li>6大动作模式的衍生</li>
</ul>
</li>
<li>基础动作模式
<ul>
<li>6大基础动作模式</li>
</ul>
</li>
<li>关节功能+核心控制
<ul>
<li>关节灵活</li>
<li>核心稳定</li>
</ul>
</li>
</ul>
<p>从有氧开始，增强心肺，减少低血糖出现频率</p>`,r:{minutes:5.27,words:1581},t:"健身",y:"a"}}],["/hobby/fitness/disease.html",{loader:()=>l(()=>import("./disease.html-Ew4lT7_h.js"),__vite__mapDeps([48,1])),meta:{d:1736210466e3,e:`<p>感冒</p>
<ul>
<li>病毒性：嗓子不疼，一周自愈，吃药缓解症状</li>
<li>细菌性：嗓子痛</li>
</ul>
<p><img src="https://www.familiesfightingflu.org/wp-content/uploads/Cold-vs-flu_graphic_FamiliesFightingFlu-2-300x181.jpg" alt="Cold vs. Flu" loading="lazy"></p>
`,r:{minutes:.12,words:35},t:"",y:"a"}}],["/hobby/fitness/%E8%AE%AD%E7%BB%83%E8%AE%A1%E5%88%92.html",{loader:()=>l(()=>import("./训练计划.html-C0eqaxjE.js"),__vite__mapDeps([49,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/hobby/minecraft/",{loader:()=>l(()=>import("./index.html-BKUBcIGF.js"),__vite__mapDeps([50,1])),meta:{d:1703688112e3,e:`
<ul>
<li><a href="https://minecraft.fandom.com" target="_blank" rel="noopener noreferrer">MC Wiki Fandom</a></li>
<li><a href="https://minecraft.wiki" target="_blank" rel="noopener noreferrer">MC Wiki</a></li>
<li><a href="https://www.chunkbase.com" target="_blank" rel="noopener noreferrer">Chunk Base</a></li>
<li><a href="https://bedrocktweaks.net" target="_blank" rel="noopener noreferrer">Bedrock Tweaks</a></li>
</ul>`,r:{minutes:.06,words:18},t:"Minecraft",y:"a"}}],["/hobby/minecraft/brewing.html",{loader:()=>l(()=>import("./brewing.html-CCiRdjcF.js"),__vite__mapDeps([51,1])),meta:{d:1703688112e3,e:`
<p>改性剂是用来改变药水属性或是使药水效果相反的材料。</p>
<p>发酵蛛眼是唯一可以直接酿造成有效药水的改性剂。</p>
<table>
<thead>
<tr>
<th style="text-align:center">名称</th>
<th style="text-align:left">加入水瓶时得到</th>
<th style="text-align:center">改性剂效果</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><a href="https://minecraft.fandom.com/zh/wiki/%E4%B8%8B%E7%95%8C%E7%96%A3" target="_blank" rel="noopener noreferrer">下界疣</a></td>
<td style="text-align:left">粗制的药水</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://minecraft.fandom.com/zh/wiki/%E8%8D%A7%E7%9F%B3%E7%B2%89" target="_blank" rel="noopener noreferrer">荧石粉</a></td>
<td style="text-align:left">浓稠的药水</td>
<td style="text-align:center">提升效果等级</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://minecraft.fandom.com/zh/wiki/%E7%BA%A2%E7%9F%B3%E7%B2%89" target="_blank" rel="noopener noreferrer">红石粉</a></td>
<td style="text-align:left">平凡的药水</td>
<td style="text-align:center">延长持续时间</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://minecraft.fandom.com/zh/wiki/%E5%8F%91%E9%85%B5%E8%9B%9B%E7%9C%BC" target="_blank" rel="noopener noreferrer">发酵蛛眼</a></td>
<td style="text-align:left">虚弱药水</td>
<td style="text-align:center">腐化效果（具体用法见下文）</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://minecraft.fandom.com/zh/wiki/%E7%81%AB%E8%8D%AF" target="_blank" rel="noopener noreferrer">火药</a></td>
<td style="text-align:left">喷溅水瓶</td>
<td style="text-align:center">将普通药水变为喷溅药水</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://minecraft.fandom.com/zh/wiki/%E9%BE%99%E6%81%AF" target="_blank" rel="noopener noreferrer">龙息</a></td>
<td style="text-align:left">滞留水瓶  （加入喷溅水瓶时）</td>
<td style="text-align:center">将喷溅药水变为滞留药水</td>
</tr>
</tbody>
</table>`,r:{minutes:.65,words:194},t:"炼药",y:"a"}}],["/hobby/minecraft/commute.html",{loader:()=>l(()=>import("./commute.html-Bz4dk4V_.js"),__vite__mapDeps([52,1])),meta:{d:1703688112e3,e:`
<ul>
<li>地狱交通</li>
<li>冰/浮冰/蓝冰</li>
</ul>
<p>坐标换算</p>
<p>地狱坐标等于主世界坐标除以8</p>
<hr>
<p>简短点说：</p>
<p>1.地狱坐标对应现实坐标的比例是1：8</p>
<p>一般仅计算X和Z轴值，Y轴值见下条</p>
<p>2.地狱交通推荐建设在Y轴坐标110左右（如115）</p>
<p>现实对应地狱门Y轴坐标随意</p>
<p>3.地狱门推荐在地狱和现实分别自己搭建，即不通过系统自动生成，以确保坐标无偏差</p>
<hr>
<p>地狱门串门问题解决：</p>
<p>可以做，不过你的地狱门位置会变。</p>
<p>首先从你家里的门记下坐标（x、z就可以了）然后各除以8，地狱去到这个坐标开一扇门，把其他除这两扇门以外附近所有门都暂时关掉，然后再走一遍这两扇门就可以把这两扇连起来。</p>`,r:{minutes:3,words:899},t:"交通",y:"a"}}],["/hobby/minecraft/farm.html",{loader:()=>l(()=>import("./farm.html-DcSE6QEz.js"),__vite__mapDeps([53,1])),meta:{d:1703688112e3,e:`
<p>AFK: Away from keyboard</p>
<ul>
<li>铁傀儡</li>
<li>猪人</li>
<li>甘蔗/竹子</li>
<li>西瓜/南瓜</li>
<li>岩浆</li>
<li>冰</li>
<li>羊毛</li>
<li>烤鸡</li>
<li>烤牛</li>
<li>末影人</li>
<li>raid 掠夺者</li>
</ul>
<p>复制物品：<a href="https://www.youtube.com/watch?v=6tI3_kkg24w" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=6tI3_kkg24w</a></p>`,r:{minutes:.19,words:56},t:"自动农场",y:"a"}}],["/hobby/minecraft/mine.html",{loader:()=>l(()=>import("./mine.html-DkduQKZs.js"),__vite__mapDeps([54,1])),meta:{d:1703688112e3,e:`
<p>挖坑教程</p>
<p><a href="https://www.youtube.com/watch?v=0fAlugHPFf0" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=0fAlugHPFf0</a></p>
`,r:{minutes:.03,words:10},t:"矿物",y:"a"}}],["/hobby/minecraft/pet.html",{loader:()=>l(()=>import("./pet.html-D_XRd5aW.js"),__vite__mapDeps([55,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/hobby/minecraft/redstone.html",{loader:()=>l(()=>import("./redstone.html-DGxaZHwn.js"),__vite__mapDeps([56,1])),meta:{d:1703688112e3,e:`
<p>强充能</p>
<p>弱充能</p>
<h2>记忆电路</h2>
<ul>
<li>锁存器 Latch</li>
<li>触发器 Flip-flop</li>
</ul>
<p>相当有效的一位（1bit）存储单元</p>
<h3>T触发器</h3>
<p>点-&gt;持续</p>
`,r:{minutes:.13,words:40},t:"红石",y:"a"}}],["/hobby/minecraft/villager.html",{loader:()=>l(()=>import("./villager.html-DgfGOyXQ.js"),__vite__mapDeps([57,1])),meta:{d:1703688112e3,e:`
<p><a href="https://www.youtube.com/watch?v=2WfZ9ZdIEtU" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=2WfZ9ZdIEtU</a></p>
<p>13职业</p>
<p>解锁物品：<a href="https://mcpedl.com/trade-unlocker/" target="_blank" rel="noopener noreferrer">https://mcpedl.com/trade-unlocker/</a></p>`,r:{minutes:.11,words:33},t:"村民",y:"a"}}],["/hobby/palworld/mod.html",{loader:()=>l(()=>import("./mod.html-DjTR3lQc.js"),__vite__mapDeps([58,1])),meta:{d:1736210466e3,e:`
<p><a href="https://www.nexusmods.com/palworld/mods/" target="_blank" rel="noopener noreferrer">N网MOD</a></p>
<p><a href="https://www.bilibili.com/video/BV1ViC6YXE4C/" target="_blank" rel="noopener noreferrer">整合包</a></p>
`,r:{minutes:.04,words:11},t:"MOD",y:"a"}}],["/se/app/",{loader:()=>l(()=>import("./index.html-B-qXWZF1.js"),__vite__mapDeps([59,1])),meta:{d:1736210466e3,e:`
<p>Native</p>
<ul>
<li>Android: Java/Kotlin</li>
<li>iOS/MacOS: Obj-C/Swift</li>
</ul>
<p>Multiplatform</p>
<ul>
<li>flutter</li>
<li>KMP(Kotlin Multi-Platform)</li>
<li>React Native</li>
</ul>
<p>Jetpack Compose Multiplatform</p>
<p>CMP</p>
`,r:{minutes:.06,words:19},t:"Application",y:"a"}}],["/se/design/",{loader:()=>l(()=>import("./index.html-DzbTi6Wf.js"),__vite__mapDeps([60,1])),meta:{d:1693269904e3,e:`
<p>Design Category</p>
<ul>
<li>Object-Oriented Design (OOD)</li>
<li>System Design (SD)</li>
</ul>
<p>Design Method</p>
<ul>
<li>Design Principles</li>
<li>Design Pattern</li>
</ul>
<h2>设计原则</h2>
<p>SOLID</p>
<ul>
<li>
<p>S – Single responsibility principle (SRP)</p>
<p>一个类应该有且只有一个去改变他的理由，这意味着一个类应该只有一项工作。</p>
</li>
<li>
<p>O – Open close principle (OCP)</p>
<p>对象或实体应该对扩展开放，对修改封闭 (Open to extension, close to modification)。</p>
</li>
<li>
<p>L – Liskov substitution principle (LSP)</p>
<p>任何一个子类或派生类应该可以替换它们的基类或父类</p>
</li>
<li>
<p>I – Interface segregation principle (ISP)</p>
<p>不应该强迫一个类实现它用不上的接口</p>
</li>
<li>
<p>D – Dependency inversion principle (DIP)</p>
<p>抽象不应该依赖于具体实现，具体实现应该依赖于抽象</p>
<p>High-level 的实体不应该依赖于 low-level 的实体</p>
</li>
</ul>`,r:{minutes:.61,words:182},t:"Design",y:"a"}}],["/se/lang/",{loader:()=>l(()=>import("./index.html-Cxo5JdPf.js"),__vite__mapDeps([61,1])),meta:{d:1732240892e3,e:`
<p>动态语言在<strong>运行时</strong>进行类型检查，而静态语言在<strong>编译时</strong>进行类型检查。</p>
<ul>
<li><strong>动态语言</strong>：Python、JavaScript、Ruby、PHP、Lua 等。</li>
<li><strong>静态语言</strong>：C、C++、Java、C#、Go、Rust、Swift、Kotlin、TypeScript、Haskell、Scala 等。</li>
</ul>
<hr>
<p>弱/强类型：会/不会发生隐式类型转换</p>
<ul>
<li>强类型：</li>
<li>弱类型：</li>
</ul>`,r:{minutes:2.89,words:868},t:"Programming Language",y:"a"}}],["/se/monitor/",{loader:()=>l(()=>import("./index.html-Pbtn_Ef5.js"),__vite__mapDeps([62,1])),meta:{d:1719451307e3,e:`
<p>OpenTelemetry</p>
`,r:{minutes:.01,words:2},t:"Monitoring",y:"a"}}],["/se/monitor/arthas.html",{loader:()=>l(()=>import("./arthas.html-BEfI2jqd.js"),__vite__mapDeps([63,1])),meta:{d:1703688112e3,e:`
<p><a href="https://juejin.cn/post/6844903998730797070" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/6844903998730797070</a></p>
<p><a href="https://juejin.cn/post/6949547018368860190" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/6949547018368860190</a></p>
<p><a href="https://juejin.cn/post/7291931708920512527" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7291931708920512527</a></p>`,r:{minutes:.03,words:9},t:"Arthas",y:"a"}}],["/se/monitor/grafana.html",{loader:()=>l(()=>import("./grafana.html-DLdp53At.js"),__vite__mapDeps([64,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/se/monitor/prometheus.html",{loader:()=>l(()=>import("./prometheus.html-DS47p5ie.js"),__vite__mapDeps([65,1])),meta:{d:1703688112e3,e:`
<p>sgm</p>
<p><a href="https://blog.csdn.net/itfly8/article/details/122711047" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/itfly8/article/details/122711047</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1368470" target="_blank" rel="noopener noreferrer">https://cloud.tencent.com/developer/article/1368470</a></p>`,r:{minutes:.03,words:8},t:"Prometheus",y:"a"}}],["/se/monitor/skywalking.html",{loader:()=>l(()=>import("./skywalking.html-BfLFNhuU.js"),__vite__mapDeps([66,1])),meta:{d:1715153702e3,e:`
<p>服务监控需要满足的三要素分别如下：</p>
<ul>
<li>日志监控</li>
<li>指标监控</li>
<li>请求链路追踪</li>
</ul>
<p>服务监控只要能满足这三个要素，基本就能实现我们想要的监控效果，我们来看看为什么服务监控需要满足这三要素。</p>
<p>分布式链路追踪</p>
`,r:{minutes:.29,words:87},t:"Skywalking",y:"a"}}],["/se/test/jmeter.html",{loader:()=>l(()=>import("./jmeter.html-DTP9C_as.js"),__vite__mapDeps([67,1])),meta:{d:1684318252e3,e:`
<p>JMeter 是一款开源的压力测试工具，可以用于测试 Web 应用程序、FTP 服务器、数据库等。以下是 JMeter 的一些常用功能和参数设置：</p>
<ol>
<li>
<p>线程组：线程组是 JMeter 中最基本的测试元素，用于模拟用户并发访问。可以设置线程数、循环次数、延迟时间等参数。</p>
</li>
<li>
<p>HTTP 请求：HTTP 请求用于模拟 HTTP 请求，可以设置请求方式、请求 URL、请求参数、请求头等参数。可以使用 JMeter 的参数化功能，将请求参数设置为变量，以便在测试过程中动态修改参数值。</p>
</li>
<li>
<p>断言：断言用于验证响应结果是否符合预期。可以设置响应代码、响应头、响应内容等参数，以便进行验证。</p>
</li>
<li>
<p>监听器：监听器用于收集测试结果，并以图表、表格等形式展示。可以设置响应时间、吞吐量、错误率等参数，以便进行分析。</p>
</li>
<li>
<p>配置元件：配置元件用于设置全局参数，例如代理服务器、Cookie 管理器、HTTP 头管理器等。可以在测试计划中共享这些参数，以便在多个测试元素中使用。</p>
</li>
<li>
<p>断点控制器：断点控制器用于暂停测试过程，以便进行调试。可以设置断点位置、断点条件等参数。</p>
</li>
<li>
<p>分布式测试：JMeter 支持分布式测试，可以将测试任务分配给多个 JMeter 客户端执行。可以设置主控节点、从节点、通信方式等参数。</p>
</li>
</ol>`,r:{minutes:1.62,words:486},t:"JMeter",y:"a"}}],["/se/tools/",{loader:()=>l(()=>import("./index.html-CcsuwA5H.js"),__vite__mapDeps([68,1])),meta:{d:1670083932e3,e:`
<p>实用工具</p>
<p><a href="https://juejin.cn/post/7310412232613429257?utm_source=gold_browser_extension" target="_blank" rel="noopener noreferrer">fastjson</a></p>
`,r:{minutes:.03,words:10},t:"Tools",y:"a"}}],["/test/GRE/",{loader:()=>l(()=>import("./index.html-h6zz5u7M.js"),__vite__mapDeps([69,1])),meta:{d:1700646963e3,e:`
<h2>Overview</h2>
<p>目标分数</p>
<ul>
<li>320=153+167</li>
<li>325=155+170</li>
<li>330=160+170</li>
</ul>
<p>考试频率：365 天内最多５次，每次 GRE 考试间隔 21 天。转考须考试日 10 天前</p>
<p>出分时间：8-10 日</p>
<h3>分数构成</h3>
<ul>
<li>
<p>Verbal 170</p>
<ul>
<li>Blank 填空题</li>
<li>Reading 阅读题
<ul>
<li>逻辑单题</li>
<li>短阅读</li>
<li>中阅读</li>
</ul>
</li>
</ul>
</li>
<li>
<p>Quantitative 170</p>
<ul>
<li>
<p>Blank 填空题</p>
</li>
<li>
<p>Select 选择题</p>
<ul>
<li>
<p>图表题</p>
</li>
<li>
<p>比较题</p>
</li>
<li>
<p>其他题</p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>Analytical Writing 6</p>
<ul>
<li>issue</li>
</ul>
</li>
</ul>`,r:{minutes:1.18,words:354},t:"GRE",y:"a"}}],["/test/TOEFL/",{loader:()=>l(()=>import("./index.html-CY2GeI4r.js"),__vite__mapDeps([70,1])),meta:{d:1670066498e3,e:`
<p>托福=英语语言能力+考试</p>
<p>R + L + S + W</p>
<h2>模板</h2>
<h3>写作</h3>
<h4>综合题</h4>
<p>The author in the reading holds that, while the professor in the lecture expresses an opposite opinion.</p>
<p>To begin with, the author claims that . However, the lecturer refutes that</p>
<p>Moreover, the author believes that. On the contrary, the lecturer rebuts</p>`,r:{minutes:4.13,words:1239},t:"TOEFL",y:"a"}}],["/test/basics/grammar.html",{loader:()=>l(()=>import("./grammar.html-CRhDo1qT.js"),__vite__mapDeps([71,1])),meta:{d:1719451307e3,e:`
<p>已经存在的形容词：名词前面</p>
<p>人为创造的形容词：名词后面</p>
<p>左二右六：名词左边2种成分、名词右边6种成分</p>
<p>左2</p>
<ul>
<li>
<p>限定词</p>
<p>冠词、形容词性代词、量词</p>
</li>
<li>
<p>形容词</p>
</li>
</ul>
<p>右6</p>
<ul>
<li>
<p>不分介定形同：即人为创造形容词</p>
</li>
<li>
<p>分析句子主干，就是把两类形容词删掉去分析</p>
</li>
</ul>
`,r:{minutes:.33,words:98},t:"Grammar",y:"a"}}],["/test/basics/vocabulary.html",{loader:()=>l(()=>import("./vocabulary.html-CSGKRFkZ.js"),__vite__mapDeps([72,1])),meta:{d:1700646963e3,e:`
<p>单词</p>
<p><strong>合成（Compounding）</strong></p>
<ul>
<li>合成是将两个或多个单词结合起来，形成一个新词。</li>
<li>例如：“sunflower”（向日葵）由“sun”（太阳）和“flower”（花）合成。</li>
</ul>
<p><strong>派生（Derivation）</strong></p>
<ul>
<li>派生是通过添加前缀和/或后缀到基本词形成新词的过程。</li>
<li>这不仅改变词的意义，也可能改变词性。</li>
<li>例如：“happiness”来自“happy”，“unhappiness”则进一步加了否定前缀。</li>
</ul>`,r:{minutes:4.03,words:1208},t:"Vocabulary",y:"a"}}],["/zh/demo/",{loader:()=>l(()=>import("./index.html-B9Ug7fQ-.js"),__vite__mapDeps([73,1])),meta:{d:1669430927e3,c:["使用指南"],e:`<h2>目录</h2>
<ul>
<li>
<p><a href="/blog/zh/demo/markdown.html" target="_blank">Markdown 展示</a></p>
</li>
<li>
<p><a href="/blog/zh/demo/page.html" target="_blank">页面展示</a></p>
</li>
<li>
<p><a href="/blog/zh/demo/disable.html" target="_blank">禁用展示</a></p>
</li>
<li>
<p><a href="/blog/zh/demo/encrypt.html" target="_blank">加密展示</a></p>
</li>
</ul>`,r:{minutes:.13,words:40},t:"主要功能与配置演示",i:"discover",y:"a"}}],["/zh/demo/disable.html",{loader:()=>l(()=>import("./disable.html-D8Dew4lL.js"),__vite__mapDeps([74,1])),meta:{d:1669430927e3,c:["使用指南"],g:["禁用"],e:`<p>你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。</p>
`,r:{minutes:.43,words:128},t:"布局与功能禁用",i:"config",O:3,y:"a"}}],["/zh/demo/encrypt.html",{loader:()=>l(()=>import("./encrypt.html-CluLY5Op.js"),__vite__mapDeps([75,1])),meta:{d:1669430927e3,c:["使用指南"],g:["文章加密"],n:!0,r:{minutes:.52,words:156},t:"密码加密的文章",i:"lock",y:"a"}}],["/zh/demo/markdown.html",{loader:()=>l(()=>import("./markdown.html-5OSnfeFs.js"),__vite__mapDeps([76,1])),meta:{d:1669430927e3,c:["使用指南"],g:["Markdown"],e:`<p>VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。</p>
<p>你应该创建和编写 Markdown 文件，以便 VuePress 可以根据文件结构将它们转换为不同的页面。</p>
`,r:{minutes:3.6,words:1081},t:"Markdown 展示",i:"markdown",O:2,y:"a"}}],["/zh/demo/page.html",{loader:()=>l(()=>import("./page.html-CzCaGsLd.js"),__vite__mapDeps([77,1])),meta:{a:"Ms.Hope",d:15778368e5,l:"2020年1月1日",c:["使用指南"],g:["页面配置","使用指南"],u:!0,e:`<p><code>more</code> 注释之前的内容被视为文章摘要。</p>
`,r:{minutes:1.46,words:437},t:"页面配置",i:"page",O:1,y:"a"}}],["/zh/posts/cherry.html",{loader:()=>l(()=>import("./cherry.html-COtMd3if.js"),__vite__mapDeps([78,1])),meta:{d:16416864e5,l:"2022年1月9日",c:["樱桃"],g:["红","小","圆"],e:`
<h2>标题 2</h2>
<p>这里是内容。</p>
<h3>标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.1,words:31},t:"樱桃",i:"edit",y:"a"}}],["/zh/posts/dragonfruit.html",{loader:()=>l(()=>import("./dragonfruit.html-C0DJ-w9D.js"),__vite__mapDeps([79,1])),meta:{d:16417728e5,l:"2022年1月10日",c:["火龙果","水果"],g:["红","大"],e:`
<h2>标题 2</h2>
<p>这里是内容。</p>
<h3>标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.11,words:34},t:"火龙果",i:"edit",y:"a"}}],["/zh/posts/strawberry.html",{loader:()=>l(()=>import("./strawberry.html-bFDcn0D1.js"),__vite__mapDeps([80,1])),meta:{d:16418592e5,l:"2022年1月11日",c:["水果","草莓"],g:["红","小"],e:`
<h2>标题 2</h2>
<p>这里是内容。</p>
<h3>标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.11,words:32},t:"草莓",i:"edit",y:"a"}}],["/zh/posts/tomato.html",{loader:()=>l(()=>import("./tomato.html-CKMUjpmp.js"),__vite__mapDeps([81,1])),meta:{d:16419456e5,l:"2022年1月12日",c:["蔬菜"],g:["红","圆"],u:!0,e:`
<h2>标题 2</h2>
<p>这里是内容。</p>
<h3>标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.11,words:34},t:"番茄",i:"edit",y:"a"}}],["/ai/nn/gnn/",{loader:()=>l(()=>import("./index.html-CPjt0Ul-.js"),__vite__mapDeps([82,1])),meta:{d:1704683174e3,e:`
<p>MPNN</p>
<p>Random-walk</p>
`,r:{minutes:.01,words:4},t:"GNN",y:"a"}}],["/algo/course/jz/1.%20%E7%9C%9F%E5%AE%9E%E6%A1%88%E4%BE%8B.html",{loader:()=>l(()=>import("./1. 真实案例.html-lpP4Cs24.js"),__vite__mapDeps([83,1])),meta:{d:1732244737e3,e:`
<h3>模式串匹配</h3>
<p>Python有for else写法，如果break没有执行，就会执行else</p>
<p>字符串匹配，暴力n2</p>
<p>kmp On，但是难背，而且使用场景只有这一个，不建议</p>
<p>优化的话：</p>
<ul>
<li>
<p>可以用robin karp（原理是hash code）</p>
</li>
<li>
<p>hash函数，进行进制转换，(a*31^n+xxxxx+)%10000</p>
</li>
</ul>
<p>o1</p>
<p>循环一般不用超过三层，实在要超就封装子函数</p>
<p>写得越深bug越多，因为更难懂了</p>`,r:{minutes:1.07,words:321},t:"真实案例",y:"a"}}],["/algo/course/jz/2.%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2.html",{loader:()=>l(()=>import("./2. 最长回文子串.html-BOAQlY27.js"),__vite__mapDeps([84,1])),meta:{d:1732244737e3,e:`
<p>subsequence 子序列（非连续字符）：O(2^n)</p>
<p>substring 子串（非连续字符）：O(n^2)</p>
<p>回文子串</p>
<p>暴力</p>
<p>for 起点 O(n)</p>
<p>​	for 终点 O(n)</p>
<p>​		判断是否回文 O(n)</p>
<p>优化：枚举长度、枚举起点，判断回文</p>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-07-08 10.53.11.png" alt="截屏2022-07-08 10.53.11" loading="lazy"></p>`,r:{minutes:2.38,words:714},t:"最长回文子串",y:"a"}}],["/algo/course/jz/3.%20%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F.html",{loader:()=>l(()=>import("./3. 代码质量.html-C-tCxxYH.js"),__vite__mapDeps([85,1])),meta:{d:1732244737e3,e:`
<p>优化的逻辑：</p>
<ol>
<li>先想暴力的方法</li>
<li>看哪里有地方是浪费的</li>
</ol>
<h3>优秀的 Coding Quality</h3>
<ol>
<li>
<p>bug free</p>
</li>
<li>
<p>边界检测和异常处理</p>
</li>
<li>
<p>代码风格：命名、空格、空行</p>
<ol>
<li>
<p>每个逻辑 Part 之间一个空行划分</p>
<p>如异常判断、主体逻辑、结果返回，这些part之间一个分行</p>
</li>
<li>
<p>变量命名采用全称：1-2个单词，小驼峰</p>
</li>
<li>
<p>避免重复代码（泄露没有工程经验）</p>
</li>
<li>
<p>用不到的变量用_来命名（python、js和go注意）</p>
</li>
<li>
<p>尽可能避免全局变量</p>
</li>
<li>
<p>缩进：java是4个</p>
</li>
<li>
<p>空格</p>
<ol>
<li>运算符的前后要有</li>
<li>逗号、分号后面有</li>
</ol>
</li>
</ol>
</li>
</ol>`,r:{minutes:1.76,words:527},t:"代码质量",y:"a"}}],["/algo/course/jz/31.%20%E4%BD%8E%E4%BA%8EOn%E7%9A%84%E7%AE%97%E6%B3%95.html",{loader:()=>l(()=>import("./31. 低于On的算法.html-DWN5HluC.js"),__vite__mapDeps([86,1])),meta:{d:1732244737e3,e:`
<p>快速幂Ologn</p>
<p>辗转相除法 Ologn</p>
<p>分解质因数 O√n （对称，成双成对出现）</p>
<p>分块检索法 O√n （可以找到次优解，最优解可能是logn的算法）</p>
<h3>快速幂</h3>
<p>取模运算：+-*满足</p>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-08-10 16.34.51.png" alt="截屏2022-08-10 16.34.51" loading="lazy"></p>
<p>递归的写法，最不容易写错</p>`,r:{minutes:.95,words:284},t:"低于On的算法",y:"a"}}],["/algo/course/jz/39.%20%E5%A4%96%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E7%BB%84%E5%90%88%E5%B9%B6%E7%B1%BB.html",{loader:()=>l(()=>import("./39. 外排序算法与数组合并类.html-D4ha1x17.js"),__vite__mapDeps([87,1])),meta:{d:1734453484e3,e:`
<h2>数组合并类问题</h2>
<p>merge two sorted array</p>
<p>逆向双指针</p>
<p>merge k sorted array</p>
<ul>
<li>堆 nlogk</li>
<li>分治 nlogk，相邻的两两合并</li>
</ul>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> mergeSort</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> j</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] temp) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> j) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> mid </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> j) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    mergeSort</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> mid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> temp)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    mergeSort</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> mid </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> j</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> temp)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    merge</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> mid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> j</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> temp)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.29,words:88},t:"外排序算法与数组合并类问题",y:"a"}}],["/algo/course/jz/4.%20%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%90%86%E8%AE%BA.html",{loader:()=>l(()=>import("./4. 复杂度理论.html-CoVqwWoF.js"),__vite__mapDeps([88,1])),meta:{d:1734453484e3,e:`
<p>四个复杂度</p>
<ol>
<li>时间复杂度 - 核心考察点</li>
<li>空间复杂度 - 次要考察点</li>
<li>编程复杂度 - 能看得懂</li>
<li>思维复杂度 - 能想得出</li>
</ol>
<p>双指针线性复杂度</p>
<p>但有的时候，很明显的小数据的情况下，可以略微损失一点时间复杂度来降低编程复杂度，提高可读性</p>
<h2>时间复杂度</h2>
<p>只考虑最高项，不考虑常数项和系数项</p>
<p>O(2<sup>N+N</sup>2) = O(2^N)</p>
<p>O(N<sup>3+1000N</sup>2) = O(N^3)</p>
`,r:{minutes:1.15,words:345},t:"复杂度理论",y:"a"}}],["/algo/course/jz/5.%20%E6%8E%92%E5%BA%8F.html",{loader:()=>l(()=>import("./5. 排序.html-CMZVD39_.js"),__vite__mapDeps([89,1])),meta:{d:1732244737e3,e:`
<h3>快速排序</h3>
<p>partition算法</p>
<p>分治算法：整体有序再局部有序</p>
<p>1,1,1,3<br>
1  -     1<br>
+  - +</p>
<p>要点解析</p>
<ol>
<li>
<p>取pivot策略：经验下选择中点是最好的（很少能构造出让他退化成n2的数据）</p>
</li>
<li>
<p>中心点只能是严格大或严格小才++--，等于的时候要交换，不然的话如果是全部相等的序列每次都不变，左指针走到最右侧，右指针原地不动，会造成无限递归。</p>
</li>
<li>
<p>必须是left &lt;= right，不然会无限递归，而且要防止左右有交集</p>
</li>
</ol>`,r:{minutes:2.4,words:719},t:"排序",y:"a"}}],["/algo/course/jz/",{loader:()=>l(()=>import("./index.html-C01kLF8l.js"),__vite__mapDeps([90,1])),meta:{d:1732244737e3,e:`
<p>特殊条件：</p>
<ul>
<li>
<p>有序</p>
<ul>
<li>二分法</li>
<li>双指针</li>
</ul>
</li>
<li>
<p>在一个长度为 n 的数组 nums 里的所有数字都在 0 ~ n-1 的范围内</p>
<p>原地交换（哈希映射）</p>
</li>
<li>
<p>子串/子数组</p>
<ul>
<li>滑动窗口</li>
<li>区间型动态规划</li>
<li>前缀和/差分数组</li>
</ul>
</li>
<li>
<p>子序列</p>
</li>
</ul>
<p>面试</p>
<ul>
<li>系统设计 System Design/Architechture Design 宏观设计</li>
<li>面向对象设计 OOD 微观设计</li>
<li>行为面试 Behavior Question</li>
<li>简历面试 Experience Interview</li>
<li>算法面试 Coding</li>
</ul>`,r:{minutes:2.08,words:624},t:"算法总结",y:"a"}}],["/algo/faq/big-data/",{loader:()=>l(()=>import("./index.html-C9oFhp3u.js"),__vite__mapDeps([91,1])),meta:{d:1732244737e3,e:`
<p><a href="https://www.jiuzhang.com/course/56" target="_blank" rel="noopener noreferrer">https://www.jiuzhang.com/course/56</a></p>
<p>大文件处理问题</p>
<p><a href="https://wizardforcel.gitbooks.io/the-art-of-programming-by-july/content/06.02.html" target="_blank" rel="noopener noreferrer">方法总结</a></p>
`,r:{minutes:2.36,words:709},t:"海量数据处理",y:"a"}}],["/algo/faq/big-data/bitmap.html",{loader:()=>l(()=>import("./bitmap.html-e9rJpn3-.js"),__vite__mapDeps([92,1])),meta:{d:1732244737e3,e:`
<p>对于这种大数据量去重的场景，我们可以考虑使用位图(Bitmap)。位图可以在不占用太多内存的前提下，解决海量数据的存在性问题，进而实现去重。</p>
<p>Bitmap是一种用于存储二进制数据的数据结构。简单来说，Bitmap就是使用二进制位来表示某个元素是否存在的数组。每一位只有两种状态，可以方便地用0和1来表示存在与不存在。</p>
<p>使用Bitmap的话，一个数字只需要占用1个bit。</p>
<p>Bitmap的常见应用场景如下：</p>
<ol>
<li>去重：如果需要对一个大的数据集进行去重操作，可以使用Bloom Filter来记录每个元素是否出现过。比如爬给定网址的时候对已经爬取过的URL去重、对巨量的QQ号/订单号去重。</li>
<li>数据统计：Bitmap可以用来记录某些特定事件发生的情况，例如某个用户是否登录、某个用户是否点赞过某个视频等。</li>
<li>布隆过滤器：布隆过滤器是一种基于Bitmap的数据结构，主要用于判断一个元素是否存在于一个大的集合中。相遇Bitmap,占用的空间更少，但其结果不一定是完全准确的。</li>
</ol>`,r:{minutes:1.14,words:343},t:"Bitmap",y:"a"}}],["/algo/faq/big-data/bloomfilter.html",{loader:()=>l(()=>import("./bloomfilter.html-BgYD4c8n.js"),__vite__mapDeps([93,1])),meta:{d:1732244737e3,e:`
<ul>
<li>标准布隆过滤器 Standard Bloom Filter</li>
<li>计数布隆过滤器 Counting Bloom Filter</li>
</ul>
<p>如果我们想要进一步节省空间，并且容许较小的误差的话，还可以使用布隆过滤器(B引oom Filter)进一步优化。布隆过滤器就是基于Bitmap实现的，只是多加了哈希函数映射这一步。</p>
<p>Bloom Filter是一个叫做Bloom的老哥于1970年提出的。我们可以把它看作由Bitmap和一系列随机映射函数（哈希函数）两部分组成的数据结构。相比于传统的Bitmap，Bloom Filter占用的空间更少，但其结果不一定是完全准确的。bloomfilter说不存在则一定不存在，说存在时不一定存在。</p>`,r:{minutes:5.23,words:1569},t:"布隆过滤器",y:"a"}}],["/algo/faq/big-data/mapreduce.html",{loader:()=>l(()=>import("./mapreduce.html-CttPFWL7.js"),__vite__mapDeps([94,1])),meta:{d:1732244737e3,e:`
<p>那这样的Map reduce系统有什么好处呢？</p>
<p>其实Map Reduce 并没有结余实际上的计算时间总和，但是如果你现在有很多的计算资源（很多台机器），你可以通过 Map Reduce 的框架利用多台机器同时计算，来优化性能进行提速。Map Reduce是一套通用的分布式计算框架。这样，对于很多类似的问题，工程师并不需要每次都去自己构思如何使用多台机器优化计算的算法，只需要套用这个通用框架，就可以快速的解决问题。</p>
<p>（比如：<a href="http://vividfree.github.io/%E5%A4%A7%E8%A7%84%E6%A8%A1%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/2015/11/14/large-scale-matrix-multiplication-using-mapreduce" target="_blank" rel="noopener noreferrer">矩阵分解问题</a>，<a href="https://blog.csdn.net/m53931422/article/details/41745175" target="_blank" rel="noopener noreferrer">Page Rank搜索排序算法</a>）</p>`,r:{minutes:6.28,words:1883},t:"Map Reduce",y:"a"}}],["/algo/faq/big-data/topk.html",{loader:()=>l(()=>import("./topk.html-BlWd0wz2.js"),__vite__mapDeps([95,1])),meta:{d:1732244737e3,e:`
<p>下一章，我们就从海量数据处理类问题中，最最高频的一类题：Top K Frequent Elements 开始，逐步为大家揭开海量数据处理类问题的神秘面纱，让你面试不再虚！</p>
<ul>
<li>问题分析</li>
<li>最高频K 项的离线算法</li>
<li>标准离线算法的提速</li>
<li>标准离线算法的空间优化</li>
<li>最高频 K 项的在线算法</li>
<li>标准在线算法的空间优化</li>
<li>相关面试题
<ul>
<li>最近7天的热门歌曲</li>
<li>访问 Baidu 次数最多的 IP</li>
</ul>
</li>
</ul>
<p>离线算法，而非线上用户的在线任务</p>`,r:{minutes:.51,words:154},t:"Top K",y:"a"}}],["/algo/faq/big-data/%E5%88%86%E8%80%8C%E6%B2%BB%E4%B9%8B.html",{loader:()=>l(()=>import("./分而治之.html-zeY2nxX0.js"),__vite__mapDeps([96,1])),meta:{d:1732244737e3,e:`
<p>对于海量数据而言，由于无法一次性装进内存处理，导致我们不得不把海量的数据通过hash映射分割成相应的小块数据，然后再针对各个小块数据通过hash_map进行统计或其它操作。</p>
<p>那什么是hash映射呢？简单来说，就是为了便于计算机在有限的内存中处理big数据，我们通过一种映射散列的方式让数据均匀分布在对应的内存位置(如大数据通过取余的方式映射成小数存放在内存中，或大文件映射成多个小文件)，而这个映射散列方式便是我们通常所说的hash函数，设计的好的hash函数能让数据均匀分布而减少冲突。</p>
<p>有一个1G大小的一个文件，里面每一行是一个词，词的大小不超过16字节，内存限制大小是1M。返回频数最高的100个词</p>`,r:{minutes:1.6,words:481},t:"分而治之",y:"a"}}],["/algo/faq/big-data/%E5%A4%96%E6%8E%92%E5%BA%8F.html",{loader:()=>l(()=>import("./外排序.html-C5utiAJz.js"),__vite__mapDeps([97,1])),meta:{d:1732244737e3,e:`
<p>外排序算法</p>
<p>External Sort 外部排序</p>
<ul>
<li>外排序算法的基本步骤</li>
<li>相关面试题</li>
</ul>
<hr>
<p>外排序是指数据存放在外存中，数据排序时涉及<strong>内、外存数据交换</strong>的排序方法。</p>
<p>存储在外存上的数据以文件为基本单位，由文件系统进行读写操作，读写操作的基本单位为物理块</p>
<ol>
<li>
<p>生成若干初始归并段（顺串）：这一过程也称为文件预处理。一种常规的方法如下：</p>
<ol>
<li>
<p>把含有n个记录的文件，按内存大小w分成若干长度为w的子文件（归并段）；</p>
</li>
<li>
<p>分别将各子文件（归并段）调入内存，采用有效的内排序方法排序后送回外存。</p>
<p>产生m=[n/w]个初始归并段。</p>
</li>
</ol>
<p>此时产生的若干子文件称为顺串</p>
</li>
</ol>`,r:{minutes:2.54,words:763},t:"External Sort",y:"a"}}],["/algo/faq/big-data/%E6%A6%82%E7%8E%87%E7%B1%BB.html",{loader:()=>l(()=>import("./概率类.html-BKWoKr7m.js"),__vite__mapDeps([98,1])),meta:{d:1732244737e3,e:`
`,r:{minutes:.01,words:3},t:"概率类",y:"a"}}],["/algo/faq/big-data/%E7%9B%B8%E4%BC%BC%E6%A3%80%E6%B5%8B.html",{loader:()=>l(()=>import("./相似检测.html-B9Xa1Lt9.js"),__vite__mapDeps([99,1])),meta:{d:1732244737e3,e:`
<p>日前接到一个对名言警句这种短文本进行去重的小任务。</p>
<p>如何设计一个比较两篇文章相似度的算法？</p>
<p>来自于Google Moses Charikar发表的一篇论文“detecting near-duplicates for web crawling”中提出了simhash算法，专门用来解决亿万级别的网页的去重任务。</p>
<h2>Simhash</h2>
<p>simhash作为locality sensitive hash(LSH)（局部敏感哈希）的一种：</p>
<p>其主要思想是降维，将高维的特征向量映射成低维的特征向量，通过两个向量的Hamming Distance来确定文章是否重复或者高度近似。</p>`,r:{minutes:4.04,words:1213},t:"相似检测",y:"a"}}],["/algo/faq/big-data/%E8%B7%9D%E7%A6%BB.html",{loader:()=>l(()=>import("./距离.html-DLMjqPbn.js"),__vite__mapDeps([100,1])),meta:{d:1732244737e3,e:`
<p>二维坐标距离：</p>
<ul>
<li>曼哈顿距离</li>
<li>欧几里得距离</li>
<li>切比雪夫距离：xy 距离绝对值的最大值</li>
</ul>
<p>数（二进制串）的距离：汉明距离</p>
<p>字符串距离：编辑距离、类汉明距离</p>
<p>向量距离：cosin</p>
`,r:{minutes:.22,words:66},t:"距离",y:"a"}}],["/algo/faq/big-data/%E9%9D%A2%E7%BB%8F.html",{loader:()=>l(()=>import("./面经.html-CHoG9HBp.js"),__vite__mapDeps([101,1])),meta:{d:1732244737e3,e:`
<p>内存有限，怎么对 100 亿数据进行排序（大数据小内存排序问题）<br>
内存有限，如何在20亿个整数中找到出现次数最多的数<br>
内存有限，如何在40亿个非负整数中找到所有未出现的数<br>
内存有限，如何在100亿数据中找到中位数<br>
内存有限，如何在2亿个整数中找出不连续的最小数<br>
百万文件如何找到相似度最高的文件<br>
40亿个QQ号，限制1G内存，如何去重？</p>
<h2>大文件排序</h2>
<p>外排序</p>
<h2>大文件找众数</h2>
<p>摩尔投票法</p>
<h2>两个大文件求交集</h2>
<p>假设文件为a，b</p>
<ol>
<li>
<p>直接遍历法。一般人第一时间都是想遍历吧。读取每一行a，在b中遍历，这样时间复杂度为O（n^2），显然一般人都不能接受这个时间复杂度。</p>
</li>
<li>
<p>哈希 + 分片的思想。先把a文件hash，在遍历b文件，去判断是否存在。</p>
<p>时间复杂度降低为O（n） ，但是空间复杂度上来了，以空间换时间。</p>
<ol>
<li>将文件A中的hash(url)%100，生成100个小文件。</li>
<li>文件B中也hash(url)%100，生成100个小文件。</li>
<li>然后将A子文件001和B子文件001求交集，放入一个结果文件即可。</li>
</ol>
</li>
<li>
<p>布隆过滤器。但是布隆过滤器是有可能出现错误的，当时应该问问他是否可以出现小的错误？</p>
</li>
</ol>`,r:{minutes:5.11,words:1532},t:"面经",y:"a"}}],["/algo/faq/range/",{loader:()=>l(()=>import("./index.html-Cye-218y.js"),__vite__mapDeps([102,1])),meta:{d:1732244737e3,e:`
<p>针对不同的题目，我们有不同的方案可以选择（假设我们有一个数组）：</p>
<ol>
<li>数组不变，求区间和：「前缀和」、「树状数组」、「线段树」</li>
<li>多次修改某个单点，求区间和：「树状数组」、「线段树」</li>
<li>多次修改某个区间，输出最终结果：「差分」</li>
<li>多次修改某个区间，求区间和：「线段树」、「树状数组」（看修改区间范围大小）</li>
<li>多次将某个区间变成同一个数，求区间和：「线段树」、「树状数组」（看修改区间范围大小）</li>
</ol>
<p>「线段树」能解决的问题是最多的，那我们是不是无论什么情况都写「线段树」呢？</p>
`,r:{minutes:3.24,words:972},t:"区间 Range",y:"a"}}],["/algo/faq/range/prefix.html",{loader:()=>l(()=>import("./prefix.html-B-NoBuMW.js"),__vite__mapDeps([103,1])),meta:{d:1732244737e3,e:`
<ul>
<li>前缀和：可以On预处理，O1求区间和</li>
<li>前缀异或：可以On预处理，O1求区间异或</li>
</ul>
<p>（用来判断区间里面是否存在一个元素，可以前缀）</p>
<h2>1D</h2>
<p><code>preSum[i]</code>表示前i个元素的和</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] preSum </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    preSum[i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[i] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> preSum[i]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.48,words:143},t:"Prefix",y:"a"}}],["/algo/faq/range/rmq.html",{loader:()=>l(()=>import("./rmq.html-DhjztPGb.js"),__vite__mapDeps([104,1])),meta:{d:1732244737e3,e:`
<ul>
<li>ST</li>
<li>Binary Indexed Tree</li>
<li>Segment Tree</li>
</ul>
`,r:{minutes:.03,words:10},t:"Range Maximum Query (RMQ)",y:"a"}}],["/algo/faq/range/segment-tree.html",{loader:()=>l(()=>import("./segment-tree.html-BGvajoBY.js"),__vite__mapDeps([105,1])),meta:{d:1732244737e3,e:`
<p><a href="https://leetcode.cn/problems/longest-increasing-subsequence-ii/solutions/1816920/by-lfool-f6vs/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/longest-increasing-subsequence-ii/solutions/1816920/by-lfool-f6vs/</a></p>
<p>线段树</p>
<p>区间求和：前缀和/线段树</p>
<p>但是前缀和无法应对数组频繁修改：离线查询</p>`,r:{minutes:5.52,words:1657},t:"Segment Tree",y:"a"}}],["/algo/faq/range/suffix.html",{loader:()=>l(()=>import("./suffix.html-CiMh-YDV.js"),__vite__mapDeps([106,1])),meta:{d:1732387062e3,e:`
<h2>Suffix Sum</h2>
<h2>1D</h2>
<p><code>sufSum[i]</code>表示第i个元素到末尾的和</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] sufSum </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    sufSum[i] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[i] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> sufSum[i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.34,words:103},t:"Suffix",y:"a"}}],["/algo/faq/string/",{loader:()=>l(()=>import("./index.html-C2cyDCwK.js"),__vite__mapDeps([107,1])),meta:{d:1732244737e3,e:`
<p>Parentheses 括号</p>
<p>Palindrome 回文串</p>
`,r:{minutes:.03,words:8},t:"String",y:"a"}}],["/algo/faq/string/parentheses.html",{loader:()=>l(()=>import("./parentheses.html-oPr0uVcZ.js"),__vite__mapDeps([108,1])),meta:{d:1732244737e3,e:`
<p>parentheses 括号</p>
<p>栈</p>
`,r:{minutes:.02,words:5},t:"Parentheses",y:"a"}}],["/algo/framework/clues/",{loader:()=>l(()=>import("./index.html-D5Qm-946.js"),__vite__mapDeps([109,1])),meta:{d:1732244737e3,e:`
<p>分析线索主要有如下四类：</p>
<ul>
<li>递推</li>
<li>分类</li>
<li>有序</li>
<li>收敛</li>
</ul>
<h2>收敛</h2>
<h3>性质</h3>
<ol>
<li>单调：严格单调递增或单调递减</li>
<li>有界：有明确上界或者下界</li>
</ol>
<p>逐级递减，可选状态空间逐级减少</p>
<p>出现位置</p>
<ul>
<li>
<p>排列，每次能选的少一个</p>
</li>
<li>
<p>环图，设置单调收敛变量，保证每个节点只能被访问一次</p>
<p>如 hashmap 的 visited</p>
</li>
</ul>`,r:{minutes:.82,words:245},t:"线索",y:"a"}}],["/algo/framework/optimise/",{loader:()=>l(()=>import("./index.html-kFGKCovh.js"),__vite__mapDeps([110,1])),meta:{d:1732244737e3,e:`
<ul>
<li>
<p>减治：无效优化</p>
<p>避免无效计算：不可能出现答案的地方直接排除，即优化无效状态空间</p>
<p>有序（广义上的有序，符合一定的规律）的线性结构</p>
<p>（四大类型）eg. 二分法，快速选择</p>
</li>
<li>
<p>动归：重叠优化</p>
<p>避免重复计算：</p>
<p>DAG结构</p>
<p>复杂的动态规划可以把四种算法都串起来，因为临界节点的序列是线性的，且有的时候是“有序”的，就可以减治（如斜率优化等）</p>
</li>
</ul>
<p>动态规划的优化</p>
<ul>
<li>
<p>空间优化：</p>
<p>先序：</p>
<ul>
<li>FOR：滚动数组</li>
<li>DFS、BFS：把hashmap的节点删除（hashmap.remove）</li>
</ul>
<p>后序：</p>
<ul>
<li>只有被重复计算的点需要被存储下来，没有重复计算的点就不需要存储</li>
<li>lc一道hard里面出现过一次</li>
</ul>
</li>
<li>
<p>时间优化：通过减治</p>
</li>
</ul>`,r:{minutes:.71,words:214},t:"优化",y:"a"}}],["/algo/framework/optimise/%E5%87%8F%E6%B2%BB%E4%BC%98%E5%8C%96.html",{loader:()=>l(()=>import("./减治优化.html-CPBNTEX_.js"),__vite__mapDeps([111,1])),meta:{d:1732244737e3,e:`
<h2>逆向有序</h2>
<h3>二分查找</h3>
<h3>减治双针</h3>
<h4>逆向双针</h4>
<h4>滑窗双针</h4>
<h2>删除有序</h2>
<h3>单调栈</h3>
<h3>单调队列</h3>
<h2>结构有序</h2>
<h2>贪心有序</h2>
`,r:{minutes:.14,words:41},t:"减治",y:"a"}}],["/algo/framework/optimise/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92.html",{loader:()=>l(()=>import("./动态规划.html-Bxx1mdgm.js"),__vite__mapDeps([112,1])),meta:{d:1732244737e3,e:`
<h3>问题分类</h3>
<p>P问题：多项式时间复杂度，<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">n^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span>复杂度</p>`,r:{minutes:.6,words:181},t:"动态规划",y:"a"}}],["/algo/framework/order/",{loader:()=>l(()=>import("./index.html-BUygG5mI.js"),__vite__mapDeps([113,1])),meta:{d:1732244737e3,e:`
<p>这四种顺序是针对值传递而言的，因为每一种顺序都是传递一个具体值的</p>
<p>第一对顺序</p>
<ol>
<li>先序</li>
<li>后序</li>
</ol>
<p>第二对顺序</p>
<ol>
<li>访问</li>
<li>邻接</li>
</ol>
<h2>先序/后序</h2>
<p>从出发点考虑：即已有一个拓扑排序，是从已知到未知还是从未知到已知</p>
<h3>先序</h3>
<p>定义：已知点到未知点，即出发点和边界点相同</p>
<p>方式：DFS、BFS、FOR</p>
<p>实现：（对于DFS，通过参数列表）</p>
<h3>后序</h3>
<p>定义：未知点到已知点，即出发点和边界点相反</p>`,r:{minutes:2.16,words:647},t:"顺序",y:"a"}}],["/algo/framework/parameter/",{loader:()=>l(()=>import("./index.html-B-w9Dyuz.js"),__vite__mapDeps([114,1])),meta:{d:1732244737e3,e:`
<h2>传参设计</h2>
<h3>局部变量传递</h3>
<p>父传子</p>
<ul>
<li>非引用类型需要函数传参（BFS节点），如深度信息可以直接父传子depth + 1</li>
<li>引用类型变量需要结合回溯来实现。</li>
</ul>
<p>子传父</p>
<ul>
<li>DFS通过返回值将子问题结果传递给父问题。</li>
</ul>
<h3>全局变量传递</h3>
<p>邻接：回溯的思想，对复杂的变量需要使用forward()和backward()，可以节省内存空间</p>
<p>访问：序号、前后序时间戳、访问前驱、访问后继，需要全局参数传递，因为不再是父子相传</p>`,r:{minutes:3.21,words:964},t:"传参",y:"a"}}],["/algo/framework/quality/",{loader:()=>l(()=>import("./index.html-BSr4ZXnM.js"),__vite__mapDeps([115,1])),meta:{d:1732244737e3,e:`
<p>也称 Coding Style</p>
<p>优化的逻辑：</p>
<ol>
<li>先想暴力的方法</li>
<li>看哪里有地方是浪费的</li>
</ol>
<h4>优秀的 Coding Quality</h4>
<ol>
<li>
<p>bug free</p>
</li>
<li>
<p>有边界检测和异常处理</p>
</li>
<li>
<p>代码风格：命名规范、空格、空行</p>
<ol>
<li>
<p>每一个逻辑 Part 之间一个空行划分</p>
<p>如异常判断、主体逻辑、结果返回，这些part之间一个分行</p>
</li>
<li>
<p>参数列表比较长</p>
<ol>
<li>
<p>每个参数占一行</p>
<p>将每个参数放在新的一行，缩进对齐。适合参数较多时，保证代码可读性。</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> someMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> firstName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> lastName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> phoneNumber</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // method body</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>按逻辑分组</p>
<p>如果参数之间有逻辑关系，可以按组换行，组内保持紧凑。</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> someMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> firstName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> lastName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> phoneNumber</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // method body</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>保持总行长度符合规范</p>
<p>根据团队代码风格（如 Google Java Style Guide 限制每行 ≤ 100 列），在长度合适的地方换行：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> someMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> firstName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> lastName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                       String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> phoneNumber) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // method body</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ol>
</li>
<li>
<p>变量命名：全称，1-2个单词，小驼峰</p>
</li>
<li>
<p>避免重复代码</p>
<p>泄露没有工程经验</p>
</li>
<li>
<p>用不到的变量用_来命名</p>
</li>
<li>
<p>尽可能避免全局变量</p>
</li>
<li>
<p>缩进</p>
<ol>
<li>java是4个</li>
</ol>
</li>
<li>
<p>空格</p>
<ol>
<li>运算符前后要有</li>
<li>逗号、分号后面有</li>
</ol>
</li>
</ol>
</li>
</ol>`,r:{minutes:1.61,words:484},t:"代码质量",y:"a"}}],["/algo/framework/search/BFS.html",{loader:()=>l(()=>import("./BFS.html-CEbbgT3q.js"),__vite__mapDeps([116,1])),meta:{d:1732244737e3,e:`
<p>状态</p>
<h3>BFS 基础</h3>
<p>队列搜索</p>
<p>等待队列：队列里面的是已经结束，等待扩展的</p>
<p>入队：节点进入等待</p>
<p>出队：节点开始运行</p>
<h3>BFS 步骤</h3>
<ol>
<li>
<p>出队</p>
</li>
<li>
<p>捕捉：全局变量捕捉 target 值</p>
<p>出队的时候进行目标点的捕捉，如果是目标点就返回，不再继续扩展</p>
</li>
<li>
<p>扩展</p>
</li>
<li>
<p>入队</p>
</li>
</ol>
<h3>BFS 扩展</h3>
<ul>
<li>
<p>递推公式：即这个边的语义，只需要改变递推公式就可以改变边的语义</p>
<p>如求和、求Max、求Min等</p>
</li>
<li>
<p>判断环路：拓扑排序</p>
</li>
<li>
<p>队列类型</p>
<ul>
<li>
<p>普通队列：先进先出</p>
</li>
<li>
<p>优先队列：可以根据优先级插队</p>
<p>拓展，形成A*算法，包含Dijkstra等</p>
</li>
<li>
<p>双端队列</p>
</li>
</ul>
</li>
</ul>`,r:{minutes:.61,words:184},t:"BFS",y:"a"}}],["/algo/framework/search/DFS.html",{loader:()=>l(()=>import("./DFS.html-B03ynSUF.js"),__vite__mapDeps([117,1])),meta:{d:1732244737e3,e:`
<h3>DFS 基础</h3>
<p>栈搜索</p>
<p>运行时栈：栈里的是仍在运行的</p>
<p>入栈：函数开始运行</p>
<p>出栈：函数运行结束</p>
<h3>DFS 步骤</h3>
<ol>
<li>
<p>出栈：函数被调用</p>
</li>
<li>
<p>捕捉：全局变量捕捉target值</p>
<p>出队的时候进行目标点的捕捉，如果是目标点就返回，不再继续扩展</p>
</li>
<li>
<p>扩展</p>
</li>
<li>
<p>入栈</p>
</li>
</ol>
<h3>先序遍历</h3>
<p>从已知点开始出发</p>
<p>（写法在本质上与BFS非常相似，可以直接bfs代码将queue改成stack得到）</p>`,r:{minutes:2.26,words:679},t:"DFS",y:"a"}}],["/algo/framework/search/FOR.html",{loader:()=>l(()=>import("./FOR.html-CQ5S6DCm.js"),__vite__mapDeps([118,1])),meta:{d:1732244737e3,e:`
<p>仅限于遍历线性结构。</p>
<p>对于通过树或图结构的迭代器遍历，本质上就是对树或图结构指定好的一种拓扑序列进行遍历，也是对线性结构遍历。</p>
`,r:{minutes:.2,words:59},t:"FOR",y:"a"}}],["/algo/framework/search/",{loader:()=>l(()=>import("./index.html-Cv9CyEQw.js"),__vite__mapDeps([119,1])),meta:{d:1732244737e3,e:`
<p>搜索的分类：</p>
<ul>
<li>FOR 循环</li>
<li>DFS 深搜</li>
<li>BFS 广搜</li>
</ul>
<h2>对比</h2>
<h3>DFS对BFS优势</h3>
<ol>
<li>
<p>后序传值</p>
<p>DFS专属后序位置，可以让父收到子传的值</p>
</li>
<li>
<p>先序回溯</p>
<p>DFS优点，可以节省空间</p>
</li>
<li>
<p>宽树搜索</p>
<p>空间复杂度对比：</p>
<p>BFS：树的最大宽度</p>
<p>DFS：树的最大深度</p>
<p>宽树搜索，必须DFS</p>
</li>
</ol>`,r:{minutes:1.45,words:436},t:"搜索",y:"a"}}],["/algo/framework/structure/",{loader:()=>l(()=>import("./index.html-dHxp6KYZ.js"),__vite__mapDeps([120,1])),meta:{d:1732244737e3,e:`
<p>数据结构的逻辑结构与存储结构的关系是抽象与具体的关系。</p>
<h2>逻辑结构</h2>
<p>是指数据对象中数据元素之间的相互关系。</p>
<ul>
<li>
<p>集：记录</p>
<p>快速的判断一个点是否存在</p>
</li>
<li>
<p>线：有序（偏序）</p>
<p>有序和混乱是相对的概念</p>
<p>有序可以做减治，混乱只能暴力FOR遍历</p>
</li>
<li>
<p>树：分类</p>
<p>边数=点数-1，因为根节点入度为0，其他节点入度为1.</p>
</li>
<li>
<p>图：依赖</p>
<p>DAG(Directed Acyclic Graph)</p>
<p>DAG，核心就是值传递</p>
<p>如果是环图，要引入单调收敛的状态变量来使节点加状态变量共同组成一个DAG</p>
</li>
</ul>`,r:{minutes:2.63,words:788},t:"结构",y:"a"}}],["/algo/summary/math/",{loader:()=>l(()=>import("./index.html-BGrkEpSl.js"),__vite__mapDeps([121,1])),meta:{d:1675410392e3,e:`
`,r:{minutes:0,words:1},t:"Math",y:"a"}}],["/algo/summary/math/%E4%BA%8C%E8%BF%9B.html",{loader:()=>l(()=>import("./二进.html-DP9kK_AM.js"),__vite__mapDeps([122,1])),meta:{d:1732244737e3,e:`
<p><a href="https://oi-wiki.org/math/binary-set/" target="_blank" rel="noopener noreferrer">https://oi-wiki.org/math/binary-set/</a></p>
<h2>位操作</h2>
<ol>
<li>
<p><strong>设置位</strong>：</p>
<ul>
<li>将整数<code>x</code>的第<code>n</code>位设置为1：<code>x |= (1 &lt;&lt; n)</code></li>
</ul>
</li>
<li>
<p><strong>清除位</strong>：</p>
<ul>
<li>将整数<code>x</code>的第<code>n</code>位设置为0：<code>x &amp;= ~(1 &lt;&lt; n)</code></li>
</ul>
</li>
<li>
<p><strong>切换位</strong>：</p>
<ul>
<li>切换整数<code>x</code>的第<code>n</code>位：<code>x ^= (1 &lt;&lt; n)</code></li>
</ul>
</li>
<li>
<p><strong>检查位</strong>：</p>
<ul>
<li>检查整数<code>x</code>的第<code>n</code>位是否为1：<code>(x &amp; (1 &lt;&lt; n)) != 0</code></li>
</ul>
</li>
<li>
<p><strong>获取最低位的1</strong>：</p>
<ul>
<li>获取<code>x</code>的最低位的1：<code>x &amp; -x</code></li>
</ul>
</li>
<li>
<p><strong>清除最低位的1</strong>：</p>
<ul>
<li>清除<code>x</code>的最低位的1：<code>x &amp; (x - 1)</code></li>
</ul>
</li>
<li>
<p><strong>提取特定位</strong>：</p>
<ul>
<li>提取<code>x</code>的第<code>n</code>位到第<code>m</code>位：<code>(x &gt;&gt; n) &amp; ((1 &lt;&lt; (m - n + 1)) - 1)</code></li>
</ul>
</li>
<li>
<p><strong>位计数</strong>：</p>
<ul>
<li>计算<code>x</code>中1的数量：使用内置函数（如C++中的<code>__builtin_popcount</code>或Java中的<code>Integer.bitCount</code>），或者通过手动循环计数。</li>
</ul>
</li>
<li>
<p><strong>奇偶校验</strong>：</p>
<ul>
<li>检查<code>x</code>的奇偶性：<code>x &amp; 1</code>（结果为0表示偶数，为1表示奇数）</li>
</ul>
</li>
<li>
<p><strong>符号扩展</strong>：</p>
<ul>
<li>对于一个位宽固定的有符号整数<code>x</code>，将其符号位扩展到更大的位宽：使用算术右移操作（如<code>x &gt;&gt; n</code>）</li>
</ul>
</li>
<li>
<p>最高/低位1的位置</p>
<ul>
<li><code>Integer.numberOfTrailingZeros()</code></li>
<li><code>Integer.numberOfLeadingZeros()</code></li>
</ul>
</li>
<li>
<p><strong>二进制反转</strong>：</p>
<ul>
<li>
<p>反转<code>x</code>的二进制表示：需要通过循环和位操作实现，没有直接的内置函数。</p>
<p><code>Integer.reverse()</code></p>
</li>
</ul>
</li>
<li>
<p><strong>最高位的1</strong>：</p>
<ul>
<li>找到<code>x</code>最高位的1：可以通过循环左移操作实现，也可以使用特定语言的内置函数（如C++中的<code>__builtin_clz</code>）</li>
</ul>
</li>
</ol>`,r:{minutes:3.18,words:953},t:"二进制",y:"a"}}],["/algo/summary/math/%E4%BD%99%E6%95%B0.html",{loader:()=>l(()=>import("./余数.html-BlON8QJU.js"),__vite__mapDeps([123,1])),meta:{d:1732244737e3,e:`
<p>同余（英语：Congruence modulo，符号：≡）在数学中是指数论中的一种等价关系。当两个整数除以同一个正整数，若得相同余数，则二整数同余。同余是抽象代数中的同余关系的原型。最先引用同余的概念与“≡”符号者为德国数学家高斯。</p>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>≡</mo><mi>b</mi><mspace></mspace><mspace width="0.6667em"></mspace><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>m</mi></mrow><annotation encoding="application/x-tex">a\\equiv b\\mod m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4637em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.6667em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span></span></span></span></p>`,r:{minutes:.86,words:258},t:"同余",y:"a"}}],["/algo/summary/math/%E5%9B%A0%E6%95%B0.html",{loader:()=>l(()=>import("./因数.html-DBViwSav.js"),__vite__mapDeps([124,1])),meta:{d:1732244737e3,e:`
<p>因数（英语：factor）也称约数、因子、除子（divisor），是一个常见的数学名词，用于描述自然数 a 和自然数 b 之间存在的整除关系，即 b 可以被 a 整除。这里我们称 b 是 a 的倍数，a 是 b 的因数或因子。</p>
<p>除了自己本身外的约数，称为 真约数 或 真因子（proper divisor）。</p>
<p><code>gcd</code>最大公约数</p>
<p><code>lcm</code>最小公倍数</p>
<p>[1,x]内k的倍数<code>x/k</code></p>
<h2>因数</h2>
<p>因数分解、素因数分解</p>
<h3>因数分解</h3>`,r:{minutes:1.4,words:419},t:"因数",y:"a"}}],["/algo/summary/math/%E6%A6%82%E7%8E%87.html",{loader:()=>l(()=>import("./概率.html-BQGqtafa.js"),__vite__mapDeps([125,1])),meta:{d:1732244737e3,e:`
<p>Rand10生成Rand7</p>
<p>Rand10均匀生成[1,10]，生成Rand7均匀生成[1,7]</p>
<p><code>rand10()%7+1</code></p>
<p>Rand7生成Rand10</p>
<p><code>((rand7()-1)*7+rand7()</code></p>
`,r:{minutes:.11,words:33},t:"概率",y:"a"}}],["/algo/summary/math/%E8%BF%90%E7%AE%97.html",{loader:()=>l(()=>import("./运算.html-I5JmQCKN.js"),__vite__mapDeps([126,1])),meta:{d:1732244737e3,e:`
<p>向下取整：<code>x/y</code></p>
<p>向上取整：<code>(x-1)/y+1</code>, <code>(x+y-1)/y</code>, <code>x / y + (x % y != 0 ? 1 : 0);</code></p>
<p>四舍五入：<code>(x+1)/2</code></p>
<p>截断式<strong>整数除法</strong>，即需要去掉结果的小数部分。</p>
`,r:{minutes:.18,words:53},t:"运算",y:"a"}}],["/algo/summary/math/%E8%BF%9B%E5%88%B6.html",{loader:()=>l(()=>import("./进制.html-DjFeISRD.js"),__vite__mapDeps([127,1])),meta:{d:173238775e4,e:`
`,r:{minutes:0,words:1},t:"Radix",y:"a"}}],["/algo/summary/optimise/",{loader:()=>l(()=>import("./index.html-Bjg3CpJd.js"),__vite__mapDeps([128,1])),meta:{d:1732244737e3,e:`
<h2>算法优化</h2>
<ol>
<li><strong>贪心算法</strong>：
<ul>
<li>特点：在每一步选择中都采取在当前状态下最好或最优（即最有利）的选择，从而希望导致结果是全局最好或最优的算法。</li>
<li>适用场景：问题满足贪心选择性质（局部最优解能决定全局最优解）和最优子结构。</li>
<li>例子：霍夫曼编码、最小生成树、Dijkstra。</li>
</ul>
</li>
<li><strong>动态规划</strong>：
<ul>
<li>特点：将复杂问题分解成简单子问题，以递归的方式解决子问题。不同于分治，动态规划会保存子问题的解，避免重复计算。</li>
<li>适用场景：问题具有最优子结构，且子问题重叠（不是互斥的）。</li>
<li>例子：斐波那契数列、背包问题等。</li>
</ul>
</li>
<li><strong>减治法</strong>：
<ul>
<li>特点：与分治法相似，但在每一步仅解决问题的一部分，减小问题规模，直到问题简单到可以直接求解。</li>
<li>适用场景：问题可以通过减少一部分来简化。</li>
<li>例子：插入排序、最大堆构建等。</li>
</ul>
</li>
</ol>`,r:{minutes:3.05,words:915},t:"Optimization",y:"a"}}],["/algo/summary/optimise/middle.html",{loader:()=>l(()=>import("./middle.html-DjoBfz7j.js"),__vite__mapDeps([129,1])),meta:{d:1732244737e3,e:`
<h3>Equal 类</h3>
<p>lc1. 两数之和</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 并返回它们的数组下标，只会对应一个答案</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">twoSum</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> target) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Map</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> valToIndex </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">valToIndex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">containsKey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(target </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> nums[i])</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[]{i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> valToIndex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(target </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> nums[i])</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        valToIndex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">put</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(nums[i], i);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.13,words:339},t:"Meet in the middle",y:"a"}}],["/algo/summary/search/",{loader:()=>l(()=>import("./index.html-Ddq8LH5E.js"),__vite__mapDeps([130,1])),meta:{d:1732244737e3,e:`
<p>搜索，也就是对状态空间进行枚举，通过穷尽所有的可能来找到最优解，或者统计合法解的个数。</p>
<p>搜索有很多优化方式，如减小状态空间，更改搜索顺序，剪枝等。</p>
`,r:{minutes:.22,words:65},t:"Search",y:"a"}}],["/algo/summary/structure/",{loader:()=>l(()=>import("./index.html-CfC7diBb.js"),__vite__mapDeps([131,1])),meta:{d:1732244737e3,e:`
<p>物理结构</p>
<ul>
<li>
<p>顺序存储 Sequential</p>
<p>把逻辑上相邻的结点存储在物理位置上相邻的存储单元中，结点之间的逻辑关系由存储单元的邻接关系来体现（逻辑与物理统一），要求内存中可用的存储单元的地址必须是连续的。优点：存储密度大，存储空间利用概率高。缺点：插入或删除元素时不方便。</p>
</li>
<li>
<p>链式存储 Linked Storage Structure</p>
<p>它不要求逻辑上相邻的元素在物理位置上也相邻.因此它没有<a href="https://baike.baidu.com/item/%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/0?fromModule=lemma_inlink" target="_blank" rel="noopener noreferrer">顺序存储结构</a>所具有的弱点,但也同时失去了<a href="https://baike.baidu.com/item/%E9%A1%BA%E5%BA%8F%E8%A1%A8/9664274?fromModule=lemma_inlink" target="_blank" rel="noopener noreferrer">顺序表</a>可<a href="https://baike.baidu.com/item/%E9%9A%8F%E6%9C%BA%E5%AD%98%E5%8F%96/4610937?fromModule=lemma_inlink" target="_blank" rel="noopener noreferrer">随机存取</a>的优点。</p>
</li>
<li>
<p>散列存储 Hash</p>
</li>
<li>
<p>索引存储 Indexed</p>
</li>
</ul>`,r:{minutes:2.64,words:793},t:"Data Structure",y:"a"}}],["/cs/basic/network/",{loader:()=>l(()=>import("./index.html-4d9xwa3x.js"),__vite__mapDeps([132,1])),meta:{d:1670083932e3,e:`
<p>TCP/IP 协议栈</p>
<p>应用层</p>
<ul>
<li>
<p>会话层</p>
</li>
<li>
<p>表示层</p>
</li>
<li>
<p>应用层</p>
</li>
<li>
<p>HTTP/HTTPS/HSTP, RPC</p>
</li>
<li>
<p>DNS/DoT/DoH</p>
</li>
<li>
<p>FTP/SFTP, SCP</p>
</li>
<li>
<p>SMTP, POP3/IMAP</p>
</li>
<li>
<p>RTP</p>
</li>
<li>
<p>SSH</p>
</li>
</ul>
<p>传输层</p>
<ul>
<li>TCP</li>
<li>UDP</li>
</ul>`,r:{minutes:2,words:599},t:"Computer Network",y:"a"}}],["/cs/basic/os/",{loader:()=>l(()=>import("./index.html-CHV7-dB3.js"),__vite__mapDeps([133,1])),meta:{d:1670083932e3,e:`
<ul>
<li>结构</li>
<li>进程管理</li>
<li>内存管理</li>
<li>文件系统</li>
<li>I/O管理
<ul>
<li>设备管理</li>
<li>网络系统</li>
</ul>
</li>
</ul>
<hr>
<p>多核： multiprocessing, 意思就是多重处理， 多个cpu同时干活。</p>
<p>多进程： multiprogramming， 也可以近似认为是multitasking,  意思就是多道程序设计。 单个cpu并发干活， 在不同的进程间切换。</p>
<p>多线程： multithreading,  这个就是我们通常说的多线程， 单个cpu并发干活， 在同一个进程的线程间切换。</p>`,r:{minutes:7.36,words:2209},t:"Operating System",y:"a"}}],["/cs/database/hbase/",{loader:()=>l(()=>import("./index.html-DCjsZsHV.js"),__vite__mapDeps([134,1])),meta:{d:1715153702e3,e:`
<p>如何设计HBase的Row key</p>
<p>如何避免HBase中出现热点</p>
<p>使用Key-value Store-HBase存储写多读少的数据库表单</p>
`,r:{minutes:.12,words:37},t:"hbase",y:"a"}}],["/cs/database/mongodb/",{loader:()=>l(()=>import("./index.html-DZtwq59B.js"),__vite__mapDeps([135,1])),meta:{d:1715153702e3,e:`
<p>NoSQL, Document DB</p>
<h3>安装使用</h3>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -itd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mongo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 27017:27017</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mongo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --auth</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mongo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mongosh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> admin</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 创建一个名为 admin，密码为 123456 的用户。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; db.createUser({ user:'admin',pwd:'123456',roles:[ { role:'userAdminAnyDatabase', db: 'admin'},"readWriteAnyDatabase"]});</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 尝试使用上面创建的用户信息进行连接。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; db.auth(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">'admin'</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '123456'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.49,words:147},t:"Mongo DB",y:"a"}}],["/cs/database/mongodb/aggregation.html",{loader:()=>l(()=>import("./aggregation.html-BdftE7O7.js"),__vite__mapDeps([136,1])),meta:{d:1715153702e3,e:`
`,r:{minutes:0,words:1},t:"Aggregation",y:"a"}}],["/cs/database/mongodb/engine.html",{loader:()=>l(()=>import("./engine.html-s6oeovJp.js"),__vite__mapDeps([137,1])),meta:{d:1715153702e3,e:`
<p>存储引擎（Storage Engine）是数据库的核心组件，负责管理数据在内存和磁盘中的存储方式。</p>
<p>与 MySQL 一样，MongoDB 采用的也是 插件式的存储引擎架构 ，支持不同类型的存储引擎，不同的存储引擎解决不同场景的问题。在创建数据库或集合时，可以指定存储引擎。</p>
<p>插件式的存储引擎架构可以实现 Server 层和存储引擎层的解耦，可以支持多种存储引擎，如 MySQL 既可以支持 B-Tree 结构的 InnoDB 存储引擎，还可以支持 LSM 结构的 RocksDB 存储引擎。</p>
<p>在存储引擎刚出来的时候，默认是使用 MMAPV1 存储引擎，MongoDB4.x 版本不再支持 MMAPv1 存储引擎。现在主要有下面这两种存储引擎：</p>`,r:{minutes:2.37,words:710},t:"Engine",y:"a"}}],["/cs/database/mongodb/%E4%BD%BF%E7%94%A8.html",{loader:()=>l(()=>import("./使用.html-1e6Utp8v.js"),__vite__mapDeps([138,1])),meta:{d:1672746435e3,e:`
<p>MongoTemplate 灵活</p>
<p>MongoRepository 不够灵活</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">mongoTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">findAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">User</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">查询User文档的全部数据</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">mongoTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">findById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(\\</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">id\\</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">User</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> 查询User文档id为id的数据</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">mongoTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">find</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(query, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">User</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">：根据query内的查询条件查询</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">mongoTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">upsert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(query, update, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">User</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> 修改</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">mongoTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(query, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">User</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> 删除</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">mongoTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(User)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">新增</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.53,words:160},t:"使用",y:"a"}}],["/cs/database/mysql/",{loader:()=>l(()=>import("./index.html-Cldi6yCb.js"),__vite__mapDeps([139,1])),meta:{d:1670083932e3,e:`
<ul>
<li>
<p>事务</p>
<ul>
<li>ACID</li>
<li>并发事务问题</li>
<li>隔离级别</li>
</ul>
</li>
<li>
<p>索引</p>
<ul>
<li>结构</li>
<li>分类</li>
<li>规则</li>
</ul>
</li>
<li>
<p>锁</p>
<ul>
<li>全局锁</li>
<li>表锁</li>
<li>行锁</li>
</ul>
</li>
<li>
<p>引擎</p>
<ul>
<li>Innodb</li>
</ul>
</li>
<li>
<p>日志</p>
<ul>
<li>BINLOG</li>
<li>Redo log</li>
<li>Undo log</li>
</ul>
</li>
<li>
<p>内存</p>
</li>
<li>
<p>运维</p>
</li>
<li>
<p>高可用</p>
<ul>
<li>主从</li>
<li>分片</li>
</ul>
</li>
</ul>`,r:{minutes:.17,words:51},t:"MySQL",y:"a"}}],["/cs/database/redis/",{loader:()=>l(()=>import("./index.html-DVbnlRTQ.js"),__vite__mapDeps([140,1])),meta:{d:1669794167e3,e:`
<p>NoSQL</p>
<p>帮助文档：<a href="http://redis.io/commands" target="_blank" rel="noopener noreferrer">redis.io/commands</a></p>
<ul>
<li>持久化</li>
<li>数据类型</li>
<li>内存管理</li>
<li>线程模型</li>
<li>高可用
<ul>
<li>主从</li>
<li>哨兵</li>
<li>分片</li>
</ul>
</li>
<li>应用
<ul>
<li>分布式锁</li>
<li>Id生成器</li>
</ul>
</li>
</ul>`,r:{minutes:.14,words:41},t:"Redis",y:"a"}}],["/cs/database/sql/",{loader:()=>l(()=>import("./index.html-DsletjC2.js"),__vite__mapDeps([141,1])),meta:{d:1670083932e3,e:`
<p><a href="https://www.w3schools.com/sql/sql_case.asp" target="_blank" rel="noopener noreferrer">https://www.w3schools.com/sql/sql_case.asp</a></p>
<p>练习SQL可以在<a href="https://sqlpad.io/playground/" target="_blank" rel="noopener noreferrer">网站</a>使用，有现成的一些经典表、数据和代码执行器。</p>
<p><strong>SQL</strong> 和 <strong>pandas</strong> 是数据分析和处理领域中的两大重要工具，各有优势和局限性。以下是对它们的详细对比：</p>`,r:{minutes:3.89,words:1168},t:"SQL",y:"a"}}],["/cs/database/sql/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B.html",{loader:()=>l(()=>import("./存储过程.html-DwIUVEWd.js"),__vite__mapDeps([142,1])),meta:{d:1679321449e3,e:`
<p>创建</p>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> PROCEDURE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> 存储过程名称(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[参数列表]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	--SQL语句</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">END</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.14,words:41},t:"存储过程",y:"a"}}],["/cs/middleware/canal/",{loader:()=>l(()=>import("./index.html-BwJZc9BP.js"),__vite__mapDeps([143,1])),meta:{d:1715153702e3,e:`
<p><code>Canal</code> [kə’næl]，译意为水道/管道/沟渠，主要用途是基于 <strong>MySQL 数据库增量日志</strong>解析，提供<strong>增量数据订阅和消费</strong>。</p>
<p><a href="https://blog.csdn.net/qq_43528451/article/details/116120745" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/qq_43528451/article/details/116120745</a></p>`,r:{minutes:.87,words:261},t:"Canal",y:"a"}}],["/cs/middleware/es/",{loader:()=>l(()=>import("./index.html-DYhrG78W.js"),__vite__mapDeps([144,1])),meta:{d:1691648992e3,e:`
<p>Elasticsearch(简称ES)是一个分布式、RESTful风格的搜索和数据分析引擎。</p>
<p>Elasticsearch是面向文档型数据库，一条数据在这里就是一个文档，用JSON作为文档序列化的格式，比如下面这条用户数据：</p>
<p>10.1.2索引(Index)</p>
<p>一个索引就是一个拥有几分相似特征的文档的集合。比如说，你可以有一个客户数据的索引，另一个产品目录的索引，还有一个订单数据的索引。一个索引由一个名字来标识（必须全部是小写字母），并且当我们要对这个索引中的文档进行索引、搜索、更新和删除的时候，都要使用到这个名字。在一个集群中，可以定义任意多的索引。</p>`,r:{minutes:4.54,words:1362},t:"ElasticSearch",y:"a"}}],["/cs/middleware/es/availability.html",{loader:()=>l(()=>import("./availability.html-BvxgostO.js"),__vite__mapDeps([145,1])),meta:{d:1732244781e3,e:`
<p>Elasticsearch 集群是什么？有什么用？</p>
<p>单台 Elasticsearch 服务器负载能力和存储能力有限，很多时候通过增加服务器配置也没办法满足我们的要求。并且，单个 Elasticsearch 节点会存在单点风险，没有做到高可用。为此，我们需要搭建 Elasticsearch 集群。</p>
<p>Elasticsearch 集群说白了就是多个 Elasticsearch 节点的集合，这些节点共同协作，一起提供服务，这样就可以解决单台 Elasticsearch 服务器无法处理的搜索需求和数据存储需求。出于高可用方面的考虑，集群中节点数量建议 3 个以上，并且其中至少两个节点不是仅投票主节点（后文会介绍到）。</p>`,r:{minutes:.64,words:192},t:"Elasticsearch 集群",y:"a"}}],["/cs/middleware/es/optimization.html",{loader:()=>l(()=>import("./optimization.html-DKOyOuKa.js"),__vite__mapDeps([146,1])),meta:{d:1732244781e3,e:`
<p>性能优化</p>
<p>Elasticsearch 如何选择硬件配置？</p>
<ul>
<li>
<p>部署 Elasticsearch 对于机器的 CPU 要求并不高，通常选择 2 核或者 4 核的就差不多了。</p>
</li>
<li>
<p>Elasticsearch 中的很多操作是比较消耗内存的，如果搜索需求比较大的话，建议选择 16GB 以上的内存。具体如何分配内存呢？通常是 50% 给 ES，50% 留给 Lucene。另外，建议禁止 swap。如果不禁止的话，当内存耗尽时，操作系统就会自动把内存中暂时不使用的数据交换到硬盘中，需要使用的时候再从硬盘交换到内存，频繁硬盘操作对性能影响是致命的。</p>
</li>
<li>
<p>磁盘的速度相对比较慢，尽量使用固态硬盘（SSD）。</p>
</li>
</ul>`,r:{minutes:3.23,words:970},t:"Optimization",y:"a"}}],["/cs/middleware/es/pagination.html",{loader:()=>l(()=>import("./pagination.html-Drjj9W6s.js"),__vite__mapDeps([147,1])),meta:{d:1732244781e3,e:`
<p>Elasticsearch 主要提供了三种分页方式：</p>
<ul>
<li>from + size，</li>
<li>scroll</li>
<li>sort + search_after</li>
</ul>
<h3>from + size 分页</h3>
<p>from + size 分页机制类似于 SQL 中的 LIMIT 和 OFFSET，通过指定 from（起始偏移量）和 size（每页返回的记录数）来获取特定页的数据。</p>
<div class="language-http line-numbers-mode" data-highlighter="shiki" data-ext="http" data-title="http" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">GET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /my-index/_search</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "query"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">	"match_all"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "from"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 跳过前 10 条记录</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "size"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   // 返回接下来的 20 条记录</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.96,words:887},t:"Pagination",y:"a"}}],["/cs/middleware/nginx/",{loader:()=>l(()=>import("./index.html-D5AzQ7Ak.js"),__vite__mapDeps([148,1])),meta:{d:1715153702e3,e:`
<p>一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务</p>
<ul>
<li>反向代理</li>
<li>负载均衡</li>
<li>动静分离</li>
</ul>
`,r:{minutes:.13,words:38},t:"Nginx",y:"a"}}],["/cs/middleware/rabbitmq/",{loader:()=>l(()=>import("./index.html-jaWl2qc9.js"),__vite__mapDeps([149,1])),meta:{d:1677504602e3,e:`
<h2>基本概念</h2>
<h3>rabbitmq 有哪些重要角色？</h3>
<ul>
<li>生产者：消息的创建者，负责创建和推送数据到消息服务器</li>
<li>消费者：消息的接收方，用于处理数据和确认消息</li>
<li>代理：就是RabbitMQ本身，用于扮演快递的角色，本身并不生产消息</li>
</ul>
<h3>rabbitmq 有哪些重要组件？</h3>
<ul>
<li>ConnectionFactory(连接管理器)：应用程序与RabbitMQ之间建立连接的管理器</li>
<li>BrokerBroker是RabbitMQ的核心组件，它接收来自生产者的消息并将其路由到消费者。Broker还负责管理队列、交换机和绑定等对象。RabbitMQ Broker可以在单个节点上运行，也可以在多个节点上运行以实现高可用性和负载均衡。</li>
<li>Channel(信道)：消息推送使用的通道</li>
<li>Exchange(交换器)：用于接受、分配消息</li>
<li>Queue(队列)：用于存储生产者的消息</li>
<li>RoutingKey(路由键)：生产者将消息发送给交换器的时候，会指定一个RoutingKey,用来指定这个消息的路由规则，这个RoutingKey需要与交换器类型和绑定键(BindingKey)联合使用才能最终生效。</li>
<li>BindKey(绑定键)：用于把交换器的消息绑定到队列上</li>
</ul>`,r:{minutes:1.8,words:540},t:"RabbitMQ",y:"a"}}],["/cs/middleware/rabbitmq/%E4%B8%BA%E4%BB%80%E4%B9%88%E7%94%A8.html",{loader:()=>l(()=>import("./为什么用.html-Cavmf2vz.js"),__vite__mapDeps([150,1])),meta:{d:1680090419e3,e:`
<h2>使用场景</h2>
<p>消息队列是一种异步通信机制，常用于以下场景：</p>
<ol>
<li>
<p>异步处理：将请求放入消息队列中，异步处理请求，提高系统的吞吐量和响应速度。</p>
</li>
<li>
<p>解耦系统：将不同系统之间的通信通过消息队列进行解耦，提高系统的可维护性和可扩展性。</p>
</li>
<li>
<p>流量削峰：将请求放入消息队列中，通过控制消息队列的长度和消费速度，实现流量削峰，保护系统的稳定性。</p>
</li>
</ol>
<h3>流量削峰原理</h3>
<p>消息队列流量削峰的原理是通过控制消息队列的长度和消费速度，实现流量的平滑处理。具体来说，可以通过以下方式进行流量削峰：</p>`,r:{minutes:3.39,words:1016},t:"为什么用 RabbitMQ",y:"a"}}],["/cs/middleware/rabbitmq/%E5%BB%B6%E8%BF%9F%E9%98%9F%E5%88%97.html",{loader:()=>l(()=>import("./延迟队列.html-DwuxYz44.js"),__vite__mapDeps([151,1])),meta:{d:1679321449e3,e:`
<p><a href="https://blog.csdn.net/m0_56079407/article/details/125858748" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/m0_56079407/article/details/125858748</a></p>
<h3>实现方式</h3>
<ul>
<li>基于死信：在队列里面，通过 ttl</li>
<li>基于插件：在交换机里面</li>
</ul>
<h3>应用场景</h3>
<ol>
<li>订单在十分钟之内未支付则自动取消</li>
<li>新创建的店铺，如果在十天内都没有上传过商品，则自动发送消息提醒。</li>
<li>用户注册成功后，如果三天内没有登陆则进行短信提醒。</li>
<li>用户发起退款，如果三天内没有得到收处理则通知相关运营人员。</li>
<li>预定会议后，需要在预定的时间点前十分钟通知各个与会人员参加会议</li>
</ol>`,r:{minutes:1.39,words:417},t:"延迟队列",y:"a"}}],["/cs/middleware/rabbitmq/%E6%AD%BB%E4%BF%A1%E9%98%9F%E5%88%97.html",{loader:()=>l(()=>import("./死信队列.html-CGi9Tv-Q.js"),__vite__mapDeps([152,1])),meta:{d:1678024743e3,e:`
<h2>死信的概念</h2>
<p>即无法被消费的消息。</p>
<p><strong>导致的死信的几种原因</strong>：</p>
<ul>
<li>消息被拒（<code>Basic.Reject /Basic.Nack</code>) 且 <code>requeue = false</code>。</li>
<li>消息 TTL 过期。</li>
<li>队列消息长度达到限制；队列满了，无法再添加。</li>
</ul>
<h3>应用场景</h3>
<ul>
<li>保证数据不丢失</li>
<li>超时未支付砍单</li>
</ul>
<h2>什么是死信队列？如何导致的？</h2>`,r:{minutes:4.35,words:1306},t:"死信队列",y:"a"}}],["/cs/middleware/rabbitmq/%E6%B6%88%E6%81%AF%E5%BA%94%E7%AD%94.html",{loader:()=>l(()=>import("./消息应答.html-ByrW18JU.js"),__vite__mapDeps([153,1])),meta:{d:1679321449e3,e:`
<p>RabbitMQ 的三种确认机制：</p>
<ol>
<li>Publish --&gt; Broker：confirmCallback</li>
<li>Exchange --&gt; Queue：returnCallback</li>
<li>Queue--&gt; Client：Ack机制</li>
</ol>
<h2>消息应答</h2>
<p>消费者完成一个任务可能需要一段时间，如果其中一个消费者处理一个长的任务并仅只完成了部分突然它挂掉了，会发生什么情况。RabbitMQ一旦向消费者传递了一条消息，便立即将该消息标记为刷除。在这种情况下，突然有个消费者挂掉了，我们将丢失正在处理的消息。以及后续发送给该消费这的消息，因为它无法接收到。</p>`,r:{minutes:3.9,words:1171},t:"消息应答与确认",y:"a"}}],["/cs/middleware/rabbitmq/%E6%B6%88%E6%81%AF%E6%A8%A1%E5%9E%8B.html",{loader:()=>l(()=>import("./消息模型.html-BIal7Z4E.js"),__vite__mapDeps([154,1])),meta:{d:1677504602e3,e:`
<ul>
<li>基本消息队列（basicQueue）</li>
<li>工作消息队列（workQueue）</li>
</ul>
<p>发布订阅（Publish, Subscribe），根据交换机类型不同分为三种：</p>
<ul>
<li>Fanout 广播</li>
<li>Direct 路由</li>
<li>Topic 主题</li>
</ul>
<p>publish</p>
<h3>Work Queue 模型</h3>
<p>Work queue,工作队列，可以提高消息处理速度，避免队列消息堆积</p>
<p>多个消费者绑定到一个队列，同一条消息只会被一个消费者处理。</p>
<p>消息预取</p>`,r:{minutes:3.04,words:913},t:"消息模型",y:"a"}}],["/cs/middleware/rabbitmq/%E6%B6%88%E6%81%AF%E8%BD%AC%E6%8D%A2%E5%99%A8.html",{loader:()=>l(()=>import("./消息转换器.html-Bi0_syls.js"),__vite__mapDeps([155,1])),meta:{d:1677504602e3,e:`
<p>收发消息都可以传递Object，SpringAMQP默认会自动把对象利用JDK做序列化，但是可读性差且字节数太多，推荐使用Jackson</p>
<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;com.fasterxml.jackson.core&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;jackson-databind&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.32,words:95},t:"消息转换器",y:"a"}}],["/education/bs/ai-intro/1.%20%E7%BB%AA%E8%AE%BA.html",{loader:()=>l(()=>import("./1. 绪论.html-IbD1oEWY.js"),__vite__mapDeps([156,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/education/bs/ai-intro/2.%20%E7%9F%A5%E8%AF%86%E8%A1%A8%E7%A4%BA%E4%B8%8E%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1.html",{loader:()=>l(()=>import("./2. 知识表示与知识图谱.html-BF9eQHW1.js"),__vite__mapDeps([157,1])),meta:{d:1700646963e3,e:`
<h2>知识与知识表示的概念</h2>
<h3>知识的概念</h3>
<p>知识：把有关信息关联在一起所形成的信息结构。</p>
<blockquote>
<p>知识反映了客观世界中事物之间的关系，不同事物或者相同事物间的不同关系形成了不同的知识。</p>
</blockquote>
<h3>知识的特性</h3>
<p>**1.**相对正确性</p>
<p><strong>2.</strong> 不确定性</p>
<ul>
<li>随机性引起的不确定性</li>
<li>模糊性引起的不确定性</li>
<li>经验引起的不确定性</li>
<li>不完全性引起的不确定性</li>
</ul>`,r:{minutes:1.82,words:545},t:"知识表示与知识图谱",y:"a"}}],["/education/bs/ai-intro/3.%20%E7%A1%AE%E5%AE%9A%E6%80%A7%E6%8E%A8%E7%90%86.html",{loader:()=>l(()=>import("./3. 确定性推理.html-BAXCdpXl.js"),__vite__mapDeps([158,1])),meta:{d:1700646963e3,e:`
<h2>推理的基本概念</h2>
<h3>推理的定义</h3>
<h4>演绎推理、归纳推理、默认推理</h4>
<p>演绎推理：三段论式</p>
<p>归纳推理：个别-&gt;一般</p>
<ul>
<li>完全归纳推理（必然性推理）</li>
<li>不完全归纳推理（非必然性推理）</li>
</ul>
<p>默认推理(<strong>default reasoning</strong>，缺省推理)</p>
<blockquote>
<p>知识不完全的情况下假设某些条件已经具备所进行的推理。</p>
<p>默认成立</p>
</blockquote>
<h4>确定性推理、不确定性推理</h4>`,r:{minutes:2.04,words:611},t:"确定性推理",y:"a"}}],["/education/bs/ai-intro/4.%20%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E6%8E%A8%E7%90%86.html",{loader:()=>l(()=>import("./4. 不确定性推理.html-D6o5jgQo.js"),__vite__mapDeps([159,1])),meta:{d:1700646963e3,e:`<h2>可信度方法</h2>
<p>证据不确定性的表示</p>
<p>静态强度CF(H,E)</p>
<p>动态强度CF(E)</p>
<h4>不确定性的传递算法</h4>
<p>CF(H)</p>
<h4>结论不确定性的方法</h4>
<h4>组合证据不确定性的算法</h4>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-09-23 16.15.43.png" alt="截屏2022-09-23 16.15.43" loading="lazy"></p>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-09-23 16.21.55.png" alt="截屏2022-09-23 16.21.55" loading="lazy"></p>`,r:{minutes:2.16,words:647},t:"",y:"a"}}],["/education/bs/ai-intro/5.%20%E6%90%9C%E7%B4%A2%E6%B1%82%E8%A7%A3%E7%AD%96%E7%95%A5.html",{loader:()=>l(()=>import("./5. 搜索求解策略.html-B93Kysgp.js"),__vite__mapDeps([160,1])),meta:{d:1700646963e3,e:`<h2>搜索的概念</h2>
<p>搜索中需要解决的基本问题：</p>
<p>（1）是否一定能找到一个解。<br>
（2）找到的解是否是最佳解。<br>
（3）时间与空间复杂性如何。<br>
（4）是否终止运行或是否会陷入一个死循环。</p>
<p>搜索策略</p>
<p>（1）育目搜索：在不具有对特定问题的任何有关信息的条件下，按固定的步骤（依次或随机调用操作算子）进行的搜索。</p>
<p>（2）启发式搜索：考虑特定问题领域可应用的知识，动态地确定调用操作算子的步骤，优先选择较适合的操作算子，尽量减少不必要的搜索，以求尽快地到达结束状态。</p>
<h2>状态空间的搜索策略</h2>
<h3>状态空间的表示法</h3>`,r:{minutes:1.99,words:598},t:"",y:"a"}}],["/education/bs/ai-intro/6.%20%E6%99%BA%E8%83%BD%E8%AE%A1%E7%AE%97%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8.html",{loader:()=>l(()=>import("./6. 智能计算及其应用.html-ZMO3OFxI.js"),__vite__mapDeps([161,1])),meta:{d:1700646963e3,e:`
<h3>进化算法</h3>
<p>遗传算法GA：占绝大多数</p>
<p>遗传规划</p>
<p>进化策略</p>
<p>进化规划</p>
<h4>设计原则</h4>
<ol>
<li>适用性原则</li>
<li>可靠性原则</li>
<li>收敛性原则</li>
<li>稳定性原则</li>
<li>生物类比原则</li>
</ol>
<p>遗传算法的基本思想：</p>
<p>在求解问题时从多个解开始。。。</p>
<p>初始种群，通常是随机的（不过对后面的影响其实是很大的，不过要求不高，通常随机即可）</p>
<p>编码</p>
<ol>
<li>
<p>位串编码</p>
<p>一维染色体编码方法</p>
</li>
<li>
<p>二进制编码</p>
<p>二进制编码：用若干二进制数表示一个个体，原问题的解空间映射到位串空间B={0, 1}上，然后再位串空间上进行遗传操作</p>
<p>优点：</p>
<p>类似于</p>
</li>
</ol>`,r:{minutes:1.32,words:395},t:"智能计算及其应用",y:"a"}}],["/education/bs/ai-intro/7.%20%E4%B8%93%E5%AE%B6%E7%B3%BB%E7%BB%9F.html",{loader:()=>l(()=>import("./7. 专家系统.html-BgsKAghh.js"),__vite__mapDeps([162,1])),meta:{d:1700646963e3,e:`
<h2>7.2 专家系统的工作原理</h2>
<h2>专家系统的建立</h2>
<p>专家系统实例及其骨架系统</p>
<h2>机器学习</h2>
<p>监督学习</p>
<p>无监督学习</p>
`,r:{minutes:.15,words:46},t:"专家系统",y:"a"}}],["/education/bs/ai-intro/8.%20%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.html",{loader:()=>l(()=>import("./8. 人工神经网络.html-CmtO11rZ.js"),__vite__mapDeps([163,1])),meta:{d:1700646963e3,e:`<p>核心理解的点：</p>
<p><strong>超参数</strong>：不需要学习，建立神经网络之前，根据经验来决定的参数，eg卷积核、神经网络层数（调参工程师所调的参）</p>
<h3>神经网络的结构与工作方式</h3>
<p>决定工作性能的三大要素：</p>
<ul>
<li></li>
</ul>
<h2>BP神经网络的结构</h2>
<p>BP网络结构</p>
<p>输入层、输出层，中间是隐层</p>
<p>激活函数</p>
<ul>
<li>sigmoid</li>
<li>tanh</li>
</ul>
<p>神经网络层数：n-1（需要去掉输入层）</p>
<p>y和y^是标量值</p>`,r:{minutes:1.32,words:396},t:"",y:"a"}}],["/education/bs/ai-intro/",{loader:()=>l(()=>import("./index.html-q_fFErhJ.js"),__vite__mapDeps([164,1])),meta:{d:1700646963e3,e:`
<h3>分数构成</h3>
<ul>
<li>
<p>平时出勤 10</p>
<p>尽量点两次名，尽量给满</p>
<p>线上时不点名</p>
</li>
<li>
<p>期中测试 40</p>
<p>一道题20分</p>
<p>如果线下就考这个确定性推理</p>
<p>如果线上就考一些灵活的东西</p>
<p>今晚说考试小范围，十一二页PPT，（傻瓜题），一两个大题</p>
<p>下个礼拜随堂做一下（下周五）</p>
<p>别交白卷就行</p>
</li>
<li>
<p>期末作业 50</p>
<p>理解性的报告：看论文，写创新点</p>
</li>
</ul>
<p>好好做，不会低分，不会为难大家</p>`,r:{minutes:1.01,words:303},t:"人工智能基础",y:"a"}}],["/education/bs/ai-tech/1.%20%E6%A6%82%E8%AE%BA.html",{loader:()=>l(()=>import("./1. 概论.html-tvBFQRtE.js"),__vite__mapDeps([165,1])),meta:{d:1700646963e3,e:`
<ul>
<li>基本概念</li>
<li>发展简史</li>
<li></li>
</ul>
<p>智能的特征</p>
<h2>基本概念</h2>
<h3>智能</h3>
<p>智能是知识与智力的总和</p>
<h3>智能的特征</h3>
<ul>
<li>
<p>感知能力</p>
</li>
<li>
<p>记忆与思维能力</p>
<ul>
<li>
<p>逻辑思维（抽象思维）</p>
</li>
<li>
<p>形象思维（直感思维）</p>
</li>
<li>
<p>顿悟思维（灵感思维）</p>
</li>
</ul>
</li>
<li>
<p>学习能力</p>
</li>
<li>
<p>行为能力（表达能力）</p>
</li>
</ul>`,r:{minutes:2.04,words:611},t:"概论",y:"a"}}],["/education/bs/ai-tech/2.%20%E8%B0%93%E8%AF%8D.html",{loader:()=>l(()=>import("./2. 谓词.html-D8QiwULP.js"),__vite__mapDeps([166,1])),meta:{d:1675410392e3,e:`
<p><strong>2.1</strong> 知识与知识表示的概念</p>
<p><strong>2.2</strong> 一阶谓词逻辑表示法</p>
<p><strong>2.3</strong> 产生式表示法</p>
<p><strong>2.4</strong> 框架表示法</p>
<p><strong>2.5</strong> 知识图谱</p>
<p>知识的特征</p>
<ul>
<li>相对正确性</li>
<li>不确定性</li>
<li>可表示性与可利用性</li>
</ul>
<h2>一阶谓词逻辑表示法</h2>
<h3>命题</h3>
<h3>谓词</h3>
<p>谓词的一般形式： P (x1, x2,…, xn)</p>`,r:{minutes:.84,words:253},t:"知识表示与知识图谱",y:"a"}}],["/education/bs/ai-tech/3.%20%E6%8E%A8%E7%90%86.html",{loader:()=>l(()=>import("./3. 推理.html-DZUjrLSR.js"),__vite__mapDeps([167,1])),meta:{d:1700646963e3,e:`
<h2>推理的基本概念</h2>
<p>推理的方向</p>
<ol>
<li>正向推理</li>
<li>逆向推理</li>
<li>混合推理</li>
</ol>
<p>推理流程图</p>
<p>假言推理</p>
<p>全称固化</p>
<h2>自然演绎推理</h2>
<h2>谓词公式转化为子句集</h2>
<p>Skolem 标准形式</p>
<ul>
<li>单一子句只有析取</li>
<li>子句间合取</li>
</ul>
<h2>归结反演</h2>
<p>一道题</p>
<ol>
<li>先构造谓词公式</li>
<li>否定结论</li>
<li>把谓词公式集{<em>F</em>， <em>Q</em>} 化为子句集<em>S</em>。</li>
<li>归结</li>
</ol>`,r:{minutes:.41,words:124},t:"推理",y:"a"}}],["/education/bs/ai-tech/4.%20%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E6%8E%A8%E7%90%86%E6%96%B9%E6%B3%95.html",{loader:()=>l(()=>import("./4. 不确定性推理方法.html-D1Qvc2-G.js"),__vite__mapDeps([168,1])),meta:{d:1700646963e3,e:`
<h2>不确定性推理的基本问题</h2>
<p>不确定性的表示与度量</p>
<ol>
<li>知识不确定性的表示</li>
<li>证据不确定性的表示</li>
<li>不确定性的度量</li>
</ol>
<ul>
<li>信任函数</li>
<li>似然函数</li>
</ul>
<h2>可信度方法</h2>
<ul>
<li>可信度：根据经验对一个事物或现象为真的相信程度。</li>
<li>可信度带有较大的主观性和经验性，其准确性难以把握。</li>
<li>C－F模型：基于可信度表示的不确定性推理的基本方法。</li>
</ul>
<h3><strong>1.</strong> 知识不确定性的表示</h3>`,r:{minutes:1.65,words:495},t:"不确定性推理",y:"a"}}],["/education/bs/ai-tech/5.%20%E6%90%9C%E7%B4%A2%E7%AD%96%E7%95%A5.html",{loader:()=>l(()=>import("./5. 搜索策略.html-Dr3m3r8i.js"),__vite__mapDeps([169,1])),meta:{d:1700646963e3,e:`
<h2>搜索的概念</h2>
<p>搜索中需要解决的基本问题：</p>
<ol>
<li>是否一定能找到一个解。</li>
<li>找到的解是否是最佳解。</li>
<li>时间与空间复杂性如何。</li>
<li>是否终止运行或是否会陷入一个死循环。</li>
</ol>
<p>搜索策略</p>
<ol>
<li>
<p>育目搜索：在不具有对特定问题的任何有关信息的条件下，按固定的步骤依次或随机调用操作算子) 进行的搜索。</p>
</li>
<li>
<p>启发式搜索：考虑特定问题领域可应用的知识，动态地确定调用操作算子的步骤，优先选择较适合的操作算子，尽量减少不必要的搜索，以求尽快地到达结束状态。</p>
</li>
</ol>`,r:{minutes:1.97,words:592},t:"搜索求解策略",y:"a"}}],["/education/bs/ai-tech/6.%20%E6%99%BA%E8%83%BD%E8%AE%A1%E7%AE%97.html",{loader:()=>l(()=>import("./6. 智能计算.html-BYqaStHx.js"),__vite__mapDeps([170,1])),meta:{d:1700646963e3,e:`
<p>Computational Intelligence</p>
<ul>
<li>进化计算</li>
<li>群智计算(群智能)</li>
</ul>
<h2>进化计算</h2>
<p>基础框架就是遗传算法</p>
<h3>生物学背景</h3>
<p>借鉴+扯的假设</p>
<p>发成果很难，需要包装</p>
<p>GA</p>
<p>fitness</p>
<h2>粒子群算法 PSO</h2>
`,r:{minutes:.2,words:59},t:"智能计算",y:"a"}}],["/education/bs/ai-tech/7.%20%E4%B8%93%E5%AE%B6%E7%B3%BB%E7%BB%9F%E5%92%8C%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0.html",{loader:()=>l(()=>import("./7. 专家系统和机器学习.html-CaSWoO62.js"),__vite__mapDeps([171,1])),meta:{d:1703688112e3,e:`
<h2>专家系统</h2>
<h2>机器学习</h2>
<ul>
<li>有监督</li>
<li>无监督</li>
</ul>
`,r:{minutes:.08,words:23},t:"专家系统与机器学习",y:"a"}}],["/education/bs/ai-tech/8.%20BP.html",{loader:()=>l(()=>import("./8. BP.html-BKsl3hFS.js"),__vite__mapDeps([172,1])),meta:{d:1703688112e3,e:`
<p>输出层连接权调整公式</p>
<p>隐层连接权调整公式</p>
`,r:{minutes:.08,words:24},t:"BP 神经网络",y:"a"}}],["/education/bs/ai-tech/",{loader:()=>l(()=>import("./index.html-BMl93M2v.js"),__vite__mapDeps([173,1])),meta:{d:1700646963e3,e:`
<p>想听的话，听一下，不听问题也不大</p>
<p>四周以后有一个非常简单的小测试（考试范围也会发给大家）</p>
<p>期末一个大作业（分组交，人数目前还没有确定，可以给老师提建议）</p>
<p>轻松愉快的拿到一个不错的分数</p>
<ul>
<li>
<p>平时出勤 10</p>
<p>点 1-2 次名，不是每次课点名</p>
</li>
<li>
<p>期中测验 40</p>
<p>小测验，很简单，省的骂hhh</p>
<p>冶金班平均34</p>
</li>
<li>
<p>期末作业 50</p>
<p>大作业</p>
</li>
</ul>
<h2>考核</h2>
<h3>期中测验</h3>`,r:{minutes:1.94,words:582},t:"人工智能技术",y:"a"}}],["/education/bs/block-chain/1.%20%E5%8C%BA%E5%9D%97%E9%93%BE%E5%8F%91%E5%B1%95.html",{loader:()=>l(()=>import("./1. 区块链发展.html-BEEGKOjk.js"),__vite__mapDeps([174,1])),meta:{d:1678024743e3,e:`
<h3>1.0 Bitcoin</h3>
<h3>2.0 Ethereum 以太坊</h3>
<p>比特币 + 智能合约</p>
<p>解决了：</p>
<ul>
<li>让链可以具有定制化功能，有实际功能</li>
</ul>
<h3>3.0 Fabric</h3>
<p>智能合约 + 监管</p>
<p>解决了：</p>
<ul>
<li>分级权限管理</li>
<li>访问权限控制，保障隐私</li>
</ul>
<p>适合B2B，银行里面常用</p>
<p>Fabric主要语言是Go，但是Java和C也可以写</p>
<p>写智能合约一般没有什么问题</p>
<h3>分类</h3>
`,r:{minutes:1.08,words:324},t:"区块链发展",y:"a"}}],["/education/bs/block-chain/2.%20%E5%AF%86%E7%A0%81%E5%AD%A6%E5%9F%BA%E7%A1%80.html",{loader:()=>l(()=>import("./2. 密码学基础.html-BxU2J4ha.js"),__vite__mapDeps([175,1])),meta:{d:1679321449e3,e:`
<h2>常见加密算法</h2>
<p>加密 Encryption</p>
<ul>
<li>
<p>对称</p>
<p>IV，会加入一个随机向量，来保证密码的随机</p>
<p>eg. DES, IDEA, AES</p>
</li>
<li>
<p>非对称</p>
</li>
</ul>
<p>哈希函数 Hash Function</p>
<p>数字签名 DIgital Signature</p>
<p>对称加密</p>
<p>Symmetric Cryptography</p>
<p>又称私钥加密</p>
<p>非对称加密</p>
<p>如RSA</p>
<p>哈希加密</p>
<blockquote>
<p>暴力攻击</p>
</blockquote>`,r:{minutes:5.67,words:1702},t:"密码学基础",y:"a"}}],["/education/bs/block-chain/3.%20%E7%A7%98%E5%AF%86%E5%85%B1%E4%BA%AB.html",{loader:()=>l(()=>import("./3. 秘密共享.html-eZAbhYPa.js"),__vite__mapDeps([176,1])),meta:{d:1679321449e3,e:`
<blockquote>
<p>基本思想：</p>
<p>一元 k 次多项式函数</p>
<p>只要有 k+1 个点，就可以求出来整个函数</p>
</blockquote>
<h2>门限秘密共享方案</h2>
<h3>定义</h3>
<p>秘密 s 通过某种方式被分成 n 个部分，每个部分称为份额(share)， 每个份额由一个参与者持有，使得：</p>
<ul>
<li>由 t 个或多于 t 个参与者所持有的份额可重构秘密 s;</li>
<li>由少于 t 个参与者所持有的份额则无法重构秘密 s;</li>
</ul>
<p>称该方案为(t,n)门限秘密共享方案， t 称为门限值。少于 t 个参与者所持有的份额得不到关于秘密 s 的任何信息则 称该方案是完善的。</p>`,r:{minutes:1.79,words:536},t:"Shamir 秘密共享",y:"a"}}],["/education/bs/block-chain/4.%20%E5%93%88%E5%B8%8C%E5%87%BD%E6%95%B0.html",{loader:()=>l(()=>import("./4. 哈希函数.html-CSDU2NZC.js"),__vite__mapDeps([177,1])),meta:{d:1679321449e3,e:`
<h2>Hash函数</h2>
<p>哈希函数</p>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>:</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>k</mi></msup><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><msup><mi>N</mi><mo>+</mo></msup></mrow><annotation encoding="application/x-tex">H: \\{0,1\\}^*\\rightarrow\\{0,1\\}^k,k\\in N^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7713em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span></p>`,r:{minutes:6.01,words:1802},t:"Hash Function 哈希函数",y:"a"}}],["/education/bs/block-chain/5.%20%E6%95%B0%E5%AD%97%E8%B4%A7%E5%B8%81.html",{loader:()=>l(()=>import("./5. 数字货币.html-BMQW7D74.js"),__vite__mapDeps([178,1])),meta:{d:1680090419e3,e:`
<h2>Simple Cryptocurrencies</h2>
<p>钱转给谁只需要知道对方的公钥</p>
<p>要转出钱需要知道自己的私钥</p>
<p>真伪没问题：公钥校验</p>
<p>这样一张简单的钱，存在的问题：</p>
<ol>
<li>复制粘贴（双花）</li>
<li>无找零</li>
<li>无编号</li>
</ol>
<p>创世区块</p>
<p>账本：记录转账区块，每次记录前校验这个交易是否合法</p>
<p>分叉，用最长链原则来选择</p>
<p>难题给的越难，比如说10分钟出一块，那就出现分叉的概率越低。</p>
<p>交易脚本</p>
<ul>
<li>P2PK</li>
<li>P2SH</li>
</ul>`,r:{minutes:.49,words:147},t:"Cryptocurrencies 数字货币",y:"a"}}],["/education/bs/block-chain/6.%20%E5%85%B1%E8%AF%86%E6%9C%BA%E5%88%B6.html",{loader:()=>l(()=>import("./6. 共识机制.html-bGLHD17M.js"),__vite__mapDeps([179,1])),meta:{d:1680752829e3,e:`
<p>达成共识以后产生一个相同的账单。</p>
<p>分布式共识机制</p>
<p>只能选择一个节点来记录</p>
<p>计算是为了增加这个成本，不能随便造假了</p>
<ul>
<li>双花攻击</li>
<li>女巫攻击：可以伪造身份</li>
</ul>
<p>pow</p>
`,r:{minutes:.24,words:71},t:"Consensus 共识机制",y:"a"}}],["/education/bs/block-chain/7.%20pow.html",{loader:()=>l(()=>import("./7. pow.html-MiegJsJM.js"),__vite__mapDeps([180,1])),meta:{d:1681208623e3,e:`
<ul>
<li>proof-of-work:</li>
<li>Proof-of-stake: 这样越有钱的人越能记，变得越来越有钱（最有钱的人一直在记）</li>
</ul>
<p>51% attacker</p>
`,r:{minutes:.12,words:35},t:"pow",y:"a"}}],["/education/bs/block-chain/8.%20Fabric.html",{loader:()=>l(()=>import("./8. Fabric.html-CCeTKQ9F.js"),__vite__mapDeps([181,1])),meta:{d:1681208623e3,e:`
<p>联盟链=公链-去中性化+监管</p>
`,r:{minutes:.04,words:12},t:"Fabric",y:"a"}}],["/education/bs/block-chain/",{loader:()=>l(()=>import("./index.html-Cu_0WDaj.js"),__vite__mapDeps([182,1])),meta:{d:1677587448e3,e:`
<p>实验，5月7号（11周周一）下午五点提交给课代表：学号加姓名</p>
<h2>成绩</h2>
<ul>
<li>
<p>出勤20</p>
<p>点3-4次名，点名前一天会跟大家说</p>
</li>
<li>
<p>测试20</p>
<p>3-4次，很简单和讲的内容强相关，只要认真听，这个部分基本上都是满分</p>
<p>一般点名的时候，会有课堂测验</p>
<ol>
<li>下次课测验（第三周），内容就是密码共享，比如说给一个(t, n)，让讲出秘密共享的想法，也可以举一个例子</li>
</ol>
</li>
<li>
<p>实验30</p>
<p>Bitcoin + Ethereum，比去年的难度小很多很多，实验指导书有一个步骤，只要按要求一步一步做，一定可以做出来</p>
<blockquote>
<p>主要是看完成的质量；很多都会拿到满分</p>
</blockquote>
<p>实验报告不能写100多页，会规定页数</p>
<p>限制一共25页，宋体小4，行间距22，第一个实验10页左右、第二个NFT可以多一点15页、第三个；超了扣分，老师看着累写着也累</p>
<p>三选二，指导书第五周发</p>
<ul>
<li>merkle tree</li>
</ul>
</li>
<li>
<p>展示30</p>
<p>presentation（research paper）（group work）</p>
<p>小组完成，平均分25分左右，答辩的时候给的是小组的平均分，然后按照贡献度占比得到每个人的权重的分（有的人分多有的少，定量去算）</p>
<p>4-5人一组</p>
<p>贡献值，</p>
<p>汇报，</p>
<p>可以选择做presentation，分会高</p>
<p>也可以选择做research paper，如果是不想展示，但是分会低一些</p>
<p>答辩20分钟，</p>
<blockquote>
<p>很多人拿到的都是满分，超了就都按满分算</p>
</blockquote>
<p>反正不能按报告来叫，因为chatgpt可以写</p>
<p>展示的ppt下周交一下</p>
<p>可以拷到电脑里，或者自己带电脑用</p>
<p>展示时间严格控制在9分钟以内，</p>
<p>不要一直照着ppt念，不要ppt打得都是文字，这样就打的分会比较低</p>
</li>
</ul>`,r:{minutes:2.8,words:841},t:"课程概要",y:"a"}}],["/education/bs/deep-learning/1.%20%E5%88%A4%E5%88%AB%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95.html",{loader:()=>l(()=>import("./1. 判别学习方法.html-Cmx8wiTQ.js"),__vite__mapDeps([183,1])),meta:{d:1677587448e3,e:`
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/640.jpeg" alt="图片" loading="lazy"></p>
<h2>机器学习</h2>
<p>寻找目标的重要的特征，并排序</p>
<p>机器学习其实是在做一个特征工程</p>
<p>深度学习目前成本很高</p>
<h3>任务T</h3>
<p>两类任务：分类、回归（连续空间）</p>
<p>多任务模型，把任务拆解</p>
<h3>经验E</h3>
<p>随着任务的不断执行，经验的积累会带来计算机性能的提升。</p>
<p>但也会出现过拟合</p>`,r:{minutes:5.2,words:1559},t:"回归",y:"a"}}],["/education/bs/deep-learning/2.%20%E7%94%9F%E6%88%90%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95.html",{loader:()=>l(()=>import("./2. 生成学习方法.html-_nFp4UBe.js"),__vite__mapDeps([184,1])),meta:{d:1679321449e3,e:`
<p>机器学习的两个分支：</p>
<ul>
<li>
<p>判别学习方法</p>
<p>对条件概率<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(y|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>进行建模，然后就可以根据学习结果对数据进行分类</p>
</li>
<li>
<p>生成学习方法</p>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo>⇒</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(x|y), P(y)\\Rightarrow P(y|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></p>
<p>对先验概率进行建模，然后利用贝叶斯法求后验概率</p>
<p>对条件概率建模，需要的假设更多</p>
</li>
</ul>`,r:{minutes:5.69,words:1708},t:"生成学习方法",y:"a"}}],["/education/bs/deep-learning/3.%20%E5%86%B3%E7%AD%96%E6%A0%91.html",{loader:()=>l(()=>import("./3. 决策树.html-HSHB1IYS.js"),__vite__mapDeps([185,1])),meta:{d:1679321449e3,e:`
<p>决策树是一种用于分类和回归任务的非参数监督学习算法。它是一种分层树形结构，由<strong>根节点、分支、内部节点和叶节点</strong>组成。每个内部节点表示一个属性上的测试，每个分支代表一个测试输出，每个叶节点代表一种类别。</p>
<h3>构造</h3>
<h3>剪枝</h3>
<p>剪枝是指在决策树构造过程中，对每个节点在划分前后计算信息增益，若划分后的信息增益小于划分前，则不对该节点进行划分，即把该节点变为叶节点。</p>
<blockquote>
<p>可以防止过拟合。</p>
</blockquote>
<h4>预剪枝</h4>
<p>预剪枝是指在决策树构造过程中，对每个节点在划分前后计算信息增益，若划分后的信息增益小于划分前，则不对该节点进行划分，即把该节点变为叶节点。</p>`,r:{minutes:1.58,words:474},t:"Decision Tree 决策树",y:"a"}}],["/education/bs/deep-learning/4.%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0.html",{loader:()=>l(()=>import("./4. 集成学习.html-s6MZiXd4.js"),__vite__mapDeps([186,1])),meta:{d:1679321449e3,e:`
<h2>Bagging</h2>
<p>Bagging 算法是一种集成学习的方法，它的基本思想是：通过构建并结合多个分类器来完成学习任务，最终将各个分类器的预测结果进行结合，得到最终的预测结果。Bagging算法的基本思想是：通过构建并结合多个分类器来完成学习任务，最终将各个分类器的预测结果进行结合，得到最终的预测结果。</p>
<h2>Boosting</h2>
<p>Boosting 算法是一种集成学习的方法，它的基本思想是将弱分类器组合成一个强分类器。Boosting算法的基本思想是：通过迭代的方式，每一次迭代都学习一个弱分类器，然后将这些弱分类器进行加权组合，得到最终的强分类器。Boosting算法的主要思想是：通过迭代的方式，每一次迭代都学习一个弱分类器，然后将这些弱分类器进行加权组合，得到最终的强分类器。</p>`,r:{minutes:2.16,words:647},t:"集成学习",y:"a"}}],["/education/bs/deep-learning/5.%20%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97.html",{loader:()=>l(()=>import("./5. 随机森林.html-CdtnH08s.js"),__vite__mapDeps([187,1])),meta:{d:1679321449e3,e:`
<p>袋外错误率 Oob Error Rate</p>
<p>无需交叉认证或测试集，在训练过程中，每个样本被选中的概率为 1 - 1/e ≈ 63.2%。袋外样本的预测结果不会被用于训练，因此可以用来评估模型的泛化能力。</p>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mn>6</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><mo stretchy="false">[</mo><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mn>0.5</mn><mo stretchy="false">]</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">f_6(x)=\\sum_{i=1}^n([x_i+0.5])^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">([</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord">0.5</span><span class="mclose">]</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p>`,r:{minutes:1.19,words:357},t:"Random Forest 随机森林",y:"a"}}],["/education/bs/deep-learning/6.%20SVM.html",{loader:()=>l(()=>import("./6. SVM.html-BtePpduQ.js"),__vite__mapDeps([188,1])),meta:{d:1679578424e3,e:`
<p>支持向量机</p>
<p>深度学习火起来以前，最火的，分类最好的算法就是 SVM 和随机森林</p>
<p>对于分界线上的元素，遵循公平性原则</p>
<p>线性分类器：可以画超平面去分类为两类</p>
<p>线性函数，计算简单，易于求解</p>
<p>间隔最大化：分类超平面和两类数据直接的间隔尽可能的大，两边都保持尽量远（保证公平性）</p>
<p>正样本、负样本</p>
<h3>核函数</h3>
<ul>
<li>线性核函数</li>
<li>多项式核函数</li>
<li>高斯核函数</li>
</ul>
<p>CNN：卷积神经网络</p>
<ul>
<li>特征提取很</li>
</ul>`,r:{minutes:1.21,words:364},t:"SVM",y:"a"}}],["/education/bs/deep-learning/7.%20CNN.html",{loader:()=>l(()=>import("./7. CNN.html-Ds6n1-yf.js"),__vite__mapDeps([189,1])),meta:{d:1679578424e3,e:`
<p>Multilayer Perceptron(MLP)，多层感知机</p>
<h2>全连接网络</h2>
<ul>
<li>每一个细胞与下一层所有细胞都连接</li>
</ul>
<p>输入层、隐藏层、输出层</p>
<p>每个神经元都有自己单独的权重向量</p>
<p>目标/损失函数：</p>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>y</mi><mo>−</mo><msup><mi>a</mi><mn>2</mn></msup><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mo>∑</mo><mi>j</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>j</mi></msub><mo>−</mo><msub><mi>a</mi><mi>j</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">C=\\frac{1}{2}||y-a^2||=\\frac{1}{2}\\sum_j(y_j-a_j)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord">∣∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2809em;vertical-align:-0.4358em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.162em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1002em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p>`,r:{minutes:2.91,words:873},t:"CNN 卷积神经网络",y:"a"}}],["/education/bs/deep-learning/8.%20RNN.html",{loader:()=>l(()=>import("./8. RNN.html-BmFySEOc.js"),__vite__mapDeps([190,1])),meta:{d:1675410392e3,e:`
`,r:{minutes:0,words:1},t:"RNN",y:"a"}}],["/education/bs/deep-learning/",{loader:()=>l(()=>import("./index.html-gaoQNKm-.js"),__vite__mapDeps([191,1])),meta:{d:1677587448e3,e:`
<p>大部分代码不需要自己写，但是要试一试现有的 Framework 练练</p>
<h2>大纲</h2>
<h3>机器学习导论</h3>
<blockquote>
<p>主要讲基于微分方程的一些算法</p>
</blockquote>
<ul>
<li>
<p>机器学习综述</p>
</li>
<li>
<p>线性回归、logistics回归</p>
<p>Redge/LASSO</p>
</li>
<li>
<p>数据清洗、特征选择</p>
</li>
<li>
<p>决策树与随机森林</p>
</li>
</ul>
<h3>深度学习</h3>
<blockquote>
<p>黑盒，解释性可以有但是不能彻底解释清楚</p>
</blockquote>`,r:{minutes:1.56,words:468},t:"深度学习技术",y:"a"}}],["/education/bs/deep-learning/rl.html",{loader:()=>l(()=>import("./rl.html-MOhnKPic.js"),__vite__mapDeps([192,1])),meta:{d:1670083932e3,e:`
<p>强化学习是通过与环境交互来学习如何做出最优决策的一种机器学习方法。在强化学习中，一个智能体（agent）通过与环境进行交互，观察环境的状态并基于当前状态做出决策，然后获取环境的反馈（奖励或惩罚），并根据反馈来更新其决策策略，以获得更好的性能。</p>
<p>强化学习通常用于解决与时间和序列有关的问题，例如机器人控制、游戏 AI 等。强化学习的性能提升主要通过以下几个方面实现：</p>
<ol>
<li>数据增强：通过在不同的环境下进行训练，使得智能体能够处理更广泛的情况，从而提高其泛化能力。</li>
<li>更好的状态表示：强化学习中的状态通常由一组特征表示，良好的状态表示能够提供更多的信息并帮助智能体做出更好的决策。</li>
<li>更好的策略学习算法：策略学习算法是强化学习中最关键的部分之一。更好的策略学习算法能够帮助智能体更快地学习到最优策略，从而提高其性能。</li>
<li>智能体的探索策略：强化学习中的智能体需要通过不断尝试不同的决策来学习最优策略。智能体的探索策略可以影响其性能，更好的探索策略可以帮助智能体更快地学习到最优策略。</li>
<li>奖励函数设计：奖励函数是指智能体在与环境交互中获得的奖励或惩罚信号。良好的奖励函数设计能够帮助智能体更快地学习到最优策略。</li>
</ol>`,r:{minutes:5.31,words:1592},t:"强化学习",y:"a"}}],["/education/bs/discrete-math/1.%20%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91.html",{loader:()=>l(()=>import("./1. 命题逻辑.html-D69PKkm6.js"),__vite__mapDeps([193,1])),meta:{d:1703688112e3,e:`
<h3>逻辑与推理</h3>
<h4>逻辑</h4>
<p>--是研究人的思维的科学</p>
<ol>
<li>
<p>辩证逻辑：类似政治类的课程，思维中的辩证法</p>
<p>具体问题具体分析</p>
</li>
<li>
<p>形式逻辑：思维的形式和一般规律</p>
<p>离散数学关心的是形式逻辑</p>
<p>形式逻辑主要关注的是演绎推理</p>
<p>概念（已知的事实） =&gt; 判断推理（客观规律和规则） =&gt; 推理（推出来的结论）</p>
<p>概念清楚、判断正确</p>
</li>
<li>
<p>数理逻辑：用数学方法研究形式逻辑</p>
<p>数学方法：建立一套有严格定义的符号（），来研究形式逻辑</p>
<p>又称为符号逻辑，通过符号系统</p>
<p>我们这里只研究其中的命题逻辑和谓词逻辑</p>
<p>命题逻辑，如</p>
</li>
</ol>`,r:{minutes:10.46,words:3137},t:"命题逻辑",y:"a"}}],["/education/bs/discrete-math/2.%20%E8%B0%93%E8%AF%8D%E9%80%BB%E8%BE%91.html",{loader:()=>l(()=>import("./2. 谓词逻辑.html-B3GoobEL.js"),__vite__mapDeps([194,1])),meta:{d:1703688112e3,e:`
<p>量词，任意、存在</p>
<p>谓词，M(x): x是什么，大于小于</p>
<p>一元谓词、二元谓词、三元谓词</p>
<p>把谓词字母填以客体所得的式子就是谓词填式</p>
<h4>小结</h4>
<p>命题</p>
<p>原子命题、复合命题-联结词、命题公式</p>
<p>永真式</p>
<p>永真蕴含式、等价公式</p>
<h3>基本概念</h3>
<h4>客体与客体变元</h4>
<p>客体：能够独立存在的事物，也成为个体。可以是具体的，也可以是抽象的事物，可以是小王、沈阳、社会主义等</p>
<p>客体变元：小写字母xyz，是变量</p>
<p>注意：客体变元本身不是客体</p>`,r:{minutes:2.22,words:667},t:"谓词逻辑",y:"a"}}],["/education/bs/discrete-math/3.%20%E9%9B%86%E5%90%88%E8%AE%BA.html",{loader:()=>l(()=>import("./3. 集合论.html-CI1zj1U4.js"),__vite__mapDeps([195,1])),meta:{d:1703688112e3,e:`
<p>∈:表示元素与集合的属于关系。</p>
<h3>集合间的关系</h3>
<p>被包含关系(子集)</p>
<p>相等关系</p>
<p>空集：矛盾式定义空集</p>
<p>空集是唯一的</p>
<p>幂集元素的编码</p>
<h3>特殊集合</h3>
<h4>全集 E</h4>
<h4>空集 phi</h4>
<ol>
<li>空集属于任意集合</li>
<li>空集是唯一的</li>
</ol>
<h4>集合的幂集 P(A)</h4>
<p>A是集合，由A的所有子集构成的集合，称 之为A的幂集。记作P(A)或2A。</p>
<h3>集合的运算</h3>
<h4>交</h4>
<p>性质</p>`,r:{minutes:1.35,words:406},t:"集合论",y:"a"}}],["/education/bs/discrete-math/4.%20%E4%BA%8C%E5%85%83%E5%85%B3%E7%B3%BB.html",{loader:()=>l(()=>import("./4. 二元关系.html-BWFNiZ-H.js"),__vite__mapDeps([196,1])),meta:{d:1703688112e3,e:`
<h2>序偶与集合的笛卡尔积</h2>
<p>定义:由两个对象x、y组成的序列称为有序二元组，也称之为序偶，记作&lt;x,y&gt;；称x、y分别为序偶&lt;x,y&gt;的第一，第二元素。</p>
<p>注意，序偶&lt;x,y&gt;与集合{x,y}不同：</p>
<p>序偶&lt;x,y&gt;：元素x和y有次序；</p>
<p>集合{x,y}：元素x和y的次序是无关紧要的。</p>
<h4>序偶与有序n元组</h4>
<p>序偶&lt;x, y&gt;与集合{x, y}不同，序偶有次序，集合无次序</p>
<h4>笛卡尔积</h4>
<p>mn</p>
<h2>关系及其表示法</h2>`,r:{minutes:2.23,words:669},t:"二元关系",y:"a"}}],["/education/bs/discrete-math/5.%20%E5%87%BD%E6%95%B0.html",{loader:()=>l(()=>import("./5. 函数.html--dph2X8b.js"),__vite__mapDeps([197,1])),meta:{d:1703688112e3,e:`
<ol>
<li>函数的概念</li>
<li>逆函数和复合函数</li>
<li>特征函数与模糊子集</li>
<li>基数的概念</li>
<li>可数集与不可数集</li>
<li>基数的比较</li>
</ol>
<p>151：1 3 5 6</p>
`,r:{minutes:.18,words:53},t:"函数",y:"a"}}],["/education/bs/discrete-math/6.%20%E5%9B%BE%E8%AE%BA.html",{loader:()=>l(()=>import("./6. 图论.html-DhuajDjz.js"),__vite__mapDeps([198,1])),meta:{d:1703688112e3,e:`
<h2>图的概念</h2>
<p>结点 vertices</p>
<p>边 Edges</p>
<p>环</p>
<ul>
<li>自环：a-&gt;a</li>
<li>平凡环：a-&gt;b, b-&gt;a</li>
</ul>
<p>平行边：关联于同一对结点的若干条边</p>
<p>有向图：只有有向边的图。</p>
<p>无向图：只有无向边的图。</p>
<p>简单图：不含有环和平行边的图。</p>
<p>多重图：含有平行边的图。</p>
<p>无权图：边长均为1</p>
<p>带权图：</p>
<p>度</p>
<h2>路的概念</h2>
<p>路：其中ei是关联vi-1 ,vi的边, 则称结点和边的交叉序列</p>`,r:{minutes:3.74,words:1122},t:"图论",y:"a"}}],["/education/bs/discrete-math/",{loader:()=>l(()=>import("./index.html-Cn8kOnlL.js"),__vite__mapDeps([199,1])),meta:{d:1703688112e3,e:`
<p>知识点很多，都要记住</p>
<p>考的不难</p>
<p>期末变成考察，会有结课题目（大作业和几道简单的题目在bb平台）</p>
<p>一天的时间，在bb</p>
<p>两部分，这两部分提交的内容还不太一致</p>
<p>17周之后</p>
<p>课本答案：</p>
<p><a href="https://wenku.baidu.com/view/46fd79776bec0975f565e2a7.html" target="_blank" rel="noopener noreferrer">https://wenku.baidu.com/view/46fd79776bec0975f565e2a7.html</a></p>`,r:{minutes:2.76,words:828},t:"离散数学",y:"a"}}],["/education/bs/discrete-math/%E5%AE%9E%E9%AA%8C.html",{loader:()=>l(()=>import("./实验.html-Cx2d23dI.js"),__vite__mapDeps([200,1])),meta:{d:1703688112e3,e:`
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 作案，记为事件 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>；<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 作案，记为事件 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>；时间在午夜前，记为事件 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>；午夜时灯光亮着，记为事件 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span></p>`,r:{minutes:1.25,words:375},t:"实验",y:"a"}}],["/education/bs/discrete-math/%E6%80%BB%E5%A4%8D%E4%B9%A0.html",{loader:()=>l(()=>import("./总复习.html-CBDko4TS.js"),__vite__mapDeps([201,1])),meta:{d:1703688112e3,e:`
<p>集合和二元关系</p>
<h3>命题逻辑</h3>
<p>联结词的定义(含义及真值表定义).</p>
<p>会命题符号化.</p>
<p>永真式的证明.</p>
<p>永真蕴涵式的证明,记住并能熟练应用<strong>常用公式</strong></p>
<p>等价公式的证明,记住并能熟练应用<strong>常用公式</strong></p>
<p>会写命题公式的范式,能应用范式解决问题.</p>
<p>熟练掌握命题逻辑三种推理方法.</p>
<h3>谓词逻辑</h3>
<p>准确掌握有关概念.</p>
<p>会命题符号化.</p>
<p>掌握常用的等价公式和永真蕴涵式.包括:</p>
`,r:{minutes:2.37,words:710},t:"总复习",y:"a"}}],["/education/bs/rec-sys/",{loader:()=>l(()=>import("./index.html-Dx8peSRX.js"),__vite__mapDeps([202,1])),meta:{d:1669996395e3,e:`
<p>推荐系统</p>
<ul>
<li>
<p>经典算法</p>
<ul>
<li>
<p>User-based</p>
</li>
<li>
<p>Item-based</p>
</li>
<li>
<p>Context-based</p>
<ul>
<li>
<p>Social rec</p>
<p>TrustSVD</p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>深度学习</p>
</li>
</ul>
<h2>算法库</h2>
<p>Librec 使用</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">librec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> rec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -conf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ../core/src/main/resources/rec/context/rating/trustsvd-test.properties</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mvn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install:install-file</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -Dfile=librec-core-3.0.0.jar</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -DgroupId=net.librec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -DartifactId=librec-core</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -Dversion=3.1.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -Dpackaging=jar</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.18,words:53},t:"Recommendation System",y:"a"}}],["/education/bs/xr-tech/1.%20VR.html",{loader:()=>l(()=>import("./1. VR.html-D3zlNj8o.js"),__vite__mapDeps([203,1])),meta:{d:1678024743e3,e:`
<p>VR 的三个目标</p>
<ul>
<li>沉浸性</li>
<li>交互性</li>
<li>无感知性</li>
</ul>
<p>感知输入设备</p>
<ul>
<li>
<p>手部追踪</p>
<p>手套、手柄</p>
</li>
<li>
<p>眼部追踪</p>
</li>
<li>
<p>腕带</p>
<p>解放双手</p>
</li>
<li>
<p>动捕衣服</p>
<p>身上关键的关节有捕捉点，有助于捕捉身体动作</p>
</li>
</ul>
<p>六个自由度</p>
<h2>HMD</h2>
<h3>数学原理</h3>
<p>高斯成像公式计算：</p>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mi>d</mi></mfrac><mo>+</mo><mfrac><mn>1</mn><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mfrac><mo>=</mo><mfrac><mn>1</mn><mi>f</mi></mfrac></mrow><annotation encoding="application/x-tex">\\frac{1}{d}+\\frac{1}{d'}=\\frac{1}{f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3262em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>`,r:{minutes:3.41,words:1024},t:"VR 基础",y:"a"}}],["/education/bs/xr-tech/2.%20VRML.html",{loader:()=>l(()=>import("./2. VRML.html-B4bM-Szo.js"),__vite__mapDeps([204,1])),meta:{d:1679321449e3,e:`
<blockquote>
<p>随堂测验，10 分，学完 VRML 用这个写一段代码，可以网上找到参考资料</p>
<p>小组为单位去写，给充足的时间去写</p>
</blockquote>
<p>VR Modeling Language</p>
<p>虚拟现实建模语言，文件后缀：<code>.wrl</code></p>
<p>这个是基础的内容，比 unity 等低级得多，与 unity 相比，这个像是 c 语言，这个是底层语言</p>
<p>可以描述物体的位置和运动</p>
<p>讨论：</p>
<ul>
<li>VRML1.0 和 2.0 的区别
<ul>
<li>3D 声音</li>
<li>交互性</li>
<li>面向对象结构变更</li>
</ul>
</li>
<li>有哪些节点，共 54 个</li>
</ul>`,r:{minutes:1.25,words:375},t:"VRML",y:"a"}}],["/education/bs/xr-tech/3.%20CG%20Intro.html",{loader:()=>l(()=>import("./3. CG Intro.html-DjDyYd7j.js"),__vite__mapDeps([205,1])),meta:{d:1679321449e3,e:`
<p>3D图像转成计算机可以展示的2D的内容</p>
<h2>坐标变换</h2>
<p>平移、旋转、缩放、错切</p>
<h3>平移 （Translation）</h3>
<p>在3D空间中，假设我们需要将一个点平移到另一个位置。假设空间中的一点P，其用坐标表示为（x,y,z）；将其向 x方向平移 tx，向y方向平移ty, 向z方向平移tz, 设平移后点的坐标为（x’,y’,z'）,则上述点的平移操作可以归纳为如下公式：</p>
<h3>缩放 （Scaling）</h3>
<p>在3D空间中，对点（x,y,z）常用的另一种操作为相对于另一点(px,py,pz)进行缩放操作，我们不妨x方向的缩放因子为sx,y方向的缩放因子为sy,z方向的缩放因子为sz, 则上述点（x,y,z）相对于点（px,py,pz）的缩放操作可以归纳为如下公式：</p>`,r:{minutes:1.37,words:412},t:"计算机图形学基础",y:"a"}}],["/education/bs/xr-tech/4.%203ds.html",{loader:()=>l(()=>import("./4. 3ds.html-CwS7uoJ8.js"),__vite__mapDeps([206,1])),meta:{d:1679321449e3,e:`
<p>3ds max 是一款三维制作软件，它提供了多种变换工具，包括移动、旋转、缩放、倾斜、拉伸等等。在 3ds max 中，变换工具是通过主工具栏上的按钮来实现的。您可以单击这些按钮，或使用快捷键来调用它们。例如，移动工具的快捷键是 W，旋转工具的快捷键是 E，缩放工具的快捷键是 R。</p>
<p>您可以在 3ds max 中使用“变换”工具来移动、旋转和缩放对象。要使用“变换”工具，请选择您要移动、旋转或缩放的对象，然后单击“变换”工具栏上的相应按钮。例如，如果您要移动对象，请单击“移动”按钮。然后，您可以使用鼠标来移动对象。</p>
<ol>
<li>各种变换操作</li>
<li>在哪操作</li>
<li>快捷键</li>
<li>使用场景</li>
</ol>`,r:{minutes:4.45,words:1335},t:"3ds MAX",y:"a"}}],["/education/bs/xr-tech/5.%20VR%E5%BA%94%E7%94%A8%E8%AE%BE%E8%AE%A1.html",{loader:()=>l(()=>import("./5. VR应用设计.html-DaBRmCdU.js"),__vite__mapDeps([207,1])),meta:{d:1680090419e3,e:`
<p>亚利桑那阳光</p>
<p>VR 的交互</p>
<ul>
<li>物体选择</li>
</ul>
<p>提出自己小组 VR 的产品</p>
<h2>设计</h2>
<h3>交互</h3>
<h4>如何输出 do impact</h4>
<p>如何做方式，如何影响世界</p>
<ul>
<li>handles，手柄</li>
<li>buttons，按钮</li>
</ul>
<h4>如何感受反馈 feel feedback</h4>
<p>cool</p>
<p>hot：</p>
<h4>如何知道 know</h4>
<ul>
<li>Map，</li>
<li>Path，一步一步每个时间点做什么</li>
</ul>`,r:{minutes:.28,words:85},t:"VR 应用设计",y:"a"}}],["/education/bs/xr-tech/",{loader:()=>l(()=>import("./index.html-D9UaBO9d.js"),__vite__mapDeps([208,1])),meta:{d:1678024743e3,e:`
<p>虚拟现实技术</p>
<p>留三个作业，每个分数低一些，要求也会低一些</p>
<h2>分数</h2>
<ul>
<li>
<p>出勤10，点名</p>
<blockquote>
<p>很少，上学期就一次，我们这个不一定几次</p>
<p>基本上都满分，一两次没来不扣分</p>
</blockquote>
<p>分成8组，每组10人左右，8-12人</p>
<p>每组每堂课的出勤率不少于75%，至少来7人，这样就不扣分</p>
</li>
<li>
<p>作业1 15</p>
<p>课堂分组作业，</p>
<p>目标：了解VR的视觉显示原理（可以自己给自己出题去解决）</p>
<p>考核形式：</p>
<ul>
<li>
<p>小组为单位</p>
</li>
<li>
<p>互评/组评/教评</p>
<p>（上学期就是两辆互评，不能太离谱，每个人都打90分以上就离谱了，两辆PK，互相评分，觉得不合理的分可以找老师申诉）</p>
<p>（这学期可能是组评，每一组的分由其他所有组共同决定出）</p>
<p>（教评，老师给分，尺度一定会很好，但是学生自己没有权利了）</p>
</li>
</ul>
<p>如何考核</p>
<ul>
<li>
<p>报告</p>
</li>
<li>
<p>PPT，每个小组大概5分钟进进行汇报</p>
</li>
<li>
<p>课堂测验，现场做现场交（难度可能不一定）</p>
</li>
<li>
<p>随机评测，分成4对，每个小组之间互相出题（但是难度难以保证统一）</p>
<p>最后分数跟难度相关，最简单的类，可能答满也只能80分</p>
</li>
</ul>
</li>
<li>
<p>作业2 25</p>
</li>
<li>
<p>期末 40</p>
<p>大作业</p>
</li>
</ul>`,r:{minutes:2.19,words:656},t:"XR Technology",y:"a"}}],["/education/ms/5005/",{loader:()=>l(()=>import("./index.html-CUQ4oYb6.js"),__vite__mapDeps([209,1])),meta:{d:1727659735e3,e:`
<p>（如 <a href="https://www.textures.com/" target="_blank" rel="noopener noreferrer">Textures.com</a>、<a href="https://polyhaven.com/" target="_blank" rel="noopener noreferrer">PolyHaven</a>、Substance Source）</p>
<p>Grade</p>
<ul>
<li>Roll Call Attendance 100%</li>
<li>Assignment 18/20
<ul>
<li>Practice Models: 9/10</li>
<li>Pitch: 9/10</li>
</ul>
</li>
<li>Projects 73/80
<ul>
<li>1: 18/20</li>
<li>2: 23/25</li>
<li>3: 23/25</li>
</ul>
</li>
<li>Professionalism 20/20</li>
</ul>`,r:{minutes:.23,words:68},t:"3D Computer Modeling",y:"a"}}],["/education/ms/5005/reference.html",{loader:()=>l(()=>import("./reference.html-CQtCcmzU.js"),__vite__mapDeps([210,1])),meta:{d:1725612282e3,e:`<h2>Observation &amp; Reference</h2>
<p><strong>Work Big to Small</strong></p>
<p>Big shapes and reads first. Medium, noticeable details next. Fine, close details at the end.</p>
<ul>
<li>Style is one thing, but you need to define what's important first</li>
<li>You do not <strong>need</strong> to focus on realism, but you <strong>absolutely must</strong> focus on textural detail, plausibility and cohesiveness.</li>
</ul>`,r:{minutes:1.02,words:307},t:"",y:"a"}}],["/education/ms/5110/1.html",{loader:()=>l(()=>import("./1.html-UTLkrjxN.js"),__vite__mapDeps([211,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/education/ms/5110/2.html",{loader:()=>l(()=>import("./2.html-BvNOOUkk.js"),__vite__mapDeps([212,1])),meta:{d:173755738e4,e:`<p>Definition 2.4. Given an alphabet Σ, given any two strings u, v ∈ Σ∗ we define the following notions as follows:</p>
<ul>
<li>prefix</li>
<li>suffix</li>
<li>substring</li>
</ul>
<p>We say that u is a proper prefix (suffix, substring) of v iff u is a prefix (suffix, substring) of v and u ̸= v.</p>`,r:{minutes:.27,words:80},t:"",y:"a"}}],["/education/ms/5110/3.html",{loader:()=>l(()=>import("./3.html-BKNof94u.js"),__vite__mapDeps([213,1])),meta:{d:173755738e4,e:`<ul>
<li>DFA</li>
<li>NFA</li>
</ul>
<p>closure</p>
<p>regular expressions</p>
<p>right-invariant equivalence relations of finite index</p>
`,r:{minutes:.04,words:12},t:"",y:"a"}}],["/education/ms/5110/",{loader:()=>l(()=>import("./index.html-D9eCGVPq.js"),__vite__mapDeps([214,1])),meta:{d:1731131409e3,e:`
<p>TR 12pm-1:29pm in <a href="https://www.facilities.upenn.edu/maps/locations/david-rittenhouse-laboratory" target="_blank" rel="noopener noreferrer">DRLB A8</a> (1/15 to 4/30)</p>
<p>Review of regular and context-free languages and machine models. Turing machines and RAM models, Decidability, Halting problem, Reductions, Recursively enumerable sets, Universal TMs, Church/Turing thesis. Time and space complexity, hierarchy theorems, the complexity classes P, NP, PSPACE, L, NL, and co-NL. Reductions revisited, Cook-Levin Theorem, completeness, NL = co-NL. Advanced topics as time permits: Circuit complexity and parallel computation, randomized complexity, approximability, interaction and cryptography. Discrete Mathematics, Automata theory or Algorithms at the undergraduate level.</p>`,r:{minutes:3.4,words:1021},t:"Theory of Computation",y:"a"}}],["/education/ms/5110/lang.html",{loader:()=>l(()=>import("./lang.html-DO6VVWDi.js"),__vite__mapDeps([215,1])),meta:{d:173755738e4,e:`<p>Computability Decidability, Undecidability</p>
<p>graphics</p>
`,r:{minutes:.01,words:4},t:"",y:"a"}}],["/education/ms/5450/2.html",{loader:()=>l(()=>import("./2.html-BxIfoQOs.js"),__vite__mapDeps([216,1])),meta:{d:173755738e4,e:`<p>EENT mantra "look at the fish"</p>
<p>Observation, no assumption</p>
<p>Innovator's DNA</p>
<hr>
<p>Associating</p>
<ul>
<li>
<p>Questioning</p>
</li>
<li>
<p>Observing</p>
</li>
<li>
<p>Experimenting</p>
</li>
<li>
<p>Networking: broaden</p>
</li>
</ul>
<hr>
<h2>Drucker Requirements</h2>
<h3>Market focus</h3>`,r:{minutes:.62,words:186},t:"",y:"a"}}],["/education/ms/5450/",{loader:()=>l(()=>import("./index.html-Y6eekJVn.js"),__vite__mapDeps([217,1])),meta:{d:173755738e4,e:`
<p>TR 10:15am-11:44am in <a href="https://www.facilities.upenn.edu/maps/locations/towne-building" target="_blank" rel="noopener noreferrer">TOWN 327</a> (1/15 to 4/30)</p>
<hr>
<p>EENT(Engineering ENTrepreneurship)</p>
<p>Engineers and scientists create and lead great companies, hiring managers when and where needed to help execute their vision. Designed expressly for students having a keen interest in technological innovation, this course investigates the roles of inventors and founders in successful technology ventures. Through case studies and guest speakers, we introduce the knowledge and skills needed to recognize and seize a high-tech entrepreneurial opportunity - be it a product or service - and then successfully launch a startup or spin-off company. The course studies key areas of intellectual property, its protection and strategic value; opportunity analysis and concept testing; shaping technology driven inventions into customer-driven products; constructing defensible competitive strategies; acquiring resources in the form of capital, people and strategic partners; and the founder's leadership role in an emerging high-tech company. Throughout the course emphasis is placed on decisions faced by founders, and on the sequential risks and determinants of success in the early growth phase of a technology venture. The course is designed for, but not restricted to, students of engineering and applied science and assumes no prior business education. Prerequisite: Third or Fourth year or Graduate standing</p>`,r:{minutes:1.05,words:314},t:"Engineering Entrepreneurship I",y:"a"}}],["/education/ms/5600/3D-Rendering.html",{loader:()=>l(()=>import("./3D-Rendering.html-CpQPLx3u.js"),__vite__mapDeps([218,1])),meta:{d:1727659735e3,e:`
<h2>Perspective-correct interpolation</h2>
<p>PLERP</p>
<h2>Texture</h2>
<p>Problem: The texture’s pixels must be mapped to points on the object’s surface before the texture can be sampled</p>
<p>Interpolating triangle UVs</p>
<h3>Texture space</h3>
<p>RGB 0 -&gt; XYZ -1</p>
<p>RGB 0.5 -&gt; XYZ 0</p>`,r:{minutes:.34,words:103},t:"3D Rendering Topics",y:"a"}}],["/education/ms/5600/",{loader:()=>l(()=>import("./index.html-Ch5j31Re.js"),__vite__mapDeps([219,1])),meta:{d:1725612282e3,e:`
<p>This course focuses on programming the essential mathematical and geometric concepts underlying modern computer graphics. Using 3D interactive implementations, it covers fundamental topics such as mesh data structures, transformation sequences, rendering algorithms, and curve interpolation for animation. Students are also introduced to two programming languages widely used in the computer graphics industry: C++ and GLSL. The curriculum is heavily project-based, and culminates in a group project focused on building an interactive first-person world exploration application using the various real-time interaction and rendering algorithms learned throughout the semester.</p>`,r:{minutes:.98,words:294},t:"Interactive Computer Graphics",y:"a"}}],["/education/ms/5600/color.html",{loader:()=>l(()=>import("./color.html-BvOQHqaL.js"),__vite__mapDeps([220,1])),meta:{d:1727659735e3,e:`
<p>RGB</p>
<p>HSV</p>
<h2>COLOR PALETTE</h2>
<p>COSINE COLOR PALETTES</p>
<p><code>smoothstep(0,1,x)=3x^2-2x^3</code></p>
<p><code>smoothstep(0.4,0.6,x)</code></p>
<p><code>smoothstep(0.6,0.4,x)</code></p>
<p>Floor(x*4)/4</p>
<p>Dawei Liu is pursuing a Master’s degree in Computer Science at the University of Pennsylvania, focusing on Computer Graphics and Game Technology. Dawei's experience spans internships at Amazon and <a href="http://JD.com" target="_blank" rel="noopener noreferrer">JD.com</a>. During a Software Development Engineer internship at Amazon, Dawei developed a comprehensive tracing platform with an extended OpenTelemetry Java Agent, enabling automatic tracing and payload collection. Dawei also designed and implemented frontend and backend for trace visualizations, enhancing end-to-end traceability with dynamic linking of services. With expertise in Java, Python, C++, and cloud technologies like AWS and Kubernetes, Dawei brings strong skills in building scalable and efficient software solutions.</p>`,r:{minutes:.44,words:132},t:"Procedural Color",y:"a"}}],["/education/ms/5600/cpp.html",{loader:()=>l(()=>import("./cpp.html-DSE4mYMb.js"),__vite__mapDeps([221,1])),meta:{d:1725612282e3,e:`
<p>pros</p>
<ul>
<li>Runs very fast
<ul>
<li>One of the more scalable modern programming languages</li>
</ul>
</li>
<li>Programmer has fine control over memory usage</li>
</ul>
<p>cons</p>
<ul>
<li>memory management</li>
<li>older legacy features</li>
<li>Compiler errors can sometimes be cryptic</li>
<li>Difficult for a beginner programmer to learn</li>
</ul>`,r:{minutes:3.4,words:1020},t:"C++",y:"a"}}],["/education/ms/5600/game-paradigm.html",{loader:()=>l(()=>import("./game-paradigm.html-DegwXgMd.js"),__vite__mapDeps([222,1])),meta:{d:1731131409e3,e:`
<p>physics concepts</p>
<p>velocity</p>
<p>acceleration</p>
<p>angular velocity</p>
<p>capsule</p>
<p>Moving with collision</p>
<p>try and back, fast will pass through</p>
`,r:{minutes:.06,words:19},t:"Game Paradigm",y:"a"}}],["/education/ms/5600/l-sys.html",{loader:()=>l(()=>import("./l-sys.html-BhxTzgPE.js"),__vite__mapDeps([223,1])),meta:{d:1731131409e3,e:`
<p>L-System Grammars</p>
<p>String rewriting systems</p>
<p>F=draw a line</p>
<p>-=rotate(30)</p>
<p>+=rortate(-30)</p>
<p>[</p>
<p>]</p>
<p>axoim</p>
`,r:{minutes:.06,words:17},t:"L System",y:"a"}}],["/education/ms/5600/mesh.html",{loader:()=>l(()=>import("./mesh.html-CHiLJUtP.js"),__vite__mapDeps([224,1])),meta:{d:1728657843e3,e:`
<h2>Current Structure</h2>
<p>Polygon Mesh Implementation</p>
<p>Generally speaking, we build a linked structure to explicitly connect faces, edges, and vertices</p>
<p>○ Advantages: fast, efficient, can support arbitrary polygons</p>
<p>○ Disadvantages: Somewhat complex to implement, must maintain</p>`,r:{minutes:2.55,words:766},t:"Mesh Structure",y:"a"}}],["/education/ms/5600/multithreading.html",{loader:()=>l(()=>import("./multithreading.html-CFDGFRjq.js"),__vite__mapDeps([225,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/education/ms/5600/noise.html",{loader:()=>l(()=>import("./noise.html-CMI3L3Ni.js"),__vite__mapDeps([226,1])),meta:{d:1729636652e3,e:`
<h2>Fractal Brownian Motion</h2>
<p>producing smooth motion that appears random, yet much less noisy than purely random:</p>
<p>Sum your noise function at different amplitudes, increasing the function’s frequency as amplitude decreases</p>
<p>Bilinear interpolation</p>
<h2>Worley</h2>
<p><strong>Grad-based</strong></p>`,r:{minutes:.19,words:58},t:"Procedural Noise",y:"a"}}],["/education/ms/5600/opengl.html",{loader:()=>l(()=>import("./opengl.html-p9DySz_j.js"),__vite__mapDeps([227,1])),meta:{d:1727659735e3,e:`
<p>Apple GPU Only support old version</p>
<h2>GPU Side</h2>
<h3>GLSL</h3>
<p>Like C++ but <strong>without</strong>:</p>
<ul>
<li>
<p>Pointers</p>
</li>
<li>
<p>Dynamic memory allocation</p>
</li>
<li>
<p>Recursion</p>
</li>
<li>
<p>User-defined classes</p>
</li>
</ul>
<p>Has its own <strong>built-in</strong> classes</p>`,r:{minutes:.54,words:161},t:"OpenGL",y:"a"}}],["/education/ms/5600/rasterization.html",{loader:()=>l(()=>import("./rasterization.html-D9hRkeC5.js"),__vite__mapDeps([228,1])),meta:{d:1727659735e3,e:`
<p>API</p>
<p><strong>intersection</strong></p>
<p><strong>Z-buffering</strong></p>
<p><strong>Fragments</strong></p>
<h2>Rasterization</h2>
<p>The process of converting vector graphics into dot matrix graphics</p>
<p>● Raster derived from Latin rastrum, meaning “a rake”</p>
<p>● Not to be confused with raster scanning</p>`,r:{minutes:1.76,words:529},t:"Rasterization",y:"a"}}],["/education/ms/5600/ray-tracing.html",{loader:()=>l(()=>import("./ray-tracing.html-BlLUQlPi.js"),__vite__mapDeps([229,1])),meta:{d:1729636652e3,e:`
<p>What is raytracing?</p>
<ul>
<li>
<p>Computer graphics technique used to simulate the way light bounces off surfaces</p>
</li>
<li>
<p>Render fairly realistic-looking images without having to fully simulate the infinitely-many photons light sources give off</p>
</li>
<li>
<p>Trace light paths backwards, from camera to light source(s)</p>
</li>
</ul>`,r:{minutes:.4,words:120},t:"Ray tracing",y:"a"}}],["/education/ms/5600/scene-graph.html",{loader:()=>l(()=>import("./scene-graph.html-O88cSMJo.js"),__vite__mapDeps([230,1])),meta:{d:1727659735e3,e:`
<blockquote>
<p>like Kinematics Chain</p>
</blockquote>
<p>Definition</p>
<p>A set of nodes that hold transformation matrix data and pointers to other nodes and geometry. Traverse a directed tree of transformations to render shapes. The basis of most scene data structures, from game engines to mesh editor applications to scenes in animated films</p>`,r:{minutes:.34,words:101},t:"Scene Graph",y:"a"}}],["/education/ms/5600/subdivision.html",{loader:()=>l(()=>import("./subdivision.html-ZZXuwXrR.js"),__vite__mapDeps([231,1])),meta:{d:1730928664e3,e:`
<h2>Catmull-Clark Subdivision</h2>
<ol start="0">
<li>
<p>Initial mesh</p>
</li>
<li>
<p>For each Face, compute its centroid</p>
<p>Centroid = average of all vertices</p>
<p><code>f=sum(e)/n</code></p>
</li>
<li>
<p>Compute the smoothed midpoint of each edge in the mesh</p>
<p>split all edges</p>
<p><code>e=(v1+v2+f1+f2)/4</code></p>
<p><code>e=(v1+v2+f)/3</code> (border case, only 1 incident face)</p>
</li>
<li>
<p>Smooth the original vertices</p>
<p>barycenter of the input components</p>
<p><code>v' = (n-2)v/n + sum(e)/n^2 + sum(f)/n^2</code></p>
<p>v is the vertex’s original position</p>
<p>sum(e) is the sum of all adjacent midpoints</p>
<p>sum(f) is the sum of the centroids of all faces incident to v</p>
<p>n is the number of adjacent midpoints</p>
</li>
<li>
<p>For each original face, split that face into N quadrangle faces</p>
<p>1st subface is orginal face, 2-4th would be new face</p>
</li>
</ol>`,r:{minutes:.46,words:137},t:"Subdivision Techniques",y:"a"}}],["/education/ms/5600/transformations.html",{loader:()=>l(()=>import("./transformations.html-BNhCOC9e.js"),__vite__mapDeps([232,1])),meta:{d:1725612282e3,e:`
<p><a href="https://www.cis.upenn.edu/~cis4600/19fa/lectures/460transforms3d.html#slide-0" target="_blank" rel="noopener noreferrer">slides</a></p>
<h2>Basics</h2>
<h3>vector</h3>
<p>vs point</p>
<ul>
<li>point: position</li>
<li>Vector: direction</li>
</ul>
<p>Arithmetic</p>
<ul>
<li>addition</li>
<li>Substraction</li>
</ul>`,r:{minutes:1.62,words:487},t:"Transformations",y:"a"}}],["/education/ms/5600/virtual-cameras.html",{loader:()=>l(()=>import("./virtual-cameras.html-kZNTRqKp.js"),__vite__mapDeps([233,1])),meta:{d:1727659735e3,e:`
<p>Rasterizing a 3D scene: From world space to screen space</p>
<p>pinhole camera</p>
<h2>Perspective projection</h2>
<p>Perspective divide</p>
<p>Field of View</p>
<p>Cubes become smaller, edges of screen “stretch”</p>
<ul>
<li>In a physical pinhole camera, the focal length determines the field of view</li>
<li>The closer the film screen is to the pinhole, the more world it can see</li>
<li>Since you’re fitting more of the world onto the same sized screen as before, everything previously visible looks a little smaller</li>
</ul>`,r:{minutes:.38,words:114},t:"Virtual Cameras",y:"a"}}],["/education/ms/5620/",{loader:()=>l(()=>import("./index.html-D-MrQHsA.js"),__vite__mapDeps([234,1])),meta:{d:1725612282e3,e:`
<p>Levine 154</p>
<h3>Compisition</h3>
<ul>
<li>
<p>50 作业</p>
<p>No late submissions or extensions for homework.</p>
<ul>
<li>CQ, participation-based</li>
<li>HW
<ul>
<li>
<p>paper-based</p>
<ul>
<li>HW1 Coor Transformation</li>
<li>HW3 Kinematics</li>
</ul>
</li>
<li>
<p>coding</p>
<ul>
<li>HW2 Curve Editor</li>
<li>HW4 IKFK</li>
<li>HW5 Skinning</li>
<li>HW7 Particle System</li>
<li>HW8 Feedback Control</li>
</ul>
</li>
<li>
<p>software</p>
<ul>
<li>HW6 Motion Capture</li>
<li>HW8 Feedback Control part 3</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>20 期中 Oct 23, 90min</p>
<p>review session Oct 22, Monday 4:00 PM, online zoom</p>
<p>开卷考试，可以电子设备，但是不能搜索，不会有太多计算</p>
</li>
<li>
<p>25 期末 Dec 13</p>
<p>review session Dec 11</p>
<p>Final Exam Date/Time: Friday, Dec. 13th from 3:00 - 5:00pm</p>
<p>Room: MEYH B3 (Meyerson Hall - 210 South 34th Street)</p>
<p>开卷考试，可以电子设备，但是不能搜索，不会有太多计算，tablet，turn off wifi/internet</p>
<p>开放问题</p>
<p>Similar style like mid term</p>
<p>apply knowledge to real world problem</p>
<p>not just copying notes</p>
<p>if you understand basic concepts, you should be able to apply them</p>
<p>don't blank, do not long describe</p>
</li>
<li>
<p>05 出勤，7次随堂 quiz</p>
<p>15min quiz, close book test</p>
<p>drop 2 lowest grade</p>
<ul>
<li>
<p>09.12 transformation, 7/10</p>
<p>basic concept</p>
<p>Exam: Given F1, F2, what H12</p>
</li>
<li>
<p>09.26 splines 9/10, 30min</p>
</li>
<li>
<p>10.15 8/10</p>
<p>last 20 min, easy, kinematics</p>
</li>
<li>
<p>11.07 Thurs 8/10</p>
<p>body animation: keyframe, walk cycle, cross dissolve</p>
</li>
<li>
<p>11.19 Tues 10/10</p>
<p>Body Dynamics</p>
</li>
<li>
<p>12.05 Friday, Feedback Control design, 20min</p>
<p>You should be familar with how you would compute the gains of a PD feedback controller given the desired system response.</p>
</li>
</ul>
</li>
</ul>`,r:{minutes:2.13,words:638},t:"Computer Animation",y:"a"}}],["/education/ms/5620/behavioral.html",{loader:()=>l(()=>import("./behavioral.html-CyGYr5z7.js"),__vite__mapDeps([235,1])),meta:{d:173327468e4,e:`
<h2>Steering Behaviors</h2>
<p>Agent/Vehicle Dynamics</p>
<p>Individual</p>
<ul>
<li>Seek/Flee</li>
<li>Pursuit/Evasion</li>
<li>Offset Pursuit</li>
<li>Arrival/Departure</li>
<li>Obstacle Avoidance</li>
<li>Wander</li>
</ul>
<p>Group Behavior</p>
<ul>
<li>
<p>Primitives</p>
<ul>
<li>Separation</li>
<li>Align</li>
<li>Coherence</li>
</ul>
</li>
<li>
<p>Behaviors</p>
</li>
<li>
<p>Flocking</p>
<ul>
<li>Follow Leader</li>
</ul>
</li>
</ul>`,r:{minutes:.55,words:164},t:"Behavior Animation",y:"a"}}],["/education/ms/5620/coordinate-systems.html",{loader:()=>l(()=>import("./coordinate-systems.html-SLk9zbtQ.js"),__vite__mapDeps([236,1])),meta:{d:1725612282e3,e:`
<ul>
<li>Linear Algebra Review</li>
<li>Vector Spaces</li>
<li>Coordinate Transformations</li>
<li>Euler Angles</li>
<li>Quaternions</li>
</ul>
<h2>Linear Algebra Review</h2>
<h3>Handed</h3>
<p>Coordinate System</p>
<p><strong>Thumb is x, Index finger is y, middle finger is z</strong></p>
<ul>
<li>
<p>left handed</p>
<p>unity</p>
</li>
<li>
<p>right handed</p>
<p>unreal</p>
</li>
</ul>`,r:{minutes:5.38,words:1613},t:"Coordinate Systems",y:"a"}}],["/education/ms/5620/dynamics.html",{loader:()=>l(()=>import("./dynamics.html-rrn93gTm.js"),__vite__mapDeps([237,1])),meta:{d:1731131409e3,e:`
<blockquote>
<p><a href="https://myphysicslab.com/" target="_blank" rel="noopener noreferrer">myPhysicsLab</a></p>
</blockquote>
<p><strong>Kinematics</strong>: The study of motion without consideration of underlying forces</p>
<ul>
<li>Forward Kinematics: Computing <strong>body motion</strong> as a function of <strong>joint angles</strong></li>
<li>Inverse Kinematics: Computing <strong>joint angles</strong> as a function of <strong>body motion</strong></li>
</ul>`,r:{minutes:2.47,words:742},t:"Body Dynamics",y:"a"}}],["/education/ms/5620/facial.html",{loader:()=>l(()=>import("./facial.html-sqwyY-Ds.js"),__vite__mapDeps([238,1])),meta:{d:173327468e4,e:`
<blockquote>
<p>类比Skining，一起理解</p>
</blockquote>
<ul>
<li>
<p>Blend Shapes</p>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>v</mi><mo>⃗</mo></mover><mo>=</mo><msub><mover accent="true"><mi>v</mi><mo>⃗</mo></mover><mn>0</mn></msub><mo>+</mo><mo>∑</mo><msub><mi>w</mi><mi>i</mi></msub><msub><mover accent="true"><mi>v</mi><mo>⃗</mo></mover><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\\vec v=\\vec v_0+\\sum w_i\\vec v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2077em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.864em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2077em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2077em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, blend shapes</p>
</li>
<li>
<p>Linear Blend Skinning techniques (LBS)</p>
</li>
</ul>`,r:{minutes:.31,words:93},t:"Facial Animation",y:"a"}}],["/education/ms/5620/feedback.html",{loader:()=>l(()=>import("./feedback.html-Dl87X8k4.js"),__vite__mapDeps([239,1])),meta:{d:1732245692e3,e:`
<h2>System Dynamics</h2>
<ul>
<li><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mover accent="true"><mi>x</mi><mo>¨</mo></mover><mo>=</mo><mi>f</mi></mrow><annotation encoding="application/x-tex">m\\ddot x=f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6679em;"></span><span class="mord mathnormal">m</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">¨</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></li>
<li><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mover accent="true"><mi>θ</mi><mo>¨</mo></mover><mo>=</mo><mi>τ</mi></mrow><annotation encoding="application/x-tex">I\\ddot \\theta=\\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9313em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9313em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">¨</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span></span></span></span></li>
</ul>`,r:{minutes:4.03,words:1210},t:"Feedback Control",y:"a"}}],["/education/ms/5620/interpolation.html",{loader:()=>l(()=>import("./interpolation.html-DXe-d2X4.js"),__vite__mapDeps([240,1])),meta:{d:1727659735e3,e:`
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>R</mi><mn>1</mn><mn>0</mn></msubsup><mo>=</mo><mo stretchy="false">[</mo><msub><mover accent="true"><mi>i</mi><mo>^</mo></mover><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msub><mover accent="true"><mi>j</mi><mo>^</mo></mover><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msub><mover accent="true"><mi>k</mi><mo>^</mo></mover><mn>1</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">R_1^0=[\\hat i_1|\\hat j_1|\\hat k_1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2079em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.923em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">i</span></span><span style="top:-3.2285em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.923em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span><span style="top:-3.2285em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0572em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></p>`,r:{minutes:6.26,words:1878},t:"Interpolation",y:"a"}}],["/education/ms/5620/kinematics.html",{loader:()=>l(()=>import("./kinematics.html-BYEUQkfT.js"),__vite__mapDeps([241,1])),meta:{d:1728657843e3,e:`
<p>Motion Capture</p>
<p>Joints, Bowel</p>
<h2>Kinematics</h2>
<p>Kinematics motion of the body with respect to time</p>
<ul>
<li>Position</li>
<li>velocity</li>
<li>acceleration</li>
</ul>
<h3>Skeleton</h3>
<p>skeleton=tree like data structures representing a hierarchy of joints</p>
<p>joint hierarchy</p>`,r:{minutes:5.75,words:1725},t:"Body Kinematics",y:"a"}}],["/education/ms/5620/optimization.html",{loader:()=>l(()=>import("./optimization.html-B-Shmog-.js"),__vite__mapDeps([242,1])),meta:{d:1734383661e3,e:`
`,r:{minutes:0,words:1},t:"Optimization",y:"a"}}],["/education/ms/5620/simulation.html",{loader:()=>l(()=>import("./simulation.html-BDVOjDkO.js"),__vite__mapDeps([243,1])),meta:{d:1734383661e3,e:`
<h2>Differential Equations</h2>
<p>Most general form: <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo>˙</mo></mover><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>u</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\\dot x=f(x,u)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6679em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">˙</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">u</span><span class="mclose">)</span></span></span></span></p>`,r:{minutes:1.67,words:500},t:"Simulation",y:"a"}}],["/education/ms/6600/",{loader:()=>l(()=>import("./index.html-BKovT2dS.js"),__vite__mapDeps([244,1])),meta:{d:1735767424e3,e:`
<p>MW 10:15am-11:44am in <a href="https://www.facilities.upenn.edu/maps/locations/towne-building" target="_blank" rel="noopener noreferrer">TOWN 311</a> (1/15 to 4/30)</p>
<hr>
<p>660 一开始是每周4篇论文，然后是每周6篇论文，然后每周还要写weekly report，其次就是还有 presentation 要做，然后还有 homework 和 final project，自行体会</p>
<p>你需要一周读2-3篇图形学论文并且做presentation,这个过程Stephen Lane基本不会给任何指导。</p>`,r:{minutes:1.19,words:357},t:"Advanced Topics in Computer Graphics and Animation",y:"a"}}],["/education/ms/basics/dcc.html",{loader:()=>l(()=>import("./dcc.html-e4WobH6V.js"),__vite__mapDeps([245,1])),meta:{d:1736210466e3,e:`
<ul>
<li>maya</li>
<li>blender</li>
<li>houdini</li>
<li>motion builder</li>
</ul>
`,r:{minutes:.03,words:9},t:"Digital Content Creation Toolchain",y:"a"}}],["/education/ms/basics/engine.html",{loader:()=>l(()=>import("./engine.html-BVDomWNB.js"),__vite__mapDeps([246,1])),meta:{d:1731131409e3,e:`
<p>Bevy 是一个基于 ECS 架构的游戏引擎。ECS 是一种架构模式，将程序整体分为若干个部分，或若干层。譬如 MVC 就是 Model（模型）、View（视图）和 Controller（控制器），他们各有分工，分别有相应的职责，最后共同构成了一个完整的程序。</p>
<p>ECS 是 Entity（实体）、Component（组件）和 System（系统）。对游戏开发比较熟悉的读者应该对此非常了解，而如果你不熟悉游戏开发，或许这种架构模式你是第一次听说。</p>
<p>假设我们有一个游戏，</p>
<p>Entity 就是游戏里我们能看到的大部分东西，譬如玩家、NPC、敌人、可交互的场景物品等等，并且每个 Entity 在游戏世界里都是唯一的。</p>`,r:{minutes:1.99,words:596},t:"Engine",y:"a"}}],["/education/ms/basics/multiplatform.html",{loader:()=>l(()=>import("./multiplatform.html-CwxCyPsz.js"),__vite__mapDeps([247,1])),meta:{d:1731131409e3,e:`
<p>wine</p>
<p>重写 Windows dll 到 Linux 系统调用的兼容层</p>
<p>但是directx3d的几个dll是通过OpenGL反编译的效果不好没办法</p>
<p>shader 编程显卡</p>
<p>OpenGL shader: glsl</p>
<p>DirectX</p>
<ul>
<li>HLSL</li>
<li>DXBC/DXIL（预编译格式）</li>
</ul>
<p>Vulkan</p>
<ul>
<li>SPIR-V(预编译格式)</li>
</ul>
<p>DXBC-&gt;SPIR-V，逐行翻译</p>
<p>Shader 编译器开源</p>`,r:{minutes:.35,words:104},t:"Multi Platform",y:"a"}}],["/education/ms/basics/pattern.html",{loader:()=>l(()=>import("./pattern.html-DgT8Bcb-.js"),__vite__mapDeps([248,1])),meta:{d:1732245692e3,e:`
<p>for game dev</p>
<ul>
<li><a href="https://web.archive.org/web/20240221090535/https://unity.com/how-to/use-object-pooling-boost-performance-c-scripts-unity" target="_blank" rel="noopener noreferrer">Object pooling</a></li>
<li><a href="https://web.archive.org/web/20240221090535/https://unity.com/how-to/develop-modular-flexible-codebase-state-programming-pattern" target="_blank" rel="noopener noreferrer">The state pattern</a></li>
<li><a href="https://web.archive.org/web/20240221090535/https://unity.com/how-to/create-modular-and-maintainable-code-observer-pattern" target="_blank" rel="noopener noreferrer">The observer pattern</a></li>
<li><a href="https://web.archive.org/web/20240221090535/https://unity.com/how-to/build-modular-codebase-mvc-and-mvp-programming-patterns" target="_blank" rel="noopener noreferrer">The MVP/MVC pattern</a></li>
<li><a href="https://web.archive.org/web/20240221090535/https://unity.com/how-to/use-command-pattern-flexible-and-extensible-game-systems" target="_blank" rel="noopener noreferrer">The command pattern</a></li>
<li><a href="https://unity.com/how-to/declutter-your-code-factory-programming-pattern" target="_blank" rel="noopener noreferrer">The factory pattern</a></li>
</ul>`,r:{minutes:.28,words:83},t:"Design Pattern",y:"a"}}],["/education/ms/basics/shader.html",{loader:()=>l(()=>import("./shader.html-DkOcY7jf.js"),__vite__mapDeps([249,1])),meta:{d:1735767424e3,e:`<p>pipeline</p>
<p>OpenGL ES 3.0 Shader 缓存机制</p>
<ul>
<li>Direct3D 12</li>
<li>SPIR-V</li>
<li>Metal IR</li>
</ul>
`,r:{minutes:.05,words:15},t:"",y:"a"}}],["/education/ms/basics/vulkan.html",{loader:()=>l(()=>import("./vulkan.html-Da527W2z.js"),__vite__mapDeps([250,1])),meta:{d:1715153702e3,e:`
<p><strong>Vulkan</strong>是Khronos Group(OpenGL标准的维护组织)开发的一个新API，它提供了对现代显卡的一个更好的抽象，与OpenGL和Direct3D等现有api相比，Vulkan可以更详细的向显卡描述你的应用程序打算做什么，从而可以获得更好的性能和更小的驱动开销。</p>
<p>Vulkan的设计理念与Direct3D 12和Metal基本类似，但Vulkan作为OpenGL的替代者，它设计之初就是为了跨平台实现的，可以同时在Windows、Linux和Android开发。甚至在Mac OS系统上，Khronos也提供了Vulkan的SDK，虽然这个SDK底层其实是使用MoltenVK实现的。</p>`,r:{minutes:1.95,words:584},t:"Vulkan",y:"a"}}],["/se/design/ood/",{loader:()=>l(()=>import("./index.html-BxsDUCyX.js"),__vite__mapDeps([251,1])),meta:{d:1673495221e3,e:`
<p>面向对象设计</p>
<p>Viability 可行性</p>
<h3>类型划分</h3>
<ul>
<li>管理类</li>
<li>预定类</li>
<li>实物类</li>
<li>游戏类</li>
</ul>
<h3>三大特征</h3>
<p>OOP</p>
<ul>
<li>
<p>封装</p>
<p><code>Class</code>, <code>Object</code></p>
</li>
<li>
<p>继承</p>
<p><code>extends</code>, <code>implements</code></p>
</li>
<li>
<p>多态</p>
</li>
</ul>`,r:{minutes:5.14,words:1542},t:"Object-Oriented Design",y:"a"}}],["/se/design/ood/%E5%AE%9E%E7%89%A9%E7%B1%BB.html",{loader:()=>l(()=>import("./实物类.html-oZga6OnC.js"),__vite__mapDeps([252,1])),meta:{d:1715153702e3,e:`
<p>实物类面试题型特点分析<br>
实战面试真题：</p>
<ul>
<li>Vending machine</li>
<li>Juke box</li>
</ul>
<p>设计模式讲解Design Pattern:Factory<br>
设计模式讲解Design Pattern:Adaptor</p>
<ul>
<li>Vending machine</li>
<li>Jukebox</li>
<li>CD Player</li>
<li>Coffee maker</li>
<li>Kindle</li>
</ul>
<p>考虑对于实物的输入输出</p>
`,r:{minutes:.2,words:61},t:"实物类",y:"a"}}],["/se/design/ood/%E6%B8%B8%E6%88%8F%E7%B1%BB.html",{loader:()=>l(()=>import("./游戏类.html-CygHTgA2.js"),__vite__mapDeps([253,1])),meta:{d:1715153702e3,e:`
<p>棋牌游戏类面试题型特点分析<br>
棋牌游戏类面试题特殊技巧讲解<br>
实战面试真题：</p>
<ul>
<li>Tic Tac Toe, 扫雷</li>
<li>Black Jack</li>
<li>Chinese chess</li>
</ul>
<p>课程总结及面试技巧点拨</p>
<p>频率:中高</p>
<p>难度:高</p>
<p>题目比较多变，不同的棋牌，玩法不同</p>
<p>棋类</p>
<ul>
<li>象棋，国际象棋，围棋，军旗，跳棋，五子棋 ...</li>
</ul>
<p>类棋类</p>
<ul>
<li>Tic Tac Toe(井字棋), 扫雷</li>
</ul>`,r:{minutes:.63,words:190},t:"游戏类",y:"a"}}],["/se/design/ood/%E7%AE%A1%E7%90%86%E7%B1%BB.html",{loader:()=>l(()=>import("./管理类.html-CO11-j45.js"),__vite__mapDeps([254,1])),meta:{d:1715153702e3,e:`
<p>管理类OOD面试题型特点分析</p>
<p>实战OOD面试真题：</p>
<ul>
<li>电梯管理问题 Elevator System</li>
<li>停车场问题 Parking lot</li>
<li>餐厅管理问题 Restaurant</li>
</ul>
<p>设计模式讲解 Design Pattern: Singleton</p>
<ul>
<li>Elevator</li>
<li>Gym</li>
<li>Parking lot</li>
<li>Restaurant</li>
<li>Library</li>
<li>Super market</li>
<li>Hotel</li>
</ul>`,r:{minutes:1.23,words:369},t:"管理类 Management",y:"a"}}],["/se/design/ood/%E9%A2%84%E5%AE%9A%E7%B1%BB.html",{loader:()=>l(()=>import("./预定类.html-5qFMJa8S.js"),__vite__mapDeps([255,1])),meta:{d:1715153702e3,e:`
<p>预定类面试题型特点分析<br>
实战面试真题：</p>
<ul>
<li>酒店预订系统设计 Hotel Reservation</li>
<li>航空机票预订系统设计 Airline/Flight/Bus/Train Ticket Reservation</li>
<li>Restaurant reservation system</li>
<li><a href="http://Booking.com" target="_blank" rel="noopener noreferrer">Booking.com</a></li>
</ul>
<p>频率：中</p>
<p>难度：高</p>`,r:{minutes:1.04,words:311},t:"预定类 reservation",y:"a"}}],["/se/design/pattern/",{loader:()=>l(()=>import("./index.html-DJ3hcY1B.js"),__vite__mapDeps([256,1])),meta:{d:1692874145e3,e:`
<blockquote>
<p><a href="https://refactoring.guru/design-patterns" target="_blank" rel="noopener noreferrer">参考教程</a></p>
</blockquote>
<p>GoF 23</p>
<ul>
<li>
<p>Creational Design Patterns 创建型</p>
</li>
<li>
<p>Structural Design Patterns 结构型</p>
<ul>
<li><strong>Decorator Pattern</strong>: The Decorator Pattern allows you to add new behaviors or responsibilities to objects without altering their existing code. It’s like adding layers of wrapping to a gift.</li>
<li><strong>Adapter Pattern</strong>: The Adapter Pattern allows one class to work with another class that has a different interface. It acts as a bridge between two incompatible interfaces.</li>
<li><strong>Proxy Pattern</strong>: The Proxy Pattern provides a placeholder of another object to control access to it. It’s like having a remote control for a TV; you interact with the remote instead of directly with the TV.</li>
</ul>
</li>
<li>
<p>Behavioral Design Patterns 行为型</p>
<ul>
<li><strong>Observer Pattern:</strong> The Observer Pattern establishes a relationship where one thing (called the subject) is watched by several other things (knows as observers).</li>
<li><strong>State Pattern:</strong> The State Pattern enables an object to modify how it behaves as its internal state changes.</li>
<li><strong>Strategy Pattern:</strong> The Strategy Pattern involves defining a group of different algorithm and making it possible to choose and switch between them as needed while a program is running.</li>
<li><strong>Template Method Pattern:</strong> The Template Method is like providing a recipe with some fixed steps (skeleton), but allowing different cooks (subclasses) to add their unique ingredients or flavors (override specific parts) without changing the basic cooking instructions (overall structure).</li>
</ul>
</li>
</ul>`,r:{minutes:.78,words:234},t:"Design Pattern",y:"a"}}],["/se/design/system/",{loader:()=>l(()=>import("./index.html-CaxrR5BQ.js"),__vite__mapDeps([257,1])),meta:{d:1715153702e3,e:`
<p>系统设计</p>
<p>Scalability, Tradeoff</p>
<details class="hint-container details"><summary>参考文档</summary>
<p><a href="http://wsfdl.com/categories.html" target="_blank" rel="noopener noreferrer">koala bear 博客</a></p>
<p>DDIA</p>
</details>
<ul>
<li>scalability</li>
<li>availability</li>
<li>reliability</li>
<li>performance</li>
</ul>`,r:{minutes:2.71,words:812},t:"System Design",y:"a"}}],["/se/design/system/api.html",{loader:()=>l(()=>import("./api.html-qLQrPQ0S.js"),__vite__mapDeps([258,1])),meta:{d:1715153702e3,e:`
<p>网站系统，API设计与短网址Web System,API, Design Tiny URL</p>
<p>·网站系统的基本构成<br>
·API设计问题<br>
·什么是RestAPI</p>
<p>实战真题：</p>
<p>a.What happend if you visit <a href="http://www.google.com" target="_blank" rel="noopener noreferrer">www.google.com</a>?<br>
b.How to design tiny url?<br>
c.如何设计News Feed API<br>
d.如何设计mention功能<br>
e.如何做翻页Pagination</p>`,r:{minutes:3.45,words:1034},t:"接口设计",y:"a"}}],["/se/design/system/comet.html",{loader:()=>l(()=>import("./comet.html-YKMccjSk.js"),__vite__mapDeps([259,1])),meta:{d:1732245357e3,e:`
<ul>
<li>
<p><strong>WebSocket</strong></p>
</li>
<li>
<p>SSE（Server-Sent Events）</p>
</li>
<li>
<p>Polling</p>
</li>
<li>
<p>mqtt</p>
</li>
</ul>
<h2>Polling 轮询</h2>
<p><strong>轮询(polling)</strong> 应该是实现消息推送方案中最简单的一种，这里我们暂且将轮询分为短轮询和长轮询。</p>
<h3>短轮询</h3>
<p>短轮询很好理解，指定的时间间隔，由浏览器向服务器发出 HTTP 请求，服务器实时返回未读消息数据给客户端，浏览器再做渲染显示。</p>`,r:{minutes:4.9,words:1471},t:"Comet 推送",y:"a"}}],["/se/design/system/cron.html",{loader:()=>l(()=>import("./cron.html-Dh6HxPkQ.js"),__vite__mapDeps([260,1])),meta:{d:1679321449e3,e:`
<h2>单体定时任务</h2>
<h3>Thread</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(() </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"doSameThing"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 60</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(e);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">})</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.8,words:540},t:"定时任务",y:"a"}}],["/se/design/system/file.html",{loader:()=>l(()=>import("./file.html-BtKJQFV2.js"),__vite__mapDeps([261,1])),meta:{d:1715153702e3,e:`
`,r:{minutes:.01,words:3},t:"Distrubted File System",y:"a"}}],["/se/design/system/iq.html",{loader:()=>l(()=>import("./iq.html-Cuk9HQ_X.js"),__vite__mapDeps([262,1])),meta:{d:1715153702e3,e:`
<ol>
<li>场景题：二维码问题，长短链匹配和储存怎么做</li>
</ol>
<p>最近也看了不少面经，整理出了10个比较好的场景题，<strong>后续会持续分享场景题，请大家持续关注</strong>。</p>
<ul>
<li>一个<strong>外卖平台</strong>上有一个外卖单子，现在有<strong>多名骑手</strong>想接这一单，<strong>如何保证只有一个骑手</strong>可以接到单子？</li>
<li>如何把<strong>一个文件</strong>快速下发到<strong>100w</strong>个服务器？</li>
<li>给每个<strong>组</strong>分配不同的<strong>IP段</strong>，怎么设计一种结构使的<strong>快速</strong>得知<strong>IP</strong>是哪个组的?</li>
<li>典型<strong>TOP k</strong>系列的问题：10亿个数，找出最大的10个。(10万个数，输出从小到大？有十万个单词，找出重复次数最高十个？)</li>
<li>让你设计一个<strong>微信发红包的api</strong>，你会怎么设计，不能有人领到的红包里面没钱，红包数值精确到分。</li>
<li>分布式多个机器生成id，如何保证<strong>不重复</strong>?</li>
<li><strong>扫码登录</strong>是如何实现的？</li>
<li><strong>分布式集群</strong>中如何保证<strong>线程安全</strong>？</li>
<li>某网站/app首页每天会从10000个商家里面推荐50个商家置顶，每个商家有一个权值，你如何来推荐？第二天怎么更新推荐的商家？</li>
<li>如何设计一个<strong>本地缓存</strong>？需要考虑哪些方面？</li>
</ul>`,r:{minutes:1.18,words:355},t:"Interview Questions",y:"a"}}],["/se/design/system/lbs.html",{loader:()=>l(()=>import("./lbs.html-c9vY_7sy.js"),__vite__mapDeps([263,1])),meta:{d:1715153702e3,e:`
<p>系统学习LBS相关系统设计的核心要点：</p>
<p>a.地理位置信息存储与查询常用算法之Geohash<br>
b.如何设计 Uber<br>
c.关键点：学会设计Uber以后可以轻松解决设计Facebook Nearby和Yelp</p>
`,r:{minutes:.22,words:66},t:"Location-Based Service",y:"a"}}],["/se/design/system/readlist.html",{loader:()=>l(()=>import("./readlist.html-D9lNgnGj.js"),__vite__mapDeps([264,1])),meta:{d:1700646963e3,e:`
<p><a href="https://juejin.cn/post/7282363816021000253" target="_blank" rel="noopener noreferrer">Spring Cloud 迁移至 K8s</a></p>
<p>项目是一个一个微服务组织起来的，大概业务类的服务有5个，公共服务有4个。设计到的改造主要集中在gateway, auth中，公共包的一些改造比较少，主要是将open-feign的访问改为通过url进行调用，而不是之前通过服务名来。</p>
<p>而在kubernetes中，我们使用Traefik2来代替gateway的功能，不知道traefik2的，可以去翻翻之前的文章。</p>`,r:{minutes:.69,words:206},t:"阅读清单",y:"a"}}],["/se/design/system/stack.html",{loader:()=>l(()=>import("./stack.html-DoSenR0p.js"),__vite__mapDeps([265,1])),meta:{d:1715153702e3,e:`
<p>js 全栈</p>
<p>mern: mongodb, express, react, node</p>
<p>mean: mongodb, express, angular, node</p>
<p>ssm</p>
`,r:{minutes:.05,words:15},t:"Stack",y:"a"}}],["/se/design/system/versioning.html",{loader:()=>l(()=>import("./versioning.html-4Y_hkazD.js"),__vite__mapDeps([266,1])),meta:{d:1692874145e3,e:`
<h2>版本号命名规则指南</h2>
<p>版本号的格式为 <code>X.Y.Z</code>(又称 Major.Minor.Patch)，递增的规则为：</p>
<ul>
<li>X 表示主版本号，当 API 的兼容性变化时，X 需递增。</li>
<li>Y 表示次版本号，当增加功能时(不影响 API 的兼容性)，Y 需递增。</li>
<li>Z 表示修订号，当做 Bug 修复时(不影响 API 的兼容性)，Z 需递增。<br>
详细的规则如下：</li>
</ul>
<ol>
<li>X, Y, Z 必须为非负整数，且不得包含前导零，必须按数值递增，如 1.9.0 -&gt; 1.10.0 -&gt; 1.11.0</li>
<li>0.Y.Z 的版本号表明软件处于初始开发阶段，意味着 API 可能不稳定；1.0.0 表明版本已有稳定的 API。</li>
<li>当 API 的兼容性变化时，X 必须递增，Y 和 Z 同时设置为 0；当新增功能(不影响 API 的兼容性)或者 API 被标记为 Deprecated 时，Y 必须递增，同时 Z 设置为 0；当进行 bug fix 时，Z 必须递增。</li>
<li>先行版本号(Pre-release)意味该版本不稳定，可能存在兼容性问题，其格式为：<code>X.Y.Z.[a-c][正整数]</code>，如 1.0.0.a1，1.0.0.b99，1.0.0.c1000。</li>
<li>开发版本号常用于 CI-CD，格式为 <code>X.Y.Z.dev[正整数]</code>，如 1.0.1.dev4。</li>
<li>版本号的排序规则为依次比较主版本号、次版本号和修订号的数值，如 1.0.0 &lt; 1.0.1 &lt; 1.1.1 &lt; 2.0.0；对于先行版本号和开发版本号，有：1.0.0.a100 &lt; 1.0.0，2.1.0.dev3 &lt; 2.1.0；当存在字母时，以 ASCII 的排序来比较，如 1.0.0.a1 &lt; 1.0.0.b1。</li>
<li>注意：版本一经发布，不得修改其内容，任何修改必须在新版本发布！</li>
</ol>`,r:{minutes:1.76,words:527},t:"版本号设计",y:"a"}}],["/se/devops/cicd/",{loader:()=>l(()=>import("./index.html-CQ6mfI2s.js"),__vite__mapDeps([267,1])),meta:{d:1691656101e3,e:`
<p>Continuous Integration, Delivery, and Deployment (CI/CD)</p>
`,r:{minutes:.02,words:7},t:"CI/CD",y:"a"}}],["/se/devops/cicd/cd.html",{loader:()=>l(()=>import("./cd.html-CtSDSNnG.js"),__vite__mapDeps([268,1])),meta:{d:1675410392e3,e:`
<p>Argo CD</p>
`,r:{minutes:.01,words:3},t:"CD",y:"a"}}],["/se/devops/cicd/ci.html",{loader:()=>l(()=>import("./ci.html-BGOB3hZv.js"),__vite__mapDeps([269,1])),meta:{d:1691997116e3,e:`
<p>jenkins: 功能全，但是相对陈旧，不够灵活，不够简洁，且不是 k8s 原生的，需要额外的维护成本</p>
<p>Argo workflows：k8s 原生的，配置灵活</p>
<p>Tekton：k8s 原生的，配置灵活</p>
<h2>Argo workflows</h2>
<p>Argo workflows 是一个 k8s 原生的 workflow engine，可以用来做 CI/CD，也可以用来做其他的 workflow，比如 ETL，ML pipeline 等。</p>
<p>Argo workflows 的核心概念是 workflow template，workflow template 是一个 k8s 的 CRD，定义了一个 workflow 的模板，包括 workflow 的各个步骤，每个步骤的输入输出，以及步骤之间的依赖关系。</p>`,r:{minutes:7.12,words:2137},t:"CI",y:"a"}}],["/se/devops/cicd/makefile.html",{loader:()=>l(()=>import("./makefile.html-C4KDVsJU.js"),__vite__mapDeps([270,1])),meta:{d:1675410392e3,e:`
<h2>makefile 的规则</h2>
<p>在讲述这个 makefile 之前，还是让我们先来粗略地看一看 makefile 的规则。</p>
<div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">target</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> prerequisites ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    recipe</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    ...</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.4,words:421},t:"Makefile",y:"a"}}],["/se/devops/docker/",{loader:()=>l(()=>import("./index.html-CHSENrZA.js"),__vite__mapDeps([271,1])),meta:{d:1669446166e3,e:`
<p>要理解原理，其实可以自己制作，如 k8s 就完全可以自己做，只会用层次太低了</p>
<p>容器是云计算的基础</p>
<p>容器，隔离环境</p>
<p>安装指南：<a href="https://www.bilibili.com/read/cv17586749" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/read/cv17586749</a></p>
<p>cgroup</p>
`,r:{minutes:.18,words:54},t:"Docker",y:"a"}}],["/se/devops/docker/docker-file.html",{loader:()=>l(()=>import("./docker-file.html-DQLaqGEO.js"),__vite__mapDeps([272,1])),meta:{d:1675410392e3,e:`
<h2>分阶段构建</h2>
<p>分阶段构建有以下几个好处：</p>
<ol>
<li>
<p><strong>减小镜像大小</strong>：通过分阶段构建，可以将构建阶段中产生的临时文件和构建工具从最终的产品镜像中剥离，从而减小镜像的大小。最终的产品镜像只包含运行应用程序所需的最小文件和依赖项。</p>
</li>
<li>
<p><strong>加快构建速度</strong>：分阶段构建可以利用镜像缓存机制，只重新构建发生变化的阶段，从而加快整体构建过程的速度。如果代码没有发生变化，后续阶段可以直接使用之前构建阶段的缓存结果，避免重复构建不必要的部分。</p>
</li>
<li>
<p><strong>增强安全性</strong>：通过分阶段构建，可以将构建工具和环境隔离开来，减少攻击面。构建阶段可以使用特定的基础镜像和工具，而产品镜像只包含运行应用程序所需的最小组件，减少了潜在的安全漏洞。</p>
</li>
<li>
<p><strong>提高可维护性</strong>：分阶段构建使得构建过程更加模块化和可维护。每个阶段可以专注于特定的任务，使得 Dockerfile 更易于理解和维护。当需要修改某个特定的阶段时，只需要修改对应的阶段，而不会影响其他阶段。</p>
</li>
</ol>`,r:{minutes:3.76,words:1127},t:"DockerFile",y:"a"}}],["/se/devops/docker/network.html",{loader:()=>l(()=>import("./network.html-BHc1RzEE.js"),__vite__mapDeps([273,1])),meta:{d:1672229303e3,e:`
<p>bridge 是一个 interface，可以把多个网络连接到一个网</p>
<p>根据应用来选用哪种</p>
<p>能不用网络就不用，但是可以有的应用强的话，就用强的</p>
<p>7061588533214969892</p>
`,r:{minutes:.18,words:53},t:"网络",y:"a"}}],["/se/devops/docker/persistence.html",{loader:()=>l(()=>import("./persistence.html-DSX5LCDN.js"),__vite__mapDeps([274,1])),meta:{d:1672229303e3,e:`
<ul>
<li>--volume 挂在到目录</li>
<li>--volume from 从一个容器里面挂数据</li>
</ul>
<p>一次性程序 --rm，跑完就删</p>
<p>mount 远端的，通过 nfs，但是本机可以无感拿数据（但是依赖网络）</p>
<p>把本机的目录 mount 到容器上</p>
`,r:{minutes:.22,words:66},t:"持久化",y:"a"}}],["/se/devops/k8s/",{loader:()=>l(()=>import("./index.html-D74tQf4D.js"),__vite__mapDeps([275,1])),meta:{d:1672229303e3,e:`
<p><a href="https://kubernetes.io/docs/home/" target="_blank" rel="noopener noreferrer">官方文档</a></p>
<p>A workload is an application running on Kubernetes. Whether your workload is a single component or several that work<br>
together, on Kubernetes you run it inside a set of pods. In Kubernetes, a Pod represents a set of running containers on<br>
your cluster.</p>`,r:{minutes:.53,words:160},t:"Kubernetes",y:"a"}}],["/se/devops/k8s/archetecture.html",{loader:()=>l(()=>import("./archetecture.html-BpSVMHwX.js"),__vite__mapDeps([276,1])),meta:{d:1672746435e3,e:`
<p>Kubernetes 提供了多种资源对象，用户可以根据自己应用的特性加以选择。这些对象有：</p>
<hr>
<table>
<thead>
<tr>
<th>类别</th>
<th>名称</th>
</tr>
</thead>
<tbody>
<tr>
<td>资源对象</td>
<td>Pod、ReplicaSet、ReplicationController、Deployment、StatefulSet、DaemonSet、Job、CronJob、HorizontalPodAutoscaler</td>
</tr>
<tr>
<td>配置对象</td>
<td>Node、Namespace、Service、Secret、ConfigMap、Ingress、Label、CustomResourceDefinition、 ServiceAccount</td>
</tr>
<tr>
<td>存储对象</td>
<td>Volume、Persistent Volume</td>
</tr>
<tr>
<td>策略对象</td>
<td>SecurityContext、ResourceQuota、LimitRange</td>
</tr>
</tbody>
</table>`,r:{minutes:.26,words:77},t:"Architecture",y:"a"}}],["/se/devops/k8s/installation.html",{loader:()=>l(()=>import("./installation.html-B3GN54zV.js"),__vite__mapDeps([277,1])),meta:{d:1672229303e3,e:`
<h2>本地</h2>
<p>mac 环境下使用的 brew 作为包管理器，通过 brew 的方式安装最新的 docker desktop</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --cask</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> docker</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:.46,words:137},t:"Installation",y:"a"}}],["/se/devops/unix/",{loader:()=>l(()=>import("./index.html-DEAN6GUT.js"),__vite__mapDeps([278,1])),meta:{d:1669446166e3,e:`
<p>::: detail 课程介绍</p>
<h2>课程介绍</h2>
<ol>
<li>
<p>Linux、Unix 用法</p>
<p>主要是 Linux（相对没有含金量，但是比较重要）</p>
</li>
<li>
<p>运维硬件的角度</p>
<ol>
<li>给很多的脚本</li>
<li>冗余、故障转移（冗余节点对故障节点的接管）</li>
</ol>
</li>
<li>
<p>Docker 容器</p>
</li>
<li>
<p>Kubernetes</p>
</li>
</ol>
<h3>Linux</h3>
<p>讲生产环节下的 Linux 环境下的东西</p>
<p>一般用 GNU：bash</p>`,r:{minutes:1.74,words:521},t:"企业级服务器系统导论",y:"a"}}],["/se/lang/cpp/",{loader:()=>l(()=>import("./index.html-CQX9thuH.js"),__vite__mapDeps([279,1])),meta:{d:1715153702e3,e:`
<p>相比于c，c++的特性</p>
<ul>
<li>OOP，类的继承和多态</li>
<li>Template 泛型</li>
<li>overloading 函数和运算符重载</li>
<li>reference 类型，避免指针带来的一些问题</li>
<li>STL</li>
<li>Exception handling</li>
<li>namespace</li>
</ul>
<hr>
<p>包管理器/构建工具</p>
<p>ninja, makefile</p>
<p>cmake, xmake, qmake</p>
<p>vcpkg</p>
<p>Bazel/blade</p>`,r:{minutes:.24,words:72},t:"C++",y:"a"}}],["/se/lang/cpp/memory.html",{loader:()=>l(()=>import("./memory.html-TCWVVQqZ.js"),__vite__mapDeps([280,1])),meta:{d:1715153702e3,e:`
<p>New/malloc/delete/free</p>
<p><strong>malloc()</strong> 函数在 C 语言中就出现了，在 C++ 中仍然存在，但建议尽量不要使用 malloc() 函数。new 与 malloc() 函数相比，其主要的优点是，new 不只是分配了内存，它还创建了对象。</p>
<h2>指针</h2>
<h3>智能指针</h3>
<ul>
<li><code>std::auto_ptr</code></li>
<li><code>std::unique_ptr</code></li>
<li><code>std::share_ptr</code></li>
<li><code>std::weak_ptr</code></li>
</ul>`,r:{minutes:.52,words:157},t:"内存管理",y:"a"}}],["/se/lang/cpp/modules.html",{loader:()=>l(()=>import("./modules.html-DNFj6zjO.js"),__vite__mapDeps([281,1])),meta:{d:1732240892e3,e:`
<p>头文件预编译一次，到处可以使用</p>
<p>无需再用Include</p>
<p>Include宏穿透</p>
`,r:{minutes:.08,words:24},t:"Modules",y:"a"}}],["/se/lang/cpp/oop.html",{loader:()=>l(()=>import("./oop.html-D58WAi_5.js"),__vite__mapDeps([282,1])),meta:{d:1715153702e3,e:`
<p>多态</p>
<p>虚函数</p>
<p>纯虚函数</p>
<p>C++ 无接口，但是可以通过抽象类来实现</p>
<hr>
<p>c 语言实现 oop 思路和go类似，但是也有不同</p>
<p>封装：struct</p>
<p>继承：数据成员表现为叠加（父类变成一个属性）</p>
<p>多态：虚表指针，指向虚函数表，虚函数表在构造函数中初始化，在析构函数中销毁，所以在这两个函数中都不会发生多态行为。</p>
<p><code>virtual</code>：动态链接</p>
`,r:{minutes:.41,words:122},t:"OOP",y:"a"}}],["/se/lang/cpp/reference.html",{loader:()=>l(()=>import("./reference.html-DuTjfdER.js"),__vite__mapDeps([283,1])),meta:{d:1715153702e3,e:`
<p>左指引用</p>
<p>右值引用</p>
<p>引用变量是一个别名，也就是说，它是某个已存在变量的另一个名字。一旦把引用初始化为某个变量，就可以使用该引用名称或变量名称来指向变量。</p>
<ol>
<li>普通类型的变量，因为有名字，可以取地址，都认为是左值。</li>
<li>const修饰的常量，不可修改，只读类型的，理论应该按照右值对待，但因为其可以取地址(如果只是const类型常量的定义，编译器不给其开辟空间，如果对该常量取地址时，编译器才为其开辟空间)，C++11认为其是左值。</li>
<li>如果表达式的运行结果是一个临时变量或者对象，认为是右值。</li>
<li>如果表达式运行结果或单个变量是一个引用则认为是左值。</li>
</ol>`,r:{minutes:1.26,words:379},t:"引用",y:"a"}}],["/se/lang/frontend/",{loader:()=>l(()=>import("./index.html-CdbuU1uv.js"),__vite__mapDeps([284,1])),meta:{d:1715153702e3,e:`
<ul>
<li>HTML</li>
<li>CSS</li>
<li>JS/TS</li>
</ul>
`,r:{minutes:.02,words:7},t:"Front End 前端",y:"a"}}],["/se/lang/golang/MPG.html",{loader:()=>l(()=>import("./MPG.html-3q4EZr-_.js"),__vite__mapDeps([285,1])),meta:{d:1684318252e3,e:`
<p>在操作系统提供的内核线程之上，Go 搭建了一个特有的用户级线程模型。传统的函数调用是将函数指针存储在内存的栈空间上，但是栈空间只允许操作系统进行操作，我们能拿到的只限于堆内存，所以 Go 开发者在堆上申请一块内存，将寄存器 %rsp 以及寄存器 %rbp 指过去，从而将这块内存伪装成用户栈，从而巧妙地实现了并行运行用户级线程 goroutine。要聊 Go 的线程实现模型，必须要知道以下 3 个核心元素：</p>
<ul>
<li>M：machine 缩写，一个 M 代表一个内核线程。</li>
<li>P：processer 缩写，一个 P 代表执行一个 Go 代码片段所需的必要资源。</li>
<li>G：goroutine 缩写，一个 G 代表一个 Go 代码片段。</li>
</ul>`,r:{minutes:.74,words:221},t:"MPG",y:"a"}}],["/se/lang/golang/tool-chain.html",{loader:()=>l(()=>import("./tool-chain.html-BzXE6uyL.js"),__vite__mapDeps([286,1])),meta:{d:1691997116e3,e:`
<ul>
<li>
<p>熔断 back-off</p>
</li>
<li>
<p>定时任务 cron</p>
</li>
<li>
<p>k8s client-go</p>
<p>informer</p>
</li>
<li>
<p>调试 delve</p>
</li>
</ul>
<p>Goland Debug 无法调试问题</p>
`,r:{minutes:.09,words:27},t:"工具链",y:"a"}}],["/se/lang/golang/%E4%BC%98%E5%8C%96.html",{loader:()=>l(()=>import("./优化.html-D4i_Nh0l.js"),__vite__mapDeps([287,1])),meta:{d:1692243193e3,e:`
<p>行锁优化</p>
<p>为 Map 的 Value 封装为一个结构体，其中包含一个读写锁，这样可以在读取的时候不会阻塞写入，提高并发性能</p>
<div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Map</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    m</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">entry</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">RWMutex</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.23,words:368},t:"优化",y:"a"}}],["/se/lang/golang/%E5%B7%A5%E7%A8%8B%E8%A7%84%E8%8C%83.html",{loader:()=>l(()=>import("./工程规范.html-nzWup0FR.js"),__vite__mapDeps([288,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/se/lang/golang/%E5%B9%B6%E5%8F%91.html",{loader:()=>l(()=>import("./并发.html-iU_CQi0h.js"),__vite__mapDeps([289,1])),meta:{d:1692266781e3,e:`
<p>一致性</p>
`,r:{minutes:.02,words:5},t:"并发",y:"a"}}],["/se/lang/golang/%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8.html",{loader:()=>l(()=>import("./并发安全.html-DfUcTdnE.js"),__vite__mapDeps([290,1])),meta:{d:1675410392e3,e:`<p>一致性</p>
`,r:{minutes:.01,words:3},t:"",y:"a"}}],["/se/lang/golang/%E6%8E%92%E6%9F%A5.html",{loader:()=>l(()=>import("./排查.html-BZ-OkP4O.js"),__vite__mapDeps([291,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/se/lang/golang/%E8%AF%AD%E6%B3%95.html",{loader:()=>l(()=>import("./语法.html-CJEjwtpX.js"),__vite__mapDeps([292,1])),meta:{d:1684318252e3,e:`
<h2>基本语法</h2>
<h3>数据类型</h3>
<p>Golang 中的数据类型包括基本数据类型和复合数据类型。</p>
<h4>基本数据类型</h4>
<p>Golang 中的基本数据类型包括：</p>
<ul>
<li>布尔类型：bool，取值为 true 或 false。</li>
<li>数值类型：包括整数类型和浮点数类型。
<ul>
<li>整数类型：int8、int16、int32、int64、uint8、uint16、uint32、uint64、int、uint、uintptr。</li>
<li>浮点数类型：float32、float64。</li>
</ul>
</li>
<li>字符串类型：用于表示文本数据。</li>
<li>字符类型：用于表示单个字符，使用 rune 类型表示。</li>
<li>错误类型：用于表示错误信息，通常用于函数返回值。</li>
</ul>`,r:{minutes:7.06,words:2119},t:"Go",y:"a"}}],["/se/lang/java/",{loader:()=>l(()=>import("./index.html-BqtW0sZ-.js"),__vite__mapDeps([293,1])),meta:{d:1670066498e3,e:`
<ul>
<li>语法</li>
<li>集合</li>
<li>JUC 并发编程</li>
<li>JVM 虚拟机</li>
<li>IO</li>
<li>新特性</li>
<li>框架</li>
</ul>
<p><a href="https://alibaba.github.io/p3c/" target="_blank" rel="noopener noreferrer">阿里巴巴Java开发手册</a></p>
`,r:{minutes:.1,words:31},t:"Java",y:"a"}}],["/se/lang/kotlin/basic.html",{loader:()=>l(()=>import("./basic.html-DPm3PLxs.js"),__vite__mapDeps([294,1])),meta:{d:1736210466e3,e:`<p>类型后置</p>
<p>好处：类型推断的时候无需占位符</p>
<div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" data-title="kotlin" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">val</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 定量</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 变量</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.09,words:27},t:"",y:"a"}}],["/se/lang/python/",{loader:()=>l(()=>import("./index.html-CCmHAPBm.js"),__vite__mapDeps([295,1])),meta:{d:1732240892e3,e:`
<h3>py3 vs py2</h3>
<ul>
<li>print在py3里是一个函数，在py2里只是一个关键字</li>
<li>py3文件的默认编码是utf8，py2文件的默认编码是ascii</li>
<li>py3的str是unicode字符串，而py2的str是bytes</li>
<li>py3的range()返回一个可迭代对象，py2的 range()返回一个列表，xrange()返回一个可迭代对象,</li>
<li>py3的除法返回float，py2的除法返回int</li>
</ul>
`,r:{minutes:.34,words:102},t:"Python",y:"a"}}],["/se/lang/python/class.html",{loader:()=>l(()=>import("./class.html-C9iIDByr.js"),__vite__mapDeps([296,1])),meta:{d:1732240892e3,e:`
<p>duck type</p>
<h3><code>__new__</code>和<code>__init__</code>区别？</h3>
<ul>
<li><code>__new__</code>是一个静态方法,而<code>__init__</code>是一个实例方法.</li>
<li><code>__new__</code>方法会返回一个创建的实例,而<code>__init__</code>什么都不返回.</li>
<li>只有在<code>__new__</code>返回一个cls的实例时后面的<code>__init__</code>才能被调用.</li>
<li>当创建一个新实例时调用<code>__new__</code>,初始化一个实例时用<code>__init__</code>.</li>
</ul>`,r:{minutes:1.93,words:578},t:"Class",y:"a"}}],["/se/lang/python/collections.html",{loader:()=>l(()=>import("./collections.html-DE84N-Zm.js"),__vite__mapDeps([297,1])),meta:{d:1732240892e3,e:`
<p><code>slice(start, end, step)</code></p>
<h3>defaultdict</h3>
<p>使用dict时，如果引用的Key不存在，就会抛出KeyError。如果希望key不存在时，返回一个默认值，就可以用defaultdict</p>
<p>在没有接触到它之前，我在代码里经常使用setdafult来给字典设置初始值，但这样可读性不好，也不够优雅，比如这一段：</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>for cate in res_service_category:</span></span>
<span class="line"><span>    category_id = cate['id']</span></span>
<span class="line"><span>    biz_service_category_mapping = self._service_category_data.setdefault(bk_biz_id, {})</span></span>
<span class="line"><span>    biz_service_category_mapping[category_id] = cate</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.64,words:491},t:"Collections",y:"a"}}],["/se/lang/python/decorators.html",{loader:()=>l(()=>import("./decorators.html-BJrhxMDT.js"),__vite__mapDeps([298,1])),meta:{d:1732240892e3,e:`
<blockquote>
<p>类似于Java的注解，实现类似于AOP，但是是通过闭包的形式</p>
</blockquote>
<p><strong>说明</strong>：装饰器可以用来装饰类或函数，为其提供额外的能力，属于设计模式中的<strong>代理模式</strong>。</p>
<p><strong>装饰器本身也可以参数化</strong>，例如上面的例子中，如果不希望在终端中显示函数的执行时间而是希望由调用者来决定如何输出函数的执行时间，可以通过参数化装饰器的方式来做到，代码如下所示。</p>
<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> functools </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> wraps</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> singleton</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">cls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    """单例类装饰器"""</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    instances </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    @wraps</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">cls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> wrapper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> **</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">kwargs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> cls</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> not</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> instances:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            instances[</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">cls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> cls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*args, **kwargs)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> instances[</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">cls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> wrapper</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">@singleton</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> President</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pass</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.9,words:571},t:"Decorators 装饰器",y:"a"}}],["/se/lang/python/engineering.html",{loader:()=>l(()=>import("./engineering.html-65Q6JNVE.js"),__vite__mapDeps([299,1])),meta:{d:1675410392e3,e:`
<p>密钥、敏感信息放到环境变量里面，代码的话</p>
<p><code>os.environ.get('xxx')</code>即可获取</p>
`,r:{minutes:.09,words:27},t:"工程化",y:"a"}}],["/se/lang/python/function.html",{loader:()=>l(()=>import("./function.html-BGXlf3HS.js"),__vite__mapDeps([300,1])),meta:{d:1732240892e3,e:`
<ul>
<li>Arbitrary Arguments, *args</li>
<li>Arbitrary Keyword Arguments, **kwargs</li>
<li>Default Parameter Value</li>
</ul>
`,r:{minutes:.04,words:11},t:"Function",y:"a"}}],["/se/lang/python/gc.html",{loader:()=>l(()=>import("./gc.html-Nw-EziDH.js"),__vite__mapDeps([301,1])),meta:{d:1732240892e3,e:`
<p>GC要做的有 2 件事，</p>
<ol>
<li>找到内存中无用的垃圾对象资源</li>
<li>清除找到的这些垃圾对象，释放内存给其他对象使用。</li>
</ol>
<p>Python GC主要使用引用计数（reference counting）来跟踪和回收垃圾。在引用计数的基础上，通过“标记-清除”（mark and sweep）解决容器对象可能产生的循环引用问题，通过“分代回收”（generation collection）以空间换时间的方法提高垃圾回收效率。</p>
<h4>引用计数</h4>
<p>每一个对象在源码中的结构体表示如下：</p>
<div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">typedef</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> struct_object {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ob_refcnt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> struct_typeobject </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">ob_type;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">} PyObject;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.6,words:781},t:"Garbage Collection",y:"a"}}],["/se/lang/python/iterator.html",{loader:()=>l(()=>import("./iterator.html-sVAMvNhE.js"),__vite__mapDeps([302,1])),meta:{d:1732240892e3,e:`
<ul>
<li><code>enumerate(iterable, start=0)</code></li>
<li><code>range(start, stop, step)</code></li>
</ul>
<h3>Iterator vs Iterable</h3>
<ul>
<li>可迭代类，必须自定义__iter__()魔法方法，range，list类的实例化对象都是可迭代对象</li>
<li>迭代器类，必须自定义__iter__()和__next__()魔法方法，用iter()函数可以创建可迭代对象的迭代器</li>
</ul>
<h2>Generators</h2>
<p>生成器是一种可迭代对象，可以挂起并保持当前的状态</p>`,r:{minutes:1.41,words:424},t:"Iterator",y:"a"}}],["/se/lang/python/loop.html",{loader:()=>l(()=>import("./loop.html-auFWrlxy.js"),__vite__mapDeps([303,1])),meta:{d:1732240892e3,e:`
<h2>While</h2>
<p><code>while</code></p>
<p><code>while else</code></p>
<h2>For</h2>
<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> i, x </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> enumerate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(nums):</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:.04,words:13},t:"Loop",y:"a"}}],["/se/lang/python/memory.html",{loader:()=>l(()=>import("./memory.html-ZQdV_Rs3.js"),__vite__mapDeps([304,1])),meta:{d:1732240892e3,e:`
<p>Python 有内存池机制，Pymalloc 机制，用于对内存的申请和释放管理。先来看一下为什么有内存池：</p>
<p>当创建大量消耗小内存的对象时，c 中频繁调用 new/malloc 会导致大量的内存碎片，致使效率降低。</p>
<p>内存池的概念就是预先在内存中申请一定数量的，大小相等的内存块留作备用，当有新的内存需求时，就先从内存池中分配内存给这个需求，不够了之后再申请新的内存。这样做最显著的优势就是能够减少内存碎片，提升效率。</p>
<p>查看源码，可以看到 Pymalloc 对于小的对象，Pymalloc 会在内存池中申请空间，一般是少于236kb，如果是大的对象，则直接调用 new/malloc 来申请新的内存空间。</p>`,r:{minutes:.73,words:220},t:"Memory",y:"a"}}],["/se/lang/python/module.html",{loader:()=>l(()=>import("./module.html-Ly5zItD4.js"),__vite__mapDeps([305,1])),meta:{d:1732240892e3,e:`
<p>每个Python文件就是一个模块，而保存这些文件的文件夹就是一个包，但是这个作为Python包的文件夹必须要有一个名为<code>__init__.py</code>的文件，否则无法导入这个包。通常一个文件夹下还可以有子文件夹，这也就意味着一个包下还可以有子包，子包中的<code>__init__.py</code>并不是必须的。模块和包解决了Python中命名冲突的问题，不同的包下可以有同名的模块，不同的模块下可以有同名的变量、函数或类。在Python中可以使用<code>import</code>或<code>from ... import ...</code>来导入包和模块，在导入的时候还可以使用<code>as</code>关键字对包、模块、类、函数、变量等进行别名，从而彻底解决编程中尤其是多人协作团队开发时的命名冲突问题。</p>`,r:{minutes:.76,words:228},t:"Module",y:"a"}}],["/se/lang/python/multithreading.html",{loader:()=>l(()=>import("./multithreading.html-CkEJPFhE.js"),__vite__mapDeps([306,1])),meta:{d:1732240892e3,e:`
<p>Python provides several ways to implement multithreading, mainly through the <code>threading</code> module. However, due to Python's Global Interpreter Lock (GIL), native threads do not achieve true parallelism for CPU-bound tasks. They are most useful for I/O-bound tasks where threads can wait for external data (like file or network I/O) without blocking others.</p>`,r:{minutes:2.43,words:730},t:"Multi-threading",y:"a"}}],["/se/lang/python/object.html",{loader:()=>l(()=>import("./object.html-Dm_Yx4IS.js"),__vite__mapDeps([307,1])),meta:{d:1669794167e3,t:"",y:"a"}}],["/se/lang/python/package.html",{loader:()=>l(()=>import("./package.html-DSEb9BcY.js"),__vite__mapDeps([308,1])),meta:{d:1695639496e3,e:`
<p>PIP</p>
<p>Poetry 看起来也是个不错的选择，Poetry 和 Pipenv 、PDM 类似，是一个 Python 虚拟环境和依赖管理工具，另外它还提供了包管理功能，比如打包和发布。你可以把它看做是 Pipenv 和 Flit 这些工具的超集。它可以让你用 Poetry 来同时管理 Python 库和 Python 程序。</p>
`,r:{minutes:.32,words:95},t:"Package Management 依赖管理",y:"a"}}],["/se/lang/python/patch.html",{loader:()=>l(()=>import("./patch.html-9Z9ztWwo.js"),__vite__mapDeps([309,1])),meta:{d:1732240892e3,e:`
<h4>谈谈你对“猴子补丁”（monkey patching）的理解。</h4>
<p>“猴子补丁”是动态类型语言的一个特性，代码运行时在不修改源代码的前提下改变代码中的方法、属性、函数等以达到热补丁（hot patch）的效果。很多系统的安全补丁也是通过猴子补丁的方式来实现的，但实际开发中应该避免对猴子补丁的使用，以免造成代码行为不一致的问题。</p>
<p>在使用<code>gevent</code>库的时候，我们会在代码开头的地方执行<code>gevent.monkey.patch_all()</code>，这行代码的作用是把标准库中的<code>socket</code>模块给替换掉，这样我们在使用<code>socket</code>的时候，不用修改任何代码就可以实现对代码的协程化，达到提升性能的目的，这就是对猴子补丁的应用。</p>`,r:{minutes:1.07,words:320},t:"Path",y:"a"}}],["/se/lang/python/stl.html",{loader:()=>l(()=>import("./stl.html-DhOsBmWP.js"),__vite__mapDeps([310,1])),meta:{d:1732240892e3,e:`
<table>
<thead>
<tr>
<th>模块名</th>
<th>介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td>sys</td>
<td>跟Python解释器相关的变量和函数，例如：<code>sys.version</code>、<code>sys.exit()</code></td>
</tr>
<tr>
<td>os</td>
<td>和操作系统相关的功能，例如：<code>os.listdir()</code>、<code>os.remove()</code></td>
</tr>
<tr>
<td>re</td>
<td>和正则表达式相关的功能，例如：<code>re.compile()</code>、<code>re.search()</code></td>
</tr>
<tr>
<td>math</td>
<td>和数学运算相关的功能，例如：<code>math.pi</code>、<code>math.e</code>、<code>math.cos</code></td>
</tr>
<tr>
<td>logging</td>
<td>和日志系统相关的类和函数，例如：<code>logging.Logger</code>、<code>logging.Handler</code></td>
</tr>
<tr>
<td>json / pickle</td>
<td>实现对象序列化和反序列的模块，例如：<code>json.loads</code>、<code>json.dumps</code></td>
</tr>
<tr>
<td>hashlib</td>
<td>封装了多种哈希摘要算法的模块，例如：<code>hashlib.md5</code>、<code>hashlib.sha1</code></td>
</tr>
<tr>
<td>urllib</td>
<td>包含了和URL相关的子模块，例如：<code>urllib.request</code>、<code>urllib.parse</code></td>
</tr>
<tr>
<td>itertools</td>
<td>提供各种迭代器的模块，例如：<code>itertools.cycle</code>、<code>itertools.product</code></td>
</tr>
<tr>
<td>functools</td>
<td>函数相关工具模块，例如：<code>functools.partial</code>、<code>functools.lru_cache</code>、<code>functools.wraps</code></td>
</tr>
<tr>
<td>collections / heapq</td>
<td>封装了常用数据结构和算法的模块，例如：<code>collections.deque</code></td>
</tr>
<tr>
<td>threading / multiprocessing</td>
<td>多线程/多进程相关类和函数的模块，例如：<code>threading.Thread</code></td>
</tr>
<tr>
<td>concurrent.futures / asyncio</td>
<td>并发编程/异步编程相关的类和函数的模块，例如：<code>ThreadPoolExecutor</code></td>
</tr>
<tr>
<td>base64</td>
<td>提供BASE-64编码相关函数的模块，例如：<code>bas64.encode</code></td>
</tr>
<tr>
<td>csv</td>
<td>和读写CSV文件相关的模块，例如：<code>csv.reader</code>、<code>csv.writer</code></td>
</tr>
<tr>
<td>profile / cProfile / pstats</td>
<td>和代码性能剖析相关的模块，例如：<code>cProfile.run</code>、<code>pstats.Stats</code></td>
</tr>
<tr>
<td>unittest</td>
<td>和单元测试相关的模块，例如：<code>unittest.TestCase</code></td>
</tr>
</tbody>
</table>`,r:{minutes:1.04,words:311},t:"Python Standard Library",y:"a"}}],["/se/tools/git/",{loader:()=>l(()=>import("./index.html-B65UgEOV.js"),__vite__mapDeps([311,1])),meta:{d:1672663528e3,e:`
<h2>配置</h2>
<p>git config 命令的–global 参数，用了这个参数，表示你这台机器上所有的 Git 仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和 Email 地址。</p>
<h3>查看 git 配置信息</h3>
<p><code>$ git config --list</code></p>
<h3>查看 git 用户名、密码、邮箱的配置</h3>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> user.name</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> user.password</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> user.email</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.68,words:204},t:"Git",y:"a"}}],["/se/tools/git/submodule.html",{loader:()=>l(()=>import("./submodule.html-C7IFKRnd.js"),__vite__mapDeps([312,1])),meta:{d:1731124512e3,e:`
`,r:{minutes:0,words:1},t:"Submodule",y:"a"}}],["/se/tools/latex/",{loader:()=>l(()=>import("./index.html-C5pAmR7G.js"),__vite__mapDeps([313,1])),meta:{d:1672663528e3,e:`
<p><a href="https://www.mathcha.io" target="_blank" rel="noopener noreferrer">https://www.mathcha.io</a></p>
<p><a href="https://www.jianshu.com/p/22117d964baf" target="_blank" rel="noopener noreferrer">https://www.jianshu.com/p/22117d964baf</a></p>
`,r:{minutes:.02,words:5},t:"LaTeX",y:"a"}}],["/se/tools/latex/block.html",{loader:()=>l(()=>import("./block.html-CeQEASj9.js"),__vite__mapDeps([314,1])),meta:{d:1731124512e3,e:`
<p>边框</p>
<div class="language-latex line-numbers-mode" data-highlighter="shiki" data-ext="latex" data-title="latex" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\left</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{([|.</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\right</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{([|.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.31,words:94},t:"Block",y:"a"}}],["/se/tools/latex/operator.html",{loader:()=>l(()=>import("./operator.html-CeOdHJNd.js"),__vite__mapDeps([315,1])),meta:{d:1731124512e3,e:`
<ul>
<li>
<p><code>\\mathcal</code>：花体数学符号</p>
</li>
<li>
<p><code>\\mathbf</code>：粗体正向数学符号</p>
</li>
<li>
<p><code>\\mathrm</code>：取消字母的数学符号格式的倾斜</p>
</li>
<li>
<p><code>\\mathop</code>：标记后面内容为数学运算符（则可以使用 limits 等标记）</p>
</li>
<li>
<p><code>\\underset</code>，功能和效果类似 limits 的下限</p>
</li>
</ul>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi mathvariant="bold">L</mi><mi mathvariant="bold">E</mi><mi mathvariant="bold">R</mi></mrow><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><msub><mrow><mi mathvariant="bold">P</mi><mi mathvariant="bold">L</mi><mi mathvariant="bold">E</mi><mi mathvariant="bold">R</mi></mrow><mi>i</mi></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mfrac><msub><mi>B</mi><mrow><mi>i</mi><mi mathvariant="normal">_</mi><mi>m</mi><mi>i</mi><mi>x</mi></mrow></msub><msub><mi>B</mi><mrow><mi>i</mi><mi mathvariant="normal">_</mi><mi>m</mi><mi>o</mi><mi>n</mi><mi>o</mi></mrow></msub></mfrac></mrow><annotation encoding="application/x-tex">\\mathbf{LER} = \\sum\\limits_{i=0}^n \\mathbf{PLER}_i = \\sum\\limits_{i=0}^n \\frac{B_{i\\_mix}}{B_{i\\_mono}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6861em;"></span><span class="mord"><span class="mord mathbf">LER</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3291em;vertical-align:-0.9777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3514em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">PLER</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3291em;vertical-align:-0.9777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3514em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0434em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3644em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5651em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">mi</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3644em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>`,r:{minutes:.29,words:88},t:"Operator",y:"a"}}],["/se/tools/others/alist.html",{loader:()=>l(()=>import("./alist.html-BClJ80f4.js"),__vite__mapDeps([316,1])),meta:{d:1673495221e3,e:`
<p>Webdav</p>
<p>阿里云无法预览视频原因：refresh token 问题，重新抓去，或去 app 抓取</p>
<p>用安卓，或安卓虚拟机抓取</p>
`,r:{minutes:.12,words:37},t:"AList",y:"a"}}],["/se/tools/others/pm.html",{loader:()=>l(()=>import("./pm.html-CDTLO4Rn.js"),__vite__mapDeps([317,1])),meta:{d:1719451307e3,e:`
<h3>Node.js</h3>
<p>npm</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> registry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://registry.npmmirror.com/</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:.08,words:24},t:"包管理器",y:"a"}}],["/se/tools/others/xdm.html",{loader:()=>l(()=>import("./xdm.html-DDIrN8cD.js"),__vite__mapDeps([318,1])),meta:{d:1673495221e3,e:`
<p>下载器对比：<a href="https://zhuanlan.zhihu.com/p/500792340" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/500792340</a></p>
`,r:{minutes:.03,words:8},t:"XDM",y:"a"}}],["/se/tools/uml/mermaid.html",{loader:()=>l(()=>import("./mermaid.html-DSHvk140.js"),__vite__mapDeps([319,1])),meta:{d:1673100434e3,e:`
`,r:{minutes:0,words:1},t:"Mermaid",y:"a"}}],["/se/tools/uml/plantUML.html",{loader:()=>l(()=>import("./plantUML.html-pqKViffd.js"),__vite__mapDeps([320,1])),meta:{d:1673100434e3,e:`
<p><a href="https://blog.csdn.net/vidar_li/article/details/86495811" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/vidar_li/article/details/86495811</a></p>
<p><img src="https://g.gravizo.com/svg?
  digraph G {
    aize =&quot;4,4&quot;;
    main [shape=box];
    main -> parse [weight=8];
    parse -> execute;
    main -> init [style=dotted];
    main -> cleanup;
    execute -> { make_string; printf}
    init -> make_string;
    edge [color=red];
    main -> printf [style=bold,label=&quot;100 times&quot;];
    make_string [label=&quot;make a string&quot;];
    node [shape=box,style=filled,color=&quot;.7 .3 1.0&quot;];
    execute -> compare;
  }"></p>`,r:{minutes:.21,words:63},t:"Plant UML",y:"a"}}],["/se/tools/vuepress/",{loader:()=>l(()=>import("./index.html-CeYSwx2R.js"),__vite__mapDeps([321,1])),meta:{d:1672663528e3,e:`
`,r:{minutes:0,words:1},t:"Vuepress",y:"a"}}],["/se/tools/vuepress/bugfix.html",{loader:()=>l(()=>import("./bugfix.html-9qopr8vq.js"),__vite__mapDeps([322,1])),meta:{d:1669641685e3,e:`
<p>踩坑记录：</p>
<p>vuepress 部署样式问题的解决：</p>
<p><a href="https://www.jb51.net/article/263056.htm" target="_blank" rel="noopener noreferrer">https://www.jb51.net/article/263056.htm</a></p>
<p>github action 缓存 node</p>
<ul>
<li><a href="http://www.wrzsj.top" target="_blank" rel="noopener noreferrer">http://www.wrzsj.top</a></li>
<li><a href="https://www.5axxw.com/questions/content/tffumi" target="_blank" rel="noopener noreferrer">https://www.5axxw.com/questions/content/tffumi</a></li>
</ul>`,r:{minutes:.19,words:56},t:"Vuepress 踩坑记录",y:"a"}}],["/se/tools/vuepress/it.html",{loader:()=>l(()=>import("./it.html-DhnJUq6q.js"),__vite__mapDeps([323,1])),meta:{d:1700646963e3,e:`
<p>html5嵌入: markdown-it-html5-embed（typora自带支持html5）</p>
<p><a href="https://stackoverflow.com/questions/46273751/how-can-i-add-a-video-in-markdown" target="_blank" rel="noopener noreferrer">markdown video</a></p>
<p>Depending on your markdown processor, there may be a built-in syntax.</p>
<p>Pandoc <a href="https://pandoc.org/MANUAL.html#images" target="_blank" rel="noopener noreferrer">the image syntax</a> with a video file extension (<code>.mov</code>, <code>.mp4</code>) can be used:</p>`,r:{minutes:1.91,words:573},t:"it",y:"a"}}],["/test/GRE/QUANTITATIVE/",{loader:()=>l(()=>import("./index.html-CYMDJuKc.js"),__vite__mapDeps([324,1])),meta:{d:1700646963e3,e:`
<p>满分 170，很多 top 学校实际卡 167（表面说最低155）</p>
<p>计算器：只能做简单的四则运算：加减乘除，乘方开方不行</p>
<table>
<thead>
<tr>
<th>Section 2</th>
<th>错题</th>
</tr>
</thead>
<tbody>
<tr>
<td>Hard</td>
<td>1-4</td>
</tr>
<tr>
<td>Medium</td>
<td>5-7</td>
</tr>
<tr>
<td>Hard</td>
<td>8-12</td>
</tr>
</tbody>
</table>
<hr>
<ul>
<li>Arithmetic 算术</li>
<li>Algebra 代数</li>
<li>Geometry 几何</li>
<li>Analysis 分析</li>
</ul>`,r:{minutes:.75,words:224},t:"Quantitative",y:"a"}}],["/test/GRE/QUANTITATIVE/%E4%BB%A3%E6%95%B0.html",{loader:()=>l(()=>import("./代数.html-CUXzNSHC.js"),__vite__mapDeps([325,1])),meta:{d:1700646963e3,e:`
<h2>Algebraic Expression 代数式</h2>
<ul>
<li>代数式 algebraic expression</li>
<li>项term</li>
<li>同类项 like term</li>
<li>常数项 constant term</li>
<li>系数 coefficient</li>
</ul>
<p>由数和表示数的字母经有限次加、减、乘、除、乘方和开方等代数运算所得到的式子，叫做代数式。 也可以简单理解为含有字母的数学表达式称为代数式。</p>
<p>例如： <em>ax</em>+2<em>b</em>， 3𝑥2+7y+9等。</p>
<p>以 3𝑥2+7y+9 为例：3𝑥2和7y 和9 是这个代数式的三项；其中常数 9 就是这个代数式的常数项；每一项中的数字就是系数，比如 3𝑥2的系数为3，7y 的系数为 7；</p>`,r:{minutes:1.81,words:542},t:"Algebra 代数",y:"a"}}],["/test/GRE/QUANTITATIVE/%E5%87%A0%E4%BD%95.html",{loader:()=>l(()=>import("./几何.html-CbUa6NX3.js"),__vite__mapDeps([326,1])),meta:{d:1700646963e3,e:`
<h2>Lines &amp; planes 直线与平面</h2>
<ul>
<li>两直线平行并为第三条直线所截后，相应角的关系。</li>
<li>直线与平面的关系。</li>
</ul>
<p>例 1：If P and Q are different points in a plane, the set of all points in this plane that are closer to P than to Q is</p>
<p>(A) the region of the plane on one side of a line<br>
(B) the interior of a square<br>
(C) a wedge-shaped region of the plane<br>
(D) the region of the plane bounded by a parabola<br>
(E) the interior of a circle</p>`,r:{minutes:4.01,words:1204},t:"Geometry 几何",y:"a"}}],["/test/GRE/QUANTITATIVE/%E6%95%B0%E5%88%86.html",{loader:()=>l(()=>import("./数分.html-Bi0c0lY2.js"),__vite__mapDeps([327,1])),meta:{d:1700646963e3,e:`
<h2>Set 集合</h2>
<ul>
<li>集合 set</li>
<li>子集 subset</li>
<li>元素 element/member</li>
<li>有限集合 finite set</li>
<li>无限集合 infinite set</li>
<li>空集 empty set</li>
<li>非空集 nonempty set</li>
<li>交集 intersection</li>
<li>并集 union</li>
<li>互斥 disjoint/ mutually exclusive</li>
<li>容斥原理 inclusion-exclusion principle</li>
<li>韦恩图 Venn diagram</li>
</ul>`,r:{minutes:4.01,words:1202},t:"Data Analysis 数据分析",y:"a"}}],["/test/GRE/QUANTITATIVE/%E6%95%B0%E8%AE%BA.html",{loader:()=>l(()=>import("./数论.html-Bt5m68vk.js"),__vite__mapDeps([328,1])),meta:{d:1700646963e3,e:`
<ul>
<li>
<p>实数 real number</p>
<ul>
<li>
<p>有理数 rational number</p>
<ul>
<li>
<p>整数 integer</p>
<ul>
<li>自然数 natural number</li>
</ul>
</li>
<li>
<p>小数 decimal / 分数 fraction</p>
</li>
</ul>
</li>
<li>
<p>无理数 irrational number</p>
</li>
</ul>
</li>
<li>
<p>虚数 imaginary number</p>
</li>
</ul>
<h2>整数 Integer</h2>`,r:{minutes:6.17,words:1850},t:"数论",y:"a"}}],["/test/GRE/QUANTITATIVE/%E7%AD%94%E6%A1%88.html",{loader:()=>l(()=>import("./答案.html-Cq7Z6NZO.js"),__vite__mapDeps([329,1])),meta:{d:1703688112e3,e:`
<ol>
<li>**翻译：**Mary 买一本书共付了$10,这其中包括书本身的价格和书的价格 4%的销售税，售货员找零正确共找了不到$3，那么下列说法中哪些是正确的？请选择所有正确的答案。</li>
</ol>
<p>A．书本身的价格小于$9.50</p>
<p>B．书本身的价格大于$6.90</p>
<p>C．销售税小于$0.45</p>
<p>**解析：**我们设书本身的价格为 x，那么销售税为 4%，那么 Mary 一共付了 1.04x，由题目已知条件可以列出不等式：10-1.04x&lt;3，且 1.04x ＜ 10，解得 x&gt;6.73 且 x&lt;9.615，所以销售税在 0.2692 到 0.4 之间。</p>`,r:{minutes:35.79,words:10736},t:"答案",y:"a"}}],["/test/GRE/QUANTITATIVE/%E9%94%99%E9%A2%98.html",{loader:()=>l(()=>import("./错题.html-C4UOkDbN.js"),__vite__mapDeps([330,1])),meta:{d:1700646963e3,e:`
<h2>数论</h2>
<p>133</p>
<p>Quantity A：Number of primes between 50 and 60</p>
<p>Quantity B：Number of primes between 80 and 90</p>
<p>A. Quantity A is greater.</p>
<p>B. Quantity B is greater.</p>
<p>C. The two quantities are equal.</p>
<p>D. The relationship cannot be determined from the information given.</p>`,r:{minutes:3.6,words:1080},t:"错题集",y:"a"}}],["/test/GRE/VERBAL/",{loader:()=>l(()=>import("./index.html-xMqVLe_J.js"),__vite__mapDeps([331,1])),meta:{d:1700646963e3,e:`
<ul>
<li>填空 Blank</li>
<li>阅读 Reading</li>
</ul>
<p>各 10 题</p>
<ul>
<li>B: 7 + 7</li>
<li>R: 5 + 8</li>
</ul>
<p>题目数量</p>
<table>
<thead>
<tr>
<th></th>
<th>S1</th>
<th>S2</th>
</tr>
</thead>
<tbody>
<tr>
<td>B</td>
<td>7</td>
<td>7</td>
</tr>
<tr>
<td>R</td>
<td>5</td>
<td>8</td>
</tr>
</tbody>
</table>`,r:{minutes:.17,words:50},t:"Verbal",y:"a"}}],["/test/GRE/aw/",{loader:()=>l(()=>import("./index.html-BmXt2BO_.js"),__vite__mapDeps([332,1])),meta:{d:1700646963e3,e:`
<p>改革以后没有 Argument 了，只剩下 Issue 了</p>
`,r:{minutes:.05,words:15},t:"Analytical Writing",y:"a"}}],["/test/TOEFL/LISTENING/4.%20%E5%AF%B9%E8%AF%9D%E4%B8%B2%E8%81%94%E6%B3%95.html",{loader:()=>l(()=>import("./4. 对话串联法.html-_rSXHcdM.js"),__vite__mapDeps([333,1])),meta:{d:1691648992e3,e:`
<p>刷题：不用太多，只需要 10/20 篇，认认真真做，去掌握规律，无需分话题，分话题只是熟悉场景词；永远做不完，不要纯刷题，认认真真刷十道题仔细分析规律就够了</p>
<p>话题：校园场景</p>
<p>简单之处：</p>
<ul>
<li>词汇简单、</li>
<li>内容简单、</li>
<li>篇幅不长</li>
</ul>
<p>困难之处：</p>
<ol>
<li>
<p>地道表达</p>
<p>eg. neat=nice</p>
</li>
<li>
<p>语音现象</p>
<p>语速稍快，连读、弱读更多</p>
</li>
<li>
<p>内容思路</p>
</li>
</ol>`,r:{minutes:3.44,words:1033},t:"对话串联",y:"a"}}],["/test/TOEFL/LISTENING/5.%20%E8%AE%B2%E5%BA%A7%E5%88%86%E5%B1%82%E6%B3%95.html",{loader:()=>l(()=>import("./5. 讲座分层法.html-DqOid8vO.js"),__vite__mapDeps([334,1])),meta:{d:1691648992e3,e:`
<p>并列理论</p>
<ul>
<li>简单并列：</li>
<li>让步转折：
<ul>
<li>虽然方法是并列的，但是前面的有缺陷才讲后面的方法</li>
</ul>
</li>
</ul>
<h3>讲座听力策略</h3>
<ol>
<li>
<p>抓中心(句) topic</p>
<blockquote>
<p>开头 1min，抓中心 topic 就可以了（中心句）</p>
</blockquote>
<ul>
<li>开门见山</li>
<li>背景铺垫
<ul>
<li>1min</li>
<li>2min</li>
</ul>
</li>
<li>自己总结</li>
</ul>
</li>
<li>
<p>听分段</p>
<ul>
<li>语气词、
<ul>
<li>ok</li>
<li>now</li>
</ul>
</li>
<li>逻辑词、
<ul>
<li>next</li>
</ul>
</li>
<li>新内容（new info、提问引出）</li>
</ul>
</li>
<li>
<p>段内逻辑点</p>
<p>基本上就是考点</p>
<ul>
<li>
<p>举例 eg.</p>
<p>why mention 例子</p>
<p>信号词：for example</p>
</li>
<li>
<p>对比 VS</p>
<p>difference</p>
<p>信号词：</p>
</li>
<li>
<p>因果 ∵</p>
<p>factor</p>
<p>信号词：as a result</p>
</li>
<li>
<p>转折 Z</p>
<ul>
<li>eg. 理论、=(解释)、+(支持证据)、-(存在问题)</li>
<li>转折前后的信息点都要听到</li>
</ul>
</li>
<li>
<p>并列 1.2. also</p>
<p>多选，四选二或五选三</p>
</li>
</ul>
</li>
<li>
<p>非逻辑考点</p>
<p>20+ 分基础同学</p>
<ul>
<li>
<p>细节</p>
</li>
<li>
<p>强调</p>
</li>
<li>
<p>态度</p>
<p>可能是在最后</p>
<ul>
<li>doubt</li>
<li>neg</li>
<li>pos</li>
</ul>
</li>
<li>
<p>评价</p>
</li>
<li>
<p>概念</p>
<ul>
<li>常识概念，不会出题（比如很直观的如现实主义、未来主义）</li>
<li>非常识概念，可能会出题</li>
</ul>
</li>
</ul>
</li>
</ol>`,r:{minutes:1.81,words:544},t:"讲座分层法",y:"a"}}],["/test/TOEFL/LISTENING/",{loader:()=>l(()=>import("./index.html-DvvLRWiA.js"),__vite__mapDeps([335,1])),meta:{d:1669446166e3,e:`
<p>28 题，30 分</p>
<h2>考试划分</h2>
<h3>时间划分</h3>
<p>无加试 2 个 section，有加试 3 个 section</p>
<blockquote>
<p>新托福无加试</p>
<p>在 Direction 里面第一句说是 2 section 还是 3 section，如果说 3 则遇到加试</p>
</blockquote>
<p>答题时间</p>
<ul>
<li>1 对话+1 讲座 11 题，6.5m 答题</li>
<li>1 对话+2 讲座 17 题，10m 答题</li>
<li>1 对话+1 讲座 11 题，6.5m 答题（加试）</li>
</ul>`,r:{minutes:5.3,words:1589},t:"Listening",y:"a"}}],["/test/TOEFL/LISTENING/%E5%AD%A6%E7%A7%91%E7%A7%AF%E7%B4%AF.html",{loader:()=>l(()=>import("./学科积累.html-CMQBTGTD.js"),__vite__mapDeps([336,1])),meta:{d:1691648992e3,e:`
<p>so forth=etc 等等</p>
<p>doom v. 注定失败 n. 厄运</p>
<p>paradoxically a 近乎于怪论，很矛盾的是</p>
<p>graze v. 放牧</p>
<p>It might sound like a cliché, class 听起来可能陈词滥调</p>
<p>litre 升</p>
<p>conservative 保守</p>
<p>cawing v. 鸦叫声</p>
<p>replenish 再装满</p>
<p>whine v.n. 哀鸣，嘎嘎声、吱吱声</p>
<p>get by 勉强、凑合、过得去</p>
<blockquote>
<p>My English is not good, but it gets by.</p>
</blockquote>`,r:{minutes:6.12,words:1835},t:"讲座",y:"a"}}],["/test/TOEFL/LISTENING/%E7%9C%9F%E9%A2%98%E8%90%A5.html",{loader:()=>l(()=>import("./真题营.html-Cw8uzGap.js"),__vite__mapDeps([337,1])),meta:{d:1691648992e3,e:`
<p>25+，</p>
<ul>
<li>
<p>对话全对，需要 100%听懂</p>
<p>基础不错的基本上就可以做到</p>
</li>
<li>
<p>讲座不需要 100%</p>
<p>80%即可结合方法做全对，有时一整段没听出来也不影响做全对</p>
</li>
</ul>
<h2>对话</h2>
<p>conversation 不建议记笔记，</p>
<ul>
<li>信息点密集</li>
<li>出题点密集</li>
<li>记笔记会导致丢失听信息</li>
<li>没理解的信息会很容易忘记</li>
</ul>
<p>单词、句型：简单</p>
<p>语速：难</p>
<h3>信息串联</h3>`,r:{minutes:1.25,words:374},t:"真题营",y:"a"}}],["/test/TOEFL/LISTENING/%E8%A1%A8%E8%BE%BE%E7%A7%AF%E7%B4%AF.html",{loader:()=>l(()=>import("./表达积累.html-BJL-3Cf6.js"),__vite__mapDeps([338,1])),meta:{d:1691648992e3,e:`
<p>but I'm merely going to give you the basics on what it was all about.<br>
但我只想告诉你这一切的基本情况。</p>
<h2>考点</h2>
<h3>逻辑</h3>
<h4>并列</h4>
<p>Most, the left</p>
<h4>转折</h4>
<p>as opposed to = By contrast</p>
<h3>强调</h3>
<p>only</p>
<p>first</p>
<h3>来意</h3>
<ul>
<li>it's just that</li>
<li>actually / anyway</li>
<li>I was wondering</li>
<li>what I wanted to ask about was</li>
</ul>`,r:{minutes:2.55,words:766},t:"表达积累",y:"a"}}],["/test/TOEFL/READING/1.%20%E9%98%85%E8%AF%BB%E6%96%B9%E6%B3%95%E8%AE%BA.html",{loader:()=>l(()=>import("./1. 阅读方法论.html-VCQdoXap.js"),__vite__mapDeps([339,1])),meta:{d:1669446166e3,e:`
<p>基础课：逻辑讲解在基础课里面，长难句、拆句</p>
<p>专题课：句子简化题、插入题、目的题、推断题</p>
<h2>方法论</h2>
<h3>三类单词</h3>
<ol>
<li>
<p>TW：<strong>中心</strong>词 topic word</p>
<p>全文中心：标题中找</p>
<p>段落中心：段落中找</p>
<p><strong>逻辑预判</strong>能力：被动=》主动</p>
</li>
<li>
<p>EW：等价词 equivalent word，与中心词重复，替换</p>
<p>过滤旧信息，寻找新概念：</p>
<p><strong>“是不是”法</strong>：是否是重复前文的概念，如果是则不需读</p>
<p><strong>把握细节和中心的关系</strong></p>
</li>
<li>
<p>LW：逻辑词 Logic word</p>
<p>逻辑层面</p>
</li>
</ol>`,r:{minutes:2.41,words:722},t:"阅读方法论",y:"a"}}],["/test/TOEFL/READING/2.%20%E9%95%BF%E9%9A%BE%E5%8D%95%E5%8F%A5.html",{loader:()=>l(()=>import("./2. 长难单句.html-FZhLAUS9.js"),__vite__mapDeps([340,1])),meta:{d:1696741225e3,e:`
<blockquote>
<p>句子抓住干</p>
</blockquote>
<h3>难句分类</h3>
<ol>
<li>
<p>分从过多：分句、从句、修饰成分太多</p>
<p>难句解法：标点符号，分从句信号词处拆分</p>
</li>
<li>
<p>插入成分：逗号、括号、破折号相隔的补充说明成分</p>
<p>难句解法：跳过对句子主体进行补充的插入成分</p>
</li>
<li>
<p>生词美语：从没见过的生词和美语习惯用法</p>
<p>难句解法：生僻词缩写取代；积累学术词汇、习惯用语</p>
</li>
<li>
<p>虚拟倒装：虚拟语气+倒装句</p>
<p>难句解法：还原为正常语序；了解倒装目的是提前强调</p>
</li>
</ol>`,r:{minutes:1.17,words:350},t:"长难单句",y:"a"}}],["/test/TOEFL/READING/3.%20%E6%96%87%E7%AB%A0%E6%AE%B5%E8%90%BD.html",{loader:()=>l(()=>import("./3. 文章段落.html-BeM1lHMg.js"),__vite__mapDeps([341,1])),meta:{d:1686210114e3,e:`
<p>段落抓主旨</p>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/image-20230915090955578.png" alt="image-20230915090955578" loading="lazy"></p>
<img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-06-10 10.33.07.png" alt="截屏2023-06-10 10.33.07" style="zoom:33%;">`,r:{minutes:.52,words:156},t:"文章段落",y:"a"}}],["/test/TOEFL/READING/4.%20%E9%80%BB%E8%BE%91%E8%80%83%E7%82%B9.html",{loader:()=>l(()=>import("./4. 逻辑考点.html-CGGFKh3Y.js"),__vite__mapDeps([342,1])),meta:{d:1669446166e3,e:`
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-08-26 21.30.05.png" alt="截屏2023-08-26 21.30.05" loading="lazy"></p>
<h3>因果逻辑</h3>
<p>阅读方法：原因和结果</p>
<p>设计套路：</p>
<ol>
<li>
<p>因果倒置</p>
</li>
<li>
<p>原因/结果替换</p>
</li>
<li>
<p>并列改因果</p>
<p>名词的并列不能改因果，但是动词的并列可以改因果</p>
</li>
<li>
<p>隐含因果</p>
<p>make, enviroment</p>
</li>
<li>
<p>比较对象改因果</p>
</li>
</ol>`,r:{minutes:1.64,words:493},t:"逻辑考点",y:"a"}}],["/test/TOEFL/READING/5.%20%E6%96%87%E7%AB%A0%E7%BB%93%E6%9E%84.html",{loader:()=>l(()=>import("./5. 文章结构.html-OAGjpPJX.js"),__vite__mapDeps([343,1])),meta:{d:1669446166e3,e:`
<h3>行文结构</h3>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/image-20230915091041629.png" alt="image-20230915091041629" loading="lazy"></p>
<h3>文章结构</h3>
<p>看到问题想解决方案之后有负评<br>
现象出现找因果多重并列稳拿分<br>
观点对比找焦点陈日观点未必错<br>
众所周知有转折全盘否定或补充<br>
科技文章顺因果实验文章找结论</p>
<h3>做题速度</h3>
<p>稿纸拿下立刻标 5 分 3 题不慌乱<br>
每段结束写中心 题目不要超 3 分<br>
走投无路深呼吸 中心态度和尾句</p>`,r:{minutes:.72,words:215},t:"文章结构",y:"a"}}],["/test/TOEFL/READING/6.%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0.html",{loader:()=>l(()=>import("./6. 阅读笔记.html-6P7lwlwC.js"),__vite__mapDeps([344,1])),meta:{d:1694741314e3,e:`
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/image-20230915091239073.png" alt="image-20230915091239073" loading="lazy"></p>
`,r:{minutes:.03,words:9},t:"阅读笔记",y:"a"}}],["/test/TOEFL/READING/",{loader:()=>l(()=>import("./index.html-sOmNZ8vC.js"),__vite__mapDeps([345,1])),meta:{d:1669446166e3,e:`
<p>文章篇幅：600-700 词</p>
<h2>题量分数</h2>
<h3>改革后</h3>
<p>只剩下两篇阅读，错 1题 29，错 2 题 29，也有错 2 道 27/28，具体分数根据题目难度</p>
<table>
<thead>
<tr>
<th>Raw</th>
<th>Score</th>
</tr>
</thead>
<tbody>
<tr>
<td>22</td>
<td>30</td>
</tr>
<tr>
<td>21</td>
<td>29-30</td>
</tr>
<tr>
<td>20</td>
<td>27-<strong>29</strong>-30</td>
</tr>
<tr>
<td>19</td>
<td><strong>27</strong>-<strong>28</strong>-29</td>
</tr>
<tr>
<td>18</td>
<td><strong>25</strong>-<strong>26</strong>-28</td>
</tr>
<tr>
<td>17</td>
<td><strong>24</strong></td>
</tr>
</tbody>
</table>`,r:{minutes:3.3,words:990},t:"Reading",y:"a"}}],["/test/TOEFL/SPEAKING/",{loader:()=>l(()=>import("./index.html-ByStGQsA.js"),__vite__mapDeps([346,1])),meta:{d:1669446166e3,e:`
<p>06-23 年，从来没有变过；改革，口语没有任何变化</p>
<h2>概述</h2>
<h3>题型划分</h3>
<ul>
<li>
<p>独立题</p>
<p>task 1，主观题</p>
</li>
<li>
<p>综合题</p>
<p>task 2-4 ，客观题</p>
<p>理解信息（不是难点）、<strong>记录信息</strong>（关键步骤）、转述信息</p>
<p>summary 笔记：完整、逻辑</p>
<ul>
<li>2-3 阅读 + 听力 + 说</li>
<li>4 讲座：听力 + 说</li>
</ul>
</li>
</ul>
<h3>综合题笔记</h3>`,r:{minutes:2.67,words:802},t:"Speaking",y:"a"}}],["/test/TOEFL/SPEAKING/task1.html",{loader:()=>l(()=>import("./task1.html-BjjgtHOd.js"),__vite__mapDeps([347,1])),meta:{d:1669446166e3,e:`
<p>步骤：准备 &gt; 答题</p>
<p>特点：难，容易无话可说，需要积累</p>
<p>背诵：33 则语料</p>
<blockquote>
<p>400 最大题库，80 话题题，80 个反复练，积累很多素材，独立题可以完全没问题<br>
二选一：</p>
</blockquote>
<p>Personally speaking + 态度 I think + 态度<br>
I agree/disagree + 态度</p>
<blockquote>
<p>MTEAC 结构</p>
</blockquote>
<ul>
<li>M 一定要点出来你的观点。</li>
<li>T 可以简短一些，如果答题的时候想不到，可以直接用万能理由，比如 good to me，good to health 等。</li>
<li>E 是最重要的！一定要用 1-2 句话去解释，M 和 T 之间的衔接逻辑，并且为后面的例子做铺垫。这句话可以让判卷人带入到你的逻辑中。</li>
</ul>`,r:{minutes:3.09,words:926},t:"Task 1 独立题",y:"a"}}],["/test/TOEFL/SPEAKING/task2.html",{loader:()=>l(()=>import("./task2.html-gEC4_S6S.js"),__vite__mapDeps([348,1])),meta:{d:1669446166e3,e:`
<p>步骤：<strong>阅读 &gt; 听力 &gt; 准备 &gt; 答题</strong></p>
<p>主题：Campus topic 校园生活话题</p>
<h2>做题流程</h2>
<ol>
<li>阅读，记笔记</li>
<li>听力，记笔记</li>
<li>准备，30s（+读题共 60s），补充笔记（补逻辑词、补句子）</li>
<li>答题，60s</li>
</ol>
<h3>阅读 45-50s</h3>
<p>内容：校园通知/学生建议 +两个原因/建议</p>
<ul>
<li>校园通知/学校政策</li>
<li>学生或教授建议信</li>
</ul>
<h4>笔记</h4>`,r:{minutes:2.58,words:774},t:"Task 2",y:"a"}}],["/test/TOEFL/SPEAKING/task3.html",{loader:()=>l(()=>import("./task3.html-DH94fIL3.js"),__vite__mapDeps([349,1])),meta:{d:1669446166e3,e:`
<p>步骤：<strong>阅读 &gt; 听力 &gt; 准备 &gt; 答题</strong></p>
<p>主题：Academic topic 学术话题</p>
<p>主旨句：标题</p>
<p>定义句：利用信号词，在文章中找</p>
<h2>做题步骤</h2>
<h3>阅读 45-50s</h3>
<h4>文章结构</h4>
<img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-06-05 13.09.15.png" alt="截屏2023-06-05 13.09.15" style="zoom: 33%;">`,r:{minutes:1.54,words:462},t:"Task 3",y:"a"}}],["/test/TOEFL/SPEAKING/task4.html",{loader:()=>l(()=>import("./task4.html-BlRtDzAt.js"),__vite__mapDeps([350,1])),meta:{d:1669446166e3,e:`
<p>步骤：<strong>听力 &gt; 准备 &gt; 答题</strong></p>
<p>特点：无阅读了，难度更大（缺乏预判的文本，不过听力文本有固定结构）</p>
<p>理解，记录，转述</p>
<h2>做题步骤</h2>
<h3>听力 90-120s</h3>
<p>lecture 90-120s</p>
<p>1-3 个例子，90%的情况下是 2 个例子</p>
<p>听懂 80% 就可以答出来</p>
<h4>固定结构</h4>
<img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-06-11 22.58.44.png" alt="截屏2023-06-11 22.58.44" style="zoom:25%;">`,r:{minutes:1.24,words:371},t:"Task 4",y:"a"}}],["/test/TOEFL/SPEAKING/%E8%AF%BB%E9%9F%B3.html",{loader:()=>l(()=>import("./读音.html-CkCjJGeg.js"),__vite__mapDeps([351,1])),meta:{d:1669446166e3,e:`
<blockquote>
<p>读音见听力基础课部分</p>
</blockquote>
<p>连读：前一个单词辅音结尾，后一个单词元音开头</p>
<p>浊化：元音前，ptk 清音浊化</p>
<p>穿透：h 会被穿透 leave him(livim)</p>
<p>失去爆破：b p k g t d，音节结尾的这些辅音不发音（admin）</p>
<p>虚词弱读、清音浊化</p>
<h3>重音规则</h3>
<p>双音节名称：重音在前面</p>
<p>双音节动词：重音在后面</p>
<p>三个音节及以上的，重音一般在倒数第三个位置</p>
<p>发重音时，元音大，不发重音时元音小</p>
`,r:{minutes:.48,words:145},t:"读音",y:"a"}}],["/test/TOEFL/WRITING/1.%20%E7%BB%93%E6%9E%84.html",{loader:()=>l(()=>import("./1. 结构.html-BGLt7g74.js"),__vite__mapDeps([352,1])),meta:{d:1669446166e3,e:`
<p>一共七类题，最常考的是前两类</p>
<ol>
<li>教育</li>
<li>成功</li>
<li>社会生活</li>
<li>政府</li>
<li>科技</li>
<li>工作</li>
<li>环保（非常少）</li>
</ol>
<h2>独立写作结构 (350-450)</h2>
<ul>
<li>
<p>开头段 60 3min</p>
</li>
<li>
<p>主体段 [130, 150] 8-10min</p>
</li>
<li>
<p>主体段 [130, 150] 8-10min</p>
</li>
<li>
<p>(让步段[30]) + 结尾[30, 80] 1, 1-3min</p>
</li>
</ul>`,r:{minutes:3.2,words:961},t:"结构",y:"a"}}],["/test/TOEFL/WRITING/2.%20%E4%B8%BB%E4%BD%93%E6%AE%B5.html",{loader:()=>l(()=>import("./2. 主体段.html-DmuQAWdy.js"),__vite__mapDeps([353,1])),meta:{d:1669446166e3,e:`
<h2>结构</h2>
<h3>A</h3>
<ol>
<li>
<p>To start/begin with, 主题句 1</p>
</li>
<li>
<p>展开 6</p>
<p>解释 + 细节</p>
</li>
<li>
<p>小结 1</p>
<p>So it is essential to xxx</p>
</li>
</ol>
<h3>B</h3>
<ol>
<li>
<p>In addition 主题句 1</p>
</li>
<li>
<p>展开 3</p>
</li>
<li>
<p>例子 3</p>
<p>对象是任何人都可以，不写极端、负面的就行</p>
</li>
<li>
<p>小结 1</p>
<p>So it is essential to xxx</p>
</li>
</ol>`,r:{minutes:1.27,words:381},t:"主体段",y:"a"}}],["/test/TOEFL/WRITING/3.%20%E8%AF%AD%E6%96%991.html",{loader:()=>l(()=>import("./3. 语料1.html-Dk_VU163.js"),__vite__mapDeps([354,1])),meta:{d:1669446166e3,e:`
<p>上半年考试，教育类题目占 90%</p>
<p>最常考：教育类、成功类；教育类、生活类是大的类型</p>
<p>提纲版：PPT 上内容（中文思路+英文表达）</p>
<p>段落版：连词成句 + 常用句型 20 个</p>
<h2>表达</h2>
<h3>目的</h3>
<p>so as to</p>
<p>In order to</p>
<h3>对比</h3>
<p>by contrast</p>
<p>as opposed to</p>
<p>Compared with</p>
<h2>教育类</h2>
<h3>学生</h3>
<h4>不玩电子产品</h4>
<ul>
<li>
<p>study efficiency</p>
<p>时间：preview, review, finish homework</p>
<p>精力：stay up late, fall asleep/ be obessed with various television shows, X focus on</p>
<p>兴趣：improve/ lose interest in learning</p>
</li>
<li>
<p>Health/ healthy living habits</p>
<ul>
<li>
<p>Physical health</p>
<blockquote>
<p>Harm eyesight</p>
<p>Suffer obesity</p>
</blockquote>
</li>
<li>
<p>Mental health</p>
<blockquote>
<p>Form a false value (voilent content)</p>
<p>unsociable and eccentric</p>
</blockquote>
</li>
</ul>
</li>
</ul>`,r:{minutes:3.75,words:1126},t:"语料",y:"a"}}],["/test/TOEFL/WRITING/4.%20%E8%AF%AD%E6%96%992.html",{loader:()=>l(()=>import("./4. 语料2.html-J6g90KiS.js"),__vite__mapDeps([355,1])),meta:{d:1669446166e3,e:`
<h2>社会生活类</h2>
<h3>个人 &amp; 关系</h3>
<ul>
<li>
<p>foster independence</p>
<p>the rise of the living standard; go abroad for further study in the future; through advanced means of transport; depend on themselves</p>
<p>Master practical skills</p>
<p>lay a solid foundation for future development</p>
</li>
<li>
<p>promote / boost the relationship with family members</p>
<p>Communicate/ offer help</p>
<p>(a tight schedule of work/ lack of communication/ cold &amp; distant)</p>
</li>
</ul>`,r:{minutes:1.35,words:404},t:"语料 2",y:"a"}}],["/test/TOEFL/WRITING/5.%20%E7%BB%BC%E5%90%88%E5%86%99%E4%BD%9C.html",{loader:()=>l(()=>import("./5. 综合写作.html-DrlFwJLY.js"),__vite__mapDeps([356,1])),meta:{d:1669446166e3,e:`
<h3>注意事项</h3>
<ol>
<li>时间：R3 + L2 + W20 min</li>
<li>字数：150-225 (240+最好，取决于听力内容)</li>
</ol>
<p>中国学生平均 20 分，相对好拿分</p>
<h3>评分标准</h3>
<ol>
<li>
<p>A question about the relation between the lecture and the reading passage</p>
<p>基本上都是听力反驳阅读</p>
<ol>
<li>
<p>直接反驳</p>
</li>
<li>
<p>解决办法</p>
<ol>
<li>详：如，逃跑时应该开着车去逃离，更加快一点</li>
<li>虚：如，逃跑时应该跑的快一点</li>
</ol>
</li>
</ol>
</li>
<li>
<p>Use information from the reading passage and the lecture but no personal opinion</p>
<p>用阅读和听力里面的信息，不用自己的观点</p>
</li>
<li>
<p>Be judged on the quality of your writing and on the completeness and accuracy of the content</p>
<p>评分点是完整性和准确性，（少要点扣分，语言不需要文采）</p>
</li>
</ol>`,r:{minutes:4.55,words:1366},t:"综合写作",y:"a"}}],["/test/TOEFL/WRITING/6.%20%E8%AE%A8%E8%AE%BA%E6%9D%BF.html",{loader:()=>l(()=>import("./6. 讨论板.html-C9CmpvA0.js"),__vite__mapDeps([357,1])),meta:{d:1692578963e3,e:`
<p>文章至少出现两个语法</p>
<p>长短句搭配</p>
<p>设计长句：把句型的分值拿满</p>
<ul>
<li>主干按下来，不同的记叙文成分安排在不同的句子结构里</li>
</ul>
<h3>答题流程</h3>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/时间.png" alt="时间" loading="lazy"></p>
<h3>文章结构</h3>
<h4>直给型</h4>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-09-12 21.44.39.png" alt="截屏2023-09-12 21.44.39" loading="lazy"></p>`,r:{minutes:3.93,words:1179},t:"讨论板",y:"a"}}],["/test/TOEFL/WRITING/",{loader:()=>l(()=>import("./index.html-DpcMzgu8.js"),__vite__mapDeps([358,1])),meta:{d:1669446166e3,e:`
<p>输入做好就可以 28+</p>
<ul>
<li>综合写作 20min</li>
<li>讨论板 10min</li>
<li>独立写作 30min</li>
</ul>
<h3>分数</h3>
<table>
<thead>
<tr>
<th style="text-align:center">writing mean</th>
<th style="text-align:center">scaled score</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">30</td>
</tr>
<tr>
<td style="text-align:center">4.75</td>
<td style="text-align:center">29</td>
</tr>
<tr>
<td style="text-align:center">4.5</td>
<td style="text-align:center">28</td>
</tr>
<tr>
<td style="text-align:center">4.25</td>
<td style="text-align:center">27</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">25</td>
</tr>
<tr>
<td style="text-align:center">3.75</td>
<td style="text-align:center">24</td>
</tr>
<tr>
<td style="text-align:center">3.5</td>
<td style="text-align:center">22</td>
</tr>
<tr>
<td style="text-align:center">3.25</td>
<td style="text-align:center">21</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">20</td>
</tr>
<tr>
<td style="text-align:center">2.75</td>
<td style="text-align:center">18</td>
</tr>
<tr>
<td style="text-align:center">2.5</td>
<td style="text-align:center">17</td>
</tr>
<tr>
<td style="text-align:center">2.25</td>
<td style="text-align:center">15</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">14</td>
</tr>
<tr>
<td style="text-align:center">1.75</td>
<td style="text-align:center">12</td>
</tr>
<tr>
<td style="text-align:center">1.5</td>
<td style="text-align:center">11</td>
</tr>
<tr>
<td style="text-align:center">1.25</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">8</td>
</tr>
</tbody>
</table>`,r:{minutes:1.06,words:317},t:"Writing",y:"a"}}],["/test/TOEFL/WRITING/%E6%AE%B5%E8%90%BD%E8%AF%AD%E6%96%99.html",{loader:()=>l(()=>import("./段落语料.html-nJ7WGMHe.js"),__vite__mapDeps([359,1])),meta:{d:1692928089e3,e:`
<h2>成功类</h2>
<h3>1. 个人和别人</h3>
<p>To begin with, being open to new ideas is beneficial to improve abilities.</p>
<p>It is widely acknowledged that each individual has his own strengths and weaknesses, so we need to keep on learning so as to enhance ourselves. Being willing to accept others suggestions exposes us to various kinds of opinions, thus enabling us to keep our mind updated.</p>`,r:{minutes:21.33,words:6398},t:"段落语料",y:"a"}}],["/test/TOEFL/WRITING/%E7%BB%83%E4%B9%A0.html",{loader:()=>l(()=>import("./练习.html-f1sR1wDd.js"),__vite__mapDeps([360,1])),meta:{d:1669446166e3,e:`<p>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD:src/apply/test/TOEFL/WRITING/练习/独立题.md</p>
<h1>独立题</h1>
<h3>1</h3>
<p>========</p>
<h1>练习</h1>
<h2>讨论板</h2>
<h2>综合写作</h2>
<h2>独立写作</h2>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>edb81a2a (feat: 写作笔记):src/apply/test/TOEFL/WRITING/练习.md</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>`,r:{minutes:.94,words:283},t:"独立题",y:"a"}}],["/zh/posts/apple/1.html",{loader:()=>l(()=>import("./1.html-uwUFxIoJ.js"),__vite__mapDeps([361,1])),meta:{d:16409952e5,l:"2022年1月1日",c:["苹果"],g:["红","大","圆"],e:`
<h2>标题 2</h2>
<p>这里是内容。</p>
<h3>标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.11,words:32},t:"苹果 1",i:"edit",y:"a"}}],["/zh/posts/apple/2.html",{loader:()=>l(()=>import("./2.html-BMQgcFqZ.js"),__vite__mapDeps([362,1])),meta:{d:16410816e5,l:"2022年1月2日",c:["苹果"],g:["红","大","圆"],e:`
<p>一个被星标了的苹果文章。</p>
`,r:{minutes:.15,words:46},t:"苹果 2",i:"edit",y:"a"}}],["/zh/posts/apple/3.html",{loader:()=>l(()=>import("./3.html-CyyQtfa3.js"),__vite__mapDeps([363,1])),meta:{d:1641168e6,l:"2022年1月3日",c:["苹果","水果"],g:["红","大","圆"],e:`
<h2>标题 2</h2>
<p>这里是内容。</p>
<h3>标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.11,words:34},t:"苹果 3",i:"edit",y:"a"}}],["/zh/posts/apple/4.html",{loader:()=>l(()=>import("./4.html-CviiV7jX.js"),__vite__mapDeps([364,1])),meta:{d:16412544e5,l:"2022年1月4日",c:["苹果","水果"],g:["红","大","圆"],e:`
<h2>标题 2</h2>
<p>这里是内容。</p>
<h3>标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.11,words:34},t:"苹果 4",i:"edit",y:"a"}}],["/zh/posts/banana/1.html",{loader:()=>l(()=>import("./1.html-Ds0sxixH.js"),__vite__mapDeps([365,1])),meta:{d:16413408e5,l:"2022年1月5日",c:["香蕉","水果"],g:["黄","弯曲的","长"],e:`
<h2>标题 2</h2>
<p>这里是内容。</p>
<h3>标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.12,words:36},t:"香蕉 1",i:"edit",y:"a"}}],["/zh/posts/banana/2.html",{loader:()=>l(()=>import("./2.html-Dqn_FUsT.js"),__vite__mapDeps([366,1])),meta:{d:16414272e5,l:"2022年1月6日",c:["香蕉","水果"],g:["黄","弯曲的","长"],e:`
<p>一个被数字 <code>10</code> 星标了的香蕉文章。</p>
`,r:{minutes:.18,words:53},t:"香蕉 2",i:"edit",y:"a"}}],["/zh/posts/banana/3.html",{loader:()=>l(()=>import("./3.html-7q0t02XQ.js"),__vite__mapDeps([367,1])),meta:{d:16415136e5,l:"2022年1月7日",c:["香蕉"],g:["黄","弯曲的","长"],e:`
<h2>标题 2</h2>
<p>这里是内容。</p>
<h3>标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.11,words:34},t:"香蕉 3",i:"edit",y:"a"}}],["/zh/posts/banana/4.html",{loader:()=>l(()=>import("./4.html-64ilqCsa.js"),__vite__mapDeps([368,1])),meta:{d:16416e8,l:"2022年1月8日",c:["香蕉"],g:["黄","弯曲的","长"],e:`
<h2>标题 2</h2>
<p>这里是内容。</p>
<h3>标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.11,words:34},t:"香蕉 4",i:"edit",y:"a"}}],["/algo/course/jz/2ptr/28.%20%E5%8F%8C%E6%8C%87%E9%92%88.html",{loader:()=>l(()=>import("./28. 双指针.html-wZ--Lq6Z.js"),__vite__mapDeps([369,1])),meta:{d:1734453484e3,e:`
<blockquote>
<p>直播，双指针算法之同向双指针上，28, 29</p>
</blockquote>
<p><strong>Move Zeroes</strong> 移动零</p>
<p>同向双指针复杂度 = O(n)</p>
<p>两根指针同向而行，都不会“回头”</p>
<p>每个指针访问数组中每个元素最多一次</p>
<h2>两数之差问题</h2>
<p>求两数之差等于给定的 target，不适用额外空间</p>
<p>当不能使用哈希表时</p>
<p>可以在排序数据集上进行二分来替代</p>
<p>不能使用哈希表的情况比如数据集很大</p>
<p>或者题目要求不适用额外空间</p>`,r:{minutes:.52,words:155},t:"同向双指针",y:"a"}}],["/algo/course/jz/2ptr/29.%20%E5%8F%8C%E6%8C%87%E9%92%88.html",{loader:()=>l(()=>import("./29. 双指针.html-CLbUYEkK.js"),__vite__mapDeps([370,1])),meta:{d:1732244737e3,e:`
<blockquote>
<p>互动</p>
</blockquote>
<p>相向双指针：一头一尾</p>
<p>同向双指针：一前一后</p>
<h2>两数之差</h2>
<p>On</p>
<p>很多数据量大的问题的时候不允许用hash表</p>
<p>当不能使用哈希表时</p>
<p>可以在排序数据集上进行二分来替代<br>
不能使用哈希表的情况比如数据集很大<br>
或者题目要求不适用额外空间</p>
<p>数组+二分可以起到hashmap的作用</p>
<p>一个for，一个while</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">twoSum</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> target) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    target </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">abs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(target);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> j </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        j </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(j, i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (j </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[j] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[i] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> target) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            j</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (j </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (nums[j] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[i] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> target) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[]{nums[i]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[j]}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[]{</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.27,words:382},t:"双指针",y:"a"}}],["/algo/course/jz/2ptr/4.%20%E5%8F%8C%E6%8C%87%E9%92%88.html",{loader:()=>l(()=>import("./4. 双指针.html-BGC7T95P.js"),__vite__mapDeps([371,1])),meta:{d:1734453484e3,e:`
<ol>
<li>
<p>逆向双指针</p>
<p>（相向双指针和平行双指针</p>
<p>两根指针一头一尾，向中间靠拢直到相遇</p>
<ol>
<li>
<p>Reverse 型（题目不多）</p>
<p>翻转字符串</p>
<p>判断回文串</p>
</li>
<li>
<p>Two Sum 型（两位数题）</p>
<p>两数之和</p>
<ol>
<li>Hashmap: On, On</li>
<li>排序+双指针: Onlogn, O1</li>
</ol>
<p>三数之和</p>
</li>
<li>
<p>Partition 型（两位数题）</p>
<p>快速排序</p>
<p>颜色排序</p>
</li>
<li>
<p>merge 型</p>
<p>merge two sorted array</p>
</li>
</ol>
</li>
<li>
<p>同向双指针</p>
<ol>
<li>滑动窗口类</li>
<li>快慢指针类</li>
</ol>
</li>
<li>
<p>背向双指针</p>
<p>非常少见，就几个题</p>
<ul>
<li>最长回文串：中心点枚举</li>
</ul>
</li>
</ol>`,r:{minutes:.92,words:277},t:"双指针",y:"a"}}],["/algo/course/jz/2ptr/8.%20%E5%8F%8C%E6%8C%87%E9%92%88.html",{loader:()=>l(()=>import("./8. 双指针.html-B9OSBdWH.js"),__vite__mapDeps([372,1])),meta:{d:1734453484e3,e:`
<blockquote>
<p>直播，高频算法之王双指针算法之相向双指针，8, 45</p>
</blockquote>
<ul>
<li>Reverse</li>
<li>2sum</li>
<li>partition 型</li>
</ul>
`,r:{minutes:.1,words:30},t:"相向双指针",y:"a"}}],["/algo/course/jz/bfs/11.%20BFS.html",{loader:()=>l(()=>import("./11. BFS.html-BMpADnU7.js"),__vite__mapDeps([373,1])),meta:{d:1734453484e3,e:`
<h3>使用场景</h3>
<ol>
<li>分层遍历
<ul>
<li>一层一层的遍历一个图、树、矩阵</li>
<li>简单图最短路径（边长都一样/为1）</li>
</ul>
</li>
<li>连通块问题
<ul>
<li>通过一个点找到其他所有连通的点</li>
<li>找到所有方案问题的一种非递归实现方式</li>
</ul>
</li>
<li>拓扑排序
<ul>
<li>实现容易度远超过DFS</li>
</ul>
</li>
</ol>
<h3>BFS的三种实现方式</h3>
<p>通过二叉树层次遍历为例</p>
<h4>单队列</h4>
<p>实现最简单和标准</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> levelOrder</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TreeNode</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> root) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (root </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Queue</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TreeNode</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> queue </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayDeque</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TreeNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    queue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">offer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(root);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">queue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> level </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> size </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> queue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            TreeNode</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> queue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">poll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            level</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">left</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                queue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">offer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">left</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">right</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                queue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">offer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">right</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(level);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> result</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.25,words:374},t:"BFS",y:"a"}}],["/algo/course/jz/bfs/14.%20BFS.html",{loader:()=>l(()=>import("./14. BFS.html-C2_PNsjh.js"),__vite__mapDeps([374,1])),meta:{d:1732244737e3,e:`
<blockquote>
<p>性价比之王，14, 47</p>
</blockquote>
<p>构图具有一定的灵活性，需要多加联系（一开始可能并不是一个图）</p>
<p>bfs</p>
<ul>
<li>拓扑排序</li>
<li>分层遍历</li>
<li>连通块</li>
</ul>
<p>连通块相关的所有</p>
<ol>
<li>bfs</li>
<li>UFS</li>
</ol>
<p>能用bfs解决的问题就用bfs解决，不用考虑dfs因为，dfs潜在stackoverflow（iteration的dfs不好写，而且面试官看不懂）</p>
<p>java的队列用ArrayDeque，比较快，不需要距离的时候Distance可以用hashset vistied代替</p>`,r:{minutes:3.48,words:1044},t:"BFS",y:"a"}}],["/algo/course/jz/bfs/32.%20%E5%85%A8%E5%AD%90%E9%9B%86%E9%97%AE%E9%A2%98.html",{loader:()=>l(()=>import("./32. 全子集问题.html-zQujO_PZ.js"),__vite__mapDeps([375,1])),meta:{d:1734453484e3,e:`
<blockquote>
<p>使用BFS找所有方案，33</p>
</blockquote>
<p>一个方案=一条路径</p>
<p>求所有方案=求所有路径</p>
<p>BFS 善于解决求连通块问题</p>
<p>把路径看做点，把路径的变化关系看做点的连接关系</p>
<p>这样就把找所有路径问题变成了找所有连通点的问题</p>
<p>BFS擅长找连通块</p>
<h2>全子集问题</h2>
<p>求一个集合的所有子集</p>
<p>画图了解两种不同的搜索树</p>
<h3>第一种</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> combine</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    Arrays</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(nums);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> queue </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    queue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> queue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> subset </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> queue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(index++);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">subset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> subset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">subset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[i]) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                continue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> newSubset </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(subset)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            newSubset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(nums[i]);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            queue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(newSubset);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> queue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.85,words:255},t:"所有方案",y:"a"}}],["/algo/course/jz/bfs/33.%20%E5%8F%8C%E5%90%91BFS.html",{loader:()=>l(()=>import("./33. 双向BFS.html-OlVegKfd.js"),__vite__mapDeps([376,1])),meta:{d:1734453484e3,e:`
<blockquote>
<p>双向宽度优先搜索算法，33</p>
</blockquote>
<p>a.双向宽度优先搜索到底优化了多少：根号</p>
<p>b.如何优雅的实现双向宽度优先搜索</p>
<h2>跳马问题</h2>
<h2>跳马问题 II</h2>
<h2>单词阶梯</h2>
`,r:{minutes:.2,words:61},t:"双向 BFS",y:"a"}}],["/algo/course/jz/bs/30.%20%E4%BA%8C%E5%88%86%E6%B3%95%E5%AE%9E%E6%88%98.html",{loader:()=>l(()=>import("./30. 二分法实战.html-D94Nhxxz.js"),__vite__mapDeps([377,1])),meta:{d:1732244737e3,e:`
<p>三种类型二分</p>
<ul>
<li>在排序的输入集上二分</li>
<li>在未排序的输入集上二分</li>
<li>在答案集上二分</li>
</ul>
<p>二分答案</p>
<p>输入集未排序</p>
<p>二分的本质：连续性</p>
<p>左侧和右侧，是两种不同的性质，左侧同时满足一种，右侧同时一种</p>
<p>抄书问题</p>
<p>二分答案的话，就是求满足条件的最大值或者满足条件的最小值</p>
`,r:{minutes:.38,words:115},t:"二分法实战",y:"a"}}],["/algo/course/jz/bs/7.%20%E4%BA%8C%E5%88%86%E6%B3%95.html",{loader:()=>l(()=>import("./7. 二分法.html-DvCt7hg1.js"),__vite__mapDeps([378,1])),meta:{d:1732244737e3,e:`
<blockquote>
<p>一个不会出现死循环的通用二分法模板</p>
</blockquote>
<p>二分法利用了<strong>减治</strong>(Decrease and Conquer)的算法思想(Algorithmic Paradigm)，不属于<strong>分治</strong>(Divide and Conquer)</p>
<h3>第一境界</h3>
<p>写出不会死循环的二分法</p>
<p>写出不会死循环的二分法<br>
递归与非递归的权衡<br>
二分的三大痛点<br>
通用的二分模板</p>
<p>万能模板</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> findPosition</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> target) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (nums </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> start </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> end </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (start </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> end) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> mid </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> start </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (end </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> start) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 下面的==的情况需要根据题意稍作变化，看是要第一个还是最后一个还是随便一个</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (nums[mid] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> target) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            end </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> mid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (nums[mid] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> target) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            start </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> mid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> //可以这样偷懒，因为这样也会退出</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // start = mid + 1;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            end </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> mid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> //可以这样偷懒，因为这样也会退出</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // end = mid - 1;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (nums[start] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> target) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (nums[end] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> target) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.19,words:958},t:"二分法",y:"a"}}],["/algo/course/jz/bs/9.%20%E4%BA%8C%E5%88%86%E6%B3%95.html",{loader:()=>l(()=>import("./9. 二分法.html-Cpb_sJ4q.js"),__vite__mapDeps([379,1])),meta:{d:1734453484e3,e:`
<blockquote>
<p>直播，简约而不简单二分法的四重境，9, 46</p>
</blockquote>
`,r:{minutes:.08,words:23},t:"简约而不简单",y:"a"}}],["/algo/course/jz/dfs/12.%20%E9%80%92%E5%BD%92%E3%80%81%E9%81%8D%E5%8E%86%E3%80%81%E5%88%86%E6%B2%BB.html",{loader:()=>l(()=>import("./12. 递归、遍历、分治.html-Bv1VGm6L.js"),__vite__mapDeps([380,1])),meta:{d:1732244737e3,e:`
<h2>递归、深搜、回溯</h2>
<p>Recursion DFS Backtracking</p>
<h3>递归 Recursion</h3>
<p>递归函数：函数自我调用</p>
<p>递归算法：大问题的结果依赖于小问题的结果，于是先用递归函数解决小问题</p>
<p>一般我们说的递归指的是递归函数</p>
<h3>深度优先搜索</h3>
<p>可以使用递归函数来实现</p>
<p>也可以不用递归函数，如自己通过一个手动创建的Stack</p>
<h3>回溯</h3>
<ul>
<li>回溯法：就是深度优先搜素算法</li>
<li>回溯操作：递归函数在回到上一层递归调用处的时候，一些状态参数需要调回调用之前的值，这个操作就是回溯；调用前状态参数是什么样，递归后都改回来</li>
</ul>`,r:{minutes:1.73,words:518},t:"递归、遍历、分治",y:"a"}}],["/algo/course/jz/dfs/13.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E9%9D%9E%E9%80%92%E5%BD%92%E9%81%8D%E5%8E%86.html",{loader:()=>l(()=>import("./13. 二叉树非递归遍历.html-DretTmdL.js"),__vite__mapDeps([381,1])),meta:{d:1732244737e3,e:`
<p>Binary Search Tree Iterator</p>
<p>实现hasNext和next两个方法</p>
<p>这个主要就需要背了</p>
<p>非递归需要实现栈</p>
<p>这个栈的定义是栈内元素是所有路径上的元素</p>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-07-11 18.05.24.png" alt="截屏2022-07-11 18.05.24" loading="lazy"></p>
<p>这个实现比较灵活，这样通过把right和left互换，实现prev操作找前继结点</p>`,r:{minutes:.77,words:232},t:"二叉树非递归遍历",y:"a"}}],["/algo/course/jz/dfs/15.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E5%88%86%E6%B2%BB%E6%B3%95.html",{loader:()=>l(()=>import("./15. 二叉树分治法.html-BzoMLjSp.js"),__vite__mapDeps([382,1])),meta:{d:1732244737e3,e:`
<blockquote>
<p>15, 48</p>
</blockquote>
<p>二叉树上求值，求路径</p>
<p>二叉树结构变化</p>
<p>二叉查找树</p>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-07-12 22.41.24.png" alt="截屏2022-07-12 22.41.24" loading="lazy"></p>
<h4>最小子树</h4>
<p>避免全局变量的原因：全局变量影响无法多线程化，因为要加锁</p>
<p>避免全局变量的方法：返回多个值</p>`,r:{minutes:.41,words:122},t:"二叉树分治",y:"a"}}],["/algo/course/jz/dfs/16.%20%E7%BB%84%E5%90%88%E7%B1%BBDFS.html",{loader:()=>l(()=>import("./16. 组合类DFS.html-D4HFrWSl.js"),__vite__mapDeps([383,1])),meta:{d:1732244737e3,e:`
<p>dfs构建的过程中，思考的方式：递归的那一行不需要往下去思考，就直接考虑到递归出口的效果即可当做这一行执行完了，然后继续往下考虑。</p>
<p>回溯的时候，i这些整数，不需要进行回溯，因为整数这些基本类型是深拷贝的，只有数组对象这些东西，需要回溯，因为他们是引用传递的，其实也可以通过深拷贝来代替回溯</p>
<p>本问题下：深度优先搜索是一种更加灵活的方式，可以不知道循环的层数</p>
<p>所有子集</p>
<p>实现一，实现subset所有子集的方法</p>
<p>是0-1法，只有搜索树的叶子是所需要的结果</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> subsets</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> results </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (nums </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> results</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    Arrays</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(nums);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    dfs</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayLisy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> results)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> results</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 1. 递归的定义</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> dfs</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">	int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> subset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> results</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 3. 递归的出口</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 深拷贝</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        results</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(result));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 2. 递归的拆解</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 选 nums[index]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    subset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(nums[index]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    dfs</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> subset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> result)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    subset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">subset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    dfs</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> subset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> result)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.01,words:603},t:"DFS组合类",y:"a"}}],["/algo/course/jz/dfs/17.%20%E6%8E%92%E5%88%97%E5%BC%8FDFS.html",{loader:()=>l(()=>import("./17. 排列式DFS.html-CnM4JAw2.js"),__vite__mapDeps([384,1])),meta:{d:1732244737e3,e:`
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> subsets</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> results </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (nums </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> results</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    dfs</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayLisy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> results)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> results</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 1. 递归的定义</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> dfs</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">	int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // int index,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">    boolean</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] visited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> permutation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> results</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 3. 递归的出口</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">permutation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 深拷贝</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        results</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(permutation));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 2. 递归的拆解</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (visited[i]) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            continue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        permutation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(nums[index]);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        visited[i] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        dfs</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> visited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> subset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> result)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        permutation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">subset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        visited[i] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.88,words:263},t:"DFS排序类",y:"a"}}],["/algo/course/jz/dfs/20.%20DFS.html",{loader:()=>l(()=>import("./20. DFS.html-BWO6Hgh7.js"),__vite__mapDeps([385,1])),meta:{d:1734453484e3,e:`
<blockquote>
<p>直播，20, 49</p>
</blockquote>
<p>场景</p>
<ul>
<li>
<p>二叉树</p>
</li>
<li>
<p>组合、排列（除二叉树外的90%的题都是这两种）</p>
</li>
<li>
<p>找所有方案</p>
</li>
<li>
<p>给一个树或者图，可以DFS</p>
</li>
<li>
<p>没直接给图或树，抽象图关系，构建图或树，在上面DFS，找到满足条件的路径</p>
<p>路径=方案=图中节点的排列组合</p>
</li>
</ul>
<h2>组合</h2>
<h2>排列</h2>
<p>单词搜索</p>
`,r:{minutes:.33,words:98},t:"刷人利器 DFS",y:"a"}}],["/algo/course/jz/dfs/22.%20%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2.html",{loader:()=>l(()=>import("./22. 记忆化搜索.html-BicIDtdQ.js"),__vite__mapDeps([386,1])),meta:{d:1732244737e3,e:`
<blockquote>
<p>互动</p>
</blockquote>
<p>记忆化搜索复杂度分析</p>
<p>多少种组合*每层耗费</p>
<p>记忆化搜索 = 分治 + hashmap</p>
<p>会变化的参数放在hashmap里</p>
<p>函数的限制：</p>
<ol>
<li>
<p>要有返回值（DC）</p>
<p>和Cache很像</p>
</li>
<li>
<p>函数的结果，只与输入的参数有关，与其他信息无关</p>
<p>叫做pure function（类似前端的纯函数，与其他全局变量无关）</p>
</li>
</ol>
<p>重复计算</p>
<p>记忆化搜索 = 动态规划</p>`,r:{minutes:.99,words:296},t:"记忆化搜索",y:"a"}}],["/algo/course/jz/dfs/26.%20%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2.html",{loader:()=>l(()=>import("./26. 记忆化搜索.html-DoFAVJYX.js"),__vite__mapDeps([387,1])),meta:{d:1734453484e3,e:`
<blockquote>
<p>直播，26, 51</p>
</blockquote>
`,r:{minutes:.03,words:9},t:"记忆化搜索",y:"a"}}],["/algo/course/jz/dfs/34.%20Morris.html",{loader:()=>l(()=>import("./34. Morris.html-DHbpmLaD.js"),__vite__mapDeps([388,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/algo/course/jz/dfs/35.%20BST%20CRUD.html",{loader:()=>l(()=>import("./35. BST CRUD.html-DfTRdFAc.js"),__vite__mapDeps([389,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/algo/course/jz/dfs/36.%20%E9%9D%9E%E9%80%92%E5%BD%92.html",{loader:()=>l(()=>import("./36. 非递归.html-CXawD_2z.js"),__vite__mapDeps([390,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/algo/course/jz/dfs/37.%20DFS.html",{loader:()=>l(()=>import("./37. DFS.html-DZhIYLzC.js"),__vite__mapDeps([391,1])),meta:{d:1732244737e3,e:`
<p>dfs时间复杂度分析：</p>
<p>通用：O(方案总数*构造每个方案的时间)</p>
<p>程序结构的艺术</p>
<ul>
<li>入口函数</li>
<li>搜索函数</li>
<li>判断函数</li>
<li>打印函数</li>
</ul>
<p>DFS优化策略</p>
<ul>
<li>
<p>可行性剪枝</p>
</li>
<li>
<p>最优性剪枝</p>
</li>
<li>
<p>顺序性优化</p>
<p>优先搜索那些可能方案少的位置</p>
</li>
</ul>
`,r:{minutes:.27,words:82},t:"DFS",y:"a"}}],["/algo/course/jz/dfs/6.%20%E9%80%92%E5%BD%92.html",{loader:()=>l(()=>import("./6. 递归.html-Lb2n0Ln3.js"),__vite__mapDeps([392,1])),meta:{d:1732244737e3,e:`
<p>递归的算法</p>
<p>解决的问题</p>
<p>类似剥洋葱，每次操作类似，但是问题的规模变小了</p>
<p>只需要考虑：</p>
<ul>
<li>
<p>当前层和里面一层的关系</p>
<blockquote>
<p>即递归的拆解</p>
</blockquote>
</li>
<li>
<p>最里层的实现的情况</p>
<blockquote>
<p>即递归的出口</p>
</blockquote>
</li>
</ul>
<p>递归三要素</p>
<ol>
<li>
<p>递归的定义：入参、出参、代表的意思</p>
</li>
<li>
<p>递归的拆解：</p>
<p>一定要确保每次问题规模缩小，否则会无限递归</p>
</li>
<li>
<p>递归的出口：</p>
</li>
</ol>`,r:{minutes:1.81,words:544},t:"递归",y:"a"}}],["/algo/course/jz/dp/23.%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92.html",{loader:()=>l(()=>import("./23. 动态规划.html-kimZr01g.js"),__vite__mapDeps([393,1])),meta:{d:1732244737e3,e:`
<p>核心思想：小大化小</p>
<p>大规模问题的依赖于小规模问题</p>
<p>类似思想算法的还有：递归，分治法</p>
<p>动态规划 DP</p>
<p>贪心法 Greedy</p>
<h3>实现方式</h3>
<ol>
<li>
<p>记忆化搜索</p>
<p>（自顶向下的动态规划）</p>
</li>
<li>
<p>多重循环</p>
<p>（自底向上的动态规划）</p>
</li>
</ol>
<p>状态：坐标</p>
<p>方程：到哪去</p>
<p>初始化：终点</p>
<p>答案：起点</p>
<p>什么东西需要初始化：可以直接放在公式里面求出来的部分</p>
<p>可以套公式：不会出现越界或者是算不出来的情况的</p>`,r:{minutes:1.83,words:550},t:"动态规划",y:"a"}}],["/algo/course/jz/dp/24.%20%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF.html",{loader:()=>l(()=>import("./24. 使用场景.html-In-bz5JR.js"),__vite__mapDeps([394,1])),meta:{d:1732244737e3,e:`
<p>动规的使用场景</p>
<p>求最值：最大值、最小值</p>
<p>可行性80-90%：是否存在一种方案</p>
<p>方案总数：只求总数不求具体方案</p>
<p>前三种考的最多</p>
<p>状态压缩：用01进行压缩</p>
<p>动态规划的题型分类有什么？</p>
<p>不同题型的动态规划对一个的状态表示方法是不同的</p>
<p>如果成功的找对了题型，就能够解决DP最难的状态表示问题</p>
<p>DP最难的就是状态的设计，不同类型的DP的状态是有固定模式的</p>
<h3>坐标型动态规划</h3>
<p>dp[i] 表示从起点到坐标i的最优值/方案数/可行性</p>
<p>dp[i]j] 表示从起点到坐标i.j的最优值/方案数/可行性</p>`,r:{minutes:2.64,words:791},t:"使用场景",y:"a"}}],["/algo/course/jz/dp/25.%20%E8%83%8C%E5%8C%85%E5%9E%8B.html",{loader:()=>l(()=>import("./25. 背包型.html-p0UuD6nj.js"),__vite__mapDeps([395,1])),meta:{d:1732244737e3,e:`
<p>01背包：要么选1个，要么不选</p>
<p>多重背包：可选多份</p>
<p>完全背包：可以分分割（贪心法，不是DP）</p>
<p>其他DP没有维度是和的DP，所以背包问题是很特殊的DP</p>
<p>第一种状态表示</p>
<p>dp[i][j]表示前i个物品，是否可以表示出总和j</p>
<p>第二种状态表示</p>
<p>dp[i][j]表示前i个物品，挑出&lt;=j的最大和是多少</p>
<p>效率比第一种低，原因：或运算比+快</p>
<h4>背包问题小结</h4>
<p>通常是二维的状态数组，前i个组成和为j</p>
<p>状态数组的大小需要开(n + 1)* (m + 1)</p>`,r:{minutes:1.37,words:410},t:"背包型",y:"a"}}],["/algo/course/jz/dp/27.%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E4%BC%98%E5%8C%96.html",{loader:()=>l(()=>import("./27. 动态规划优化.html-DjrbmgQE.js"),__vite__mapDeps([396,1])),meta:{d:1732244737e3,e:`
<blockquote>
<p>直播，27, 52，最难的算法-动态规划 <strong>Dynamic Programing</strong></p>
</blockquote>
<h2>空间优化</h2>
<h3>Rolling Array</h3>
<p>滚动数组优化</p>
<p>只与上一行有关时，可以只用两行进行存储（如数字三角形）</p>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-08-09 21.26.30.png" alt="截屏2022-08-09 21.26.30" loading="lazy"></p>`,r:{minutes:.55,words:166},t:"动态规划优化",y:"a"}}],["/algo/course/jz/dp/40.%20%E5%8C%BA%E9%97%B4%E5%9E%8B.html",{loader:()=>l(()=>import("./40. 区间型.html-ceuHCVYq.js"),__vite__mapDeps([397,1])),meta:{d:1734453484e3,e:`
<p>题目会存在 Subarray/Substring 相关的字眼</p>
<p>用 <code>dp[i][j]</code> 表示数组/字符串中 i,j 这一段区间的最优值/可行性/方案总数</p>
<p>滚动数组</p>
<p>区间型动态规划可以用滚动数组优化么？</p>
<p>A: 可以</p>
<p>B: 不可以</p>
<p>C: 看情况</p>
<p>题目中有 subarray / substring 的信息</p>
<p>大区间依赖小区间, 循环方式不同</p>
`,r:{minutes:.34,words:103},t:"区间型",y:"a"}}],["/algo/course/jz/dp/41.%20%E5%8C%B9%E9%85%8D%E5%9E%8B.html",{loader:()=>l(()=>import("./41. 匹配型.html-DgUhx36_.js"),__vite__mapDeps([398,1])),meta:{d:1734453484e3,e:`
<p>题目特点与状态表示</p>
<p>题目通常给出两个字符串</p>
<p>dp[i][j] 表示第一个字符串的前 i 个字符与第二个字符串的前 j 个字</p>
<p>符怎么样怎么样(max/min/sum/or)</p>
`,r:{minutes:.2,words:60},t:"匹配型",y:"a"}}],["/algo/course/jz/dp/42.%20%E5%88%92%E5%88%86%E5%9E%8B.html",{loader:()=>l(()=>import("./42. 划分型.html-CcAjsoP0.js"),__vite__mapDeps([399,1])),meta:{d:1734453484e3,e:`
`,r:{minutes:.01,words:3},t:"划分型",y:"a"}}],["/algo/course/jz/dp/43.%20%E6%8E%A5%E9%BE%99%E5%9E%8B.html",{loader:()=>l(()=>import("./43. 接龙型.html-DiJjkm4Y.js"),__vite__mapDeps([400,1])),meta:{d:1734453484e3,e:`
<blockquote>
<p>接龙型动态规划的二分解法</p>
</blockquote>
<p>接龙型DP是一维坐标型DP</p>
<p>题目通常会给你一个接龙规则，问你最长的龙有多长</p>
<p>状态表示通常为: dp[i] 表示以坐标为 i 的元素结尾的最长龙的长度</p>
<p>方程通常是: dp[i] = max{dp[j] + 1}, j 的后面可以接上 i</p>
`,r:{minutes:.32,words:96},t:"接龙型",y:"a"}}],["/algo/course/jz/ds/10.%20%E9%98%9F%E5%88%97.html",{loader:()=>l(()=>import("./10. 队列.html-DTz3pw6q.js"),__vite__mapDeps([401,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/algo/course/jz/ds/18.%20%E5%93%88%E5%B8%8C%E8%A1%A8.html",{loader:()=>l(()=>import("./18. 哈希表.html-DpPP4cHE.js"),__vite__mapDeps([402,1])),meta:{d:1732244737e3,e:`
`,r:{minutes:.01,words:3},t:"哈希表",y:"a"}}],["/algo/course/jz/ds/19.%20Heap.html",{loader:()=>l(()=>import("./19. Heap.html-ipbwvr7d.js"),__vite__mapDeps([403,1])),meta:{d:1732244737e3,e:`
`,r:{minutes:0,words:1},t:"堆",y:"a"}}],["/algo/course/jz/ds/21.%20%E5%93%88%E5%B8%8C%E8%A1%A8%E5%92%8C%E5%A0%86.html",{loader:()=>l(()=>import("./21. 哈希表和堆.html-Djcm04Ny.js"),__vite__mapDeps([404,1])),meta:{d:1732244737e3,e:`
<p>数据结构类面试问题的三种考法</p>
<p>考法1：问某种数据结构的基本原理，并要求实现<br>
例题：说一下Hash的原理并实现一个Hash表</p>
<p>考法2：使用某种数据结构完成事情<br>
例题：归并K个有序数组</p>
<p>考法3：多个数据结构配合在一起使用，提供一些特定的功能<br>
例题：LRU</p>
<h3>Set / HashSet</h3>
<p>特点：数据无重复，且无序</p>
<p>应用：去重，快速查找某数据是否存在</p>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-08-08 21.11.56.png" alt="截屏2022-08-08 21.11.56" loading="lazy"></p>`,r:{minutes:1.92,words:575},t:"数据结构：哈希表与堆",y:"a"}}],["/algo/course/jz/ds/38.%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1.html",{loader:()=>l(()=>import("./38. 数据结构设计.html-BjrQiKCa.js"),__vite__mapDeps([405,1])),meta:{d:1732244737e3,e:`
<h2>最小栈</h2>
<h2>最大栈</h2>
<h2>栈和队列互相实现</h2>
`,r:{minutes:.07,words:21},t:"数据结构设计类",y:"a"}}],["/algo/summary/optimise/decrease-conquer/",{loader:()=>l(()=>import("./index.html-KJDJZBjF.js"),__vite__mapDeps([406,1])),meta:{d:1732244737e3,e:`
<p>减治</p>
<p>减少问题规模</p>
<p>在广义“有序“的线性结构上搜索</p>
<p><strong>反向有序</strong>：两侧性质相反</p>
<ul>
<li>二分：每次减一半</li>
<li>倍增：每次扩一半，看看是否合法</li>
<li>双指针：减少组合复杂度的空间</li>
</ul>
<p><strong>结构有序</strong>：每次减一半</p>
<ul>
<li>基于二分查找存储化的结构
<ul>
<li>数组：树状数组</li>
<li>链表：跳表</li>
<li>树：
<ul>
<li>B+树</li>
<li>线段树</li>
<li>分块树</li>
</ul>
</li>
</ul>
</li>
</ul>`,r:{minutes:2.17,words:651},t:"Decrease Conquer",y:"a"}}],["/algo/summary/optimise/dynamic-programming/",{loader:()=>l(()=>import("./index.html-C4wEkn83.js"),__vite__mapDeps([407,1])),meta:{d:1732244737e3,e:`
<p>动态规划，避免重复计算</p>
<p>动态规划的题必须是求最优值/可行性/方案数这三种情况之一</p>
<p>动态规划的状态依赖必须有方向性，不可以有循环依赖</p>
<p>坐标型动态规划的状态：坐标</p>
<p>坐标型动态规划的方程：上一步坐标</p>
<blockquote>
<p>动态规划/自底向上 vs 记忆化搜索/备忘录法/自顶向下</p>
<ul>
<li>动态规划优点：写起来简短且部分问题经过滚动数组优化以后可以节省空间</li>
<li>备忘录法优点：部分问题可以剪枝避免不必要计算（不过大部分问题不需要剪枝）</li>
</ul>
<p>eg. lc397. 整数替换</p>
</blockquote>`,r:{minutes:16.11,words:4834},t:"Dynamic Programming",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E5%8D%9A%E5%BC%88%E5%9E%8B.html",{loader:()=>l(()=>import("./博弈型.html-KYAAGsDa.js"),__vite__mapDeps([408,1])),meta:{d:1732244737e3,e:`
<p>核心：<strong>换序</strong></p>
<p>博弈为两方游戏<br>
一方先下，在一定规则下依次出招<br>
如果满足一定条件，则一方胜</p>
<p>先手：先出招的一方<br>
出招后，先手<strong>换序</strong>，新的先手面对一个新的局面</p>
<p>博弈动态规划通常从第一步分析，而不是最后一步<br>
因为局面越来越简单，石子数越来越少</p>
<p>两类目标</p>
<ul>
<li>
<p>先手是否必赢</p>
</li>
<li>
<p>先手差值最大</p>
<p>先手价值最大，可以用额外状态记录的方式来得到，也可以用(maxDif+sum)/2</p>
</li>
</ul>`,r:{minutes:3.61,words:1083},t:"博弈型",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E6%A6%82%E7%8E%87%E5%9E%8B.html",{loader:()=>l(()=>import("./概率型.html-BNRs4L5F.js"),__vite__mapDeps([409,1])),meta:{d:1732244737e3,e:`
<p>部分涉及到概率、期望的题目中，需要采用动态规划方法解决的问题。</p>
<p>解题思路：</p>
<ul>
<li>求啥设啥</li>
<li>求概率：<code>dp[i]</code>表示到达条件的概率是多少</li>
<li>求期望：<code>dp[i]</code>表示到达条件的期望行动是几次</li>
</ul>
<p>其他概率型问题的解法：暴力模拟等</p>
<hr>
<p>Dices sum 骰子求和</p>
<p>状态：<code>f[i][j]</code>表示扔了i次，和为j的概率</p>
<p>转移：<code>f[i][j]=sum{f[i-1][j-k]/6}</code></p>`,r:{minutes:.46,words:139},t:"概率型",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E7%BB%84%E5%90%88%E5%9E%8B.html",{loader:()=>l(()=>import("./组合型.html-BFJrp329.js"),__vite__mapDeps([410,1])),meta:{d:1732244737e3,e:`
<p>需要排列组合的计数型DP</p>
<p>树上也可以</p>
<h2>组合计数</h2>
<p><code>c[k][n]=n!\\(k!(n-k)!)</code></p>
<p><code>c[k][n]=c[k][n-1]+c[k-1][n-1]</code></p>
<p>边界：<code>c[0][n]=c[n][n]=1</code></p>
<h2>卡特兰数</h2>
<p>卡特兰数：</p>
<p>状态：<code>f[i]</code>表示i个元素时的卡特兰数</p>
<p>转移：<code>f[n]=sum{f[i]f[n-1-i]},i in [0,n-1]</code></p>`,r:{minutes:1.23,words:370},t:"组合型",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E8%AE%A1%E6%95%B0%E5%9E%8B.html",{loader:()=>l(()=>import("./计数型.html-NWMUHFO8.js"),__vite__mapDeps([411,1])),meta:{d:1732244737e3,e:`
<p>K 个逆序对数组 lc629.</p>
<p>状态：<code>f[i][j]</code>表示前i个数字，恰好构成j个逆序对</p>
<p>转移：<code>f[i][j]=f[i][j-1]-f[i-1][j-i]+f[i-1][j]</code></p>
<p>边界：<code>f[n][k]</code></p>
`,r:{minutes:.18,words:55},t:"计数型",y:"a"}}],["/algo/summary/search/BFS/01bfs.html",{loader:()=>l(()=>import("./01bfs.html-BJmhlnfe.js"),__vite__mapDeps([412,1])),meta:{d:1733274761e3,e:`
<p>如果某条边权值为 0，那么新拓展出的节点权值就和当前队头节点权值相同，也就自然可以作为下一次拓展的起点，所以，我们需要把它放在队头。而如果某条边的权值为 1，我们就把它正常地放在队尾。</p>
<p>在常规的广度优先搜索中，每个节点最多被添加进队列一次，而在 0-1 广度优先搜索中，每个节点最多被添加进双端队列两次（即队首一次，队尾一次）</p>
<hr>
<p>在任何情况下，队列中只会含有 dis 值为 d 和 d+1 的点，且 dis 值为 d 的点一定排在值为 d+1 的点前面（这个叫 BFS 的两段性）。</p>
<ul>
<li>对于边权为 0 的边 x→y，如果 dis[x]&lt;dis[y]，更新 dis[y]=dis[x]，把 y 加到队首。</li>
<li>对于边权为 1 的边 x→y，如果 dis[x]+1&lt;dis[y]，更新 dis[y]=dis[x]+1，把 y 加到队尾。</li>
</ul>`,r:{minutes:1.41,words:423},t:"0/1 BFS",y:"a"}}],["/algo/summary/search/BFS/BeFS.html",{loader:()=>l(()=>import("./BeFS.html-CC7-pwxz.js"),__vite__mapDeps([413,1])),meta:{d:1734054342e3,e:`
<ul>
<li>A*</li>
<li>Dijkstra</li>
</ul>
<p><a href="https://www.geeksforgeeks.org/best-first-search-informed-search/" target="_blank" rel="noopener noreferrer">https://www.geeksforgeeks.org/best-first-search-informed-search/</a></p>
<h2>A * 算法</h2>
<p>A * search algorithm，简称 A* 算法，是一种在图形平面上，对于有多个节点的路径求出最低通过成本的算法。它属于图遍历（Graph traversal）和最佳优先搜索算法（Best-first search），亦是 BFS 的改进。</p>`,r:{minutes:5.48,words:1644},t:"Best-First Search",y:"a"}}],["/algo/summary/search/BFS/BiBFS.html",{loader:()=>l(()=>import("./BiBFS.html-Br5wWKhV.js"),__vite__mapDeps([414,1])),meta:{d:1732244737e3,e:`
<p>slidingPuzzle</p>
<p>相关问题</p>
<ol>
<li>
<p>是否有解：</p>
<p>逆序对数，mergeSort</p>
</li>
<li>
<p>最优解：BFS/A*</p>
</li>
</ol>
<p>求最少操作次数<br>
最少操作次数=最短步数=简单图最短路径=BFS<br>
图中的点是什么？如何表示？</p>
<p>进一步优化<br>
同时知道起点和终点<br>
可以进行双向宽度优先搜索算法<br>
Bi-directional BFS</p>
<p>变成根号t</p>
<ul>
<li>word ladder</li>
<li>knight shortest path I, II</li>
<li>sliding puzzle III</li>
</ul>`,r:{minutes:.73,words:219},t:"双向 BFS",y:"a"}}],["/algo/summary/search/BFS/",{loader:()=>l(()=>import("./index.html-U39oNyNa.js"),__vite__mapDeps([415,1])),meta:{d:1732244737e3,e:`
<p>分类</p>
<ul>
<li>
<p>狭义 BFS：Breadth-first search (BFS)</p>
<p>结点只能入队一次</p>
</li>
<li>
<p>扩展 BFS：Best-first search (BeFS)</p>
<p>结点可以入队多次（根据规则）</p>
</li>
</ul>
<p>如果可以预先计算出每个节点到终点的距离，则可以利用这个信息更快的到达终点。</p>
<p>其原理与 Dijkstra 算法类似，我们也使用一个优先队列，但此时以每个节点到达终点的距离作为优先级，每次始终选取到终点移动代价最小（离终点最近）的节点作为下一个遍历的节点。这种算法称之为最佳优先（Best First）算法。</p>`,r:{minutes:4.35,words:1306},t:"BFS",y:"a"}}],["/algo/summary/search/BFS/optimization.html",{loader:()=>l(()=>import("./optimization.html-BwuhB-TY.js"),__vite__mapDeps([416,1])),meta:{d:173238775e4,e:`
<p>优化</p>
<h2>BiBFS</h2>
<h2>A star</h2>
<p><a href="https://zhuanlan.zhihu.com/p/54510444" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/54510444</a></p>
<p>A*的变种</p>
<p>ARA*</p>
<p>D*</p>
<p>Field D*：在给定线性插值假设的情况下，路径是最优的，并且在实践中非常有效。该算法目前被各种现场机器人系统使用。</p>
<p>Block A*</p>
<p>可视化搜索过程：<a href="http://qiao.github.io/PathFinding.js/visual/" target="_blank" rel="noopener noreferrer">http://qiao.github.io/PathFinding.js/visual/</a></p>`,r:{minutes:.24,words:73},t:"Optimization",y:"a"}}],["/algo/summary/search/BFS/shortest-path.html",{loader:()=>l(()=>import("./shortest-path.html-CqvzLbeO.js"),__vite__mapDeps([417,1])),meta:{d:1732244737e3,e:`
<p>BFS 最短路</p>
<ul>
<li>
<p>无权图</p>
</li>
<li>
<p>01图，每条边的权值为0或1</p>
</li>
<li>
<p>状态转换问题</p>
<p>状态转换问题的最短步骤数。图的节点表示状态，边表示状态之间的合法转换。每次转换可以视为一步，无需考虑权值。</p>
<p><strong>示例问题：</strong></p>
<ul>
<li>八数码问题（求解从初始状态到目标状态的最少移动次数）。</li>
<li>字梯问题（从一个单词转换到另一个单词，每次只能变更一个字母）。</li>
</ul>
<p><strong>方法：</strong> 将状态看作图的节点，合法的状态转换看作边，用 BFS 搜索状态空间。</p>
</li>
</ul>`,r:{minutes:3.02,words:905},t:"Shortest Path",y:"a"}}],["/algo/summary/search/BFS/solution.html",{loader:()=>l(()=>import("./solution.html-DLtOkz_z.js"),__vite__mapDeps([418,1])),meta:{d:1732244737e3,e:`
<p>具体方案</p>
<p>一个方案=一条路径</p>
<p>求所有方案=求所有路径</p>
<p>BFS 善于解决求连通块问题</p>
<p>把路径看做点，把路径的变化关系看做点的连接关系</p>
<p>这样就把找所有路径问题变成了找所有连通点的问题</p>
<h2>例题</h2>
<p>迷宫III</p>
<p>实现难点</p>
<ol>
<li>如何记录最短路径</li>
<li>如何判断球会停在哪里</li>
</ol>
`,r:{minutes:.36,words:108},t:"Solution",y:"a"}}],["/algo/summary/search/BFS/topo.html",{loader:()=>l(()=>import("./topo.html-iwI-tkwC.js"),__vite__mapDeps([419,1])),meta:{d:1732244737e3,e:`
<p>拓扑排序</p>
<p>入度(In-degree)：有向图(Directed Graph)中指向当前节点的点的个数(或指向当前节点的边的条数)</p>
<p>步骤：</p>
<ol>
<li>统计每个点的入度</li>
<li>将每个入度为 0 的点放入队列(Queue)中作为起始节点</li>
<li>不断从队列中拿出一个点，
<ol>
<li>去掉这个点的所有连边(指向其他点的边)，
<ol>
<li>其他点的相应的入度 - 1</li>
<li>一旦发现新的入度为 0 的点，丢回队列中</li>
</ol>
</li>
</ol>
</li>
</ol>
<p>拓扑排序并不是传统的排序算法<br>
一个图可能存在多个拓扑序(Topological Order)，也可能不存在任何拓扑序</p>`,r:{minutes:1.03,words:310},t:"Topological Sort",y:"a"}}],["/algo/summary/search/BFS/%E6%97%B6%E9%97%B4%E6%A8%A1%E6%8B%9F.html",{loader:()=>l(()=>import("./时间模拟.html-G_IjyVLw.js"),__vite__mapDeps([420,1])),meta:{d:1732244737e3,e:`
<p>按时间模拟</p>
<p>腐烂的橘子</p>
<p>可以多起点，多类目标同时模拟</p>
<p>eg. 逃离火灾</p>
`,r:{minutes:.11,words:32},t:"时间模拟",y:"a"}}],["/algo/summary/search/BFS/%E8%BF%9E%E9%80%9A%E5%9D%97.html",{loader:()=>l(()=>import("./连通块.html-BZuEyMAg.js"),__vite__mapDeps([421,1])),meta:{d:1732244737e3,e:`
<p>Number of Islands</p>
<p>给一个 01 矩阵，求1构成的联通块的个数。</p>
<hr>
<p>Clone Graph</p>
<blockquote>
<p>这个题还是推荐DFS，DFS更简单</p>
</blockquote>
<p>返回一个经过深度拷贝的新图. 新图和原图具有同样的结构, 并且对 新图的任何改动不会对原图造成任何影响。</p>
<p>将整个算法分解为三个步骤:</p>
<ol>
<li>找到所有点</li>
<li>复制所有点</li>
<li>复制所有边</li>
</ol>
`,r:{minutes:.38,words:114},t:"连通块",y:"a"}}],["/algo/summary/search/DFS/",{loader:()=>l(()=>import("./index.html-BsjpPgwh.js"),__vite__mapDeps([422,1])),meta:{d:1732244737e3,e:`
<blockquote>
<p>jz6, 8, 23</p>
</blockquote>
<p>Depth-first search</p>
<p>深搜：栈式搜索</p>
<p>枚举：访问的关注的是边</p>
<p>遍历：访问的关注的是点</p>
<hr>
<p>三大特点</p>
<ul>
<li>
<p>回溯</p>
</li>
<li>
<p>宽树搜索：枚举</p>
</li>
<li>
<p>后序遍历</p>
<p>如果需要自底向上的传值，则必须使用深搜</p>
</li>
</ul>
<p>两类问题：</p>
<ul>
<li>
<p>遍历</p>
<p>在既定结构上进行遍历，如遍历图、树、线</p>
<p>可以用回溯和后序遍历</p>
</li>
<li>
<p>枚举</p>
<p>根据题意生成解空间，而非直接遍历原结构本身</p>
<p>常见如枚举所有符合条件的答案/路径</p>
</li>
</ul>`,r:{minutes:4.76,words:1427},t:"DFS",y:"a"}}],["/algo/summary/search/FOR/",{loader:()=>l(()=>import("./index.html-BxmnRgsm.js"),__vite__mapDeps([423,1])),meta:{d:1732244737e3,e:`
<p>只能遍历线性序列，或图的拓扑排序</p>
`,r:{minutes:.05,words:16},t:"FOR",y:"a"}}],["/algo/summary/structure/graph/",{loader:()=>l(()=>import("./index.html-CrRk5TfN.js"),__vite__mapDeps([424,1])),meta:{d:1732244737e3,e:`
<p>按节点与边的属性分类</p>
<ul>
<li><strong>多重图（Multigraph）</strong><br>
两个节点之间可以存在多条边。<br>
<strong>示例</strong>: 城市之间可能有多个航班。</li>
<li><strong>简单图（Simple Graph）</strong><br>
每对节点之间最多只有一条边，且无自环。<br>
<strong>示例</strong>: 学生关系网络。</li>
<li><strong>自环图（Graph with Loops）</strong><br>
节点可以有指向自身的边。<br>
<strong>示例</strong>: 状态转移图中可能存在某状态的自环。</li>
</ul>`,r:{minutes:13.22,words:3967},t:"图",y:"a"}}],["/algo/summary/structure/graph/connectivity.html",{loader:()=>l(()=>import("./connectivity.html-CumByStE.js"),__vite__mapDeps([425,1])),meta:{d:1734054342e3,e:`
<p>连通性</p>
<p>Connected Component 连通分量</p>
<ul>
<li>路径</li>
</ul>
<p>无向图：</p>
<ul>
<li>连通：</li>
<li>连通图</li>
<li>连通分量</li>
</ul>
<p>有向图：</p>
<ul>
<li>弱连通：有向图的底图（无向图）是连通图，则是弱连通图。</li>
<li>半连通：任意结点对中，至少从一个到另一个是可达的。</li>
<li>强连通：任意对中都互相可达。</li>
<li>强连通图</li>
<li>强连通分量</li>
<li>点双连通</li>
</ul>
<h3>Tarjan</h3>`,r:{minutes:3.01,words:903},t:"Connectivity",y:"a"}}],["/algo/summary/structure/graph/net-flow.html",{loader:()=>l(()=>import("./net-flow.html-Bq3mQbiL.js"),__vite__mapDeps([426,1])),meta:{d:1732244737e3,e:`
<p>网络流</p>
<p>MCMF 最小费用最大流</p>
`,r:{minutes:.04,words:13},t:"Network Flow",y:"a"}}],["/algo/summary/structure/graph/shortest-path.html",{loader:()=>l(()=>import("./shortest-path.html-BELRZ4oi.js"),__vite__mapDeps([427,1])),meta:{d:1732244737e3,e:`
<p>最短路</p>
<p>简单图：BFS</p>
<p>复杂图：Floyd, Dijkstra, Bellman-ford, SPFA</p>
<p>面试中一般不考复杂图最短路径问题（除了hard）</p>
<p>问最长路径</p>
<p>BFS 是否可以做? 应该用什么算法呢?</p>
<p>图可以分层：动态规划 Dynamic Programming</p>
<p>图不可分层：深度优先搜索 DFS</p>
<p>分层意思是：路径有一定方向性，不能绕圈（DAG），第i层的点只能走到第i+1层不能回到底 i-1 层</p>
<p>哈希表，图中存在环，同一个节点可能重复进入队列，为了避免重复入队，在入队前标记 visited</p>`,r:{minutes:3.09,words:928},t:"Shortest Path",y:"a"}}],["/algo/summary/structure/graph/ufs.html",{loader:()=>l(()=>import("./ufs.html-ChktBu8v.js"),__vite__mapDeps([428,1])),meta:{d:1732244737e3,e:`
<p>连通性，用一个集合中的某个元素来代表这个集合</p>
<p>是一种树形的数据结构，用于解决不相交（disjoint）集合的合并及查询问题。</p>
<ol>
<li>一般是无向无权图的连通分量，</li>
<li>也可以拓展至有向带权图（需要一个额外dist数组，如除法求值）</li>
</ol>
<p>并查集是树形结构，它用一棵树来表示一个集合，不同的集合其实就构成了一个森林。</p>
<p>优化方法：</p>
<ol>
<li>按秩合并</li>
<li>路径压缩</li>
</ol>
<p>路径压缩会破坏树的结构，在一些情况下是不能使用的，按秩合并则不会</p>
<p>两种优化可以同时进行，查询操作几乎可以降到O1</p>`,r:{minutes:1.02,words:307},t:"Union Find Set",y:"a"}}],["/algo/summary/structure/graph/%E5%9B%BE%E7%9A%84%E5%AD%98%E5%82%A8.html",{loader:()=>l(()=>import("./图的存储.html-UafZkKTp.js"),__vite__mapDeps([429,1])),meta:{d:1732244737e3,e:`
<h2>邻接矩阵</h2>
<p>二维数组<code>graph[i][j]</code>，表示i, j之间的距离。</p>
<p>好处：O1判断两结点是否连接（且写起来比较简单）</p>
<p>缺点：稀疏图上非常浪费空间，且只能存储简单图（不能有重边）</p>
<p>用途：</p>
<ol>
<li>最大网络秩</li>
<li>二分图匹配，匈牙利算法</li>
<li>Floyd算法求多源最短路n3</li>
</ol>
<h2>邻接表</h2>
<p>Adjacency List</p>
<p>有一个有 <code>n</code> 个节点的有向图，节点按 <code>0</code> 到 <code>n - 1</code> 编号。</p>`,r:{minutes:1.83,words:548},t:"图的存储",y:"a"}}],["/algo/summary/structure/set/",{loader:()=>l(()=>import("./index.html-DDi92nVO.js"),__vite__mapDeps([430,1])),meta:{d:1732244737e3,e:`
`,r:{minutes:.01,words:2},t:"集合",y:"a"}}],["/cs/basic/network/application/cdn.html",{loader:()=>l(()=>import("./cdn.html-B3fcGitP.js"),__vite__mapDeps([431,1])),meta:{d:1700646963e3,e:`
<p>Cloudflare</p>
<p>流量分流：Wireguard</p>
`,r:{minutes:.02,words:7},t:"CDN",y:"a"}}],["/cs/basic/network/application/dns.html",{loader:()=>l(()=>import("./dns.html-h0lY6HpV.js"),__vite__mapDeps([432,1])),meta:{d:1694686552e3,e:`
<p><code>/etc/hosts</code></p>
<p>unbound</p>
<p>分布式域名服务器</p>
<p>递推、递归两种查询方式</p>
<h3>encrypted DNS</h3>
<p>DoH(DNS over HTTPS)</p>
<p>DoT(DNS over TLS)</p>
<p>Imagine you’re at a conference. You’re using its public Wi-Fi.</p>
<p><a href="https://paulmillr.com/posts/encrypted-dns/" target="_blank" rel="noopener noreferrer">文章</a></p>`,r:{minutes:.37,words:112},t:"DNS",y:"a"}}],["/cs/basic/network/application/dowload.html",{loader:()=>l(()=>import("./dowload.html-atD6Xxz4.js"),__vite__mapDeps([433,1])),meta:{d:1700646963e3,e:`
<ul>
<li>中心化下载
<ul>
<li>HTTP/HTTPS</li>
<li>FTP/SFTP</li>
</ul>
</li>
<li>去中心
<ul>
<li>BT</li>
<li>magnet</li>
</ul>
</li>
</ul>
<p>下载工具</p>
<ul>
<li>qBitTorrent</li>
<li>Motrix</li>
<li>FDM</li>
<li>Xdown</li>
<li>transmission</li>
</ul>
`,r:{minutes:.07,words:22},t:"Download",y:"a"}}],["/cs/basic/network/application/http.html",{loader:()=>l(()=>import("./http.html-B-DmS-XO.js"),__vite__mapDeps([434,1])),meta:{d:1679321449e3,e:`
<p>HTTP 协是基于 TCP 协议，发送 HTTP 请求之前首先要建立 TCP 连接也就是要经历 3 次握手。目前使用的 HTTP 协议大部分都是 1.1。在 1.1 的协议里面，默认是开启了 Keep-Alive 的，这样的话建立的连接就可以在多次请求中被复用了。</p>
<p>另外， HTTP 协议是”无状态”的协议，它无法记录客户端用户的状态，一般我们都是通过 Session 来记录客户端用户的状态。</p>
<h2>基本概念</h2>
<p>HTTP 是超文本传输协议，也就是<strong>H</strong>yper<strong>T</strong>ext <strong>T</strong>ransfer <strong>P</strong>rotocol。</p>`,r:{minutes:18.19,words:5458},t:"HTTP",y:"a"}}],["/cs/basic/network/application/http2.html",{loader:()=>l(()=>import("./http2.html-CFFomlTu.js"),__vite__mapDeps([435,1])),meta:{d:1715153702e3,e:`
`,r:{minutes:0,words:1},t:"HTTP/2",y:"a"}}],["/cs/basic/network/application/https.html",{loader:()=>l(()=>import("./https.html-C5C-Xz8L.js"),__vite__mapDeps([436,1])),meta:{d:1680492546e3,e:`
<h3>HTTP 与 HTTPS 有哪些区别？</h3>
<ul>
<li>HTTP 是超文本传输协议，信息是明文传输，存在安全风险的问题。HTTPS 则解决 HTTP 不安全的缺陷，在 TCP 和 HTTP 网络层之间加入了 SSL/TLS 安全协议，使得报文能够加密传输。</li>
<li>HTTP 连接建立相对简单， TCP 三次握手之后便可进行 HTTP 的报文传输。而 HTTPS 在 TCP 三次握手之后，还需进行 SSL/TLS 的握手过程，才可进入加密报文传输。</li>
<li>两者的默认端口不一样，HTTP 默认端口号是 80，HTTPS 默认端口号是 443。</li>
<li>HTTPS 协议需要向 CA（证书权威机构）申请数字证书，来保证服务器的身份是可信的。</li>
</ul>`,r:{minutes:4.61,words:1383},t:"HTTPS",y:"a"}}],["/cs/basic/network/application/mail.html",{loader:()=>l(()=>import("./mail.html-CQlcpcoS.js"),__vite__mapDeps([437,1])),meta:{d:1715153702e3,e:`
<p>SMTP</p>
<p>POP3, IMAP</p>
<p><a href="http://Poste.io" target="_blank" rel="noopener noreferrer">Poste.io</a></p>
<p>EwoMail</p>
<p>抓包</p>
`,r:{minutes:.03,words:8},t:"Mail",y:"a"}}],["/cs/basic/network/application/nginx.html",{loader:()=>l(()=>import("./nginx.html-BDC6t1m6.js"),__vite__mapDeps([438,1])),meta:{d:1694686552e3,e:`
<p>反向代理</p>
<p>配置文件放在：<code>/etc/nginx/conf.d</code></p>
<p>配置文件命名规则：<code>xxx.conf</code>，否则不会被 nginx 解析</p>
<p>修改完以后</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -t</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> reload</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.13,words:40},t:"nginx",y:"a"}}],["/cs/basic/network/application/proxy.html",{loader:()=>l(()=>import("./proxy.html-CBAkUN9l.js"),__vite__mapDeps([439,1])),meta:{d:1700646963e3,e:`
<p><a href="https://www.youtube.com/watch?v=aASnYBdqM80" target="_blank" rel="noopener noreferrer">CF CDN Worker</a></p>
<ul>
<li>正向代理</li>
<li>反向代理</li>
</ul>
<p><a href="http://Speedtest.net" target="_blank" rel="noopener noreferrer">Speedtest.net</a></p>
<p>DNS</p>
<h2>正向代理</h2>
<p>机场</p>
<p>歇斯底里协议</p>`,r:{minutes:.1,words:30},t:"Proxy",y:"a"}}],["/cs/basic/network/application/quic.html",{loader:()=>l(()=>import("./quic.html-DbX0_nvj.js"),__vite__mapDeps([440,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/cs/basic/network/application/rpc.html",{loader:()=>l(()=>import("./rpc.html-DyC87MvK.js"),__vite__mapDeps([441,1])),meta:{d:1715153702e3,e:`
<p>而 <strong>RPC</strong>（<strong>R</strong>emote <strong>P</strong>rocedure <strong>C</strong>all），又叫做<strong>远程过程调用</strong>。它本身并不是一个具体的协议，而是一种<strong>调用方式</strong>。</p>
<p>举个例子，我们平时调用一个<strong>本地方法</strong>就像下面这样。</p>
<div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span> res = localFunc(req)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:5.93,words:1778},t:"RPC",y:"a"}}],["/cs/basic/network/application/ssh.html",{loader:()=>l(()=>import("./ssh.html-ntPNisNm.js"),__vite__mapDeps([442,1])),meta:{d:1725612282e3,e:`
<p>端口转发</p>
<p><a href="https://blog.csdn.net/weixin_45064872/article/details/123717129" target="_blank" rel="noopener noreferrer">基本参数</a></p>
<p>端口转发、正向代理、反向代理</p>
<p>端口转发</p>
<p>定义：端口转发(Port forwarding)，有时被叫做隧道，是安全壳(SSH)  为网络安全通信使用的一种方法。端口转发是转发一个网络端口从一个网络节点到另一个网络节点的行为，其使一个外部用户从外部经过一个被激活的NAT路由器到达一个在私有内部IP地址(局域网内部)上的一个端口。</p>`,r:{minutes:.56,words:169},t:"SSH",y:"a"}}],["/cs/basic/network/application/websocket.html",{loader:()=>l(()=>import("./websocket.html-BGmayjgg.js"),__vite__mapDeps([443,1])),meta:{d:1715153702e3,e:`
<p>在用户不感知的情况下，服务器将数据推送给浏览器的技术，就是所谓的<strong>服务器推送</strong>技术，它还有个毫不沾边的英文名，<strong>comet</strong> 技术，大家听过就好。</p>
<p>从 HTTP 协议的角度来看，就是点一下网页上的某个按钮，<strong>前端发一次 HTTP请 求，网站返回一次 HTTP 响应</strong>。这种由客户端主动请求，服务器响应的方式也满足大部分网页的功能场景。</p>
<p>像这种<strong>看起来服务器主动发消息给客户端的场景</strong>，是怎么做到的？</p>
<h2>HTTP 不断轮询</h2>`,r:{minutes:3.34,words:1001},t:"WebSocket",y:"a"}}],["/cs/basic/network/network/IP.html",{loader:()=>l(()=>import("./IP.html-D94KAO8Z.js"),__vite__mapDeps([444,1])),meta:{d:1715153702e3,e:`
<p>网络层的主要作用是：实现主机与主机之间的通信，也叫点对点（end to end）通信。</p>
<p>每种数据链路的最大传输单元 <code>MTU</code> 都是不相同的，如 FDDI 数据链路 MTU 4352、以太网的 MTU 是 1500 字节等。</p>
<p>其实，在网络中数据包传输中也是如此，<strong>源IP地址和目标IP地址在传输过程中是不会变化的（前提：没有使用 NAT 网络），只有源 MAC 地址和目标 MAC 一直在变化。</strong></p>
`,r:{minutes:.44,words:132},t:"IP",y:"a"}}],["/cs/basic/network/network/NAT.html",{loader:()=>l(()=>import("./NAT.html-CUakW0iV.js"),__vite__mapDeps([445,1])),meta:{d:1715153702e3,e:`
<p>NAT（Network Address Translation），是指网络地址转换，1994年提出的。NAT是用于在本地网络中使用私有地址，在连接互联网时转而使用全局 IP 地址的技术。NAT实际上是为解决IPv4地址短缺而开发的技术。</p>
<p>NAT不仅能解决IP地址不足的问题，而且还能够有效地避免来自网络外部的攻击，隐藏并保护网络内部的计算机。</p>
<p>NAT穿透/内网穿透</p>
`,r:{minutes:.42,words:126},t:"NAT",y:"a"}}],["/cs/basic/network/transport/TCP.html",{loader:()=>l(()=>import("./TCP.html-BySHyIn_.js"),__vite__mapDeps([446,1])),meta:{d:1715153702e3,e:`
<p>TCP 是<strong>面向连接的、可靠的、基于字节流</strong>的传输层通信协议。</p>
<p>MTU: Maxitum Transmission Unit 最大传输单元</p>
<p>MSS: Maxitum Segment Size 最大分段大小</p>
<p>由于以太网 EthernetII 最大的数据帧是1518Bytes</p>
<p><img src="https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/计算机网络/TCP-参数/6.jpg" alt="TCP 头部" loading="lazy"></p>`,r:{minutes:18.44,words:5531},t:"TCP",y:"a"}}],["/cs/basic/network/transport/UDP.html",{loader:()=>l(()=>import("./UDP.html-BQXoODrN.js"),__vite__mapDeps([447,1])),meta:{d:1715153702e3,e:`
<p><img src="https://cdn.xiaolincoding.com//mysql/other/format,png-20230309230439961.png" alt="UDP 头部格式" loading="lazy"></p>
<h2>QUIC - 实现可靠传输</h2>
<p>「<strong>如何基于 UDP 协议实现可靠传输？</strong>」</p>
<p>很多同学第一反应就会说把 TCP 可靠传输的特性（序列号、确认应答、超时重传、流量控制、拥塞控制）在应用层实现一遍。</p>
<p>实现的思路确实这样没错，但是有没有想过，<strong>既然 TCP 天然支持可靠传输，为什么还需要基于 UDP 实现可靠传输呢？这不是重复造轮子吗？</strong></p>`,r:{minutes:1.1,words:330},t:"UDP",y:"a"}}],["/cs/basic/os/file/",{loader:()=>l(()=>import("./index.html-CJOq7fNw.js"),__vite__mapDeps([448,1])),meta:{d:1715153702e3,e:`
<p>文件句柄（File Handle）是操作系统中用于访问文件的一种数据结构，通常是一个整数或指针。文件句柄用于标识打开的文件，每个打开的文件都有一个唯一的文件句柄。</p>
<p>在 Linux 和 Unix 系统中，文件句柄是通过调用 <code>open()</code> 系统调用打开文件时返回的。当打开一个文件时，操作系统会为该文件分配一个文件句柄，并将其返回给应用程序。应用程序可以使用文件句柄来读取、写入、关闭文件等操作。</p>
<p>文件句柄通常包含以下信息：</p>
<ol>
<li>文件描述符（File Descriptor）：文件描述符是文件句柄的一部分，它是一个非负整数，用于标识打开的文件。在 Linux 和 Unix 系统中，标准输入、标准输出和标准错误输出的文件描述符分别为 0、1 和 2。</li>
<li>文件状态标志（File Status Flags）：文件状态标志用于描述文件的状态，例如文件是否可读、可写、是否为阻塞模式等等。</li>
<li>文件位置指针（File Position Pointer）：文件位置指针用于标识文件中的当前位置，应用程序可以使用它来读取或写入文件。</li>
</ol>`,r:{minutes:6.52,words:1955},t:"文件管理",y:"a"}}],["/cs/basic/os/io/",{loader:()=>l(()=>import("./index.html-Da9lRPLO.js"),__vite__mapDeps([449,1])),meta:{d:1715153702e3,e:`
<blockquote>
<p><a href="https://blog.csdn.net/lixinkuan328/article/details/114198739" target="_blank" rel="noopener noreferrer">参考</a></p>
</blockquote>
<p>UNIX 系统下， IO 模型一共有 5 种：</p>
<ul>
<li>同步阻塞 I/O、</li>
<li>同步非阻塞 I/O、</li>
<li>事件驱动 I/O （多路复用 I/O）</li>
<li>信号驱动 I/O</li>
<li>异步 I/O</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/83871b6390d8c993af4c9b02b8dccf31.png" alt="img" loading="lazy"></p>`,r:{minutes:3.35,words:1004},t:"I/O",y:"a"}}],["/cs/basic/os/io/device.html",{loader:()=>l(()=>import("./device.html-C6tpYf-S.js"),__vite__mapDeps([450,1])),meta:{d:1715153702e3,e:`<h2>设备控制器</h2>
<p>我们的电脑设备可以接非常多的输入输出设备，比如键盘、鼠标、显示器、网卡、硬盘、打印机、音响等等，每个设备的用法和功能都不同，那操作系统是如何把这些输入输出设备统一管理的呢?</p>
<p>为了屏蔽设备之间的差异，每个设备都有一个叫<strong>设备控制器（<em>Device Control</em>）</strong> 的组件，比如硬盘有硬盘控制器、显示器有视频控制器等。</p>
<p>因为这些控制器都很清楚的知道对应设备的用法和功能，所以 CPU 是通过设备控制器来和设备打交道的。</p>
<p>设备控制器里有芯片，它可执行自己的逻辑，也有自己的寄存器，用来与 CPU 进行通信，比如：</p>`,r:{minutes:3.06,words:917},t:"",y:"a"}}],["/cs/basic/os/io/dma.html",{loader:()=>l(()=>import("./dma.html-JNuD2KX0.js"),__vite__mapDeps([451,1])),meta:{d:1715153702e3,e:`
<p>零拷贝是提升 IO 操作性能的一个常用手段，像 ActiveMQ、Kafka 、RocketMQ、QMQ、Netty 等顶级开源项目都用到了零拷贝。</p>
<p>零拷贝是指计算机执行 IO 操作时，CPU 不需要将数据从一个存储区域复制到另一个存储区域，从而可以减少上下文切换以及 CPU 的拷贝时间。也就是说，零拷贝主要解决操作系统在处理 I/O 操作时频繁复制数据的问题。零拷贝的常见实现技术有： <code>mmap+write</code>、<code>sendfile</code>和 <code>sendfile + DMA gather copy</code> 。</p>
<p>下图展示了各种零拷贝技术的对比图：</p>`,r:{minutes:11.9,words:3569},t:"零拷贝",y:"a"}}],["/cs/basic/os/io/patterns.html",{loader:()=>l(()=>import("./patterns.html-DKcg5MiD.js"),__vite__mapDeps([452,1])),meta:{d:1719451307e3,e:`
<ul>
<li>
<p>reactor</p>
<p>多路复用</p>
</li>
<li>
<p>proacter</p>
<p>异步多线程</p>
</li>
</ul>
`,r:{minutes:.05,words:15},t:"设计模式",y:"a"}}],["/cs/basic/os/kernel/",{loader:()=>l(()=>import("./index.html-DMSduFFU.js"),__vite__mapDeps([453,1])),meta:{d:1732244781e3,e:`
<p>内核态和用户态是操作系统中的两种运行模式。它们 的主要区别在于权限和可执行的操作： 内核态（Kernel Mode）：在内核态下，CPU可以 执行所有的指令和访问所有的硬件资源。这种模 式下的操作具有更高的权限，主要用于操作系统 内核的运行。 用户态（User Mode）：在用户态下，CPU只能执 行部分指令集，无法直接访问硬件资源。这种模 式下的操作权限较低，主要用于运行用户程序。</p>
<p>内核态的底层操作主要包括：内存管理、进程管理、 设备驱动程序控制、系统调用等。这些操作涉及到操 作系统的核心功能，需要较高的权限来执行。 分为内核态和用户态的原因主要有以下几点：</p>
<ul>
<li>安全性：通过对权限的划分，用户程序无法直接 访问硬件资源，从而避免了恶意程序对系统资源 的破坏。</li>
<li>稳定性：用户态程序出现问题时，不会影响到整 个系统，避免了程序故障导致系统崩溃的风险。</li>
<li>模块化和维护。</li>
</ul>`,r:{minutes:1.15,words:344},t:"Kernel",y:"a"}}],["/cs/basic/os/memory/",{loader:()=>l(()=>import("./index.html-B-TQhbWL.js"),__vite__mapDeps([454,1])),meta:{d:1715153702e3,e:`
<p>虚拟内存. 共享内存. 常驻内存</p>
<p>top 命令可以看到如下参数</p>
<p>VIRT：</p>
<ol>
<li>
<p>进程“需要的”虚拟内存大小，包括进程使用的库. 代码. 数据，以及malloc. new分配的堆空间和分配的栈空间等；</p>
</li>
<li>
<p>假如进程新申请10MB的内存，但实际只使用了1MB，那么它会增长10MB，而不是实际的1MB使用量。</p>
</li>
<li>
<p>VIRT = SWAP + RES</p>
</li>
</ol>
<p>RES：</p>
<ol>
<li>
<p>进程当前使用的内存大小，包括使用中的malloc. new分配的堆空间和分配的栈空间，但不包括swap out量；</p>
</li>
<li>
<p>包含其他进程的共享；</p>
</li>
<li>
<p>如果申请10MB的内存，实际使用1MB，它只增长1MB，与VIRT相反；</p>
</li>
<li>
<p>关于库占用内存的情况，它只统计加载的库文件所占内存大小。</p>
</li>
<li>
<p>RES = CODE + DATA</p>
</li>
</ol>`,r:{minutes:1.18,words:355},t:"内存管理",y:"a"}}],["/cs/basic/os/process/",{loader:()=>l(()=>import("./index.html-CzwnXEX0.js"),__vite__mapDeps([455,1])),meta:{d:1715153702e3,e:`
<ul>
<li>
<p><strong>进程（Process）</strong> 是指计算机中正在运行的一个程序实例。</p>
<p>举例：你打开的微信就是一个进程。</p>
</li>
<li>
<p><strong>线程（Thread）</strong> 也被称为轻量级进程，更加轻量。多个线程可以在同一个进程中同时执行，并且共享进程的资源比如内存空间、文件句柄、网络连接等。</p>
<p>同一个进程内多个线程之间可以共享代码段、数据段、打开的文件等资源，但每个线程各自都有一套独立的寄存器和栈，这样可以确保线程的控制流是相对独立的。</p>
<p>举例：你打开的微信里就有一个线程专门用来拉取别人发你的最新的消息。</p>
</li>
</ul>`,r:{minutes:11.74,words:3523},t:"线程管理",y:"a"}}],["/cs/basic/os/process/ipc.html",{loader:()=>l(()=>import("./ipc.html-D3k3ApDL.js"),__vite__mapDeps([456,1])),meta:{d:1732244781e3,e:`
<p>进程通信</p>
<h2>Types of Process</h2>
<ul>
<li>Independent process</li>
<li>Co-operating process</li>
</ul>
<p>An independent process is not affected by the execution of other processes while a co-operating process can be affected by other executing processes. Though one can think that those processes, which are running independently, will execute very efficiently, in reality, there are many situations when cooperative nature can be utilized for increasing computational speed, convenience, and modularity. Inter-process communication (IPC) is a mechanism that allows processes to communicate with each other and synchronize their actions. The communication between these processes can be seen as a method of cooperation between them. Processes can communicate with each other through both:<br>
Methods of IPC</p>`,r:{minutes:12.29,words:3686},t:"Inter-Process Communication",y:"a"}}],["/cs/basic/os/process/itc.html",{loader:()=>l(()=>import("./itc.html-D98Mvlla.js"),__vite__mapDeps([457,1])),meta:{d:1732244781e3,e:`
<p>Linux系统提供了五种用于线程通信的方式：</p>
<ul>
<li>互斥锁 Mutex</li>
<li>读写锁 Read-Write Locks</li>
<li>条件变量 Condition Variables</li>
<li>自旋锁 Spinlock</li>
<li>信号量 Semaphores</li>
</ul>
<p>互斥锁（Mutex）：互斥量(mutex)从本质上说是 一把锁，在访问共享资源前对互斥量进行加锁， 在访问完成后释放互斥量上的锁。对互斥量进行 加锁以后，任何其他试图再次对互斥锁加锁的线 程将会阻塞直到当前线程释放该互斥锁。如果释 放互斥锁时有多个线程阻塞，所有在该互斥锁上 的阻塞线程都会变成可运行状态，第一个变为运 行状态的线程可以对互斥锁加锁，其他线程将会 看到互斥锁依然被锁住，只能回去再次等待它重 新变为可用。</p>`,r:{minutes:3.53,words:1058},t:"Inter-Thread Communication",y:"a"}}],["/cs/basic/os/process/schedule.html",{loader:()=>l(()=>import("./schedule.html-yRUgFZvJ.js"),__vite__mapDeps([458,1])),meta:{d:1732244781e3,e:`
<h3>调度时机</h3>
<p>在进程的生命周期中，当进程从一个运行状态到另外一状态变化的时候，其实会触发一次调度。</p>
<p>比如，以下状态的变化都会触发操作系统的调度：</p>
<ul>
<li><em>从就绪态 -&gt; 运行态</em>：当进程被创建时，会进入到就绪队列，操作系统会从就绪队列选择一个进程运行；</li>
<li><em>从运行态 -&gt; 阻塞态</em>：当进程发生 I/O 事件而阻塞时，操作系统必须选择另外一个进程运行；</li>
<li><em>从运行态 -&gt; 结束态</em>：当进程退出结束后，操作系统得从就绪队列选择另外一个进程运行；</li>
</ul>`,r:{minutes:1.89,words:567},t:"Schedule",y:"a"}}],["/cs/basic/os/structure/cache.html",{loader:()=>l(()=>import("./cache.html-_E8ehSj_.js"),__vite__mapDeps([459,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/cs/basic/os/structure/mode.html",{loader:()=>l(()=>import("./mode.html-D-z-xjLS.js"),__vite__mapDeps([460,1])),meta:{d:1680492546e3,e:`
<h2>CPU状态</h2>
<p>内核态（Kernel Mode）：运行操作系统程序，操作硬件</p>
<p>用户态（User Mode）：运行用户程序</p>
<h2>指令划分</h2>
<p>特权指令：只能由操作系统使用、用户程序不能使用的指令。</p>
<p>举例：启动I/O、内存清零 修改程序状态字 设置时钟 允许/禁止终端 停机</p>
<p>非特权指令：用户程序可以使用的指令。</p>
<p>举例：控制转移、算数运算、取数指令、<strong>访管指令</strong>（使用户程序从用户态陷入内核态）</p>
<h2>特权级别</h2>
<p><strong>特权环：R0、R1、R2、R3</strong></p>`,r:{minutes:3.39,words:1016},t:"内核态用户态",y:"a"}}],["/cs/database/mysql/availability/",{loader:()=>l(()=>import("./index.html-pOzJvRmH.js"),__vite__mapDeps([461,1])),meta:{d:1715153702e3,e:`
<ul>
<li>主从 replica</li>
<li>分片 sharding</li>
</ul>
`,r:{minutes:.03,words:9},t:"高可用",y:"a"}}],["/cs/database/mysql/availability/replica.html",{loader:()=>l(()=>import("./replica.html-DmKnfav0.js"),__vite__mapDeps([462,1])),meta:{d:1684318252e3,e:`
<p>读写分离</p>
<h3>什么是读写分离？</h3>
<p><strong>读写分离主要是为了将对数据库的读写操作分散到不同的数据库节点上。</strong> 这样的话，就能够小幅提升写性能，大幅提升读性能。</p>
<h3>读写分离会带来什么问题？如何解决？</h3>
<p>读写分离对于提升数据库的并发非常有效，但同时也会引来一个问题：主库和从库的数据存在延迟，比如你写完主库之后，主库的数据同步到从库是需要时间的，这个时间差就导致了主库和从库的数据不一致性问题。这也就是我们经常说的 <strong>主从同步延迟</strong> 。</p>
<p>主从同步延迟问题的解决，没有特别好的一种方案（可能是我太菜了，欢迎评论区补充）。你可以根据自己的业务场景，参考一下下面几种解决办法。</p>`,r:{minutes:4.99,words:1498},t:"Replication 主从复制",y:"a"}}],["/cs/database/mysql/availability/sharding.html",{loader:()=>l(()=>import("./sharding.html-BnnLyrdx.js"),__vite__mapDeps([463,1])),meta:{d:1684318252e3,e:`
<p>读写分离主要应对的是数据库读并发，没有解决数据库存储问题。试想一下：<strong>如果 MySQL 一张表的数据量过大怎么办?</strong></p>
<p>换言之，<strong>我们该如何解决 MySQL 的存储压力呢？</strong></p>
<p>答案之一就是 <strong>分库分表</strong>。</p>
<h3>分库</h3>
<p><strong>分库</strong> 就是将数据库中的数据分散到不同的数据库上，可以垂直分库，也可以水平分库。</p>
<h4><strong>垂直分库</strong></h4>
<p>就是把单一数据库按照业务进行划分，不同的业务使用不同的数据库，进而将一个数据库的压力分担到多个数据库。</p>`,r:{minutes:2.18,words:655},t:"Sharding 分库分表",y:"a"}}],["/cs/database/mysql/devops/%E9%85%8D%E7%BD%AE.html",{loader:()=>l(()=>import("./配置.html-BhKid_C9.js"),__vite__mapDeps([464,1])),meta:{d:1691648992e3,e:`
<p><strong>临时修改方案，重启后失效：</strong></p>
<p>在任意连接到 mysql 的 session 会话里，或者 navicat 界面中执行以下命令都可以。进入 docker 以后，执行：mysql -u root -p 然后回车，之后按提示输入 mysql 密码。</p>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> GLOBAL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> max_connections</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1020</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 设置该 DB 最大连接数为 1020</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> GLOBAL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> max_user_connections</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;     </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 设置单用户最大连接数为 1000</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.32,words:97},t:"配置",y:"a"}}],["/cs/database/mysql/engine/1.%20%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.html",{loader:()=>l(()=>import("./1. 体系结构.html-1cTfv8Jd.js"),__vite__mapDeps([465,1])),meta:{d:1669446166e3,e:`
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/mysql查询流程.png" alt="查询语句执行流程" loading="lazy"></p>
<ul>
<li>
<p>Server 层</p>
<ol>
<li>
<p>连接层：连接器</p>
<p>连接、授权认证</p>
<blockquote>
<p>连接超上限：Too many connections</p>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">SHOW VARIABLES </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">LIKE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '%max_connections%'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> GLOBAL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> max_connections</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>
</li>
<li>
<p>服务层</p>
<ol>
<li>查询缓存（MySQL 8 移除，5.7 建议关闭）</li>
<li>解析器/分析器</li>
<li>优化器/查询优化器</li>
<li>执行器</li>
</ol>
</li>
</ol>
</li>
<li>
<p>存储引擎层</p>
<ol>
<li>
<p>引擎层</p>
<p>可插拔存储引擎</p>
<p>实现：内存、索引和存储管理</p>
</li>
<li>
<p>存储层</p>
<ul>
<li>系统文件</li>
<li>文件和日志</li>
</ul>
</li>
</ol>
</li>
</ul>`,r:{minutes:2.4,words:719},t:"体系结构",y:"a"}}],["/cs/database/mysql/engine/2.%20%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E.html",{loader:()=>l(()=>import("./2. 存储引擎.html-7_WR4jfS.js"),__vite__mapDeps([466,1])),meta:{d:1680752829e3,e:`
<h2>InnoDB</h2>
<p>兼顾高可靠性和高性能的通用存储引擎</p>
<p>MySQL5.5 后默认 InnoDB</p>
<h3>特点</h3>
<ol>
<li>DML 操作遵循 ACID，支持事务</li>
<li>行级锁，提高并发访问性能</li>
<li>支持外键 foreign key 约束，保证数据的完整性和正确性</li>
</ol>
<h3>文件</h3>
<ul>
<li>
<p><code>.frm</code>: <strong>表结构</strong>会保存在这个文件。在 MySQL 中建立一张表都会生成一个.frm 文件，该文件是用来保存每个表的元数据信息的，主要包含表结构定义。</p>
</li>
<li>
<p><code>.ibd</code>: 文件名是表名，innoDB 引擎的每张表都会对应这样一个表空间文件，存储该表的表结构（frm、sdi）、数据和索引</p>
<p>ibd 是二进制文件，无法直接打开，可以输入指令 ibd2sdi 得到可查看的 JSON</p>
</li>
</ul>`,r:{minutes:2.24,words:673},t:"Storage Engine 存储引擎",y:"a"}}],["/cs/database/mysql/index/1.%20%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84.html",{loader:()=>l(()=>import("./1. 索引结构.html-B_bYmghA.js"),__vite__mapDeps([467,1])),meta:{d:1672746435e3,e:`
<h2>索引结构分类</h2>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-07-28 20.56.58.png" alt="截屏2022-07-28 20.56.58" loading="lazy"></p>
<p>支持情况</p>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-07-28 20.57.23.png" alt="截屏2022-07-28 20.57.23" loading="lazy"></p>`,r:{minutes:3.91,words:1174},t:"索引结构",y:"a"}}],["/cs/database/mysql/index/2.%20%E7%B4%A2%E5%BC%95%E5%88%86%E7%B1%BB.html",{loader:()=>l(()=>import("./2. 索引分类.html-BQpH0Ok8.js"),__vite__mapDeps([468,1])),meta:{d:1672746435e3,e:`
<h3>按「数据结构」分类</h3>
<p><strong>B+tree 索引、Hash 索引、Full-text 索引</strong>。</p>
<ul>
<li>BTree 索引：MySQL 里默认和最常用的索引类型。只有叶子节点存储 value，非叶子节点只有指针和 key。存储引擎 MyISAM 和 InnoDB 实现 BTree 索引都是使用 B+Tree，但二者实现方式不一样（前面已经介绍了）。</li>
<li>Hash 哈希索引：类似键值对的形式，一次即可定位。一般使用 Redis代替</li>
<li>RTree 索引：一般不会使用，仅支持 geometry 数据类型，优势在于范围查找，效率较低，通常使用搜索引擎如 ElasticSearch 代替。</li>
<li>Full-Text 全文索引：对文本的内容进行分词，进行搜索。目前只有 <code>CHAR</code>、<code>VARCHAR</code> ，<code>TEXT</code> 列上可以创建全文索引。一般不会使用，效率较低，通常使用搜索引擎如 ElasticSearch 代替。</li>
</ul>`,r:{minutes:1.93,words:578},t:"索引分类",y:"a"}}],["/cs/database/mysql/index/3.%20%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90.html",{loader:()=>l(()=>import("./3. 性能分析.html-CLs_KTMo.js"),__vite__mapDeps([469,1])),meta:{d:1672746435e3,e:`
<p>索引优化</p>
<h2>常用分析</h2>
<h3>SQL 执行频率</h3>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">show </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[global | session]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> status</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> like</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'Com_______'</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:9.76,words:2927},t:"性能分析",y:"a"}}],["/cs/database/mysql/index/4.%20%E4%BD%BF%E7%94%A8%E8%A7%84%E5%88%99.html",{loader:()=>l(()=>import("./4. 使用规则.html-BO0LPYVH.js"),__vite__mapDeps([470,1])),meta:{d:1672746435e3,e:`
<h2>最左前缀法则</h2>
<p>联合索引，要遵守最左前缀法则。最左前缀法则指的是查询从索引的最左列开始，并且不跳过索引中的列。如果跳跃某一列，索引将部分失效(后面的字段索引失效)。</p>
<p>最左前缀匹配原则指的是，在使用<strong>联合索引</strong>时，<strong>MySQL</strong> 会根据联合索引中的字段顺序，从左到右依次到查询条件中去匹配，如果查询条件中存在与联合索引中最左侧字段相匹配的字段，则就会使用该字段过滤一批数据，直至联合索引中全部字段匹配完成，或者在执行过程中遇到范围查询（如 <strong><code>&gt;</code></strong>、<strong><code>&lt;</code></strong>）才会停止匹配。对于 <strong><code>&gt;=</code></strong>、<strong><code>&lt;=</code></strong>、<strong><code>BETWEEN</code></strong>、<strong><code>like</code></strong> 前缀匹配的范围查询，并不会停止匹配。所以，我们在使用联合索引时，可以将区分度高的字段放在最左边，这也可以过滤更多数据。</p>`,r:{minutes:12.32,words:3696},t:"使用原则",y:"a"}}],["/cs/database/mysql/index/",{loader:()=>l(()=>import("./index.html-BCB5_haj.js"),__vite__mapDeps([471,1])),meta:{d:1672746435e3,e:`
<p>索引：<strong>用于快速查询和检索数据的数据结构，其本质可以看成是一种排序好的数据结构。</strong></p>
<h3>B 树 &amp; B+树</h3>
<p>B 树也称 B-树,全称为 <strong>多路平衡查找树</strong> ，B+ 树是 B 树的一种变体。B 树和 B+树中的 B 是 <code>Balanced</code> （平衡）的意思。</p>
<p>目前大部分数据库系统及文件系统都采用 B-Tree 或其变种 B+Tree 作为索引结构。</p>
<p><strong>B 树&amp; B+树两者有何异同呢？</strong></p>
<ul>
<li>B 树的所有节点既存放键(key) 也存放 数据(data)，而 B+树只有叶子节点存放 key 和 data，其他内节点只存放 key。</li>
<li>B 树的叶子节点都是独立的;B+树的叶子节点有一条引用链指向与它相邻的叶子节点。</li>
<li>B 树的检索的过程相当于对范围内的每个节点的关键字做二分查找，可能还没有到达叶子节点，检索就结束了。而 B+树的检索效率就很稳定了，任何查找都是从根节点到叶子节点的过程，叶子节点的顺序检索很明显。</li>
</ul>`,r:{minutes:5.09,words:1528},t:"索引",y:"a"}}],["/cs/database/mysql/lock/1.%20%E5%85%A8%E5%B1%80%E9%94%81.html",{loader:()=>l(()=>import("./1. 全局锁.html-BqncF1O0.js"),__vite__mapDeps([472,1])),meta:{d:1672647518e3,e:`
<p>对整个数据库实例加锁，加锁以后整个实例处于只读状态，后续的 DML 写操作、DDL 语句，以及更新操作的事物提交语句都将被阻塞。</p>
<p>典型使用场景：全库的逻辑备份，对所有表进行锁定，从而获取一致性视图，保证数据的完整性。</p>
<h2>语法</h2>
<p>加锁语句：</p>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">flush tables </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">with</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> lock;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:1.85,words:554},t:"全局锁",y:"a"}}],["/cs/database/mysql/lock/2.%20%E8%A1%A8%E7%BA%A7%E9%94%81.html",{loader:()=>l(()=>import("./2. 表级锁.html-228BSZ1O.js"),__vite__mapDeps([473,1])),meta:{d:1672647518e3,e:`
<p>每次操作锁住整张表。锁定粒度大，发生锁冲突的概率最高，并发度最低。应用在 MyISAM、InnoDB、BDB。</p>
<p>对于表级锁，主要分为以下三类：</p>
<ul>
<li>表锁 Table Lock</li>
<li>元数据锁 MDL</li>
<li>意向锁 IL</li>
<li>自增锁 AUTO-INC</li>
</ul>
<h3>表锁</h3>
<p>对于表锁，分为两类：</p>
<ol>
<li>
<p>表共享读锁（read lock）（S）</p>
<p>加锁以后可以自己读，但是不可以写（会拒绝执行）</p>
<p>不会阻塞其他客户端的读，会阻塞其他客户端的写</p>
</li>
<li>
<p>表独占写锁（write lock）（X）</p>
<p>加锁以后自己可以读写</p>
<p>但是会阻塞别的客户端的读写</p>
</li>
</ol>`,r:{minutes:5.5,words:1649},t:"表级锁",y:"a"}}],["/cs/database/mysql/lock/3.%20%E8%A1%8C%E7%BA%A7%E9%94%81.html",{loader:()=>l(()=>import("./3. 行级锁.html-mDGP3hDm.js"),__vite__mapDeps([474,1])),meta:{d:1669446166e3,e:`
<p>操作锁住对应的行数据，锁定粒度最小，发生锁冲突的概率最低</p>
<p>在 Innodb 存储引擎中，会用一个特殊的记录来标识最后一条记录，该特殊的记录的名字叫 supremum pseudo-record ，</p>
<p>查看目前加的锁:</p>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> object_schema, object_name, index_name, lock_type, lock_mode, lock_data </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> performance_schema</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">data_locks</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> performance_schema</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">data_locks</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:11.89,words:3568},t:"行级锁",y:"a"}}],["/cs/database/mysql/lock/",{loader:()=>l(()=>import("./index.html--8UuwscL.js"),__vite__mapDeps([475,1])),meta:{d:1672647518e3,e:`
<p>保证数据并发访问一致性、有效性</p>
<p>锁冲突也是数据库并发访问性能的一个重要因素</p>
<p>按照粒度分，主要分为三类：</p>
<ol>
<li>全局锁：</li>
<li>表级锁：</li>
<li>行级锁：</li>
</ol>
<p>问题：</p>
<p>死锁</p>
`,r:{minutes:.21,words:63},t:"锁",y:"a"}}],["/cs/database/mysql/log/",{loader:()=>l(()=>import("./index.html-D8pNhg8J.js"),__vite__mapDeps([476,1])),meta:{d:1679321449e3,e:`
<p><code>MySQL</code> 日志主要包括：</p>
<ul>
<li>
<p>事务日志</p>
<ul>
<li>回滚 undo log</li>
<li>重做 redo log</li>
</ul>
</li>
<li>
<p>归档日志 bin log</p>
</li>
<li>
<p>中继日志 relay log</p>
</li>
<li>
<p>错误日志、</p>
</li>
<li>
<p>查询日志、</p>
</li>
<li>
<p>慢查询日志、</p>
</li>
</ul>
<p>其中，比较重要的还要属二进制日志 <code>binlog</code>（归档日志）和事务日志 <code>redo log</code>（重做日志）和 <code>undo log</code>（回滚日志）。</p>`,r:{minutes:16.14,words:4843},t:"日志",y:"a"}}],["/cs/database/mysql/memory/Buffer%20Pool.html",{loader:()=>l(()=>import("./Buffer Pool.html-ChXei7XF.js"),__vite__mapDeps([477,1])),meta:{d:1680090419e3,e:`
`,r:{minutes:.01,words:2},t:"Buffer pool",y:"a"}}],["/cs/database/mysql/transaction/1.%20ACID.html",{loader:()=>l(()=>import("./1. ACID.html-CaDAbwTf.js"),__vite__mapDeps([478,1])),meta:{d:1672647518e3,e:`
<h2>四大特性</h2>
<ul>
<li>
<p>原子性（Ato'micity）</p>
<p>事务是不可分割的最小操作单元，要么全部成功，要么全部失败（并回滚）。</p>
</li>
<li>
<p>一致性（Con'sistency）</p>
<p>事务完成时，必须使所有的数据都保持一致状态。</p>
</li>
<li>
<p>隔离性（Isolation）</p>
<p>数据库系统提供的隔离机制（隔离级别），保证事务在不受外部并发操作影响的独立环境下运行。</p>
</li>
<li>
<p>持久性（Dura'bility）</p>
<p>事务一旦<strong>提交或回滚</strong>，他对数据库中数据的改变就是永久的。</p>
</li>
</ul>`,r:{minutes:1.07,words:320},t:"事务特性：ACID",y:"a"}}],["/cs/database/mysql/transaction/2.%20%E5%B9%B6%E5%8F%91%E9%97%AE%E9%A2%98.html",{loader:()=>l(()=>import("./2. 并发问题.html-D9Ju8Ylz.js"),__vite__mapDeps([479,1])),meta:{d:1672647518e3,e:`
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/20210615102505266.jpg" alt="问题与隔离级别" loading="lazy"></p>
<h3>脏读</h3>
<p>定义：一个事务读到另一个事务<strong>还没有提交</strong>的数据。</p>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-03 12.19.43.png" alt="截屏2023-01-03 12.19.43" loading="lazy"></p>`,r:{minutes:1.83,words:549},t:"并发问题",y:"a"}}],["/cs/database/mysql/transaction/3.%20%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.html",{loader:()=>l(()=>import("./3. 隔离级别.html-CHpsD2S5.js"),__vite__mapDeps([480,1])),meta:{d:1672647518e3,e:`
<p>目的：解决并发事务问题</p>
<p>事务隔离级别</p>
<ul>
<li>
<p>RU：事务提交前，就可被其他事务读取到</p>
</li>
<li>
<p>RC：事务提交后，才能被其他事务读取到</p>
</li>
<li>
<p>RR：解决不可重复读问题</p>
<p>InnoDB 在 RR 下利用 Read View 和锁很大程度上解决了幻读问题</p>
</li>
<li>
<p>Serializable：</p>
<p>Serialized 把幻读解决了，但是效率低</p>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-03-04 12.49.05.png" alt="截屏2023-03-04 12.49.05" loading="lazy"></p>`,r:{minutes:1.99,words:596},t:"隔离级别",y:"a"}}],["/cs/database/mysql/transaction/4.%20%E4%BC%A0%E6%92%AD%E6%9C%BA%E5%88%B6.html",{loader:()=>l(()=>import("./4. 传播机制.html-a1kc1ueb.js"),__vite__mapDeps([481,1])),meta:{d:1680752829e3,e:`
<p>事务的传播行为：事务传播行为用来描述由某一个事务传播行为修饰的方法被嵌套进另一个方法的时事务如何传播。</p>
<p>分类：</p>
<ul>
<li>PROPAGATION_REQUIRED 表示当前方法必须在一个具有事务的上下文中运行,如有客户端有事务在进行，那么被调用端将在该事务中运行，否则的话重新开启一个事务。( 如果被调用端发生异常,那么调用端和被调用端事务都将回滚)</li>
<li>PROPAGATION_SUPPORTS 表示当前方法不必需要具有一个事务上下文,但是如果有一个事务的话,它也可以在这个事务中运行</li>
<li>PROPAGATION_MANDATORY 表示当前方法必须在一个事务中运行，如果没有事务，将抛出异常</li>
<li>PROPAGATION_REQUIRES_NEW 总是开启一个新的事务。如果一个事务已经存在，则将这个存在的事务挂起。</li>
<li>PROPAGATION_NOT_SUPPORTED 总是非事务地执行，并挂起任何存在的事务。</li>
<li>PROPAGATION_NEVER 总是非事务地执行，如果存在一个活动事务，则抛出异常</li>
<li>PROPAGATION_NESTED 表示如果当前方法正有一个事务在运行中,则该方法应该运行在一个嵌套事务中 ,被嵌套的事务可以独立于被封装的事务中进行提交或者回滚。如果封装事务存在,并且外层事务抛出异常回滚，那么内层事务必须回滚,反之,内层事务并不影响外层事务。如果封装事务不存在,则同 propagation. required 的一样</li>
</ul>`,r:{minutes:1.36,words:408},t:"传播机制",y:"a"}}],["/cs/database/mysql/transaction/",{loader:()=>l(()=>import("./index.html-Bs3tLvyb.js"),__vite__mapDeps([482,1])),meta:{d:1672746435e3,e:`
<h3>事务定义</h3>
<p>事务是一组操作的集合，它是一个不可分割的工作单位，事务会把所有的操作作为一个整体一起向系统提交或撤销操作请求，即这些操作要么同时成功，要么同时失败。</p>
<p>默认 MySQL 的事务是自动提交的，也就是说，当执行一条 DML 语句，MySQL 会立即隐式的提交事务。</p>
<h2>事务操作</h2>
<h3>方法一</h3>
<p>取消自动提交</p>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @@autocommit </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 写操作</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 操作</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 提交事务</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">commit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 如果异常，则不要执行commit，要回滚事务</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">rollback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3,words:899},t:"事务",y:"a"}}],["/cs/database/redis/availability/",{loader:()=>l(()=>import("./index.html-IH4809lT.js"),__vite__mapDeps([483,1])),meta:{d:1677504602e3,e:`
<p>高可用</p>
<h2>单点 Redis 的问题</h2>
<h3>数据丢失问题</h3>
<p>=&gt; Redis 数据持久化</p>
<h3>并发能力问题</h3>
<p>=&gt; 搭建主从集群，实现读写分离（不然写的时候互斥，影响并发性能）</p>
<h3>故障恢复问题</h3>
<p>=&gt; 利用 Redis 哨兵，实现健康检测和自动恢复</p>
<h3>存储能力问题</h3>
<p>=&gt; 搭建分片集群，利用插槽机制实现动态扩容</p>
<p>单机 Redis 的单 key 访问量过大（比如100万），有什么解决方案吗？（不能做集群）</p>
<p>大访问量肯定本地缓存最实用</p>`,r:{minutes:.49,words:148},t:"Availability",y:"a"}}],["/cs/database/redis/availability/cluster.html",{loader:()=>l(()=>import("./cluster.html-CAg2itYH.js"),__vite__mapDeps([484,1])),meta:{d:1684318252e3,e:`
<p>Redis Cluster 通过分片（Sharding） 来进行数据管理，提供 主从复制（Master-Slave Replication）、故障转移（Failover） 等开箱即用的功能，可以非常方便地帮助我们解决 Redis 大数据量缓存以及 Redis 服务高可用的问题。</p>
<p>虽说 Redis Cluster 可以扩展到 1000 个节点，但强烈不推荐这样做，应尽量避免集群中的节点过多。这是因为 Redis Cluster 中的各个节点基于 Gossip 协议 来进行通信共享信息，当节点过多时，Gossip 协议的效率会显著下降，通信成本剧增。</p>
<p>节点建议最多1000个节点</p>`,r:{minutes:5.88,words:1764},t:"Cluster：数据分片",y:"a"}}],["/cs/database/redis/availability/multi-level.html",{loader:()=>l(()=>import("./multi-level.html-Ynfb8bdK.js"),__vite__mapDeps([485,1])),meta:{d:1715153702e3,e:`
<ol>
<li>一级缓存：Caffeine是一个一个高性能的 Java 缓存库；使用 Window TinyLfu 回收策略，提供了一个近乎最佳的命中率。</li>
<li>二级缓存：Redis 是一高性能、高可用的 key-value 数据库，支持多种数据类型，支持集群，和应用服务器分开部署易于横向扩展。</li>
</ol>
<p>in-memory cache</p>
<p>日常开发中，基本上每个项目中都会使用到Redis、MongoDB等缓存中间件，它能够很好的作为分布式缓存组件提供多个服务间的缓存，但是还是需要网络开销，增加时耗。</p>
<p>除了分布式缓存，其实还有一种缓存 - 本地缓存：直接从本地内存中读取，没有网络开销，在某些场景比远程缓存更合适。Guava cache、ehcache、Caffeine是目前比较流行的本地缓存组件，但Caffeine号称是本地缓存绝对的王者。</p>`,r:{minutes:2.82,words:845},t:"多级缓存",y:"a"}}],["/cs/database/redis/availability/replication.html",{loader:()=>l(()=>import("./replication.html-YmO1nn76.js"),__vite__mapDeps([486,1])),meta:{d:1684318252e3,e:`
<p>主从复制、读写分离</p>
<h2>是什么</h2>
<p>主负责写，从负责读</p>
<p>redis 读多写少，所以这样比较有效</p>
<p>就是主从复制，master以写为主，Slave以读为主</p>
<p>当master数据变化的时候，自动将新的数据异步同步到其它slave数据库</p>
<h2>能干嘛</h2>
<ul>
<li>读写分离</li>
<li>容灾恢复</li>
<li>数据备份</li>
<li>水平扩容支持高并发</li>
</ul>
<h2>使用</h2>
<p>配从库不配主库</p>
<p>权限细节，重要</p>
<p>基本操作命令</p>
<h3>命令</h3>`,r:{minutes:3.96,words:1188},t:"Replication 主从复制",y:"a"}}],["/cs/database/redis/availability/sentinel.html",{loader:()=>l(()=>import("./sentinel.html-Dw5cheJ_.js"),__vite__mapDeps([487,1])),meta:{d:1684318252e3,e:`
<p>哨兵：自动故障转移 Failover</p>
<p>主从+哨兵现在少用了，一般就是直接上集群</p>
<h2>是什么</h2>
<p>吹哨人巡查监控后台 master 主机是否故障，如果故障了根据投票数自动将某一个从库转换为新主库，继续对外服务</p>
<p>无人值守的运维机制</p>
<h2>干什么</h2>
<ul>
<li>主从监控：监控主从 redis 库运行是否正常</li>
<li>消息通知：哨兵可以将故障转移的结果发送给客户端</li>
<li>故障转移：如果 Master 异常，则会进行主从切换，将其中一个 Slave 作为新 Master</li>
<li>配置中心：客户端通过连接哨兵来获得当前 Redis 服务的主节点地址</li>
</ul>`,r:{minutes:3.55,words:1064},t:"Sentinel 故障转移",y:"a"}}],["/cs/database/redis/clients/",{loader:()=>l(()=>import("./index.html-CmV8XhKz.js"),__vite__mapDeps([488,1])),meta:{d:1669996395e3,e:`
<p>Java 客户端</p>
<ul>
<li>Jedis</li>
<li>lettuce</li>
<li>Redisson</li>
<li>Spring Data Redis</li>
</ul>
<p>Jedis</p>
<p>以 Redis 命令作为方法名称，学习成本低，简单实用。但是Jedis实例是线程不安全的，多线程环境下需要基于连接池来使用</p>
<p>lettuce</p>
<p>基于Netty实现的，支持同步、异步和响应式编程方式，并且是线程安全的。支持Redis的哨兵模式、集群模式和管道模式，Spring官方默认的</p>
<p>Redisson</p>
<p>基于Redis实现的分布式、可伸缩的Java数据结构集合。包含了诸如Map、Queue、Lock、Semaphore、AtomicLong等强大功能</p>`,r:{minutes:.55,words:166},t:"Redis Client",y:"a"}}],["/cs/database/redis/clients/jedis.html",{loader:()=>l(()=>import("./jedis.html-DVB2DP9q.js"),__vite__mapDeps([489,1])),meta:{d:1669996395e3,e:`
<p>连接池</p>
<p>操作与redis指令一致</p>
<p>jedis.hset等</p>
`,r:{minutes:.06,words:17},t:"Jedis 客户端",y:"a"}}],["/cs/database/redis/clients/spring-data-redis.html",{loader:()=>l(()=>import("./spring-data-redis.html-CS8ZBAOG.js"),__vite__mapDeps([490,1])),meta:{d:1669996395e3,e:`
<p>操作API分组</p>
<ul>
<li>opsForValue</li>
<li>opsForHash</li>
<li>opsForList</li>
<li>opsForSet</li>
<li>opsForZSet</li>
</ul>
<h3>引入依赖</h3>
<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">spring-data-redis</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">common-pool2</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.43,words:128},t:"Spring Data Redis",y:"a"}}],["/cs/database/redis/commands/generic.html",{loader:()=>l(()=>import("./generic.html-YinTEA_C.js"),__vite__mapDeps([491,1])),meta:{d:1669794167e3,e:`
<h2>键操作</h2>
<ul>
<li><code>KEYS</code> 查询符合模板的 key，不建议在生成环境设备上使用</li>
<li><code>DEL</code> 删除 key</li>
<li><code>UNLINK</code> 删除 key，不会阻塞客户端，Redis 4.0 之后才有的命令</li>
<li><code>EXISTS</code> 判断 key 是否存在</li>
<li><code>EXPIRE</code> 给 key 设置有效期，有效期到期时该 key 会被自动删除</li>
<li><code>TTL</code> ：查看一个 KEY 的剩余有效期
<ul>
<li>-1：永久有效</li>
<li>-2：过期了</li>
</ul>
</li>
</ul>`,r:{minutes:.47,words:141},t:"通用命令",y:"a"}}],["/cs/database/redis/commands/hash.html",{loader:()=>l(()=>import("./hash.html-CknuBD9z.js"),__vite__mapDeps([492,1])),meta:{d:1669794167e3,e:`
<ul>
<li>
<p><code>hset</code> 设置 key 的一个或多个 field</p>
</li>
<li>
<p><code>hget</code> 获取 key 的一个 field</p>
</li>
<li>
<p><code>hmset</code> 设置 key 的一个或多个 field</p>
<blockquote>
<p>hmset 已经废弃了，可以直接用 hset 设置多组键值对了</p>
</blockquote>
</li>
<li>
<p><code>hmget</code> 获取 key 的一个或多个 field</p>
</li>
<li>
<p><code>hgetall</code> 获取所有键值对</p>
</li>
<li>
<p><code>hkeys</code> 获取所有键</p>
</li>
<li>
<p><code>hvals</code> 获取所有值</p>
</li>
<li>
<p><code>hincrby</code> 让 key 的一个 field 自增</p>
</li>
<li>
<p><code>hsetnx</code> 设置 key 的一个 field，如果 field 已经存在，则不设置</p>
</li>
</ul>`,r:{minutes:.37,words:112},t:"Hash 类型",y:"a"}}],["/cs/database/redis/commands/list.html",{loader:()=>l(()=>import("./list.html-Bc_fMrra.js"),__vite__mapDeps([493,1])),meta:{d:1669996395e3,e:`
<p>类似 LinkedList，可以看做一个双向链表</p>
<p>特征：</p>
<ul>
<li>有序</li>
<li>元素可以重复</li>
<li>插入和删除快</li>
<li>查询速度一般</li>
</ul>
<p>常用来存储一个有序数据，例如：朋友圈点赞列表，评论列表等。</p>
<h2>常见命令</h2>
<ul>
<li><code>lpush</code> 向列表左侧插入一个或多个元素</li>
<li><code>lpop</code> 移除并返回列表左侧的第一个</li>
<li><code>rpush</code> 向列表右侧插入一个或多个元素</li>
<li><code>rpop</code> 移除并返回列表右侧的第一个元素</li>
<li><code>Lrange</code> key start end</li>
<li><code>BLPOP</code> 会阻塞指定时间，等到有元素了再 pop</li>
<li><code>BRPOP</code> 会阻塞指定时间</li>
</ul>`,r:{minutes:.77,words:230},t:"List 类型",y:"a"}}],["/cs/database/redis/commands/set.html",{loader:()=>l(()=>import("./set.html-B2w09YPx.js"),__vite__mapDeps([494,1])),meta:{d:1669996395e3,e:`
<p>与 Java 中的 HashSet 类似，可以认为是 value 为 null 的 HashMap</p>
<h2>常见命令</h2>
<ul>
<li><code>sadd</code> 向 set 中添加一个或多个元素</li>
<li><code>srem</code> 移除 set 中的指定元素</li>
<li><code>scard</code> 返回 set 中元素个数</li>
<li><code>sismember</code> 判断一个元素是否存在 set 中</li>
<li><code>smembers</code> 获取 set 中的所有元素</li>
<li><code>sinter</code> 交集</li>
<li><code>sdiff</code> 差集</li>
<li><code>sunion</code> 并集</li>
</ul>`,r:{minutes:.29,words:88},t:"Set 类型",y:"a"}}],["/cs/database/redis/commands/sorted-set.html",{loader:()=>l(()=>import("./sorted-set.html-Z1mrNOCh.js"),__vite__mapDeps([495,1])),meta:{d:1669996395e3,e:`
<p>有序，类似 Java TreeSet ，不过 Java 是红黑树实现，这里的是跳表+Hash</p>
<p>每一个元素带有一个 score</p>
<p>特性：</p>
<ul>
<li>可排序</li>
<li>元素不重复</li>
<li>查询速度快</li>
</ul>
<p>因为 SortedSet 的可排序特征，经常被用来实现排行榜这样的功能。</p>
<h2>常见命令</h2>
<ul>
<li>
<p><code>zadd</code> 增</p>
</li>
<li>
<p><code>zrem</code> 删</p>
</li>
<li>
<p><code>zscore</code> 获取指定元素的 score 值</p>
</li>
<li>
<p><code>zrank</code> 获取指定元素的排名</p>
</li>
<li>
<p><code>zcard</code> 获取元素个数</p>
</li>
<li>
<p><code>zcount</code> 指定范围内元素个数</p>
</li>
<li>
<p><code>zincrby</code> 让指定元素的分值自增</p>
</li>
<li>
<p><code>zrange</code> key min max 按照 score 升序排序后，获取指定排名范围内的元素</p>
</li>
<li>
<p><code>zrevrange</code> key min max 按照 score 降序排序后，获取指定排名范围内的元素</p>
</li>
<li>
<p><code>zrangebyscore</code> key min max 按照 score 排序后，获取指定 score 范围内的元素</p>
</li>
<li>
<p><code>zdiff</code> , zinter, zunion 求差集、交集、并集</p>
</li>
</ul>`,r:{minutes:.69,words:208},t:"Sorted Set",y:"a"}}],["/cs/database/redis/commands/string.html",{loader:()=>l(()=>import("./string.html-UrZSZxxG.js"),__vite__mapDeps([496,1])),meta:{d:1669794167e3,e:`
<p>三种格式：</p>
<ul>
<li>字符</li>
<li>整型</li>
<li>浮点</li>
</ul>
<h2>常见命令</h2>
<ul>
<li>
<p><code>set</code></p>
</li>
<li>
<p><code>get</code></p>
</li>
<li>
<p><code>mset</code></p>
</li>
<li>
<p><code>mget</code></p>
</li>
<li>
<p><code>incr</code> 让整型的 key 自增 1</p>
</li>
<li>
<p><code>incrby</code> 让整型的 key 自增指定步长</p>
</li>
<li>
<p><code>incrbyfloat</code> 让浮点型的 key 自增指定步长</p>
</li>
<li>
<p><code>setnx</code> 设置 key，当 key 不存在时</p>
</li>
<li>
<p><code>setex</code> 设置 key 的有效期</p>
</li>
</ul>`,r:{minutes:.24,words:73},t:"String 类型",y:"a"}}],["/cs/database/redis/feature/feature.html",{loader:()=>l(()=>import("./feature.html-Bk8C2e49.js"),__vite__mapDeps([497,1])),meta:{d:1684318252e3,e:`
<h2>Redis 7</h2>
<ul>
<li>
<p>Redis Function</p>
<p>用来部分取代 lua 脚本</p>
<p>EVALSHA<br>
更低开销<br>
RDB,AOF均可持久化支持自动加载<br>
主从切换不丢失</p>
</li>
<li>
<p>Client-eviction</p>
</li>
<li>
<p>Multi-part AOF</p>
<p>变成三个文件</p>
</li>
<li>
<p>ACL</p>
</li>
<li>
<p>listpack 替代 ziplist</p>
</li>
<li>
<p>底层性能优化</p>
</li>
</ul>`,r:{minutes:.21,words:63},t:"新特性",y:"a"}}],["/cs/database/redis/persistency/AOF.html",{loader:()=>l(()=>import("./AOF.html-C6hqM3Zq.js"),__vite__mapDeps([498,1])),meta:{d:1677504602e3,e:`
<p>Append Only File (追加文件）。</p>
<h2>特点</h2>
<h3>写后日志</h3>
<p>说到日志，数据库的 redo log 写前日志（Write Ahead Log, WAL），也就是说，在实际写数据前，先把修改的数据记到日志文件中，以便故障时进行恢复。</p>
<p>不过，AOF 日志正好相反，它是写后日志，“写后”的意思是 Redis 是先执行命令，把数据写入内存，然后才记录日志，如下图所示：</p>
<p>那 AOF 为什么要先执行命令再记日志呢？要回答这个问题，我们要先知道 AOF 里记录了什么内容。</p>
<ul>
<li>可以避免出现记录错误命令的情况，避免额外的检查开销。</li>
<li>它是在命令执行后才记录日志，所以不会阻塞当前的写操作。</li>
</ul>`,r:{minutes:3.29,words:986},t:"AOF",y:"a"}}],["/cs/database/redis/persistency/RDB.html",{loader:()=>l(()=>import("./RDB.html-jxXEFzbz.js"),__vite__mapDeps([499,1])),meta:{d:1677504602e3,e:`
<p>Rediscover Database Backup file，数据备份文件，数据快照。</p>
<h3>使用方式</h3>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">redis-cli</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">save</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 主进程执行RDB，阻塞所有命令，停机时实际上会自动执行一次，一般是宕机时使用</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">bgsave</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 子进程执行RDB，避免主进程受到影响</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.97,words:591},t:"RDB",y:"a"}}],["/cs/database/redis/persistency/",{loader:()=>l(()=>import("./index.html-KrfI6r9e.js"),__vite__mapDeps([500,1])),meta:{d:1677504602e3,e:`
<p>持久化策略</p>
<p>RDB 通过 <code>bgsvae</code> 子进程来做。</p>
<p>使用缓存的时候，我们经常需要对内存中的数据进行持久化也就是将内存中的数据写入到硬盘中。大部分原因是为了之后重用数据（比如重启机器、机器故障之后恢复数据），或者是为了做数据同步（比如集群的主从节点通过 RDB 文件同步数据）。</p>
<p>Redis 不同于 Memcached 的很重要一点就是，Redis 支持持久化，支持 3 种方式:</p>
<ul>
<li>
<p>快照（snapshotting，RDB）</p>
</li>
<li>
<p>只追加文件（append-only file, AOF）</p>
</li>
<li>
<p>RDB 和 AOF 的混合持久化（Redis 4.0 新增）</p>
<p>由于 RDB 和 AOF 各有优势，Redis 4.0 开始支持 RDB 和 AOF 的混合持久化（默认关闭，可以通过配置项 <code>aof-use-rdb-preamble</code> 开启）。</p>
<p>混合持久化：AOF 重写的时候就直接把 RDB 的内容写到 AOF 文件开头。</p>
<p>好处：可以结合 RDB 和 AOF 的优点, 快速加载同时避免丢失过多的数据。</p>
<p>缺点： AOF 里面的 RDB 部分是压缩格式不再是 AOF 格式，可读性较差。</p>
</li>
</ul>`,r:{minutes:3.2,words:960},t:"Persistency",y:"a"}}],["/cs/database/sql/basic/",{loader:()=>l(()=>import("./index.html-wvYLzyUH.js"),__vite__mapDeps([501,1])),meta:{d:1715153702e3,e:`
<p>变量声明</p>
<h2>空表</h2>
<p>无合适答案（空表）的时候，返回null的方法</p>
<p>需要嵌套子查询</p>
<h3>空表格</h3>
<p>空表示表格没有任何输出，null表示输出为null</p>
<table>
<thead>
<tr>
<th>入口</th>
<th>空表格</th>
</tr>
</thead>
<tbody>
<tr>
<td>SELECT</td>
<td>null</td>
</tr>
<tr>
<td>FROM</td>
<td>空</td>
</tr>
<tr>
<td>LIMIT</td>
<td>空</td>
</tr>
<tr>
<td>SUM</td>
<td>null</td>
</tr>
<tr>
<td>AVG</td>
<td>null</td>
</tr>
<tr>
<td>MAX</td>
<td>null</td>
</tr>
<tr>
<td>MIN</td>
<td>null</td>
</tr>
<tr>
<td>COUNT</td>
<td>0</td>
</tr>
<tr>
<td>IFNULL</td>
<td>空</td>
</tr>
<tr>
<td>窗口</td>
<td>null</td>
</tr>
</tbody>
</table>`,r:{minutes:.26,words:78},t:"语法",y:"a"}}],["/cs/database/sql/basic/branch.html",{loader:()=>l(()=>import("./branch.html-eWd2s4Yb.js"),__vite__mapDeps([502,1])),meta:{d:1715153702e3,e:`
<p>逻辑</p>
<ul>
<li><code>AND</code></li>
<li><code>OR</code></li>
</ul>
<h2>谓词</h2>
<p>谓词的返回值都是true, false, unknown, SQL是三值逻辑，所以有三种真值</p>
<p>查询结果只会包含WHERE子句里的判断结果为true的行！不包含判断结果为false和unknown的行。</p>
<h3>比较谓词</h3>
<p><code>&gt;,&lt;,&lt;&gt;,=,!=</code></p>
<p>BETWEEN(闭区间), LIKE, IN, IS NULL</p>
<p>谓词是一种特殊的函数，返回值是真值。</p>`,r:{minutes:1.45,words:434},t:"分支条件",y:"a"}}],["/cs/database/sql/basic/clause.html",{loader:()=>l(()=>import("./clause.html-bkBc9A_3.js"),__vite__mapDeps([503,1])),meta:{d:1715153702e3,e:`
<h3>书写顺序</h3>
<ol>
<li><code>WITH</code></li>
<li><code>SELECT</code>, <code>DISTINCT</code></li>
<li><code>FROM</code></li>
<li><code>JOIN</code>,  <code>ON</code>, <code>USING</code></li>
<li><code>WHERE</code></li>
<li><code>GROUP BY</code></li>
<li><code>HAVING</code></li>
<li><code>ORDER BY</code></li>
<li><code>LIMIT</code></li>
</ol>`,r:{minutes:1.65,words:494},t:"子句",y:"a"}}],["/cs/database/sql/basic/function.html",{loader:()=>l(()=>import("./function.html-D1v4nZP1.js"),__vite__mapDeps([504,1])),meta:{d:1679321449e3,e:`
<h2>聚合函数</h2>
<p>将一组数据通过运算返回这组数据的某种性质，如最大值，最小值。</p>
<p>没有元素的时候返回null</p>
<p><strong>聚合函数类型</strong></p>
<ul>
<li>AVG()</li>
<li>SUM()</li>
<li>MAX()</li>
<li>MIN()</li>
<li>COUNT()</li>
<li>VARIANCE() 和 STDDEV()</li>
<li>GROUP_CONCAT()</li>
</ul>
<h3>AVG()</h3>
<p>AVG(c.action = 'confirmed')</p>
<p>= sum(if(c.action = 'confirmed', 1, 0) / count(*)</p>`,r:{minutes:8.23,words:2470},t:"函数",y:"a"}}],["/cs/database/sql/basic/join.html",{loader:()=>l(()=>import("./join.html-CvSjjMUu.js"),__vite__mapDeps([505,1])),meta:{d:1679321449e3,e:`
<p>当外连接（LEFT JOIN, RIGHT JOIN和FULL JOIN）不带连接条件时，等于笛卡尔积，即<strong>交叉连接</strong>的效果。</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>关键字</th>
<th>讲解</th>
</tr>
</thead>
<tbody>
<tr>
<td>内连接</td>
<td>(INNER) JOIN</td>
<td>只有当两个表都存在满足条件的记录时才会返回行。</td>
</tr>
<tr>
<td>左(外)连接</td>
<td>LEFT (OUTER) JOIN</td>
<td>返回左表中的所有行，即使右表中没有满足条件的行也是如此。</td>
</tr>
<tr>
<td>右(外)连接</td>
<td>RIGHT (OUTER) JOIN</td>
<td>返回右表中的所有行，即使左表中没有满足条件的行也是如此。</td>
</tr>
<tr>
<td>全(外)连接</td>
<td>FULL (OUTER) JOIN</td>
<td>只要其中有一个表存在满足条件的记录，就返回行。</td>
</tr>
<tr>
<td>交叉连接</td>
<td>CROSS JOIN</td>
<td>交叉连接，从两个或者多个连接表中返回记录集的笛卡尔积。</td>
</tr>
</tbody>
</table>`,r:{minutes:3.58,words:1075},t:"连接",y:"a"}}],["/cs/database/sql/basic/set.html",{loader:()=>l(()=>import("./set.html-BvUOylLu.js"),__vite__mapDeps([506,1])),meta:{d:1684318252e3,e:`
<p>对<strong>结果集</strong>进行交并差操作</p>
<p>在 SQL 中使用 UNION 运算符时，有几点需要注意，需要确保 UNION 的每个部分都具有相同的数据类型，顺序相同，列数必须相同。</p>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/6d666f8c6c392a2b04799886422f55e7.png" alt="img" loading="lazy"></p>
<h3>INTERSECT</h3>
<p>求两个集合的交集</p>
<h3>UNION</h3>`,r:{minutes:.5,words:149},t:"集合操作",y:"a"}}],["/cs/database/sql/basic/sort.html",{loader:()=>l(()=>import("./sort.html-D8jlDBVA.js"),__vite__mapDeps([507,1])),meta:{d:1679321449e3,e:`
<p><code>order by</code>后面可以根多个字段及其升降序，默认采用升序的策略进行排序。</p>
<p>对字符串用默认的升降序排序得到的是按字典序排列的结果</p>
<h2>默认排序</h2>
<h3>升序</h3>
<p><code>order by id asc</code></p>
<h3>降序</h3>
<p><code>order by id desc</code></p>
<h2>自定排序</h2>
<p>利用<code>field()</code>函数，来指定排序顺序</p>
<p><code>order by field(column, 5, 2, 3)</code></p>`,r:{minutes:2.77,words:832},t:"排序",y:"a"}}],["/cs/database/sql/basic/subquery.html",{loader:()=>l(()=>import("./subquery.html-BA2ttiBE.js"),__vite__mapDeps([508,1])),meta:{d:1679321449e3,e:`
<p><a href="https://blog.csdn.net/qq_38643434/article/details/81490053" target="_blank" rel="noopener noreferrer">select子查询</a></p>
<p>子查询放在 select 里面，如果返回值</p>
<p>子查询的特质：子查询数据出虚表嵌套查询虚表，如果查询不到会返回null</p>
<h2>CTE</h2>
<p>WITH 语句通常被称为通用表表达式（Common Table Expressions）即 CTEs。</p>
<p>WITH 语句作为一个辅助语句依附于主语句，WITH语句和主语句都可以是SELECT，INSERT，UPDATE，DELETE中的任何一种语句。</p>`,r:{minutes:4.19,words:1256},t:"子查询",y:"a"}}],["/cs/database/sql/design/form.html",{loader:()=>l(()=>import("./form.html-Cj7GyeDg.js"),__vite__mapDeps([509,1])),meta:{d:1715153702e3,e:`
<p>数据库范式有 4 种：</p>
<ul>
<li>1NF(第一范式)：属性不可再分。</li>
<li>2NF(第二范式)：1NF 的基础之上，消除了非主属性对于码的部分函数依赖。</li>
<li>3NF(第三范式)：3NF 在 2NF 的基础之上，消除了非主属性对于码的传递函数依赖</li>
<li>BCNF</li>
</ul>
<hr>
<ul>
<li>属性：对应于表中的字段</li>
<li>主属性：在一个关系中，如果一个属性是构成某一个候选关键字（候选码）的属性集中的一个属性，则称它为主属性。</li>
</ul>
<h3>1NF</h3>
<p>属性不能再被分割，也就是这个字段只能是一个值，不能再分为多个其他的字段了。</p>`,r:{minutes:1.61,words:484},t:"Form",y:"a"}}],["/cs/database/sql/design/%E4%B9%A6%E5%86%99%E8%A7%84%E8%8C%83.html",{loader:()=>l(()=>import("./书写规范.html-DytLnazi.js"),__vite__mapDeps([510,1])),meta:{d:1694686552e3,e:`
<h2>DML</h2>
<ol>
<li>逻辑删除</li>
<li>UPDATE、DELETE 一定要有明确的 WHERE 条件，视情况使用索引。</li>
<li>INSERT 必须显式指定字段，并使用 batch 提交</li>
<li>JDBC 使用 prepared statement，尤其是敏感数据查询必须使用这个，提高性能并避免 SQL 注入</li>
</ol>
<h2>DQL</h2>
<ol>
<li>SELECT 显示指定字段名称；除配置表和小表（数据总量小于 1w）外，禁止使用<code>SELECT *</code>，建议加上 ROWNUM 限制</li>
<li>UNION ALL</li>
<li>禁止使用存储过程、试图、触发器、event、自定义函数，容易将业务逻辑与 DB 耦合在一起</li>
</ol>`,r:{minutes:.51,words:152},t:"书写规范",y:"a"}}],["/cs/database/sql/design/%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83.html",{loader:()=>l(()=>import("./命名规范.html-DKQAT4Fx.js"),__vite__mapDeps([511,1])),meta:{d:1694686552e3,e:`
<h3>表命名</h3>
<ol>
<li>最大限度 12，小写</li>
<li>英文单词与下划线组成，命名方式：<code>系统名_表功能名</code>。单词之间用下划线隔开，严禁使用中文拼音。对于单词超长的，可使用单词缩写，但是单词缩写必须能够完整表达原单词的含义。示例：<code>b2c_billrec</code>，该表的含义是 b2c 系统的单据信息表。</li>
<li>临时表命名：<code>tmp_表名缩写_yymmdd</code></li>
</ol>
<h3>字段命名</h3>
<ol>
<li>最大限度 12，小写</li>
<li>单词+下划线。敏感字段脱敏列应增加<code>_non_sent</code>后缀，命名方式：<code>字段名_non_sent</code>，敏感字段的加密列应增加<code>_encp</code>后缀，索引字段：字段名<code>_idx</code></li>
<li>需要有含义，能够表达字段的意义，使用名词，而不是动词</li>
<li>禁止使用数据库关键字作为字段名</li>
</ol>`,r:{minutes:1.12,words:335},t:"命名规范",y:"a"}}],["/cs/database/sql/design/%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83.html",{loader:()=>l(()=>import("./设计规范.html-o86nI8sp.js"),__vite__mapDeps([512,1])),meta:{d:1694686552e3,e:`
<p>保证数据规范性</p>
<h2>模型设计规范</h2>
<p>概念模型 -&gt; 逻辑模型 -&gt; 物理模型</p>
<p>将抽象需求沉淀为具体模型，完成数据建模。数据建模过程中须沉淀数据结构、数据流程图等模型定义与描述信息。其中数据流程图应完整反映数据在系统中的流动、处理与存储情况。</p>
<ul>
<li>概念模型
<ul>
<li>最高层次的数据模型</li>
<li>业务系统核心与边界</li>
<li>核心业务主体与主体间业务关系</li>
</ul>
</li>
<li>逻辑模型
<ul>
<li>概念模型进一步细化</li>
<li>业务规则概念模型具体化</li>
<li>至少遵循第三范式，描述实体属性关系</li>
</ul>
</li>
<li>物理模型
<ul>
<li>概念实体系统物理实现</li>
<li>列属性进行明确定义</li>
</ul>
</li>
</ul>`,r:{minutes:4.92,words:1475},t:"设计规范",y:"a"}}],["/cs/database/sql/optimisation/",{loader:()=>l(()=>import("./index.html-BXHOGLHr.js"),__vite__mapDeps([513,1])),meta:{d:1679578424e3,e:`
<ul>
<li>读写分离</li>
<li>冷热分离</li>
<li>分库分表</li>
<li>分页优化</li>
</ul>
<h2>选择合适的字段类型</h2>
<p>存储字节越小、占用空间就越小、性能就越好</p>
<ul>
<li>
<p>非负整数优先用unsigned int，多出一倍存储空间</p>
<p>自增ID、整型IP、年龄等</p>
</li>
<li>
<p>小数值类型优先使用TINYINT</p>
<p>比如年龄、状态表示如0/1/2、类别</p>
</li>
<li>
<p>IP地址用整数存</p>
<p>MySQL提供两个方法处理ip地址</p>
<ul>
<li>INET_ATON</li>
<li>INET_NTOA</li>
</ul>
</li>
<li>
<p>日期类型用timestamp</p>
<p>Datetime消耗空间大，且没有时区信息。</p>
</li>
<li>
<p>金融字段用decimal，避免丢失精度</p>
</li>
</ul>`,r:{minutes:2.04,words:611},t:"SQL 优化",y:"a"}}],["/cs/database/sql/optimisation/pagination.html",{loader:()=>l(()=>import("./pagination.html-CDjG-unp.js"),__vite__mapDeps([514,1])),meta:{d:1732244781e3,e:`
<h3>深度分页</h3>
<p>MySQL并不是跳过offset行，而是取offset+N行，然后返回放弃前offset行，返回N行，那当offset特别大的时候，效率就非常的低下，要么控制返回的总页数，要么对超过特定阈值的页数进行SQL改写。</p>
<p>查询偏移量过大的场景我们称为深度分页，这会导致查询性能较低，例如：</p>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"># MySQL 在无法利用索引的情况下跳过1000000条记录后，再获取10条记录</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> t_order </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">ORDER BY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">LIMIT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1000000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.1,words:1531},t:"Pagination",y:"a"}}],["/cs/database/sql/optimisation/%E5%86%B7%E7%83%AD%E5%88%86%E7%A6%BB.html",{loader:()=>l(()=>import("./冷热分离.html-CbHk_GLf.js"),__vite__mapDeps([515,1])),meta:{d:1715153702e3,e:`
<p>随着财经支付业务的快速发展，考虑到未来订单量持续增长，在线存储遇到更大的挑战，需提前做好规划。目前财经支付主要业务都是使用 Mysql（InnoDB）作为数据存储，因历史订单信息访问频率低并占用了大量数据库存储空间，期望将历史数据跟生产最新交易数据进行分离，当前数据库保留最近一段时间的数据作为热库，历史交易存入另一个数据库压缩存储作为冷库(rocksdb)，即数据库冷热分离。此举将会极大的节省数据库设备成本，减少因在线存储空间不足扩容导致停服不可用的时长，以下基于财经支付的统一交易系统现状做的相关案例分析仅供大家参考。</p>
<p><a href="https://mp.weixin.qq.com/s/ZKRkZP6rLHuTE1wvnqmAPQ" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/ZKRkZP6rLHuTE1wvnqmAPQ</a></p>`,r:{minutes:1.35,words:406},t:"冷热分离",y:"a"}}],["/cs/database/sql/optimisation/%E6%85%A2%E6%9F%A5%E8%AF%A2.html",{loader:()=>l(()=>import("./慢查询.html-C5F4Pe5Q.js"),__vite__mapDeps([516,1])),meta:{d:1684318252e3,e:`
<p>MySQL慢查询是指执行时间较长的SQL语句，它会影响数据库的性能和响应速度。为了排查和解决MySQL慢查询问题，可以采取以下步骤：</p>
<ol>
<li>
<p>开启慢查询日志：在MySQL配置文件中，可以开启慢查询日志，记录执行时间超过一定阈值的SQL语句。开启慢查询日志可以帮助我们找到执行时间较长的SQL语句。</p>
</li>
<li>
<p>分析慢查询日志：通过分析慢查询日志，可以找到执行时间较长的SQL语句，并了解其执行时间、执行次数、执行计划等信息。可以使用工具如mysqldumpslow、pt-query-digest等来分析慢查询日志。</p>
</li>
<li>
<p>优化SQL语句：通过分析慢查询日志，可以找到执行时间较长的SQL语句，并对其进行优化。例如，可以添加索引、优化查询语句、减少查询数据量等方式来优化SQL语句。</p>
</li>
<li>
<p>优化数据库配置：可以对MySQL数据库进行优化，例如调整缓存大小、调整连接数、调整线程池大小等。优化数据库配置可以提高数据库的性能和响应速度。</p>
</li>
<li>
<p>优化硬件环境：可以对服务器硬件环境进行优化，例如增加内存、增加磁盘空间、升级CPU等。优化硬件环境可以提高服务器的性能和响应速度。</p>
</li>
</ol>`,r:{minutes:1.5,words:451},t:"慢查询",y:"a"}}],["/cs/middleware/rabbitmq/design/%E8%B6%85%E6%97%B6%E5%8F%96%E6%B6%88%E8%AE%A2%E5%8D%95.html",{loader:()=>l(()=>import("./超时取消订单.html-DHzbB3Q1.js"),__vite__mapDeps([517,1])),meta:{d:1719451307e3,e:`<p><a href="https://www.bilibili.com/video/BV1mN4y1Z7t9?p=31&amp;vd_source=086ba9e7e990dd00adb3a485b6f48804" target="_blank" rel="noopener noreferrer">参考</a></p>
<p>设置30分钟后检测订单支付状态实现起来非常简单，但是存在两个问题：</p>
<ol>
<li>如果并发较高，30分钟可能维积消息过多，对MQ压力很大</li>
<li>大多数订单在下单后1分钟内就会支付，但是却需要在MQ内等待30分钟，浪费资源</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2024-05-25 下午8.21.18.png" alt="截屏2024-05-25 下午8.21.18" loading="lazy"></p>`,r:{minutes:1.28,words:384},t:"",y:"a"}}],["/cs/middleware/rabbitmq/problem/%E5%B9%82%E7%AD%89%E6%80%A7.html",{loader:()=>l(()=>import("./幂等性.html-CvvbHuxJ.js"),__vite__mapDeps([518,1])),meta:{d:1679321449e3,e:`
<p>Idempotence</p>
<p>防止消息重复消费</p>
<p>在 MQ 中，幂等性是指在消息传递过程中，无论消息被传递多少次，最终的结果都是一致的。</p>
<h3>概念</h3>
<p>用户对于同一操作发起的一次请求或者多次请求的结果是一致的，不会因为多次点击而产生了侧作用。举个最简单的例子，那就是支付，用户购买商品后支付，支付扣款成功，但是返回结果的时候网络异常，此时钱已经扣了，用户再次点击按钮，此时会进行第二次扣歌，返回结果成功，用户查询余额发现多扣钱了，流水记录也变成了两条。在以前的单应用系统中，我们只需要把数据操作放入事务中即可，发生错误立即回滚，但是再响应客户端的时候也有可能出现网络中断或者异常等等</p>`,r:{minutes:6,words:1800},t:"幂等性",y:"a"}}],["/cs/middleware/rabbitmq/problem/%E6%B6%88%E6%81%AF%E4%B8%A2%E5%A4%B1.html",{loader:()=>l(()=>import("./消息丢失.html-CnPviS2I.js"),__vite__mapDeps([519,1])),meta:{d:1679321449e3,e:`
<h2>产生原因</h2>
<p>三个阶段：消息到 MQ 的过程中搞丢，MQ 自己搞丢，MQ 到消费过程中搞丢。</p>
<ul>
<li>生产阶段：生产者弄丢了数据。生产者将数据发送到 RabbitMQ 的时候，可能数据就在半路给搞丢了，因为网络问题或服务器宕机等。</li>
<li>存储阶段：RabbitMQ 弄丢了数据。MQ 还没有持久化自己挂了</li>
<li>消费阶段：消费端弄丢了数据。刚消费到，还没处理，结果进程挂了，比如重启。</li>
</ul>
<h2>解决方案</h2>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-03-13 17.48.04.png" alt="截屏2023-03-13 17.48.04" loading="lazy"></p>`,r:{minutes:6.16,words:1847},t:"消息丢失",y:"a"}}],["/cs/middleware/rabbitmq/problem/%E6%B6%88%E6%81%AF%E7%A7%AF%E5%8E%8B.html",{loader:()=>l(()=>import("./消息积压.html-CxTb2pV3.js"),__vite__mapDeps([520,1])),meta:{d:1715153702e3,e:`
<p>MQ 消息积压问题是指在消息队列中累积了大量未处理的消息，导致消息队列中的消息积压严重，超出系统处理能力，影响系统性能和稳定性的现象。</p>
<h2>消息积压是哪个环节的问题？</h2>
<p>MQ 执行有三大阶段：</p>
<ol>
<li>消息生产阶段</li>
<li>消息存储阶段</li>
<li>消息消费阶段</li>
</ol>
<p>很显然，消息堆积是出现在第三个消息消费阶段的。</p>
<h2>解决方案</h2>
<p>消息积压问题的处理取决于消息积压的类型，例如，消息积压是突发性消息积压问题？还是缓慢持续增长的消息积压问题？不同问题的解决方案不同</p>
<h3>突发性消息积压问题</h3>`,r:{minutes:2.56,words:767},t:"消息积压",y:"a"}}],["/cs/middleware/rabbitmq/problem/%E8%A1%A5%E5%81%BF%E6%9C%BA%E5%88%B6.html",{loader:()=>l(()=>import("./补偿机制.html-DEYK89i7.js"),__vite__mapDeps([521,1])),meta:{d:1719451307e3,e:`<p>可靠性保证</p>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2024-05-25 下午7.57.34.png" alt="截屏2024-05-25 下午7.57.34" loading="lazy"></p>
`,r:{minutes:.1,words:30},t:"",y:"a"}}],["/education/bs/ai-intro/final/%E6%99%BA%E8%83%BD%E8%AE%A1%E7%AE%97%E8%AE%BA%E6%96%87.html",{loader:()=>l(()=>import("./智能计算论文.html-DL-Af_zz.js"),__vite__mapDeps([522,1])),meta:{d:1686210114e3,e:`
<p>分析现有方法的缺点</p>
<p>优势：架构不一样，但是也属于进化计算分支</p>
<p>元启发式算法 -&gt; 进化计算（进化类元启发式算法）</p>
<p>典型的有：</p>
<ul>
<li>遗传算法 GA</li>
<li>差分进化算法 DE</li>
<li>进化策略 ES</li>
<li>遗传编程 GP</li>
<li>进化编程 EP</li>
</ul>
<p>meta 元启发式算法分类</p>
<ul>
<li>
<p>进化类</p>
</li>
<li>
<p>物理/化学类</p>
</li>
<li>
<p>自然现象类</p>
<ul>
<li>蚁群算法</li>
<li>人工蜂群</li>
</ul>
</li>
<li>
<p>人类社会启发</p>
</li>
</ul>`,r:{minutes:2.03,words:610},t:"智能计算论文",y:"a"}}],["/education/bs/ai-intro/final/%E6%9C%9F%E6%9C%AB.html",{loader:()=>l(()=>import("./期末.html-BheT5fGl.js"),__vite__mapDeps([523,1])),meta:{d:1700646963e3,e:`
<p>11月5号之前，作业发到老师的邮箱（命名方式：人工智能导论+课程编号（组员姓名）的期末大作业）</p>
<p>每组不能超过5个人（一般3-5人可以）</p>
<p>找近5年之内的所有的与人工智能相关的，如语义分析等高质量的（7-8页以上的）英文论文，学习一下，翻译一下，并对论文创新点总结</p>
<p>论文复现的得分（10分）80%有论文源代码，用来拉开分数差距的</p>
<p>课程学习心得</p>
<p>论文存在问题：</p>
<p>原文要发过来</p>
<p>未来可能的改进和研究方向</p>
<p>权值：一共10分，大家去分</p>
<p>不同权值，不同分，不过不同权值分不一样（不会少太多，只会少一点）</p>`,r:{minutes:1.07,words:320},t:"期末论文",y:"a"}}],["/education/bs/ai-intro/mid/%E6%9C%9F%E4%B8%AD%E8%80%83%E8%AF%95.html",{loader:()=>l(()=>import("./期中考试.html-DUqvBZPL.js"),__vite__mapDeps([524,1])),meta:{d:1700646963e3,e:`
<p>第七周周五，七八节，小测验</p>
<p><strong>3.5和3.6</strong></p>
<p>出一个问题，用guijiefanyan去验证</p>
<p>第二个用guijiefanyan去求解</p>
<p>重点就是guijiefanyan的几个步骤</p>
<p>怎么划分子句、怎么样</p>
<p>会把相关的公式都给大家</p>
<p>用微助教，拍照上传到系统上</p>
<p>（去年是，今年不出选择判断了）</p>
<p>（大题，多写一些，分数基本上都有了）</p>
<p>和求集合运算差不多，否定的否定</p>
<p>求解问题的步骤</p>
<p>63 页</p>
<p>重点看看例题3.10和3.11</p>`,r:{minutes:1.53,words:458},t:"期中考试",y:"a"}}],["/education/bs/block-chain/final/",{loader:()=>l(()=>import("./index.html-Df2F0Bv4.js"),__vite__mapDeps([525,1])),meta:{d:1681208623e3,e:`
<p>汇报任何和区块链相关的都可以，可以是程序，可以是案例，认证数据结构，安全多方计算，共识机制，新区块链系统 P2P 网络 闪电网络、区块链相关的论文等等。</p>
<p>汇报的时间在9分钟以内。</p>
<p>汇报任何和区块链相关的都可以，可以是程序，可以是案例，认证数据结构，安全多方计算，共识机制，新区块链系统，P2P 网络，闪电网络、区块链相关的论文等等。</p>
<ol>
<li>认证数据结构</li>
</ol>
<p>认证数据结构（Authenticated Data Structures）是一种数据结构，可以在不泄露数据的情况下，对数据进行验证和修改。它可以用于保护数据的完整性和安全性，防止数据被篡改或伪造。常见的认证数据结构包括Merkle树、哈希链和哈希树等。</p>`,r:{minutes:5.8,words:1741},t:"期末",y:"a"}}],["/education/bs/block-chain/final/%E5%A4%A7%E7%BA%B2.html",{loader:()=>l(()=>import("./大纲.html-D2sSbdAo.js"),__vite__mapDeps([526,1])),meta:{d:1681208623e3,e:`
<p><a href="https://www.wwsww.cn/jishu/2081.html" target="_blank" rel="noopener noreferrer">https://www.wwsww.cn/jishu/2081.html</a></p>
<h2>区块链技术发展概览</h2>
<blockquote>
<p>这部分主要参考这篇文章：</p>
<p><a href="https://www.ccvalue.cn/article/414856.html" target="_blank" rel="noopener noreferrer">清华区块链报告：深度剖析国内外区块链最新进展 | 附报告全文 - 碳链价值 (ccvalue.cn)</a></p>
<p>三页左右即可，只是一个概述</p>
</blockquote>`,r:{minutes:12.18,words:3654},t:"区块链技术发展进展-以认证数据结构为例",y:"a"}}],["/education/bs/block-chain/final/%E8%B5%84%E6%96%99.html",{loader:()=>l(()=>import("./资料.html-BTQO74Oe.js"),__vite__mapDeps([527,1])),meta:{d:1681208623e3,e:`<p>郑晨风3.77，120名</p>
<p>张国庆3.68，140</p>
<p>郭子桓2.93，48树莓</p>
<p>目前还有第一个part需要一位同学来认领，然后另外一位同学可以视情况做一些整体善后的工作啦，或者如果两位同学</p>
<p>There are different types of authenticated data structures in blockchain, such as <strong>digital signatures</strong> and <strong>digital watermarking</strong>⁴.</p>
<p>Digital signatures are a secure form of authentication where trust can be anchored on the digital signature of both parties⁴. Digital watermarking is a form of data origin authentication that gives data source authentication without any need to access the source data⁴.</p>`,r:{minutes:2.01,words:602},t:"",y:"a"}}],["/education/bs/block-chain/lab/%E5%AE%9E%E9%AA%8C1.html",{loader:()=>l(()=>import("./实验1.html-DJN83T9d.js"),__vite__mapDeps([528,1])),meta:{d:1679578424e3,e:`
<p>关键在理解伪代码，怎么弄</p>
<p>写一个merkle tree</p>
<p>实验要求：</p>
<ol>
<li>
<p>生成一个2^n个元素的集合，要求里面没有重复元素</p>
</li>
<li>
<p>要求用数组存构建这棵树（这样简单一些）</p>
</li>
<li>
<p>hash函数选取一个，如md5或sha256、sha1</p>
<p>用库，千万不要自己实现</p>
</li>
</ol>
<p>节点三类：清节点（记录区块的头和与自己有关的节点）</p>
<h3>证明存在</h3>
<p>返回证据（以及他们所在左右）</p>
<p>自下而上构建</p>
<h3>证明不存在</h3>`,r:{minutes:1.15,words:345},t:"实验 1",y:"a"}}],["/education/bs/block-chain/lab/%E5%AE%9E%E9%AA%8C2.html",{loader:()=>l(()=>import("./实验2.html-Uyxqw2iY.js"),__vite__mapDeps([529,1])),meta:{d:1679578424e3,e:`
<p>remix 平台，NFT，比较简单</p>
<p>去年有一个配置比特币 RPC 环境，今年取消了</p>
<p>智能合约放在上面，openSea</p>
<p>建议做 NFT 实验，换了一个测试网</p>
<p>这个 neunft.sol 就是智能合约的代码</p>
<p>dox 里面有详细教程</p>
<p>需要一个 ipfs 就是把图片放到星际文件系统（去年他们做的开盲盒的内容</p>
<p>11 周周日（第一天）之前交</p>
<ul>
<li>注册这个 Metamask 火狐狸的钱包</li>
<li>用 remix 平台</li>
<li>用 mumbai 网络，以前那个有问题不要用</li>
<li>然后在 opensea 平台上就可以看到了</li>
</ul>`,r:{minutes:1.1,words:331},t:"实验 2",y:"a"}}],["/education/bs/block-chain/lab/%E5%AE%9E%E9%AA%8C3.html",{loader:()=>l(()=>import("./实验3.html-CzjRqi8z.js"),__vite__mapDeps([530,1])),meta:{d:1681208623e3,e:`
<p>第三个在remix平台找一个智能合约，看一下看懂调用一下就可以了</p>
<p>三选二</p>
`,r:{minutes:.11,words:33},t:"实验 3",y:"a"}}],["/education/bs/block-chain/quiz/%E6%B5%8B%E9%AA%8C1.html",{loader:()=>l(()=>import("./测验1.html-qiQ-jbJo.js"),__vite__mapDeps([531,1])),meta:{d:1679321449e3,e:`
<h2>对称算法非对称</h2>
<p>对称算法(Symmetric Algorithm)：加密密钥能够从解密密钥中推算出来，反之亦然(大多数对称算法加密密钥和解密 密钥相同)。又称为私钥密码、单钥密码。</p>
<ul>
<li>对称加密算法的优点是计算量小、加密速度快、加密效率高。它通常在消息发送方需要加密大量数据时使用。</li>
<li>对称加密的缺点是秘钥的安全性难以保证，需要在通信之前先同步秘钥，容易被窃听或篡改。</li>
<li>常见的对称加密算法有 DES、AES、RC4 等。</li>
</ul>
<p>非对称算法(Asymmetric Algorithm)：用作加密的密钥不同于用作解密的密钥，而且解密密钥不能根据加密密钥计算出来。又称为公钥密码、双钥密码。非对称加密使用一对秘钥，一个公开（公钥），一个保密（私钥）。 一般使用公钥进行加密，私钥进行解密，或者反过来。</p>`,r:{minutes:3.69,words:1106},t:"测验 1",y:"a"}}],["/education/bs/block-chain/quiz/%E6%B5%8B%E9%AA%8C2.html",{loader:()=>l(()=>import("./测验2.html-B8-Uxx-p.js"),__vite__mapDeps([532,1])),meta:{d:1679578424e3,e:`
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/image-20230411093414663.png" alt="image-20230411093414663" loading="lazy"></p>
<h3>选择题</h3>
<h3>论述题</h3>
<blockquote>
<p>从访问控制的角度可将区块链分成几类,分别是什么?并对比各类。</p>
</blockquote>
<p>从访问控制的角度，我们常把区块链分为公有链、联盟链和私有链：</p>
<ul>
<li>公有链(Public Blockchain)，是指所有人都可以参与的区块链，比如Bitcoin、EOS、Ethereum。</li>
<li>联盟链(Consortium Blockchair)是指只有特定组织或个人可以参与的区块链，比如联合银行间清算系统（UBS）联盟链、Fabric、R3联盟。</li>
<li>私有链(Private Blockchain)是指只有特定组织或个人可以参与的区块链，比如Multichain、Monax。</li>
</ul>`,r:{minutes:9.8,words:2939},t:"测验2",y:"a"}}],["/education/bs/deep-learning/final/%E5%A4%A7%E4%BD%9C%E4%B8%9A.html",{loader:()=>l(()=>import("./大作业.html-C_W9WVyF.js"),__vite__mapDeps([533,1])),meta:{d:1681208623e3,e:`
<p>三个需求</p>
<ul>
<li>找到图片中的纸张：边缘检测</li>
<li>将纸张修复展平并放在图像中间：透视变换</li>
<li>更进一步：如何识别图中文字？</li>
</ul>
<h2>文档扫描</h2>
<ol>
<li>边缘检测</li>
<li>获取纸张轮廓</li>
<li>透视变换</li>
</ol>
<h2>OCR</h2>
<ul>
<li>CTPN 算法：检测文本位置</li>
<li>CRNN 算法：识别文本内容</li>
</ul>
<h3>CTPN 算法</h3>
<blockquote>
<p>ECCV 2016提出的一种文字检测算法</p>
<p>Z. Tian, W. Huang, T. He, P. He and Y. Qiao: Detecting Text in Natural Image with Connectionist Text Proposal Network, ECCV, 2016.</p>
</blockquote>`,r:{minutes:2.97,words:891},t:"如何实现一个扫描全能王？",y:"a"}}],["/education/bs/deep-learning/final/%E8%AE%B2%E7%A8%BF.html",{loader:()=>l(()=>import("./讲稿.html-IYIJy8D6.js"),__vite__mapDeps([534,1])),meta:{d:1684318252e3,e:`
<p>相信大家都有使用过扫描全能王吧，大家有没有考虑过如何实现一个扫描全能王呢？</p>
<p>我们将从如下五个方面，解决这个问题。</p>
<p>首先我们先对问题所需的任务进行一个分析</p>
<h2><strong>问题概览</strong></h2>
<p>三个需求</p>
<ul>
<li>找到图片中的纸张：边缘检测</li>
<li>将纸张修复展平并放在图像中间：透视变换</li>
<li>更进一步：如何识别图中文字？</li>
</ul>
<h2>文档扫描过程</h2>
<p>扫描过程中，主要涉及到如上三个步骤：</p>
<p>123</p>
<ol>
<li>
<p>边缘检测</p>
<blockquote>
<p>Canny算法，进行边界检测（结合高斯滤波函数）</p>
</blockquote>
<p>在课程中，我们也了解过卷积运算可以进行一些边缘的检测和过滤，这里的Canny算法也是利用用高斯一阶偏导核卷积图像、结合梯度和滤波函数进行边缘检测的。</p>
<p>检测器算法的四个步骤：</p>
<ol>
<li>用高斯一阶偏导核卷积图像</li>
<li>计算每个点的梯度幅值和方向</li>
<li>非极大值抑制</li>
<li>连接与阈值（滞后）</li>
</ol>
<blockquote>
<p>（当然，感兴趣的同学，也可以尝试使用Meta开源的Segment Anything模型去做分割，这里就不再赘述）</p>
</blockquote>
</li>
<li>
<p>获取纸张轮廓</p>
<blockquote>
<p>对检测到的边界求解一个近似轮廓</p>
<p>findContours方法，找到上一步中的所有边缘。</p>
</blockquote>
<p>由于噪声点或图像清晰度的原因，我们Canny算法探测出来的边缘可能是一个很复杂的多边形，那么我们可以道格拉斯-普克算法（Douglas-Peucker），approxPolyDP方法求解近似多边形。我们找到最大的近似四边形作为我们的纸张。</p>
</li>
<li>
<p>透视变换</p>
<p>我们再利用矩阵，进行坐标变换，将四边形展平放大。warpPerspective</p>
</li>
</ol>`,r:{minutes:4.08,words:1225},t:"如何实现一个扫描全能王？",y:"a"}}],["/education/bs/xr-tech/hw/%E4%BD%9C%E4%B8%9A1%20HMD.html",{loader:()=>l(()=>import("./作业1 HMD.html-JvP2z_39.js"),__vite__mapDeps([535,1])),meta:{d:1679321449e3,e:`
<p>分数：10分（容易得满）</p>
<p>时间：期末之前（第六周结课之前，每个小组为单位做一个）</p>
<p>目的：结合</p>
<p>小组为单位自己制作一个cardboard HMD（淘宝20rmb就可以买到）</p>
<p>淘宝买一个HMD，DIY一下</p>
<p>可以在google cardboard I/O 2015</p>
<p>纸壳、透镜、胶带</p>
<p>十五块钱左右，就可以买下来</p>
<p>看Google cardboard的论坛，可以看到很多人自己设计的HMD</p>
<p>要求</p>
<ul>
<li>
<p>说明配置</p>
<p>透镜f</p>
</li>
<li>
<p>说明思想流程</p>
<p>如：跟着谷歌，or，自己了解原理自己做的</p>
</li>
</ul>`,r:{minutes:.73,words:220},t:"作业1",y:"a"}}],["/education/bs/xr-tech/hw/%E4%BD%9C%E4%B8%9A2%20%E6%8A%80%E6%9C%AF%E5%A4%A9%E8%8A%B1%E6%9D%BF.html",{loader:()=>l(()=>import("./作业2 技术天花板.html-Ciz_NFMQ.js"),__vite__mapDeps([536,1])),meta:{d:1679578424e3,e:`
<p>分数：5分</p>
<p>主题：分析VR技术天花板：非视觉、听觉传感器技术发展现状</p>
<p>截止时间：下堂课之前</p>
<p>VR目前非视觉、听觉传感器技术主要包括触觉反馈技术和前庭系统技术。</p>
<ul>
<li>触觉反馈技术能通过作用力、振动等一系列动作为使用者再现触感，提高虚拟环境的交互性和临场感。目前常用的致动器有偏转质量马达（ERM）、线性共振致动器（LRA）和压电式致动器（Piezo）。</li>
<li>前庭系统技术能模拟人体在真实环境中的空间感和平衡感，减少VR中常见的眩晕、恶心等不适症状。目前常用的方法有电刺激法、气流刺激法和声波刺激法。</li>
</ul>`,r:{minutes:1.75,words:524},t:"作业2 技术天花板讨论",y:"a"}}],["/education/bs/xr-tech/hw/%E4%BD%9C%E4%B8%9A3%20%E4%BA%A7%E5%93%81%E5%AE%9A%E4%BD%8D.html",{loader:()=>l(()=>import("./作业3 产品定位.html-CfvBKw4A.js"),__vite__mapDeps([537,1])),meta:{d:1680090419e3,e:`
`,r:{minutes:.01,words:4},t:"产品定位",y:"a"}}],["/education/bs/xr-tech/hw/%E4%BD%9C%E4%B8%9A4%20%E4%BA%92%E8%AF%84.html",{loader:()=>l(()=>import("./作业4 互评.html-DXWYko_R.js"),__vite__mapDeps([538,1])),meta:{d:1680090419e3,e:`
<p>15 分钟设计一下，如何互评（5 分）</p>
<p>比较粗糙的东西</p>
<p>设计一个创新性的 VR 产品的方案，给出你的产品，要求如下：</p>
<ol>
<li>想做的产品是用来做什么的</li>
<li>市面上有没有类似的产品</li>
<li>你的产品功能特点是什么</li>
<li>你的产品可能涉及的最主要的技术是什么</li>
<li>结合目前的 VR 技术，可行性如何？</li>
</ol>
<p>下次课前 10 分钟，每个小组做 1 页 ppt 展示要做什么内容（类似海报，是什么、创新点的展示）</p>
<p>每个人，只能给一个小组投票，选觉得最好的小组（最后按照票数给分）</p>`,r:{minutes:11.88,words:3563},t:"VR 手术模拟器",y:"a"}}],["/education/bs/xr-tech/hw/%E4%BD%9C%E4%B8%9A4%20%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1%E4%B8%8E%E4%BA%92%E8%AF%84.html",{loader:()=>l(()=>import("./作业4 产品设计与互评.html-CiKiK6KB.js"),__vite__mapDeps([539,1])),meta:{d:1680090419e3,e:`
<p>15分钟设计一下，然后互评（5分）</p>
<p>比较粗糙的东西</p>
<p>设计一个创新性的VR产品的方案，给出你的产品，要求如下：</p>
<ol>
<li>想做的产品是用来做什么的</li>
<li>市面上有没有类似的产品</li>
<li>你的产品功能特点是什么</li>
<li>你的产品可能涉及的最主要的技术是什么</li>
<li>结合目前的VR技术，可行性如何？</li>
</ol>
<p>下次课前10分钟，每个小组做1页ppt展示要做什么内容（类似海报，是什么、创新点的展示）</p>
<p>每个人，只能给一个小组投票，选觉得最好的小组（最后按照票数给分）</p>
<h2>想做的产品是用来做什么的</h2>`,r:{minutes:11.77,words:3530},t:"VR手术模拟器",y:"a"}}],["/education/bs/xr-tech/hw/%E4%BD%9C%E4%B8%9A5%20%E8%8D%89%E5%9B%BE%E5%9C%BA%E6%99%AF%E4%B8%8E%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1.html",{loader:()=>l(()=>import("./作业5 草图场景与原型设计.html-CFYpA2w3.js"),__vite__mapDeps([540,1])),meta:{d:1680492546e3,e:`
<p>用sketchBox等等，去做系统原型设计</p>
<p>第六周周三之前，小组为单位交草图</p>
<p>打分标准：根据这三个场景，可以清晰的知道你做的是什么（不看文字描述的情况下</p>
<h2>草图场景</h2>
<p>以下是三个最有代表性的场景和它们的核心要素以及意义：</p>
<ol>
<li>手术室准备阶段</li>
</ol>
<ul>
<li>要素：第一人称，手术室内部、手术用具和设备。</li>
<li>意义：这个场景可以展示手术室内部的各种设备和工具，包括手术台、监护仪等等。此外，还可以显示在准备手术前的各种操作，例如穿戴手套、清洗手术用具等。这个场景能够帮助用户更好地理解手术室的结构和手术前的准备流程。</li>
</ul>`,r:{minutes:1.73,words:518},t:"草图场景与原型设计",y:"a"}}],["/education/bs/xr-tech/hw/%E4%BD%9C%E4%B8%9A6%20%E5%A4%A7%E4%BD%9C%E4%B8%9A.html",{loader:()=>l(()=>import("./作业6 大作业.html-DUQe_fig.js"),__vite__mapDeps([541,1])),meta:{d:1680090419e3,e:`
<p>最后交</p>
<p>内容：之前所有关于产品设计写的东西汇总整理+草图+界面原型+贡献度</p>
<p>周期报告中要回答四个问题：</p>
<ol>
<li>Who is the user</li>
<li>What are the user needs</li>
<li>Can VR address those needs</li>
<li>Please pick up a VR game and give the analysis for the users</li>
</ol>
<h3>分析一个VR产品的主要用户是什么</h3>
<p>面向医学生及实习医生模拟外科手术的应用</p>`,r:{minutes:1.3,words:390},t:"作业5 大作业",y:"a"}}],["/education/bs/xr-tech/hw/%E8%AF%84%E8%AF%AD.html",{loader:()=>l(()=>import("./评语.html-DX1qEeLz.js"),__vite__mapDeps([542,1])),meta:{d:1680090419e3,e:`
<p>评分对象：XRSpere</p>
<p>分数：5</p>
<h3>想做的产品是用来做什么的</h3>
<p>该小组产品内容是面向医学生及实习医生模拟外科手术的应用，在现实生活中有着广泛的市场需求：一方面，医学生缺少手术经验、需要一些手术来提高自身技能；另一方面，直接让医学生做真实的手术，容易带来较高的手术风险。所以利用VR技术实现模拟手术场景，是一个非常有前景的应用方向。</p>
<h3>市面上有没有类似的产品</h3>
<ul>
<li>Surgical Theater ：一种基于虚拟现实技术的手术模拟器</li>
<li>Simulab ：一种基于仿真技术的手术模拟器</li>
<li>Osso VR ：一种基于虚拟现实技术的手术模拟器</li>
<li>FundamentalVR ：一种基于虚拟现实技术的手术模拟器</li>
</ul>`,r:{minutes:1.67,words:502},t:"评语",y:"a"}}],["/education/ms/5005/hw/1.1.html",{loader:()=>l(()=>import("./1.1.html-CqEpvG9U.js"),__vite__mapDeps([543,1])),meta:{d:1725612282e3,e:`
<p>Describe it. Write out 10 qualities or observations about this object.</p>
<h3>Field Study Report: Akrafena (Sword of the Soul)</h3>
<p><strong>Object:</strong> Akrafena (Sword of the Soul)<br>
<strong>Culture Area:</strong> Ashanti<br>
<strong>Period:</strong> Early 20th Century<br>
<strong>Date Made:</strong> Early 20th century CE<br>
<strong>Section:</strong> African<br>
<strong>Materials:</strong> Iron, Gold</p>`,r:{minutes:.92,words:276},t:"Field Study",y:"a"}}],["/education/ms/5005/hw/1.html",{loader:()=>l(()=>import("./1.html-ERAo5Wbb.js"),__vite__mapDeps([544,1])),meta:{d:1727659735e3,e:`
<p>This project teaches the importance of observation, measurement, and reference when creating accurate 3D models. You will visit the Penn Museum to select 2-3 objects, one of which will be selected in class as a 3D modeling subject. During the site visit, you will take detailed measurements, sketches, and reference photographs to aid in the creation of your 3D model. You will begin by blocking in the object according to scale and reference, and progressively iterate to add more detail each week. You will light and render a 10-second turntable of this object (240 frames, 1080p @ 24 fps).</p>`,r:{minutes:1.4,words:419},t:"Project 1: Modeling from Reference",y:"a"}}],["/education/ms/5005/hw/2.1.html",{loader:()=>l(()=>import("./2.1.html-NOuXb2nY.js"),__vite__mapDeps([545,1])),meta:{d:1728657843e3,e:`
<ul>
<li><strong>Due</strong> No Due Date</li>
<li><strong>Points</strong> 10</li>
<li><strong>Submitting</strong> a file upload</li>
</ul>
<p>Pitch an environment for Project 2. Create a simple pitch deck with an asset list and a reference image board of example imagery, as well as one basic model that will be in the scene. The model does not need to be textured. Pitch presentations should be submitted in PDF format and should be 3-5 minutes long.</p>`,r:{minutes:1.61,words:483},t:"Pitch for Project 2 Environments",y:"a"}}],["/education/ms/5005/hw/2.html",{loader:()=>l(()=>import("./2.html-Cs_iHxBu.js"),__vite__mapDeps([546,1])),meta:{d:1728657843e3,e:`
<ul>
<li>
<p><strong>Due</strong> Nov 5 by 11:59pm</p>
</li>
<li>
<p><strong>Points</strong> 25</p>
</li>
<li>
<p><strong>Submitting</strong> a file upload</p>
</li>
<li>
<p>In this project, you will apply 3D production workflows to develop one complete <strong>interior</strong> 3D environment. The environment model should be based on observable reference and can be a mash-up of two real spaces. (For example, you can model a library space that’s a hybrid between the Penn library and the Free Library of Philadelphia. It should have observable qualities and models based on reference images that you can take.) The model should have <em>at least</em> 5 unique models (furniture, decorations, and at least one “hero model”). You will model and UV one cohesive 3D scene, create materials and texture sets, and submit 4 rendered images, all taken from different perspectives and/or with different lighting settings. All renders must be 1920x1080, generated in Maya using Arnold.</p>
</li>
</ul>`,r:{minutes:.84,words:252},t:"Project 2: Environmental Renders with Arnold",y:"a"}}],["/education/ms/5005/hw/3.html",{loader:()=>l(()=>import("./3.html-BAJ9_cG1.js"),__vite__mapDeps([547,1])),meta:{d:1732245471e3,e:`
<ul>
<li><strong>Due</strong> Tuesday by 11:59pm</li>
<li><strong>Points</strong> 25</li>
<li><strong>Submitting</strong> a file upload</li>
</ul>
<p>For the last project, you will explore beyond the camera lens to create a detailed object or small scene that is designed to be viewed at any angle or distance in an interactive environment. You will learn how to model at different levels of detail, build upon previous modeling experience to create topology that holds up to close inspection, design detailed, multi-layered materials using Substance Painter, use mesh map baking processes to generate normal maps, and learn about real-time render optimization. For your final deliverable, you will create a Sketchfab account to upload your model for browser-based viewing and sharing.</p>`,r:{minutes:.44,words:132},t:"Project 3: Detail Modeling for Interactive Media",y:"a"}}],["/education/ms/5005/hw/4.html",{loader:()=>l(()=>import("./4.html-Dj1bwG8r.js"),__vite__mapDeps([548,1])),meta:{d:1731131409e3,e:`
<ul>
<li><strong>Due</strong> Dec 4 by 11:59pm</li>
<li><strong>Points</strong> 20</li>
<li><strong>Submitting</strong> a file upload</li>
</ul>
<p>This grade is evaluated throughout the course and is calculated from factors including attendance, class workshop participation, completion of in-class assignments and modeling exercises, constructive and thoughtful engagement during critiques, and demonstration of concepts learned through pre-recorded lectures.</p>`,r:{minutes:.18,words:53},t:"Professionalism",y:"a"}}],["/education/ms/5005/maya/10.html",{loader:()=>l(()=>import("./10.html-Bfjis7IE.js"),__vite__mapDeps([549,1])),meta:{d:1731131409e3,e:`<ul>
<li>lighting and rendering</li>
<li>lighting interior of apollo</li>
</ul>
`,r:{minutes:.02,words:7},t:"",y:"a"}}],["/education/ms/5005/maya/2.html",{loader:()=>l(()=>import("./2.html-DeKuhH5C.js"),__vite__mapDeps([550,1])),meta:{d:1727659735e3,e:`<p>Viewport</p>
<ul>
<li>Perspective view</li>
<li>Split view</li>
</ul>
<p>spacebar切换viewport</p>
<p>Navigation</p>
<ul>
<li>Option/alt left click</li>
<li>Option/alt middle click</li>
<li>Option/alt right click</li>
</ul>
<p>操作</p>
<ul>
<li>Q: select</li>
<li>W: move</li>
<li>E: rotate</li>
<li>R: scale</li>
</ul>`,r:{minutes:.46,words:137},t:"",y:"a"}}],["/education/ms/5005/maya/3.html",{loader:()=>l(()=>import("./3.html-DWe3mNms.js"),__vite__mapDeps([551,1])),meta:{d:1727659735e3,e:`<h3>Exclude</h3>
<p>add edge loop</p>
<ul>
<li>Click: 普通的</li>
<li>shift+click: pop over 遵循弧度的</li>
</ul>
<p>直接删除边的话他的点还会存在</p>
<p>shift right click+delete edge</p>
<p>F1 documentation</p>
<p>shift+double click</p>
<p>bridge</p>
<ol>
<li>combine</li>
</ol>
<p>hotkey</p>
<ul>
<li>G：repeat last command</li>
</ul>`,r:{minutes:.44,words:132},t:"",y:"a"}}],["/education/ms/5005/maya/4.html",{loader:()=>l(()=>import("./4.html-QdPPdaxZ.js"),__vite__mapDeps([552,1])),meta:{d:1731131409e3,e:`<ul>
<li>cleaning up your mesh(delete history)</li>
<li>Sky Dome</li>
</ul>
`,r:{minutes:.03,words:8},t:"",y:"a"}}],["/education/ms/5005/maya/5.html",{loader:()=>l(()=>import("./5.html-6WH9YGLI.js"),__vite__mapDeps([553,1])),meta:{d:1731131409e3,e:`<p>Turntables</p>
`,r:{minutes:0,words:1},t:"",y:"a"}}],["/education/ms/5005/maya/6.html",{loader:()=>l(()=>import("./6.html-DJxOEts-.js"),__vite__mapDeps([554,1])),meta:{d:1731131409e3,e:`<ul>
<li>Composition</li>
<li>Materials</li>
<li>Lighting</li>
</ul>
<p>reference photos</p>
<ul>
<li>自己拍或者网上找</li>
</ul>
<p>Environment there layer of staging</p>
<ul>
<li>
<p>foreground</p>
<p>plant or a piece of furniture</p>
<p>guide the viewer's eyes towards the focal point</p>
</li>
<li>
<p>middle ground</p>
<p>where your most of your action happens, here model here</p>
</li>
<li>
<p>background</p>
<p>contexts: walls, windows, or distant objects that help establish the overall environment</p>
<p>sense of place</p>
</li>
</ul>`,r:{minutes:.22,words:67},t:"",y:"a"}}],["/education/ms/5005/maya/7.html",{loader:()=>l(()=>import("./7.html-BY_kbewk.js"),__vite__mapDeps([555,1])),meta:{d:1731131409e3,e:`<p>UV Unwrapping</p>
`,r:{minutes:.01,words:2},t:"",y:"a"}}],["/education/ms/5005/maya/8.html",{loader:()=>l(()=>import("./8.html-Du8YFJjz.js"),__vite__mapDeps([556,1])),meta:{d:1731131409e3,e:`<ul>
<li>Painting UV using Photoshop</li>
<li>NodeEditing_inHypershade</li>
</ul>
`,r:{minutes:.02,words:5},t:"",y:"a"}}],["/education/ms/5005/maya/9.html",{loader:()=>l(()=>import("./9.html-BSXF9fxb.js"),__vite__mapDeps([557,1])),meta:{d:1731131409e3,e:`<ul>
<li>Toon Shader</li>
<li>Ambient Occlusion</li>
</ul>
`,r:{minutes:.01,words:4},t:"",y:"a"}}],["/education/ms/5005/ref/1.html",{loader:()=>l(()=>import("./1.html-ekhkmni7.js"),__vite__mapDeps([558,1])),meta:{d:1725612282e3,e:`
<p>height 2.6 inch</p>
<p>top 1 + 0.5 * 7/8 inch</p>
<p>middle 1inch</p>
<p>middle 2：1.75</p>
<p>bottom 1.2</p>
<p>height 2: 1 3/8</p>
<p>height 3: 1inch</p>
`,r:{minutes:.08,words:24},t:"Ref 1",y:"a"}}],["/education/ms/5005/ref/Practice-Models.html",{loader:()=>l(()=>import("./Practice-Models.html-Bn-MEgDj.js"),__vite__mapDeps([559,1])),meta:{d:1728657843e3,e:`
<h3><strong>Description</strong></h3>
<ol>
<li><strong>Shape</strong>: The vase has a traditional shape with two primary sections: a narrow neck and a round, bulbous body.</li>
<li><strong>Material</strong>: It is made of ceramic, with a smooth, glossy surface.</li>
<li><strong>Design</strong>: The vase features hand-painted floral and geometric designs, with vibrant colors like green, yellow, and pink.</li>
<li><strong>Size</strong>: The vase is small, about the height of a typical handheld item, making it easy to display on a tabletop.</li>
<li><strong>Neck</strong>: The neck is conical, flaring out at the top to form a wide lip.</li>
<li><strong>Base</strong>: The base is relatively small compared to the wide middle section, which helps the vase balance on flat surfaces.</li>
<li><strong>Pattern</strong>: The painted design wraps around the entire body of the vase, covering both the top and middle sections.</li>
<li><strong>Texture</strong>: The glossy ceramic surface is smooth to the touch, and the painted areas have a slight texture due to the layered paint.</li>
<li><strong>Functionality</strong>: The vase is likely decorative and could be used as a standalone art piece.</li>
<li><strong>Color Scheme</strong>: The vase uses a combination of white, blue, green, and red tones in its patterns, contrasting well against the plain ceramic background.</li>
</ol>`,r:{minutes:.82,words:246},t:"Practice Models",y:"a"}}],["/education/ms/5450/hw/02.html",{loader:()=>l(()=>import("./02.html-BS8Aqsrf.js"),__vite__mapDeps([560,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/education/ms/5600/cq/1.html",{loader:()=>l(()=>import("./1.html-De8d2FDI.js"),__vite__mapDeps([561,1])),meta:{d:1727659735e3,e:`
<h2>Question 1</h2>
<h3>Mathematical Difference:</h3>
<ol>
<li>vec4 operator*(const vec4 &amp;v) const (Line 89): This multiplies a matrix (mat4) by a column vector (vec4), i.e., m * v. The matrix applies a transformation to the vector.</li>
<li>vec4 operator*(const vec4 &amp;v, const mat4 &amp;m) (Line 106): This multiplies a row vector (vec4) by a matrix (mat4), i.e., v * m. This may result in a different transformation, as the multiplication order is reversed.</li>
</ol>`,r:{minutes:1.03,words:310},t:"Concept Questions for HW01",y:"a"}}],["/education/ms/5600/cq/2.html",{loader:()=>l(()=>import("./2.html-DqKBqtCg.js"),__vite__mapDeps([562,1])),meta:{d:1727659735e3,e:`
<h2>Questions</h2>
<p>Before you begin the programming portion of this homework assignment, read and answer the following conceptual questions. Your answers should be submitted to Canvas.</p>
<ul>
<li>(3 pts) In C++, what is a virtual function and how does it relate to object polymorphism? Say I have a class <code>Base</code> and a class <code>Derived</code> that inherits from <code>Base</code>. Both classes implement a <strong>non</strong>-virtual function called <code>func()</code>. If <code>func()</code> is invoked by dereferencing a <code>Base*</code> that actually points to an instance of <code>Derived</code>, which implementation of <code>func()</code> will be called, and why?</li>
<li>(2 pts) In <code>polygon.cpp</code> there is a constructor for the <code>Polygon</code> class that takes in a number of sides to construct a regular, convex polygon. There is a section of this constructor's body that sets up "indices" to construct triangles out of the polygon's perimeter vertices. Please draw how these triangles would be formed for a regular convex pentagon (five-sided polygon), and label each vertex with its index number. You may draw your image on a piece of paper and take a photograph, or create it in some sort of image editing software. Your drawing need not be perfect, just make sure it's understandable. In the end, please submit your drawing as a <code>.png</code> image.</li>
<li>(5 pts) If I want to write a function that builds my entire scene graph and returns its root node, what should the return type of the function be? Additionally, where in memory should I instantiate the nodes of my scene graph? Why should I instantiate my nodes in this portion of memory?</li>
</ul>`,r:{minutes:1.85,words:554},t:"Concept Questions for HW02",y:"a"}}],["/education/ms/5600/cq/3.html",{loader:()=>l(()=>import("./3.html-CND_o-fG.js"),__vite__mapDeps([563,1])),meta:{d:1727659735e3,e:`
<p>(2 pts) What are the three different configuration cases when determining the intersection of a pixel row with a triangle edge? In all three cases, what simple criterion can one use to determine whether the triangle edge overlaps the pixel row at all?</p>
<p>(3 pts) How might one use barycentric interpolation to determine whether or not a given point in space lies within the bounds of a triangle? In rasterization, would this method be more efficient than row bound checking for determining which pixels lie within a triangle? Why or why not?</p>`,r:{minutes:1.34,words:403},t:"Concept Questions for HW03",y:"a"}}],["/education/ms/5600/cq/4.html",{loader:()=>l(()=>import("./4.html-CFHpxo1F.js"),__vite__mapDeps([564,1])),meta:{d:1728657843e3,e:`
<ul>
<li>(5 pts) In the OpenGL Shading Language (GLSL), what is a uniform variable? What is an "in" variable? What is an "out" variable? How does a vertex shader pass data to a fragment shader?</li>
<li>(5 pts) MyGL contains two member variables that are std::unordered_maps. What do the GLuints that these maps store represent? How are they assigned values in the first place?</li>
</ul>`,r:{minutes:1.21,words:363},t:"Concept Questions for HW03",y:"a"}}],["/education/ms/5600/cq/5.html",{loader:()=>l(()=>import("./5.html-DPG9e9Hn.js"),__vite__mapDeps([565,1])),meta:{d:1728657843e3,e:`
<p>Before you begin the programming portion of this homework assignment, read and answer the following conceptual questions. Your answers should be submitted on Canvas.</p>
<ul>
<li>(5 pts) Given the method by which we divide our 2D space into a 2D grid when computing FBM, Worley noise, and Perlin noise, how might we extend this process into three dimensions? In the case of 3D Worley noise, how many cells would we have to examine to find the closest cell point?</li>
<li>(5 pts) In at most three sentences, describe the general steps one would need to take in order to render a 3D model with a screen-space post-process effect applied to it using OpenGL.</li>
</ul>`,r:{minutes:1.44,words:431},t:"CQ5",y:"a"}}],["/education/ms/5600/cq/6.html",{loader:()=>l(()=>import("./6.html-CsHAiSHX.js"),__vite__mapDeps([566,1])),meta:{d:1729636652e3,e:`
<h3>Question 1</h3>
<p><strong>The vertex indices of the half-edge's start and end vertices</strong>:</p>
<p>A half-edge ( HE ) has a start vertex ( <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">V_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ) and an end vertex ( <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">V_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ). Its SYM pointer points to another half-edge that travels in the opposite direction, meaning the SYM of ( HE ) should have start vertex ( <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">V_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ) and end vertex ( <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">V_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ). Therefore, knowing the vertex indices (start and end) allows you to identify the correct half-edge as the symmetric counterpart. In the implementation part, we could leverage hash map and <code>pair&lt;vertex*, vertex*&gt;</code> to get these mapping relationships.</p>`,r:{minutes:.7,words:211},t:"CQ6",y:"a"}}],["/education/ms/5600/cq/7.html",{loader:()=>l(()=>import("./7.html-BImYFf11.js"),__vite__mapDeps([567,1])),meta:{d:1675410392e3,e:`
<p>(5 pts) When quadrangulating a face during Catmull-Clark subdivision, what information must you temporarily store in order to properly link your half-edge pointers without creating inaccessible edges?</p>
<p>(5 pts) When extruding a face, what operation must be performed after all edges have been turned into quadrangles via the extrusion algorithm discussed in the lecture slides? What iteration of said operation must be specially handled?</p>`,r:{minutes:1.2,words:361},t:"CQ7",y:"a"}}],["/education/ms/5600/final/",{loader:()=>l(()=>import("./index.html--1rtk4K6.js"),__vite__mapDeps([568,1])),meta:{d:1730928664e3,e:`
<ul>
<li>Milestone 1: procedural terrain</li>
<li>Milestone 2:
<ul>
<li>3D noise</li>
<li>texture</li>
<li>Multithreaded terrain generation</li>
</ul>
</li>
<li>Milestone 3:
<ul>
<li>50</li>
<li>extra 50</li>
</ul>
</li>
</ul>
<hr>
<p>Noise</p>
<p>Berlin, Worley noise</p>
<p><strong>Summed Perlin noise terrain</strong></p>`,r:{minutes:.36,words:107},t:"Mini Minecraft",y:"a"}}],["/education/ms/5600/final/ms1.html",{loader:()=>l(()=>import("./ms1.html-BRZUxWnb.js"),__vite__mapDeps([569,1])),meta:{d:1730928664e3,e:`
<blockquote>
<p>11.11</p>
</blockquote>
<h2>Terrain</h2>
<p>Noise</p>
<p>Perlin, Worley noise</p>
<p><strong>Summed Perlin noise terrain</strong></p>
<p>Increase number of grid lines</p>
<p>the lower freq the flatter</p>
<p>different freq and</p>
<div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" data-title="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">vec4 offsetPos </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> vs_Pos </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">+</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> vec4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(vs_offset);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dessertH </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> dessertHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(xz);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> grassH </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> grassLandHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(xz);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> t </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> biomeBlender</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(xz);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">t </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> smoothsep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, t);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // smooth between biome</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> h </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> mix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(dessertH, grassH, t);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">offsetPos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> *=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> h;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.97,words:290},t:"Milestone 1",y:"a"}}],["/education/ms/5600/final/ms2.html",{loader:()=>l(()=>import("./ms2.html-D6I5KT90.js"),__vite__mapDeps([570,1])),meta:{d:1732245692e3,e:`
<blockquote>
<p>11.20</p>
</blockquote>
<h2>Cave Systems</h2>
<p>You will implement two main features:</p>
<ul>
<li>In addition to the 2D height fields used to generate surface terrain, you will add the computation of 3D noise to generate cave systems beneath the terrain's surface.</li>
<li>You will introduce a post-process rendering pipeline into your game engine to render an overlay when the player's head is beneath water and lava.</li>
</ul>`,r:{minutes:1.72,words:515},t:"Milestone 2",y:"a"}}],["/education/ms/5600/final/ms3.html",{loader:()=>l(()=>import("./ms3.html-BNLIJ17i.js"),__vite__mapDeps([571,1])),meta:{d:1732245692e3,e:`
<blockquote>
<p>12.09</p>
</blockquote>
<p>If you earn more than 50 points, the additional points will be extra credit. This week, you should also focus on finalizing the features you worked on in weeks 1 and 2.</p>
<ul>
<li>
<p><strong>Post-process Camera Overlay (20 points):</strong> When the <code>Player</code> enters <code>WATER</code> or <code>LAVA</code> blocks, rather than displaying a simple blue or red screen</p>
</li>
<li>
<p>overlay, apply some sort of interesting fluid-like screen distortion and coloration instead. You should use noise functions to distort your player's view, and the distortion should animate as a function of time.</p>
<ul>
<li>
<p><strong>distortion</strong></p>
<p>20</p>
</li>
</ul>
</li>
<li>
<p><strong>Inventory and onscreen GUI (50+ pts):</strong> Allow the player to select which type of block they will place by creating an onscreen GUI that can be called up by pressing a particular key, such as <code>I</code>. You could also allow the player to collect blocks by breaking them, and only place blocks when they have a block in their inventory.</p>
<ul>
<li>
<p><strong>准星</strong>, <a href="https://upenn.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=52fbe2ce-2674-47cc-a2ec-b22c01576380" target="_blank" rel="noopener noreferrer">参考</a>, 13-16min</p>
<p>10-20</p>
</li>
<li></li>
</ul>
</li>
<li>
<p><strong>Additional Biomes (50 pts):</strong> Add additional block types such as <code>SNOW</code> or <code>SAND</code>, and distribute patches of these new block types over large areas of your world. For additional points, modify the structure of your terrain in these areas to reflect things like flat deserts or frigid mountains. The biomes should smoothly transition between one another near their borders. You might use two different noise functions to generate a map of moisture and temperature (or overall elevation) and use those to determine what biome your terrain currently lies in. For inspiration, you can always peruse the list of <a href="https://minecraft.gamepedia.com/Biome" target="_blank" rel="noopener noreferrer">biomes</a> featured in the official Minecraft game. Also take a look at this person's <a href="https://www.spigotmc.org/resources/danns-world-generator-oasis-desert-demo-1-14-x-1-15-x-uses-an-organic-tree-generator.74083/" target="_blank" rel="noopener noreferrer">custom biomes Minecraft mod</a> for visual inspiration.</p>
<p>Temperature, Moisture</p>
<ul>
<li>GRASS, high t, high m</li>
<li><strong>SAND</strong>, high t, low m</li>
<li>SNOW, low t, high m</li>
<li>ICE SPIR, low t, low m</li>
</ul>
</li>
</ul>`,r:{minutes:2.63,words:790},t:"Milestone 3",y:"a"}}],["/education/ms/5600/final/sky.html",{loader:()=>l(()=>import("./sky.html-BEX9qpKJ.js"),__vite__mapDeps([572,1])),meta:{d:1732245692e3,e:`
<p>Can be milestone 3</p>
<div class="language-glsl line-numbers-mode" data-highlighter="shiki" data-ext="glsl" data-title="glsl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> vec2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fs_UV;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">out</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> vec4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> out_Col;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> Ray {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    vec3 origin;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    vec3 direction;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> vec3</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> sunset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Ray </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">raycast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    vec3 ref </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> eye </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> F;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    vec3 V </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> U </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD"> *</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> tan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">radians</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">22.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    vec3 H </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> R </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD"> *</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> tan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">radians</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">22.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> aspect;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> sx </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> fs_UV</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">vec3</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sunsetLerp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">float</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    Ray ray </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> raycast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> t </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> clamp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">dot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ray</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">direction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vec3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.23,words:69},t:"Procedural Sky",y:"a"}}],["/education/ms/5600/final/weather.html",{loader:()=>l(()=>import("./weather.html-uOP-u-La.js"),__vite__mapDeps([573,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/education/ms/5600/hw/1.html",{loader:()=>l(()=>import("./1.html-D2lLrqfL.js"),__vite__mapDeps([574,1])),meta:{d:1727659735e3,e:`
<h2>Help Log (5 points)</h2>
<p>Maintain a log of all help you receive and resources you use. Make sure the date and time, the names of everyone you work with or get help from, and every URL you use, except as noted in the collaboration policy. Also briefly log your question, bug or the topic you were looking up/discussing. Ideally, you should also the answer to your question or solution to your bug. This will help you learn and provide a useful reference for future assignments and exams. This also helps us know if there is a topic that people are finding difficult.</p>`,r:{minutes:.88,words:265},t:"HW1",y:"a"}}],["/education/ms/5600/hw/2.html",{loader:()=>l(()=>import("./2.html-DSYfS0rt.js"),__vite__mapDeps([575,1])),meta:{d:1727659735e3,e:`
<p>build scene graph</p>
<p>Mon</p>
<p>Implement functions</p>
<p>Fan triangulation</p>
<h2>Help Log (5 points)</h2>
<ul>
<li>2024-09-14 6:50 PM Ashton and me discuss how to setup Node.</li>
</ul>
<h2>Extra Credit</h2>
<p>Connect signals and slots in your GUI such that when a particular type of node is selected in your tree widget, only the transformation adjustment widgets that are compatible with that node are "active". For additional points, alter the visual style of your GUI with Qt style sheets so it looks more professional and less "default Windows/OSX user interface".</p>`,r:{minutes:.3,words:90},t:"HW2",y:"a"}}],["/education/ms/5600/hw/3.html",{loader:()=>l(()=>import("./3.html-BoPBCAsJ.js"),__vite__mapDeps([576,1])),meta:{d:1727659735e3,e:`
<p>You will create a rasterizer for drawing scenes composed of 2D and 3D polygons. To begin, you will develop a 2D triangle rasterization algorithm and test your implementation on scenes composed of 2D polygons. Then, you will implement a perspective projection camera in order to project 3D polygons down into 2D space to be rasterized. You will code your own classes using C++ and will have your first exposure to the Qt code libraries.</p>`,r:{minutes:.25,words:75},t:"HW3",y:"a"}}],["/education/ms/5600/hw/4.html",{loader:()=>l(()=>import("./4.html-CTo_9tNJ.js"),__vite__mapDeps([577,1])),meta:{d:1727659735e3,e:`
<p>shader</p>
<p>Index buffer</p>
<p>Wednesday 讲base code</p>
`,r:{minutes:.03,words:8},t:"HW4",y:"a"}}],["/education/ms/5600/hw/5.html",{loader:()=>l(()=>import("./5.html-yZMGimgh.js"),__vite__mapDeps([578,1])),meta:{d:1729636652e3,e:`
<p>noise</p>
<p>psuedo code</p>
<div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" data-title="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">loadObj</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(stirng filename) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    vector</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">uPtr</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Vertex</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&gt;&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2"> &amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">vertx </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> verts;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    vector</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">uPtr</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Vertex</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&gt;&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2"> &amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">edges </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> edges;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    vector</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">uPtr</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Vertex</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&gt;&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2"> &amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">hes </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"f"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> line in OBJ file) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        uPtr</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Face</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> f </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> mkU</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Face</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(random color);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.21,words:63},t:"HW5",y:"a"}}],["/education/ms/5600/hw/6.html",{loader:()=>l(()=>import("./6.html-ChWVuv_o.js"),__vite__mapDeps([579,1])),meta:{d:1729636652e3,e:`
<p>seleted at the same time doesn't matter</p>
`,r:{minutes:.03,words:9},t:"HW6",y:"a"}}],["/education/ms/5600/hw/7.html",{loader:()=>l(()=>import("./7.html-DpWEVgAo.js"),__vite__mapDeps([580,1])),meta:{d:1729636652e3,e:`
<p>Catmull-Clark Subdivision</p>
<p>Mesh Data Structures</p>
<p>Slipt edge</p>
<p>测试三四个level即可</p>
<p>再多就卡了</p>
`,r:{minutes:.07,words:22},t:"HW7",y:"a"}}],["/education/ms/5600/quiz/3.html",{loader:()=>l(()=>import("./3.html-B7932h9C.js"),__vite__mapDeps([581,1])),meta:{d:1728657843e3,e:`
<h3>Q1</h3>
<p>3</p>
<p>An out variable from vertex shader outputs data is interpolated across the primitives and then provided as input to the in variable in the fragment shader for each pixel.</p>
<h3>Q2</h3>
<p>3</p>
<p>position arrays contains 18 elements;<br>
normal arrays contains 18 elements;<br>
Index array arrays contains  24 elements</p>`,r:{minutes:.63,words:189},t:"Quiz 3",y:"a"}}],["/education/ms/5600/quiz/4.html",{loader:()=>l(()=>import("./4.html-CUf2g22C.js"),__vite__mapDeps([582,1])),meta:{d:1731131409e3,e:`
<h3>Q1</h3>
<h3>Question 3</h3>
<p>Can the memory footprint of a half-edge mesh be known simply by being told how many Faces, Half-Edges, and Vertices are in the mesh, and none of the connectivity information? Why or why not?</p>
<hr>
<p>Yes, because half-edge mesh has fixed size of data structure elements; each face, half-edge, and vertex uses a fixed amount of memory, their counts alone determine the total footprint without needing connectivity details. The actual connectivity (which elements point to which) does not affect the amount of memory required to store these pointers; it only affects their values. Since the sizes of the data fields are constant, the total memory footprint depends only on the number of elements.</p>`,r:{minutes:.72,words:217},t:"Quiz 4",y:"a"}}],["/education/ms/5600/quiz/5.html",{loader:()=>l(()=>import("./5.html-DaTMW6mm.js"),__vite__mapDeps([583,1])),meta:{d:1731131409e3,e:`
<h2>Q1 Bind matrices</h2>
<p>3 Points</p>
<p>Explain how to <strong>construct a bind matrix</strong> for each joint on a skeleton, and explain the <strong>space-to-space transformation</strong> each bind matrix applies to any mesh vertex. Your answer should be no more than two sentences.</p>
<p>Calculate the inverse of the joint's transformation matrix with respect to the world. This bind matrix, when applied to a mesh vertex, transforms the vertex from model space to the joint's local space.</p>`,r:{minutes:.83,words:250},t:"Quiz 5",y:"a"}}],["/education/ms/5620/animation/animation.html",{loader:()=>l(()=>import("./animation.html-DO86I5cH.js"),__vite__mapDeps([584,1])),meta:{d:1729636448e3,e:`
<ul>
<li>Main Approaches to Animation</li>
<li>Motion Editing Techniques</li>
<li>Arc Length Parameterization</li>
</ul>
<h3>Keyframe</h3>
<h3>Animation</h3>
<p>Animation=Post(time)</p>
<p>Collections of motion curves</p>
<ul>
<li>Single degree of freedom(DOF)</li>
<li>Single Joint (up to 6 DOF)
<ul>
<li>3 rotation</li>
<li>3 translation (if root or changing bone lengths)</li>
</ul>
</li>
<li>Entire body</li>
</ul>`,r:{minutes:3.21,words:963},t:"Body Animation",y:"a"}}],["/education/ms/5620/animation/binding.html",{loader:()=>l(()=>import("./binding.html-CJKisUcq.js"),__vite__mapDeps([585,1])),meta:{d:1730928664e3,e:`
<ul>
<li>Rigging</li>
<li>Binding</li>
<li>Skinning</li>
</ul>
<p>Transform Blend</p>
<p>Bind Pos</p>
<ul>
<li>T Pose</li>
<li>A Pose</li>
</ul>
<h2>Binding</h2>
<p>However, since each vertex has only one influencer, the deformation will exhibit sharp transitions around rotating joints.</p>
<p>To allow multiple joints to influence a vertex, we need to define volume spheres within  which a vertex can be influenced by both its nearest joint and the nearest joint's parent</p>`,r:{minutes:1.64,words:493},t:"Rigging, Binding, Skinning",y:"a"}}],["/education/ms/5620/animation/blending.html",{loader:()=>l(()=>import("./blending.html-0SNoe-Ex.js"),__vite__mapDeps([586,1])),meta:{d:1731131409e3,e:`
<h2>Animation Guide</h2>
<p>Problem  – After playing an animation with root translation, the root  joint will snap back to the initial position and orientation  after playing the animation</p>
<p>Solution – Add a virtual joint called a “Guide” as a parent of root joint  – As a result, root position and orientation transforms are  now with respect to the guide frame of reference  – At the end of each animation, update the guide joint  position to the current position of the character in the world</p>`,r:{minutes:1.26,words:378},t:"Blending",y:"a"}}],["/education/ms/5620/animation/locomotion.html",{loader:()=>l(()=>import("./locomotion.html-CqWtHqgK.js"),__vite__mapDeps([587,1])),meta:{d:1731131409e3,e:`
<h2>Walk Cycles</h2>
<p>Human walk cycle</p>
<p>Keyframe walk cycle</p>
<ul>
<li>contact</li>
<li>down</li>
<li>pass pos</li>
<li>up</li>
<li>contact</li>
</ul>
<p>leg position, pelvic</p>
<p>faster: freq+, stripe</p>
<p>Gaits</p>
<ul>
<li>a sequence of</li>
</ul>
<p>Stepping</p>
<ul>
<li>Step Cycle</li>
<li>Step phase</li>
<li>Support stage, support period</li>
<li>Duty cycle</li>
<li>Step trigger</li>
</ul>`,r:{minutes:.13,words:38},t:"Locomotion",y:"a"}}],["/education/ms/5620/animation/mocap.html",{loader:()=>l(()=>import("./mocap.html-ckuBJ01I.js"),__vite__mapDeps([588,1])),meta:{d:1732245692e3,e:`
<ul>
<li>Place markers on actor</li>
<li>Record actor motion</li>
</ul>
<h3>Mocap File Formats</h3>
<p>Joint-based</p>
<p>Bone Based</p>
<p>BVH(Joint based)</p>
<p>AMC(bone-based)</p>
<p>every frame data</p>
<p>angle data, offset data</p>
<p>Uncanny Valley</p>
<h3>Facial Capture</h3>
<h2>Motion Builder</h2>`,r:{minutes:.52,words:155},t:"Motion Capture",y:"a"}}],["/education/ms/5620/cq/1.html",{loader:()=>l(()=>import("./1.html-imIhsYbx.js"),__vite__mapDeps([589,1])),meta:{d:1727659735e3,e:`
<blockquote>
<p>Sep. 10</p>
</blockquote>
<p>Older 2D games are of great help in understanding the core fundamental concepts that we learn in the CIS4620/5620 Computer Animation class. Let's use this short clip from Capcom’s Megaman X4 as a reference for our first Conceptual Question of the semester:</p>`,r:{minutes:1.12,words:336},t:"CQ1",y:"a"}}],["/education/ms/5620/cq/2.html",{loader:()=>l(()=>import("./2.html-DIST3xBN.js"),__vite__mapDeps([590,1])),meta:{d:1727659735e3,e:`
<blockquote>
<p>Sep. 17</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2024-09-17 上午11.58.23.png" alt="截屏2024-09-17 上午11.58.23" loading="lazy"></p>
<p>Given a cubic Bezier curve with Bernstein basis function polynomials,</p>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>⃗</mo></mover><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mover accent="true"><mi>b</mi><mo>⃗</mo></mover><mn>0</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>u</mi><msup><mo stretchy="false">)</mo><mn>3</mn></msup><mo>+</mo><msub><mover accent="true"><mi>b</mi><mo>⃗</mo></mover><mn>1</mn></msub><mn>3</mn><mi>u</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>u</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><msub><mover accent="true"><mi>b</mi><mo>⃗</mo></mover><mn>1</mn></msub><mn>3</mn><msup><mi>u</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>u</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mover accent="true"><mi>b</mi><mo>⃗</mo></mover><mn>3</mn></msub><msup><mi>u</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">\\vec f(u)=\\vec b_0(1-u)^3+\\vec b_13u(1-u)^2+\\vec b_13u^2(1-u)+\\vec b_3u^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2274em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9774em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.0688em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2274em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9774em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">b</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2274em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9774em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">b</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">3</span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2274em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9774em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">b</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">3</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1274em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9774em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">b</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></p>`,r:{minutes:.75,words:224},t:"CQ2",y:"a"}}],["/education/ms/5620/cq/3.html",{loader:()=>l(()=>import("./3.html-BjmPdz6h.js"),__vite__mapDeps([591,1])),meta:{d:1729636448e3,e:`
<blockquote>
<p>Sep. 24</p>
</blockquote>
<p>As we've learned, representing rotations using quaternions and SLERPing between them is the superior method for blending 2 rotational keyframes together. Here are two naive alternatives:</p>
<ol>
<li>LERPing Rotation matrices — We represent the keyframes as rotation matrices <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>R</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">R_1,R_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and compute <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><msub><mi>R</mi><mn>2</mn></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>u</mi><mo stretchy="false">)</mo><msub><mi>R</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">uR_2+(1−u)R_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> for a desired <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">u\\in[0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> and apply the resulting matrix to any object(s) to be rotated.</li>
<li>LERPing Euler angles — We represent the keyframes as Euler angles <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>α</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>β</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>γ</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(α_1,β_1,γ_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> and <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>α</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>β</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>γ</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(α_2,β_2,γ_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> and compute a new set of Euler angles as <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>u</mi><mi>α</mi><mn>2</mn><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>u</mi><mo stretchy="false">)</mo><mi>α</mi><mn>1</mn><mo separator="true">,</mo><mi>u</mi><mi>β</mi><mn>2</mn><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>u</mi><mo stretchy="false">)</mo><mi>β</mi><mn>1</mn><mo separator="true">,</mo><mi>u</mi><mi>γ</mi><mn>2</mn><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>u</mi><mo stretchy="false">)</mo><mi>γ</mi><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(uα2+(1−u)α1,uβ2+(1−u)β1,uγ2+(1−u)γ1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">uα</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord">1</span><span class="mclose">)</span></span></span></span> for a desired <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">u\\in[0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> and use this new set of angles to do the rotation (via converting this new set of angles to a rotation matrix).</li>
</ol>`,r:{minutes:.87,words:262},t:"CQ3",y:"a"}}],["/education/ms/5620/cq/4.html",{loader:()=>l(()=>import("./4.html-_tXne7bt.js"),__vite__mapDeps([592,1])),meta:{d:1729478193e3,e:`
<blockquote>
<p>Oct. 15</p>
</blockquote>
<h2>Q1</h2>
<p>Consider the following manipulator that consists of 2 revolving joints and 1 prismatic (sliding) joint. How many degrees of freedom does the structure have?</p>
<p><img src="https://canvas.upenn.edu/courses/1814497/files/137405124/preview?verifier=q7eIsv9h7vzF7h225gWWa3I926AWgZhJGrCaCTzC" alt="image.png" loading="lazy"></p>`,r:{minutes:.97,words:291},t:"CQ4",y:"a"}}],["/education/ms/5620/cq/5.html",{loader:()=>l(()=>import("./5.html-DtJib7d-.js"),__vite__mapDeps([593,1])),meta:{d:1731131409e3,e:`
<h2>Q1</h2>
<p>In the following video, we see the player shooting at the character's knee and then the character begins to limp. The knee joint in effect seems to have stopped being considered by the solver after being shot:</p>
<p>In not more than a single sentence, describe how one might be able to achieve this limping effect for their characters in a game. State both the choice of solver (FK or IK) and the implementation required for simulating limping. (Hint: an iterative error-minimizing algorithm)</p>`,r:{minutes:.99,words:297},t:"CQ5",y:"a"}}],["/education/ms/5620/cq/6.html",{loader:()=>l(()=>import("./6.html-BQYu5Nbr.js"),__vite__mapDeps([594,1])),meta:{d:1732245692e3,e:`
<blockquote>
<p>Nov 12</p>
</blockquote>
<p>In the widely popular game Minecraft, there are numerous modifications (mods) that add new dimensions to gameplay. I'm interested in creating a mod that transforms the player's character, Steve, into a magician, complete with a custom particle system to visually represent magical abilities. For this system, each particle needs to store certain data attributes (e.g. position) to function and render correctly within the game environment. What data attributes do you think are essential to include in each particle of the system? Please provide a list of these attributes with brief explanations of their relevance and how they contribute to the overall magical effect.</p>`,r:{minutes:.77,words:232},t:"CQ6",y:"a"}}],["/education/ms/5620/cq/7.html",{loader:()=>l(()=>import("./7.html-BDHuNnZj.js"),__vite__mapDeps([595,1])),meta:{d:1732245692e3,e:`
<p>A videogame camera is following a spaceship. When the spaceship suddenly stops, the developers don't want the camera to immediately come to an abrupt halt. Instead, they want the camera to shake or bounce slightly as it stops, to create a more interesting and natural effect.</p>
<p>To do this, they want the camera to have motion like this when it comes to a stop:</p>`,r:{minutes:.39,words:118},t:"CQ7",y:"a"}}],["/education/ms/5620/cq/8.html",{loader:()=>l(()=>import("./8.html-D3hCLG5Q.js"),__vite__mapDeps([596,1])),meta:{d:1734383661e3,e:`
<p><strong>Q1</strong></p>
<p>The first hint that you are given is that this is a <em>critically damped</em> spring. Therefore, what do we know about ζ ?</p>
<p>1</p>
<p><strong>Q2</strong></p>
<p>Now that we have our ζ , we can consider the next hint in the problem. We want our system to settle after 8 seconds (<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>s</mi><mi>e</mi><mi>t</mi><mi>t</mi><mi>l</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{settle}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">se</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">ttl</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>). For this, we want to use our time constant Tconstant equation, which states that</p>`,r:{minutes:1.22,words:365},t:"CQ8",y:"a"}}],["/education/ms/5620/exam/final.html",{loader:()=>l(()=>import("./final.html-DeB8f7Zd.js"),__vite__mapDeps([597,1])),meta:{d:1731131409e3,e:`
<p>Accumalate</p>
<ul>
<li>
<p>期末考的好，就都按期末分</p>
</li>
<li>
<p>期末不好，就按两着取平均</p>
</li>
</ul>
<hr>
<p><strong>position controller</strong> final exam question</p>
<p>Design a controller for a system</p>
<p>Interpolation: 要知道如何构造曲线</p>
<h2>Review Session</h2>
`,r:{minutes:.16,words:47},t:"Final",y:"a"}}],["/education/ms/5620/exam/mid-sample.html",{loader:()=>l(()=>import("./mid-sample.html-DdwmDddv.js"),__vite__mapDeps([598,1])),meta:{d:1734383661e3,e:`
<h2>Q1</h2>
<blockquote>
<p>25, Kinematics</p>
</blockquote>
<ol>
<li>out of, <em>out of</em>, into</li>
<li>2*3=6(3 xyz, 3theta), each have 2 in x, y axis</li>
<li>ans
<ol>
<li><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>p</mi><mn>2</mn></msup><mo>=</mo><msubsup><mi>F</mi><mn>1</mn><mn>2</mn></msubsup><msup><mi>p</mi><mn>1</mn></msup><mo>=</mo><mo stretchy="false">(</mo><msubsup><mi>F</mi><mn>2</mn><mn>1</mn></msubsup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>p</mi><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">p^2=F^2_1p^1=(F_2^1)^{-1}p^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></li>
<li><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>p</mi><mn>3</mn></msup><mo>=</mo><msubsup><mi>F</mi><mn>2</mn><mn>3</mn></msubsup><msubsup><mi>F</mi><mn>1</mn><mn>2</mn></msubsup><msup><mi>p</mi><mn>1</mn></msup><mo>=</mo></mrow><annotation encoding="application/x-tex">p^3=F^3_2F^2_1p^1=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span></span></span></li>
<li><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>q</mi><mn>1</mn></msup><mo>=</mo><msubsup><mi>F</mi><mn>2</mn><mn>1</mn></msubsup><msup><mi>q</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">q^1=F_2^1q^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></li>
<li><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>q</mi><mn>3</mn></msup><mo>=</mo><msubsup><mi>F</mi><mn>2</mn><mn>3</mn></msubsup><msup><mi>q</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">q^3=F_2^3q^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></li>
</ol>
</li>
</ol>`,r:{minutes:1.28,words:383},t:"Midterm Sample",y:"a"}}],["/education/ms/5620/exam/mid.html",{loader:()=>l(()=>import("./mid.html-CPO48_TM.js"),__vite__mapDeps([599,1])),meta:{d:1729636448e3,e:`
<p>94/100, ave 82, mid 83, max 98, de 10</p>
<hr>
<p>5 questions, don't leave anything blank, 90 mins</p>
<blockquote>
<p>4/5 questions, 多少写点有的没的就有分</p>
<p>不用数值计算</p>
</blockquote>
<p>limb-based 一定考</p>
<ul>
<li>大部分简单，有一个难点，sample 和他很像</li>
<li>给部分分，写一点东西就会给分，不要空白；不用写大多''</li>
<li>open book, open notes, laptop, ipad tablet</li>
</ul>`,r:{minutes:2.1,words:630},t:"Midterm Exam",y:"a"}}],["/education/ms/5620/exam/solution.html",{loader:()=>l(()=>import("./solution.html-DidgnR_O.js"),__vite__mapDeps([600,1])),meta:{d:1730928664e3,e:`
<p>难度和期末差不多，curve平均分 to 80，如果高会有extra credit</p>
<h2>Q1</h2>
<p>15</p>
<h3>Method 1</h3>
<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>F</mi><mi>d</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>R</mi><mi>Y</mi></msub><msubsup><mi>R</mi><mn>1</mn><mn>0</mn></msubsup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mover accent="true"><mi>d</mi><mo>⃗</mo></mover><mn>1</mn><mn>0</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">
F_d=\\begin{bmatrix}
R_YR_1^0&amp;\\vec d_1^0\\\\
0&amp;1
\\end{bmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5374em;vertical-align:-1.0187em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5187em;"><span style="top:-3.5413em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.3413em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0187em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5187em;"><span style="top:-3.5413em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9774em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">d</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.0688em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.3413em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0187em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p>`,r:{minutes:1.95,words:584},t:"Mid term solution",y:"a"}}],["/education/ms/5620/hw/1.1.html",{loader:()=>l(()=>import("./1.1.html-SrKJCEhr.js"),__vite__mapDeps([601,1])),meta:{d:1727659735e3,e:`
<blockquote>
<p>80/100, mean</p>
<p>Q1 [-5] The columns of the matrices correspond to the axes. Your sin should be negative in your y component but in the i hat direction not in your x component.</p>
<p>Q3a [-1] Should explain how the answer was derived.</p>
<p>Q3b [-1] Should explain how the answer was derived.</p>
<p>Q4c [-10] no submission for 4c</p>
<p>Q4d [-3] incorrect order</p>
</blockquote>`,r:{minutes:3.79,words:1136},t:"HW1.1 - Coordinate Transformations",y:"a"}}],["/education/ms/5620/hw/1.2.html",{loader:()=>l(()=>import("./1.2.html-CoLE2obh.js"),__vite__mapDeps([602,1])),meta:{d:1727659735e3,e:`
<blockquote>
<p>87/95, lowest</p>
<p>Q2b [-2] Well done! Your approach is correct, however you should have the final result calculated in decimal form.</p>
<p>Q2c [-2] Well done! Your approach is correct, however you should have the final result calculated in decimal form.</p>
<p>Q2d [-3] Formulas are correct but we were looking for you to actually plug in the numbers and solve for the degrees of the angles.</p>
<p>Q3b [-1] need calculation</p>
</blockquote>`,r:{minutes:2.32,words:697},t:"HW1.2 - Coordinate Transformations",y:"a"}}],["/education/ms/5620/hw/2.html",{loader:()=>l(()=>import("./2.html-DBMchGUX.js"),__vite__mapDeps([603,1])),meta:{d:1727659735e3,e:`
<p>Curve Editor Coding Assignment</p>
<h2>Part 0</h2>
<p>Development Environment Setup and Code Framework</p>
<p>(5 points) After getting your Visual Studio development environment setup and<br>
downloading the assignment code framework from Github, the first task is making sure you can run the code on your machine and are able to use some debugging tools available in Visual Studio that would be beneficial in the later parts of the assignment. There are 2 errors in the assignment that you need to fix before getting started on the main parts:</p>`,r:{minutes:.74,words:223},t:"HW2 - Curve Editor",y:"a"}}],["/education/ms/5620/hw/3.html",{loader:()=>l(()=>import("./3.html-uIGV_lQG.js"),__vite__mapDeps([604,1])),meta:{d:1729478193e3,e:`
<blockquote>
<p>91/100</p>
<p>[-3] Q3.a) Only joint 7, 8 are involved so the dim for theta should be 6<em>1 and dim for J should be 3</em>6.</p>
<p>[-0.5] 3.b.i) Should mention the effect include magnitudes of the endpoint velocity vectors. Refer to the solution file for more details.</p>
<p>[-2] 3.b.ii) You should compute the Jacobian submatrix for joint in the IK chain to get the J_rWrist.</p>
<p>[-0.5] Q4(a) Inversed velocity vectors.</p>
<p>[-2] Q4(b). Correct procedure, but need to compute actual values.</p>
<p>[-1] Q4(c). Correct procedure, but need to compute actual direction vector.</p>
</blockquote>`,r:{minutes:7.07,words:2122},t:"HW3 - Body Kinematics",y:"a"}}],["/education/ms/5620/hw/4.html",{loader:()=>l(()=>import("./4.html-DYpGkmHX.js"),__vite__mapDeps([605,1])),meta:{d:1731131409e3,e:`
<h2>Part 0</h2>
<p>Code Framework (10 points)</p>
<blockquote>
<p>Please submit your Part 0 answers in the form of an MSWord or pdf doc to the HW4 Assignment folder in the CIS4620/5620 Canvas site.</p>
</blockquote>
<p>After downloading the assignment code framework from Github, it is recommended that you look through the FK/IK project codebase to better understand the object-oriented software design and the program execution model. In order to keep you honest, please answer the questions below:</p>`,r:{minutes:1.92,words:577},t:"HW4 - Kinematics",y:"a"}}],["/education/ms/5620/hw/5.html",{loader:()=>l(()=>import("./5.html-TignC259.js"),__vite__mapDeps([606,1])),meta:{d:1731131409e3,e:`
<p>Binging, Skinging</p>
<ul>
<li>LBS</li>
<li>DQS</li>
</ul>
`,r:{minutes:.02,words:6},t:"HW5 - Skinning",y:"a"}}],["/education/ms/5620/hw/6.html",{loader:()=>l(()=>import("./6.html-DMnHM_Dg.js"),__vite__mapDeps([607,1])),meta:{d:1731131409e3,e:`
<blockquote>
<p>show in the class</p>
<p>NOTE:  Your walk cycle videos will be shown to the class (on Nov. 12th ), so it is recommended that you allow sufficient time to refine and polish your animations in an effort to make them look good!</p>
</blockquote>
<p>Next Tuesday</p>
<p>Something reasonable</p>`,r:{minutes:2.47,words:740},t:"HW6 - Motion Capture",y:"a"}}],["/education/ms/5620/hw/7.html",{loader:()=>l(()=>import("./7.html-CDENX7SF.js"),__vite__mapDeps([608,1])),meta:{d:1731131409e3,e:`
<p>Nov 16</p>
<p>Position in Phase Space</p>
<p>Particle</p>
<h2>Toolkit</h2>
<h2>Houdini</h2>
`,r:{minutes:.04,words:12},t:"HW7 - Particle System",y:"a"}}],["/education/ms/5620/hw/8.html",{loader:()=>l(()=>import("./8.html-BU_Nrly_.js"),__vite__mapDeps([609,1])),meta:{d:173327468e4,e:`
<p>Animation Toolkit</p>
`,r:{minutes:.02,words:5},t:"HW8 - Behavioral Animation",y:"a"}}],["/education/ms/5620/quiz/1.html",{loader:()=>l(()=>import("./1.html-B6S7AEcQ.js"),__vite__mapDeps([610,1])),meta:{d:1727659735e3,e:`
<blockquote>
<p>7/10</p>
</blockquote>
<h2>Solution</h2>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>p</mi><mn>4</mn><mn>0</mn></msubsup></mrow><annotation encoding="application/x-tex">p_4^0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span> w.r.t F1</p>`,r:{minutes:.66,words:198},t:"Quiz 1",y:"a"}}],["/education/ms/5620/quiz/2.html",{loader:()=>l(()=>import("./2.html-Bqku_q1L.js"),__vite__mapDeps([611,1])),meta:{d:1727659735e3,e:`
<blockquote>
<p>9/10</p>
</blockquote>
<p>half hour</p>
<h2>Solution</h2>
<h3>Q1</h3>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>u</mi><mo>^</mo></mover><mi>x</mi></msub><mo>=</mo><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\\hat u_x=[1,0,0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">u</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mclose">]</span></span></span></span></p>`,r:{minutes:.72,words:215},t:"Q2",y:"a"}}],["/education/ms/5620/quiz/3.html",{loader:()=>l(()=>import("./3.html-DNBSpc2i.js"),__vite__mapDeps([612,1])),meta:{d:1729636448e3,e:`
<blockquote>
<p>8/10</p>
</blockquote>
<p>quiz：给一个chain，让求一个p的坐标，用F来表示</p>
<p>注意答案格式：in terms of</p>
<ul>
<li>homogeneous transformation matrices</li>
<li>R, d</li>
</ul>
<h2>Solution</h2>
<h3>Q1</h3>
<p>root: joint 12</p>
<p>Kinematic Chain: 12, 11, 10, 1, 6, 7, 8, 9</p>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>F</mi><mn>9</mn><mn>0</mn></msubsup><mo>=</mo><msubsup><mi>F</mi><mn>12</mn><mn>0</mn></msubsup><msubsup><mi>F</mi><mn>11</mn><mn>12</mn></msubsup><msubsup><mi>F</mi><mn>10</mn><mn>11</mn></msubsup><msubsup><mi>F</mi><mn>1</mn><mn>10</mn></msubsup><msubsup><mi>F</mi><mn>6</mn><mn>1</mn></msubsup><msubsup><mi>F</mi><mn>7</mn><mn>6</mn></msubsup><msubsup><mi>F</mi><mn>8</mn><mn>7</mn></msubsup><msubsup><mi>F</mi><mn>9</mn><mn>8</mn></msubsup></mrow><annotation encoding="application/x-tex">F_9^0=F_{12}^0F_{11}^{12}F_{10}^{11}F_{1}^{10}F_{6}^{1}F_{7}^{6}F_{8}^{7}F_{9}^{8}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">9</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span></p>`,r:{minutes:.31,words:92},t:"Q3",y:"a"}}],["/education/ms/5620/quiz/4.html",{loader:()=>l(()=>import("./4.html-BW4FYcLt.js"),__vite__mapDeps([613,1])),meta:{d:1731131409e3,e:`
<blockquote>
<p>8/10</p>
</blockquote>
<p>Body Animation</p>
<p>5 个单项选择题</p>
<h2>Solution</h2>
`,r:{minutes:.04,words:13},t:"Quiz 4",y:"a"}}],["/education/ms/5620/quiz/5.html",{loader:()=>l(()=>import("./5.html-zr-dgbiq.js"),__vite__mapDeps([614,1])),meta:{d:1731131409e3,e:`
<h2>Q1</h2>
<p>Explain how to construct a bind matrix for each joint on a skeleton, and explain the space-to-space transformation each bind matrix applies to any mesh vertex. Your answer should be no more than two sentences.</p>
<h2>Q2</h2>
<p>Compute the bind matrix for the skeleton joint with the overall transform shown below (you should leave it written as a sequence of individual matrices). Then, apply that bind matrix to a vertex located at the world-space position (2, 2).</p>`,r:{minutes:.43,words:128},t:"Quiz 5",y:"a"}}],["/education/ms/5620/quiz/6.html",{loader:()=>l(()=>import("./6.html-DUdqp2mq.js"),__vite__mapDeps([615,1])),meta:{d:1732245692e3,e:`
<blockquote>
<p>10/10</p>
</blockquote>
<p>Should know: Euler &amp; RK2</p>
<p>quiz:</p>
<h2>Review</h2>
<p>How to simulate</p>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>v</mi><mo>˙</mo></mover><mo>=</mo><mo>−</mo><mfrac><mi>c</mi><mi>m</mi></mfrac><mi>v</mi></mrow><annotation encoding="application/x-tex">\\dot v=-\\frac{c}{m}v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6679em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">˙</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0404em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span></p>`,r:{minutes:1.45,words:435},t:"Quiz 6",y:"a"}}],["/se/design/pattern/creational/pool.html",{loader:()=>l(()=>import("./pool.html-CO04579P.js"),__vite__mapDeps([616,1])),meta:{d:1732245447e3,e:`
<p>Think of it as a resource manager for reusable items. Imagine a library that lends out books. Instead of buying a new book each time, you check one out and return it when you’re done. The object pool keeps a collection of objects, like database connections or threads, and hands them out when needed. This saves time and resources compared to createing and destroying objects frequently.</p>`,r:{minutes:.23,words:69},t:"Object Pool",y:"a"}}],["/se/design/pattern/creational/prototype.html",{loader:()=>l(()=>import("./prototype.html-CUQwztMC.js"),__vite__mapDeps([617,1])),meta:{d:1732245447e3,e:`
<p>Instead of creating something from scratch, you make a copy of an existing one, saving time and resources. This is great when you have an object that’s similar to what you need, and you want to tweak it a bit.</p>
`,r:{minutes:.14,words:42},t:"Prototype",y:"a"}}],["/se/design/pattern/creational/singleton.html",{loader:()=>l(()=>import("./singleton.html-DXvTt1eI.js"),__vite__mapDeps([618,1])),meta:{d:1692874145e3,e:`
<p>单例模式</p>
<p>原理<br>
是一种创建型模式，一个类只允许创建一个实例对象，那这个类就是个单例类。</p>
<h2>要点</h2>
<ol>
<li>构造函数私有化，避免外部通过 new 创建实例；</li>
<li>考虑对象创建时的线程安全问题；</li>
<li>考虑是否支持延迟加载；</li>
<li>考虑 getInstance()性能是否高（是否加锁）</li>
<li>考虑序列化和反序列化是否会破坏单例</li>
<li>考虑反射攻击单例</li>
</ol>
<h2>饿汉式</h2>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Singleton</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Singleton</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> instance </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Singleton</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Singleton</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 私有构造函数</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Singleton</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> instance;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.38,words:1915},t:"Singleton",y:"a"}}],["/se/design/pattern/structural/adapter.html",{loader:()=>l(()=>import("./adapter.html-D-3bM2BG.js"),__vite__mapDeps([619,1])),meta:{d:1704683174e3,e:`
<p>适配器模式可以通过创建一个适配器类，该适配器类实现接口并提供默认实现，然后已有的实现类可以继承适配器类而不是直接实现接口。这样，已有的实现类不需要修改，而只需要在需要覆盖新方法的实现类中实现新方法。</p>
<p><a href="https://juejin.cn/post/7313418992310976549?utm_source=gold_browser_extension" target="_blank" rel="noopener noreferrer">教程</a></p>
`,r:{minutes:.34,words:102},t:"适配器",y:"a"}}],["/se/design/system/availability/",{loader:()=>l(()=>import("./index.html-CO831a1l.js"),__vite__mapDeps([620,1])),meta:{d:1715153702e3,e:`
<p><a href="https://blog.csdn.net/eagle89/article/details/129532200" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/eagle89/article/details/129532200</a></p>
<p>High Availability Cluster，简称 HA Cluster</p>
<p>cap</p>
<p>Dtp</p>
`,r:{minutes:.04,words:13},t:"High Availability",y:"a"}}],["/se/design/system/availability/cap.html",{loader:()=>l(()=>import("./cap.html-BPcOS8r8.js"),__vite__mapDeps([621,1])),meta:{d:1715153702e3,e:`
<p>分布式一致性协议</p>
<p>一是因为这两个分布式基础理论是学习分布式知识的必备前置基础，二是因为很多面试官自己比较熟悉这两个理论（方便提问）。我们非常有必要将这两个理论搞懂，并且能够用自己的理解给别人讲出来。</p>
<h2>一致性级别</h2>
<ul>
<li>
<p>强一致性</p>
<p>保证系统改变提交以后立即改变集群的状态。</p>
<p>模型：</p>
<ul>
<li>Paxos</li>
<li>Raft（multi-paxos）</li>
<li>ZAB（multi-paxos）</li>
</ul>
</li>
<li>
<p>弱一致性</p>
<p>即最终一致性，系统不保证改变提交以后立即改变集群的状态，但是随着时间的推移最终状态是一致的。</p>
<p>模型：</p>
<ul>
<li>Gossip 协议</li>
<li>DNS 系统</li>
</ul>
</li>
</ul>`,r:{minutes:6.02,words:1805},t:"CAP",y:"a"}}],["/se/design/system/availability/problems.html",{loader:()=>l(()=>import("./problems.html-B0Nz7rP-.js"),__vite__mapDeps([622,1])),meta:{d:1719451307e3,e:`
<p>脑裂（split-brain），指在一个高可用（HA）系统中，当联系着的两个节点断开联系时，本来为一个整体的系统，分裂为两个独立节点，这时两个节点开始争抢共享资源，结果会导致系统混乱，数据损坏。</p>
<p>对于无状态服务的HA，无所谓脑裂不脑裂；但对有状态服务(比如MySQL)的HA，必须要严格防止脑裂。（但有些生产环境下的系统按照无状态服务HA的那一套去配置有状态服务，结果可想而知...）</p>
<p>在HA集群系统中，假设节点A和节点B通过心跳检测对方的存活状态。在正常情况下，如果节点A检测不到节点B，就会接管B的资源，同理B也可能接管A的资源。如果出现网络故障，就会导致A和B同时检测不到对方的存活状态，互相接管对方的资源，这样就导致了同一个资源被多个节点访问，这种情况就是脑裂。</p>`,r:{minutes:1.54,words:461},t:"脑裂",y:"a"}}],["/se/design/system/availability/scaling.html",{loader:()=>l(()=>import("./scaling.html-D46C_nAV.js"),__vite__mapDeps([623,1])),meta:{d:1719451307e3,e:`
<p>Interviewer: How to scale?</p>
<p>当访问量越来越大以后，如何让你的系统 Scale?</p>
<p>How to scale system ≈ How to scale database</p>
<h2>拆分 Sharding</h2>
<p>数据拆分 Sharding</p>
<p>纵向拆分 Vertical Sharding</p>
<p>横向拆分 Horizontal Sharding</p>
<h3>纵向切分 Vertical Sharding</h3>
<p>User Table 放一台数据库 Friendship Table 放一台数据库 Message Table 放一台数据库</p>`,r:{minutes:2.3,words:689},t:"扩展 Scaling",y:"a"}}],["/se/design/system/ddd/",{loader:()=>l(()=>import("./index.html-BBdeoUKN.js"),__vite__mapDeps([624,1])),meta:{d:1715153702e3,e:`
<p><a href="https://juejin.cn/post/7275222603886788620?utm_source=gold_browser_extension" target="_blank" rel="noopener noreferrer">教程</a></p>
<blockquote>
<p>参考文献：<a href="https://juejin.cn/post/7316202778790625290" target="_blank" rel="noopener noreferrer">JD云方案</a></p>
</blockquote>
<p>贫血/失血模型</p>`,r:{minutes:3.08,words:925},t:"Domain Driven Design",y:"a"}}],["/se/design/system/distributed/dtp.html",{loader:()=>l(()=>import("./dtp.html-B7Gqg9zn.js"),__vite__mapDeps([625,1])),meta:{d:1715153702e3,e:`
<p>分布式事务有</p>
<ul>
<li>2PC(Two-phase Commit), 3PC</li>
<li>TCC(Try-Confirm-Cancel)</li>
<li>事务消息</li>
</ul>
<p>事务消息适用的场景主要是那些需要异步更新数据，并且对数据实时性要求不太高的场景。比如我们在开始时提到的那个例子，在创建订单后，如果出现短暂的几秒，购物车里的商品没有被及时清空，也不是完全不可接受的，只要最终购物车的数据和订单数据保持一致就可以了。</p>
<p>SEATA mode</p>
<ul>
<li>AT</li>
<li>TCC</li>
<li>SAGA</li>
<li>XA</li>
</ul>`,r:{minutes:3.12,words:937},t:"Distributed Transaction Processing",y:"a"}}],["/se/design/system/module/comment.html",{loader:()=>l(()=>import("./comment.html-DVBSTVtx.js"),__vite__mapDeps([626,1])),meta:{d:1719451307e3,e:`
<ul>
<li>API设计</li>
<li>数据模型</li>
<li>索引</li>
<li>NoSQL</li>
<li>全文索引</li>
<li>CDN</li>
<li>异步</li>
<li>动态缓存</li>
<li>*GDPR</li>
<li>*Content Moderation</li>
<li>*机器学习应用</li>
</ul>
<p>应该先问面试官什么?</p>
<p>• 功能<br>
• RPS<br>
• Latency要求</p>
<p>• Scope</p>
`,r:{minutes:.16,words:48},t:"评论",y:"a"}}],["/se/design/system/module/feed.html",{loader:()=>l(()=>import("./feed.html-DLLFvxnr.js"),__vite__mapDeps([627,1])),meta:{d:1719451307e3,e:`
<p>Pull vs Push</p>
<p>Cassandra 如何存储 NewsFeed</p>
<p>Ask before design</p>
<p>No more no less</p>
<p>Work solution first</p>
<p>Analysis is important than solution</p>
<h2>拓展问题</h2>
<h3>果取关问题</h3>
<p>是不是明星不能在线动态计算，要离线计算</p>
<p>• 为User增加一个is_superstar的属性<br>
• 一个用户被标记为superstar之后，就不能再被取消标记</p>
<p>• 如何实现 follow 与 unfollow?</p>`,r:{minutes:1.64,words:491},t:"新鲜事系统",y:"a"}}],["/se/design/system/module/flash-sale.html",{loader:()=>l(()=>import("./flash-sale.html-Dwk2L3qN.js"),__vite__mapDeps([628,1])),meta:{d:1677504602e3,e:`
<h2>数据库设计</h2>
<ul>
<li>
<p>商品信息表</p>
<p><code>commodity_info</code></p>
</li>
<li>
<p>库存信息表</p>
<p><code>stock_info</code></p>
</li>
<li>
<p>秒杀活动表</p>
<p><code>seckill_info</code></p>
</li>
<li>
<p>订单信息表</p>
<p><code>order_info</code></p>
</li>
</ul>
<h3>扣减库存</h3>
<p>先读取，再扣减</p>
<p>会出现并发超卖问题</p>
<p>方案一：</p>`,r:{minutes:.84,words:253},t:"秒杀系统",y:"a"}}],["/se/design/system/module/monitor.html",{loader:()=>l(()=>import("./monitor.html-DYInFaOx.js"),__vite__mapDeps([629,1])),meta:{d:1719451307e3,e:`
<p>Interviewer: Design Datadog (Monitor System)</p>
<p>如何限制访问次数？比如 1 小时之类不能重置 &gt;5 次密码</p>
<ul>
<li>
<p>Rate limiter</p>
</li>
<li>
<p>网站必用工具</p>
</li>
<li>
<p>比如一分钟来自同一个邮箱的密码输入错误不能超过5次，一天不超过10次</p>
</li>
<li>
<p>一些Open source的资源</p>
<ul>
<li>Ruby: <a href="https://github.com/ejfinneran/ratelimit" target="_blank" rel="noopener noreferrer">https://github.com/ejfinneran/ratelimit</a></li>
<li>Django: <a href="https://github.com/jsocol/django-ratelimit" target="_blank" rel="noopener noreferrer">https://github.com/jsocol/django-ratelimit</a></li>
<li>建议:有空读一读源码</li>
</ul>
</li>
<li>
<p>Rate Limiter 已经是一个小型的系统设计问题</p>
<ul>
<li>我们同样可以用 4S 分析法进行分析!</li>
</ul>
</li>
</ul>`,r:{minutes:.41,words:123},t:"Monitor",y:"a"}}],["/se/design/system/module/user.html",{loader:()=>l(()=>import("./user.html-DtVM64gk.js"),__vite__mapDeps([630,1])),meta:{d:1679321449e3,e:`
<p>用户系统特点：</p>
<p>读非常多，写非常少，一个读多写少的系统，一定要使用 Cache 进行优化</p>
<ul>
<li>Authentication Service 负责登录注册</li>
<li>User Service 负责用户信息存储与查询</li>
<li>Friendship Service 负责好友关系存储</li>
</ul>
<p>User SQL</p>
<p>Friendship Cassandra</p>
<h2>Authentication Service</h2>
<p>Session、Cookie</p>
<p>Session Table</p>
`,r:{minutes:.88,words:264},t:"用户系统",y:"a"}}],["/se/design/system/projects/trace-note.html",{loader:()=>l(()=>import("./trace-note.html-ASVQZirx.js"),__vite__mapDeps([631,1])),meta:{d:1679321449e3,e:`
<ul>
<li>用户系统</li>
<li>秒杀系统</li>
<li>评论系统</li>
<li>地理系统</li>
<li>上传系统</li>
</ul>
<h3>Redisson 分布式延迟队列 RDelayedQueue</h3>
<p>Redisson 是一个基于 redis 实现的 Java 驻内存数据网格，它不仅提供了一系列的分布式的 Java 常用对象，还提供了许多分布式服务。</p>
<p>Redisson 除了提供我们常用的分布式锁外，还提供了一个分布式延迟队列 RDelayedQueue，他是一种基于 zset 结构实现的延迟队列，其实现类是 RedissonDelayedQueue。</p>`,r:{minutes:2.43,words:729},t:"Trace Note 系统设计",y:"a"}}],["/se/design/system/projects/twitter.html",{loader:()=>l(()=>import("./twitter.html-DnPiQPTw.js"),__vite__mapDeps([632,1])),meta:{d:1715153702e3,e:`
<p>sns</p>
<ul>
<li>Tech Stack: Python,Django,MySQL,HBase,Redis, Memcached, RabbitMQ, Amazon S3</li>
<li>Used push model to fanout news feeds.</li>
<li>Used Redis and Memcached to reduce db queries for tables which has lot reads and less writes.</li>
<li>Used Key-value store HBase to split db queries or tables which has less reads and lot writes.</li>
<li>Used denormalization to store the number of comments likes in order to reduce db queries.</li>
<li>Used Message Queue to deliver asynchronized tasks to reduce response time.</li>
<li>The whole project resulted in 10000 lines of code changes,cost over 3 months.</li>
</ul>`,r:{minutes:2.94,words:883},t:"Twitter",y:"a"}}],["/se/design/system/projects/%E5%B8%B8%E8%A7%81.html",{loader:()=>l(()=>import("./常见.html-BNwneDKn.js"),__vite__mapDeps([633,1])),meta:{d:1704683174e3,e:`<p><a href="https://juejin.cn/post/7312352501406908452?utm_source=gold_browser_extension" target="_blank" rel="noopener noreferrer">红包系统</a></p>
<p>twitter</p>
`,r:{minutes:.03,words:9},t:"",y:"a"}}],["/se/design/system/security/authorization.html",{loader:()=>l(()=>import("./authorization.html-CN_8GGDM.js"),__vite__mapDeps([634,1])),meta:{d:1704683174e3,e:`
<p>Session 认证</p>
<p>Token 认证</p>
<p><a href="https://juejin.cn/post/7318405525186576438" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7318405525186576438</a></p>
`,r:{minutes:.03,words:10},t:"认证",y:"a"}}],["/se/design/system/security/encryption.html",{loader:()=>l(()=>import("./encryption.html-rSiOH43v.js"),__vite__mapDeps([635,1])),meta:{d:1732245357e3,e:`
<p>用户系统</p>
<p>密码存加密后的值</p>
`,r:{minutes:.05,words:15},t:"Encryption 加密",y:"a"}}],["/se/devops/unix/availability/DNS-DRBD-network.html",{loader:()=>l(()=>import("./DNS-DRBD-network.html-DUVfS7Ux.js"),__vite__mapDeps([636,1])),meta:{d:1669996395e3,e:`
`,r:{minutes:.01,words:3},t:"DNS DRBD network",y:"a"}}],["/se/devops/unix/availability/",{loader:()=>l(()=>import("./index.html-Dep8VGTj.js"),__vite__mapDeps([637,1])),meta:{d:1669794167e3,e:`
<p>24 hours</p>
<p>Fault</p>
<ul>
<li>detect</li>
<li>recover</li>
</ul>
<p>主要解决思路：</p>
<p>Redundancy 冗余</p>
<ul>
<li>active</li>
<li>spare 后备</li>
</ul>
<p>核心问题：</p>
<ul>
<li>如何知道服务挂了，</li>
<li>以及如何进行切换</li>
</ul>
`,r:{minutes:.14,words:42},t:"Availability 可用性",y:"a"}}],["/se/devops/unix/availability/load-assessment-and-tuning.html",{loader:()=>l(()=>import("./load-assessment-and-tuning.html-DSzrcMaN.js"),__vite__mapDeps([638,1])),meta:{d:1669996395e3,e:`
<p>sar：发现瓶颈在哪，cpu 还是 io</p>
<h3>When CPU load is high</h3>
<p>Top &amp; sar</p>
<p>Ps 看 CPU time</p>
<p>strace 看系统调用</p>
<h3>When I/O load is high</h3>
<p>swap 内存不够</p>
<p>数据库 I/O 多</p>
<h3>prefork</h3>
<h3>多进程 &amp; 多线程</h3>
<p>多进程隔离性更好，一个进程挂了不影响别人</p>
<p>多线程，一个线程挂了整个进程都挂了</p>
<p>epoll</p>
<p>nginx 和 redis 都是这个，高性能，多路复用</p>`,r:{minutes:.75,words:226},t:"load assessment and tuning",y:"a"}}],["/se/devops/unix/availability/optimize-server-and-topology.html",{loader:()=>l(()=>import("./optimize-server-and-topology.html-x162X_aK.js"),__vite__mapDeps([639,1])),meta:{d:1669996395e3,e:`
<h2>Reverse Proxy</h2>
<h2>Optimize memory use</h2>
<h2>MySQL Replication (同步)</h2>
<h3>Reasons Cause Database stopped</h3>
<h3>MySQL Replication</h3>
<p>Master, Slave</p>
<p>Matser 改</p>
<p>Slave 查，查很多</p>
<p>异步同步</p>
<blockquote>
<p>Slave + Load Balance</p>
</blockquote>
<h2>Lightweight Storage Servers</h2>`,r:{minutes:.16,words:49},t:"optimize server and topology",y:"a"}}],["/se/devops/unix/availability/redundancy-and-load-balancing.html",{loader:()=>l(()=>import("./redundancy-and-load-balancing.html-B9YGb5nZ.js"),__vite__mapDeps([640,1])),meta:{d:1669794167e3,e:`
<p>Possible failures</p>
<ul>
<li>Web server failure 服务器失败</li>
</ul>
<p>stand by</p>
<p>spare 方式</p>
<ul>
<li>cold spare</li>
<li>warm spare</li>
<li>hot spare</li>
</ul>
<p>failover 故障转移（实际上是服务转义）</p>
<p>虚拟 IP 技术，大家都用同一个虚拟 IP 地址</p>
<p><a href="http://failover.sh" target="_blank" rel="noopener noreferrer">failover.sh</a></p>`,r:{minutes:.58,words:173},t:"Redundancy and Load Balancing",y:"a"}}],["/se/devops/unix/basic/1.1%20basic-cmd.html",{loader:()=>l(()=>import("./1.1 basic-cmd.html-Bdj6bCvp.js"),__vite__mapDeps([641,1])),meta:{d:1669446166e3,e:`
<p>wildcard character</p>
<h2>命令格式</h2>
<p>三部分：</p>
<ul>
<li>
<p>cmd</p>
</li>
<li>
<p>opts</p>
<p>分类：</p>
<ul>
<li><code>-</code>：简写</li>
<li><code>--</code>：全称，增加可读性（脚本里面一般用全写）</li>
</ul>
<p>常见：</p>
<ul>
<li><code>-a</code>: 全部的</li>
<li><code>-l</code>: 长的、全部信息</li>
<li><code>-R</code>: 递归的（删除文件夹等用）</li>
<li><code>-v</code>: verbose 显示冗余信息，（普通的时候会省略一些东西），这个可以显示全</li>
</ul>
</li>
<li>
<p>args</p>
<p>参数可以有多个</p>
</li>
</ul>`,r:{minutes:7.07,words:2121},t:"1. UNIX 常用指令",y:"a"}}],["/se/devops/unix/basic/1.2.%20vi.html",{loader:()=>l(()=>import("./1.2. vi.html-Bx60Xyek.js"),__vite__mapDeps([642,1])),meta:{d:1669446166e3,e:`
<blockquote>
<p>教材 <em>vimtutor</em></p>
</blockquote>
<h2>状态</h2>
<p>初始是 cmd 模式</p>
<ul>
<li>
<p>cmd</p>
<p>命令模式</p>
<p>浏览：<code>j</code>, <code>k</code> 上下调光标</p>
<p>检索：<code>/</code>，并输入搜索内容（支持正则表达式）、回车，就可以看到结果，按 <code>n</code> 下一个，<code>N</code> 上一个</p>
</li>
<li>
<p>insert</p>
<p>编辑模式</p>
<p>输入 <code>i</code>(或者 <code>a,o</code>)，进入编辑模式</p>
</li>
<li>
<p>Last line</p>
<p>末行模式</p>
<p>输入<code>:</code></p>
<ul>
<li><code>:w</code></li>
<li><code>:q</code></li>
<li><code>:wq</code></li>
<li><code>:q!</code></li>
</ul>
</li>
</ul>`,r:{minutes:2.22,words:665},t:"VI",y:"a"}}],["/se/devops/unix/basic/1.3%20three%20musketeers.html",{loader:()=>l(()=>import("./1.3 three musketeers.html-DXf4W97g.js"),__vite__mapDeps([643,1])),meta:{d:1694772553e3,e:`
<blockquote>
<p>The Three Musketeers</p>
</blockquote>
<p>Linux 三剑客：grep、sed、awk</p>
<h2>grep</h2>
<p>Global Regular Expression Print</p>
<ul>
<li><code>-o</code>选项表示只输出匹配到的内容，而不是整行；</li>
<li><code>-E</code>选项表示使用扩展的正则表达式；</li>
<li><code>\\b</code>表示单词边界，用于确保匹配的是完整的IP地址；</li>
<li><code>[0-9]{1,3}</code>表示匹配1到3位数字；</li>
<li><code>.</code>表示匹配点号</li>
</ul>`,r:{minutes:1.65,words:496},t:"三剑客",y:"a"}}],["/se/devops/unix/basic/10.%20scheduled-tasks.html",{loader:()=>l(()=>import("./10. scheduled-tasks.html-CFj4NdlB.js"),__vite__mapDeps([644,1])),meta:{d:1669446166e3,e:`
<p>自动化运维：遇到问题，写程序，可以复用</p>
<h2>常用指令</h2>
<p>at：在指定时间做一次的</p>
<p>cron：周期性的</p>
<p>anacron：断电导致没有按周期做的内容，保证重启的时候可以被执行</p>
<p>At ...</p>
<p>atq</p>
<p>atrm</p>
<p>batch 以低优先级运行命令</p>
<p>var 下面放的都是常变的内容，比如说 who 命令，他的内容写在 var/run/uxxx 下面写得</p>
<p>spool</p>
<p>需要 at daemon，每分钟检查一次</p>
<h4>init</h4>
<ul>
<li><code>service atd start</code></li>
<li><code>service atd stop</code></li>
</ul>`,r:{minutes:.72,words:216},t:"10. 调度任务",y:"a"}}],["/se/devops/unix/basic/11.%20backups.html",{loader:()=>l(()=>import("./11. backups.html-8mNyshJ-.js"),__vite__mapDeps([645,1])),meta:{d:1669446166e3,e:`
<p>备份的分类：</p>
<ul>
<li>全量备份：所有的都备份</li>
<li>增量备份：只备份修改了的</li>
</ul>
<h3>tar CMD</h3>
<p>tar -cf 压缩</p>
<p>tar -xf 解压</p>
<h3>cpio CMD</h3>
<p>tar 遇到错误会直接崩溃，后面就都不解压了</p>
<p>cpio 会继续往后解压，能解压一个是一个</p>
<p>i</p>
<p>-m: 可以保留文件原本的创建时间</p>
<h3>增量备份</h3>
<p>tar 和 cpio 做增量备份</p>
<p>dump</p>
<p>Bacula：分布式的集群中，做一个备份</p>`,r:{minutes:.39,words:118},t:"11. 备份",y:"a"}}],["/se/devops/unix/basic/12.%20software-management.html",{loader:()=>l(()=>import("./12. software-management.html-DP8cGrZw.js"),__vite__mapDeps([646,1])),meta:{d:1669446166e3,e:`
<h2>分发软件的格式</h2>
<ul>
<li>.tar.gz</li>
<li>.rpm (RHEL, CentOS, Fedora, SUSE, OEL ..) yum</li>
<li>.deb (debian, Ubuntu)</li>
</ul>
<h2>包管理器</h2>
<h3>RPM</h3>
<p>Redhat Package management</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rpm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">e&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:1.13,words:340},t:"12. 软件管理",y:"a"}}],["/se/devops/unix/basic/2.%20account-management.html",{loader:()=>l(()=>import("./2. account-management.html-CI5PzCuL.js"),__vite__mapDeps([647,1])),meta:{d:1669446166e3,e:`
<p>root 下的所有目录</p>
<ul>
<li>Home 一般用户的工作目录</li>
<li>root 是管理员用户的目录</li>
<li>bin</li>
<li>sbin 系统管理命令</li>
<li><strong>etc</strong>：所有的配置文件</li>
</ul>
<p>用 root 可以看到 shadow</p>
<p>Unix 下用<code>:</code>做内容分割</p>
<p>用户在 etc 下的 passwd 里面</p>
<ol>
<li>用户名</li>
<li>x，密码存的地方（x 代表别处，在 shallow 下面）</li>
<li>用户 id</li>
<li>用户组 id</li>
<li>完整名字</li>
<li>主目录</li>
<li>启动时使用的 shell</li>
</ol>`,r:{minutes:1.08,words:325},t:"2. 用户管理",y:"a"}}],["/se/devops/unix/basic/3.%20shell.html",{loader:()=>l(()=>import("./3. shell.html-CgwjTm9f.js"),__vite__mapDeps([648,1])),meta:{d:1669446166e3,e:`
<h3>基本语法</h3>
<ol>
<li>注释：<code>#</code></li>
<li>输出：<code>echo</code></li>
<li>输入：<code>read</code>, 从标准输入读入一个字符串</li>
<li>换行: <code>\\</code>, 一条单一长命令内也可以换行</li>
</ol>
<p>第一行文件头<code>#!</code>，标志该文件是 shell 脚本类型。</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">#!/bin/sh</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:11.13,words:3339},t:"3. Shell",y:"a"}}],["/se/devops/unix/basic/4.1%20booting.html",{loader:()=>l(()=>import("./4.1 booting.html-D9IAgTTG.js"),__vite__mapDeps([649,1])),meta:{d:1669446166e3,e:`
<p><code>boot loaders - grub</code></p>
<p>平时一般用 3，除了图形界面以为的都有，服务器一般就是这个</p>
<p>1 超级用户模式，</p>
<p>software stack，一个软件可能要启动多个进程，如 Spark 等</p>
<p>脚本</p>
<p>service 命令可以自动帮我们找脚本</p>
<p>符号链接：快捷方式</p>
<h3>关机</h3>
<ul>
<li>
<p>init 0</p>
</li>
<li>
<p>shutdown</p>
<p>-r 通知所有用户多长时间后关机</p>
<p>-h</p>
</li>
</ul>`,r:{minutes:.55,words:166},t:"4. Booting 系统启动",y:"a"}}],["/se/devops/unix/basic/4.2%20systemd.html",{loader:()=>l(()=>import("./4.2 systemd.html-BZslVkvR.js"),__vite__mapDeps([650,1])),meta:{d:1669446166e3,e:`
<h3>目的</h3>
<p>增加并发性、减少 shell 开发</p>
<h3>争议</h3>
<p>红帽的，来顶替 init 进程，</p>
<p>违反 unix 哲学，因为过于复杂，不单一职责</p>
<h3>systemctl</h3>
<p>可以控制 systemd 系统和服务管理</p>
<p>systemctl disable/enable xxx 关闭/打开开机自启动</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [name.service]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> stop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [name.service]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> restart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [name.service]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> reload</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [name.service]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [name.service]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is-active</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [name.service] </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 检查是否在运行</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> list-units</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [name.service]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># equals to: chkconfig --list</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> enable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [name.service] </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 打开开机自启动</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> disable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [name.service] </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 关闭开机自启动</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.41,words:123},t:"4.2. systemd",y:"a"}}],["/se/devops/unix/basic/5.%20access-ctrl.html",{loader:()=>l(()=>import("./5. access-ctrl.html-BW8YkZWN.js"),__vite__mapDeps([651,1])),meta:{d:1669446166e3,e:`
<p>文件权限：rwx</p>
<ul>
<li>r: read</li>
<li>w: write</li>
<li>x: executable</li>
</ul>
<p>每 3 位是一个组的权限：所有者（user）、所属组（group）和其他用户（others） 三个组的控制权限</p>
<p>RBAC：role based access control</p>
<p>SELinux：安全强化，模型：least-privilege，什么都改不了就安全</p>
<p>access control list (ACL) 访问控制列表</p>
<p>Real-World Access Control</p>`,r:{minutes:3.4,words:1021},t:"5. 访问控制",y:"a"}}],["/se/devops/unix/basic/6.%20process-ctrl.html",{loader:()=>l(()=>import("./6. process-ctrl.html-CeR0PKnA.js"),__vite__mapDeps([652,1])),meta:{d:1669446166e3,e:`
<p>fork 复制当前进程，状态和 pc 也完全一样，执行 fork 后面部分的程序</p>
<p>换代码、execute 操作</p>
<p>Linux 里面子进程的创建</p>
<p>cow 写时复制</p>
<p>redis 持久化：fork 下来复制，然后主线程的修改，写时复制</p>
<h2>进程死亡的方式</h2>
<ul>
<li>
<p>自行死亡</p>
<p>执行完毕，如，c 的 main 函数，返回值是进程返回值，返回给父进程看</p>
</li>
<li>
<p>被杀死</p>
<p>kill，软中断</p>
<p>kill -l 可以看到所有的信号，谁杀的、怎么死的</p>
<p>kill -9 xxx</p>
</li>
<li>
<p>出错没了，call down</p>
</li>
</ul>`,r:{minutes:4.5,words:1350},t:"6. 进程控制",y:"a"}}],["/se/devops/unix/basic/7.%20Filesystem.html",{loader:()=>l(()=>import("./7. Filesystem.html-DrW4_0bb.js"),__vite__mapDeps([653,1])),meta:{d:1669446166e3,e:`
<p>IDE</p>
<p>SCSI</p>
<p>移动硬盘</p>
<p>hd</p>
<p>sd 开头是窜口磁盘</p>
<p>默认是 8e，Linux LVM，现在是 83</p>
<p>Disk Partitions</p>
<h3>make filesyste</h3>
<p>创建文件系统</p>
<p>Windows 目录森林，每个文件系统都是一棵树</p>
<p>Unix 只有一个根，把他们嫁接成一个树，需要有一个 mount point，挂载点，一般喜欢找到一个空目录 mnt 进行挂载（因为会把原目录里的文件遮蔽）</p>
<p>lost+found</p>
<p>取消挂载：umount+目录名或者设备名都可以</p>`,r:{minutes:4.57,words:1372},t:"7. 文件系统",y:"a"}}],["/se/devops/unix/basic/8.%20Storage.html",{loader:()=>l(()=>import("./8. Storage.html-CveZzHAt.js"),__vite__mapDeps([654,1])),meta:{d:1669446166e3,e:`
<h3>Logical Volume Management (LVM)</h3>
<p>这样有逻辑上的统一调配</p>
<p>服务器，跨盘文件传输非常慢，</p>
<p>通过虚拟化解决，逻辑上组合成一个硬盘，这样 i 节点就不用动了</p>
<p>扩容一般好，动态扩容，不需要停机</p>
<p>支持卷快照</p>
<p>一直在变，快照不太好做，但是 LVM 可以直接做到</p>
<p>在线备份，真备份不放在一块的，防止一起被烧毁</p>
<p>操作</p>
<p>pv：Physical Volume</p>
<p>vg：volume group</p>
<p>lv：logical volume</p>`,r:{minutes:1.2,words:360},t:"8. 存储",y:"a"}}],["/se/devops/unix/basic/9.%20Disk%20Quota.html",{loader:()=>l(()=>import("./9. Disk Quota.html-IXkyFBQx.js"),__vite__mapDeps([655,1])),meta:{d:1669446166e3,e:`
<p>硬盘满了系统就会崩掉</p>
<p>硬盘满了，普通用户登录都登录不了，不过 root 可以登录，因为系统会为 root 预留一定的硬盘空间</p>
<p>系统资源：</p>
<ul>
<li>
<p>i 节点数量</p>
<ul>
<li></li>
</ul>
</li>
</ul>
<p>soft quota 到了这个阈值就提示一下</p>
<p>hard quota 到了就不能再用了</p>
<p>数据库</p>
<p>usrquota，grpquota</p>
<p>etc /etc/fstab</p>
<p>setenforce 安全</p>
<p>好，但是影响性能</p>
`,r:{minutes:.56,words:167},t:"9. Disk Quota 磁盘配额",y:"a"}}],["/se/devops/unix/basic/",{loader:()=>l(()=>import("./index.html-BvtBHPlK.js"),__vite__mapDeps([656,1])),meta:{d:1669446166e3,e:`
`,r:{minutes:.01,words:3},t:"UNIX 基础",y:"a"}}],["/se/devops/unix/basic/network-management.html",{loader:()=>l(()=>import("./network-management.html-BX42UCJL.js"),__vite__mapDeps([657,1])),meta:{d:1670083932e3,e:`
<h2>Interface Configuration</h2>
<p>ifconfig</p>
<h2>Firewall</h2>
<p>iptables</p>
`,r:{minutes:.03,words:10},t:"13. 网络管理",y:"a"}}],["/se/devops/unix/basic/network-services.html",{loader:()=>l(()=>import("./network-services.html-BFLD8olI.js"),__vite__mapDeps([658,1])),meta:{d:1670083932e3,e:`
<h2>ssh</h2>
<p>Secure SHell</p>
<h2>smb</h2>
<p>config</p>
<p>Host 连接的主机的名称，可自定</p>
<p>Hostname 远程主机的 IP 地址</p>
<p>User 用于登录远程主机的用户名</p>
<p>Port 用于登录远程主机的端口</p>
<p>IdentityFile 本地的 id_rsa 的路径</p>
`,r:{minutes:.21,words:64},t:"14. 网络服务",y:"a"}}],["/se/devops/unix/basic/rescue.html",{loader:()=>l(()=>import("./rescue.html-DWlbuRFG.js"),__vite__mapDeps([659,1])),meta:{d:1670083932e3,e:`
`,r:{minutes:.01,words:3},t:"16. 救援",y:"a"}}],["/se/devops/unix/basic/security.html",{loader:()=>l(()=>import("./security.html-EyAOhhK5.js"),__vite__mapDeps([660,1])),meta:{d:1670083932e3,e:`
<pre><code>git clone -b master --single-branch git@coding.jd.com:liudawei47/CronDeleteJob.git .

ls -Al

git config --global --add safe.directory work

git fetch --tags

echo "tags--------"

git tag

git branch

echo | git describe --tag
</code></pre>
`,r:{minutes:.11,words:33},t:"15. 安全",y:"a"}}],["/se/lang/cpp/framework/build.html",{loader:()=>l(()=>import("./build.html-DngVDXoU.js"),__vite__mapDeps([661,1])),meta:{d:1732240892e3,e:`
<p>CMake (DSL难用)</p>
<p>Bazel (Blaze开源版)，用Python写构建脚本，可以通过插件支持cmake的包</p>
`,r:{minutes:.1,words:29},t:"Build Tool",y:"a"}}],["/se/lang/cpp/framework/cv.html",{loader:()=>l(()=>import("./cv.html-C-NkBOJb.js"),__vite__mapDeps([662,1])),meta:{d:1732240892e3,e:`
<p>图形处理软件</p>
`,r:{minutes:.02,words:7},t:"OpenCV",y:"a"}}],["/se/lang/cpp/framework/gl.html",{loader:()=>l(()=>import("./gl.html-DW3lHjIU.js"),__vite__mapDeps([663,1])),meta:{d:1731177473e3,e:`
`,r:{minutes:0,words:1},t:"OpenGL",y:"a"}}],["/se/lang/cpp/framework/pm.html",{loader:()=>l(()=>import("./pm.html-WPwooidY.js"),__vite__mapDeps([664,1])),meta:{d:1732240892e3,e:`
<p><a href="https://conan.io" target="_blank" rel="noopener noreferrer">Conan</a></p>
<p>VCPkg</p>
`,r:{minutes:.02,words:6},t:"Package Manager",y:"a"}}],["/se/lang/cpp/framework/qt.html",{loader:()=>l(()=>import("./qt.html-DgLBzCOO.js"),__vite__mapDeps([665,1])),meta:{d:1715153702e3,e:`
<p><a href="https://wizardforcel.gitbooks.io/qt-beginning/content/26.html" target="_blank" rel="noopener noreferrer">https://wizardforcel.gitbooks.io/qt-beginning/content/26.html</a></p>
<p>clion, qt creator, QT Designer</p>
<p>Qt Widgets, Qt Quick(QML)</p>
<p>Qss</p>
<p>QtSql, QtNetwork</p>
`,r:{minutes:.06,words:17},t:"QT",y:"a"}}],["/se/lang/frontend/css/anchor.html",{loader:()=>l(()=>import("./anchor.html-BUFIrU8K.js"),__vite__mapDeps([666,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/se/lang/frontend/html/feature.html",{loader:()=>l(()=>import("./feature.html-CVjMmoU0.js"),__vite__mapDeps([667,1])),meta:{d:1693269904e3,e:`
<h3>HTML 1.0</h3>
<ul>
<li><strong>首次提出</strong>：这是最早的HTML版本，由Tim Berners-Lee在1991年左右创建。它非常基础，包含了链接、标题、列表等简单元素。</li>
</ul>
<h3>HTML 2.0</h3>
<ul>
<li><strong>正式规范</strong>：在1995年成为IETF的标准。HTML 2.0包括了更多的元素，如表格（<code>&lt;table&gt;</code>）和表单（<code>&lt;form&gt;</code>），这对于网页的交互性提升至关重要。</li>
</ul>
<h3>HTML 3.2</h3>`,r:{minutes:1.6,words:479},t:"Feature",y:"a"}}],["/se/lang/frontend/js/closure.html",{loader:()=>l(()=>import("./closure.html-6YwN4Nlv.js"),__vite__mapDeps([668,1])),meta:{d:1703688112e3,e:`
<h3>防抖</h3>
<p>请你编写一个函数，接收参数为另一个函数和一个以毫秒为单位的时间 <code>t</code> ，并返回该函数的 <strong>函数防抖</strong> 后的结果。</p>
<p><strong>函数防抖</strong> 方法是一个函数，它的执行被延迟了 <code>t</code> 毫秒，如果在这个时间窗口内再次调用它，它的执行将被取消。你编写的防抖函数也应该接收传递的参数。</p>
<p>例如，假设 <code>t = 50ms</code> ，函数分别在 <code>30ms</code> 、 <code>60ms</code> 和 <code>100ms</code> 时调用。前两个函数调用将被取消，第三个函数调用将在 <code>150ms</code> 执行。如果改为 <code>t = 35ms</code> ，则第一个调用将被取消，第二个调用将在 <code>95ms</code> 执行，第三个调用将在 <code>135ms</code> 执行。</p>`,r:{minutes:.73,words:220},t:"Closure 闭包",y:"a"}}],["/se/lang/frontend/js/design-pattern.html",{loader:()=>l(()=>import("./design-pattern.html-8cPLPAfd.js"),__vite__mapDeps([669,1])),meta:{d:1715153702e3,e:`<p><a href="https://zhuanlan.zhihu.com/p/163032982" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/163032982</a></p>
<p>原型链</p>
`,r:{minutes:.02,words:5},t:"",y:"a"}}],["/se/lang/frontend/js/promise.html",{loader:()=>l(()=>import("./promise.html-B23YcP7l.js"),__vite__mapDeps([670,1])),meta:{d:1700646963e3,e:`
<p><a href="https://zhuanlan.zhihu.com/p/153115675" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/153115675</a></p>
<p><a href="https://juejin.cn/post/7011755708496478215" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7011755708496478215</a></p>
<p>解决回调地狱问题</p>`,r:{minutes:.04,words:13},t:"Promise",y:"a"}}],["/se/lang/java/JUC/",{loader:()=>l(()=>import("./index.html-DzLHx1oQ.js"),__vite__mapDeps([671,1])),meta:{d:1672663528e3,e:`
<p>Java.util.concurrent</p>
<p><a href="https://leetcode.cn/leetbook/detail/concurrency/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/leetbook/detail/concurrency/</a></p>
<p>原理参考：深入理解Java虚拟机-周志明-高效并发</p>
<h3>使用多线程可能带来什么问题?</h3>
<p>并发编程的目的就是为了能提高程序的执行效率提高程序运行速度，但是并发编程并不总是能提高程序运行速度的，而且并发编程可能会遇到很多问题，比如：</p>`,r:{minutes:.84,words:253},t:"JUC",y:"a"}}],["/se/lang/java/basic/%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83.html",{loader:()=>l(()=>import("./代码规范.html-DjhC8Iq6.js"),__vite__mapDeps([672,1])),meta:{d:1678024743e3,e:`
<h2>命名规范</h2>
<p><a href="https://blog.csdn.net/csdn_life18/article/details/126335665" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/csdn_life18/article/details/126335665</a></p>
<p><a href="http://t.zoukankan.com/leon618-p-7469638.html" target="_blank" rel="noopener noreferrer">http://t.zoukankan.com/leon618-p-7469638.html</a></p>`,r:{minutes:1.37,words:412},t:"代码规范",y:"a"}}],["/se/lang/java/basic/%E5%85%B3%E9%94%AE%E5%AD%97.html",{loader:()=>l(()=>import("./关键字.html-JYNTorwx.js"),__vite__mapDeps([673,1])),meta:{d:1679578424e3,e:`
<table>
<thead>
<tr>
<th style="text-align:left">分类</th>
<th style="text-align:left">关键字</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">访问控制</td>
<td style="text-align:left">private protected public</td>
</tr>
<tr>
<td style="text-align:left">类，方法和变量修饰符</td>
<td style="text-align:left">abstract class extends final implements interface native new static strictfp synchronized transient volatile enum</td>
</tr>
<tr>
<td style="text-align:left">程序控制</td>
<td style="text-align:left">break continue return do while if else for instanceof switch case default assert</td>
</tr>
<tr>
<td style="text-align:left">错误处理</td>
<td style="text-align:left">try catch throw throws finally</td>
</tr>
<tr>
<td style="text-align:left">包相关</td>
<td style="text-align:left">import package</td>
</tr>
<tr>
<td style="text-align:left">基本类型</td>
<td style="text-align:left">boolean byte char double float int long short</td>
</tr>
<tr>
<td style="text-align:left">变量引用</td>
<td style="text-align:left">super this void</td>
</tr>
<tr>
<td style="text-align:left">保留字</td>
<td style="text-align:left">goto const</td>
</tr>
</tbody>
</table>`,r:{minutes:1.36,words:409},t:"关键字",y:"a"}}],["/se/lang/java/basic/%E5%BC%82%E5%B8%B8.html",{loader:()=>l(()=>import("./异常.html-CpMso4Vj.js"),__vite__mapDeps([674,1])),meta:{d:1680090419e3,e:`
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/types-of-exceptions-in-java.png" alt="Java 异常类层次结构图" loading="lazy"></p>
<h3>Exception 和 Error 区别</h3>
<p>所有异常都有一个共同的祖先：<code>Throwable</code> 类。该类有两个重要的子类:</p>
<ul>
<li>
<p><strong><code>Exception</code></strong>：程序本身可以处理的异常，可以通过 <code>catch</code> 来进行捕获。<code>Exception</code> 又可以分为：</p>
<ul>
<li>Checked Exception (受检查异常，必须处理)</li>
<li>Unchecked Exception (不受检查异常，可以不处理)。</li>
</ul>
</li>
<li>
<p><strong><code>Error</code></strong>：<code>Error</code> 属于程序无法处理的错误 ，我们没办法通过 <code>catch</code> 来进行捕获不建议通过<code>catch</code>捕获 。例如</p>
<ul>
<li>Java 虚拟机运行错误（<code>Virtual MachineError</code>）</li>
<li>虚拟机内存不够错误（<code>OutOfMemoryError</code>）</li>
<li>栈溢出错误（<code>StackOverFlowError</code>）</li>
<li>类定义错误（<code>NoClassDefFoundError</code>）</li>
</ul>
<p>这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。</p>
</li>
</ul>`,r:{minutes:5.75,words:1725},t:"异常",y:"a"}}],["/se/lang/java/basic/%E8%BF%90%E7%AE%97%E7%AC%A6.html",{loader:()=>l(()=>import("./运算符.html-CwrtCsew.js"),__vite__mapDeps([675,1])),meta:{d:1677504602e3,e:`
<ol>
<li>赋值运算符</li>
<li>算术运算符</li>
<li>关系运算符</li>
<li>逻辑运算符</li>
<li>位运算符</li>
<li>三目运算符</li>
<li>instanceof运算符</li>
</ol>
<h2>单目运算符</h2>
<h3><code>++</code>/<code>--</code></h3>
<h3><code>!</code></h3>
<h2>双目运算符</h2>
<h3>赋值运算符</h3>
<p><code>=</code></p>
<p>可以结合算数运算符结合成复合赋值运算符，<code>+=</code>,<code>/=</code></p>`,r:{minutes:1.7,words:510},t:"运算符",y:"a"}}],["/se/lang/java/collections/Concurrent.html",{loader:()=>l(()=>import("./Concurrent.html-9Xhin_Pw.js"),__vite__mapDeps([676,1])),meta:{d:1675410392e3,e:`
<p>Vector, Stack, HashTable 都是全局锁，每个方法都在同一个锁上同步</p>
<ul>
<li><strong><code>ConcurrentHashMap</code></strong> : 线程安全的 <code>HashMap</code>，<code>ConcurrentHashMap</code>并不是将每个方法都在同一个锁上同步并使得每次只能有一个线程访问容器，而是使用一种粒度更细的加锁机制—<strong>分段锁</strong>来实现更大程度的共享。1.8以后是每个 Node 一把锁</li>
<li><strong><code>ConcurrentSkipListMap</code></strong> : 跳表的实现。这是一个 Map，使用跳表的数据结构进行快速查找。</li>
<li><strong><code>ConcurrentSkipListSet</code></strong> : 跳表的实现。这是一个 Set，使用跳表的数据结构进行快速查找。</li>
<li><strong><code>ConcurrentLinkedQueue</code></strong> : 高效的并发队列，使用链表实现。可以看做一个线程安全的 <code>LinkedList</code>，这是一个非阻塞队列。</li>
<li><strong><code>BlockingQueue</code></strong> : 这是一个接口，JDK 内部通过链表、数组等方式实现了这个接口。表示阻塞队列，非常适合用于作为数据共享的通道。</li>
<li><strong><code>CopyOnWriteArrayList</code></strong> : 线程安全的 <code>List</code>，在读多写少的场合性能非常好，远远好于 <code>Vector</code>。</li>
<li><strong><code>CopyOnWriteArraySet</code></strong> : 线程安全的 <code>Set</code>，在读多写少的场合性能非常好。</li>
</ul>`,r:{minutes:4.5,words:1349},t:"并发容器",y:"a"}}],["/se/lang/java/collections/",{loader:()=>l(()=>import("./index.html-CBELcEQv.js"),__vite__mapDeps([677,1])),meta:{d:1679321449e3,e:`
<p>Java 集合的架构如下</p>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/java-collection-hierarchy.png" alt="Java 集合框架概览" loading="lazy"></p>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-03-16 21.15.43.png" alt="截屏2023-03-16 21.15.43" loading="lazy"></p>`,r:{minutes:5.11,words:1532},t:"集合",y:"a"}}],["/se/lang/java/collections/collection.html",{loader:()=>l(()=>import("./collection.html-Du4hQ_Ia.js"),__vite__mapDeps([678,1])),meta:{d:1679321449e3,e:`
<h2>List 接口</h2>
<ul>
<li>
<p>Vector，List 接口旧的实现，是线程安全的，方法前都加了 synchronized</p>
<p>Stack 是继承自 Vector 的类，但是一般不推荐使用，ArrayDeque 更快</p>
</li>
<li>
<p>ArrayList</p>
</li>
<li>
<p>LinkedList</p>
</li>
</ul>
<h3>ArrayList</h3>
<h4>初始容量</h4>
<p>如果是无参构造，初始容量是 0，加入第一个元素的时候会扩容成 10。</p>
<h4>扩容机制</h4>
<p>当装满的时候，会扩容数组大小为 1.5 倍。</p>`,r:{minutes:3.3,words:991},t:"Collection 接口",y:"a"}}],["/se/lang/java/collections/map.html",{loader:()=>l(()=>import("./map.html-D7wJQ_F4.js"),__vite__mapDeps([679,1])),meta:{d:1679321449e3,e:`
<p>主要根据集合的特点来选用，比如我们需要根据键值获取到元素值时就选用 Map 接口下的集合，需 要排序时选择 TreeMap ,不需要排序时就选择 HashMap ,需要保证线程安全就选用 ConcurrentHashMap 。</p>
<p>当我们只需要存放元素值时，就选择实现 Collection 接口的集合，需要保证元素唯一时选择实现 Set 接口的集合比如 TreeSet 或 HashSet，不需要就选择实现 List 接口的比如 ArrayList 或 LinkedList ，然后再根据实现这些接口的集合的特点来选用。</p>
<h2>HashMap</h2>
<p>capacity，factor</p>`,r:{minutes:14.11,words:4232},t:"Map 接口",y:"a"}}],["/se/lang/java/feature/",{loader:()=>l(()=>import("./index.html-C14o6fDz.js"),__vite__mapDeps([680,1])),meta:{d:1700646963e3,e:`
<p>版本特性</p>
<ul>
<li>Alpha</li>
<li>Beta</li>
<li>RC(Release Candidate)</li>
<li>GA</li>
<li>Stable Release</li>
<li>LTS</li>
</ul>
`,r:{minutes:.05,words:14},t:"Feature",y:"a"}}],["/se/lang/java/feature/java11.html",{loader:()=>l(()=>import("./java11.html-majRJFKd.js"),__vite__mapDeps([681,1])),meta:{d:1700646963e3,e:`
<h2>HTTP Client</h2>
<p>新版 Java 中，Http Client 的包名由 jdk.incubator.http 改为 java.net.http，该 API 通过 CompleteableFutures 提供非阻塞请求和响应语义，可以联合使用以触发相应的动作，并且 RXFlow 的概念也在 Java 11 中得到了实现。现在，在用户层请求发布者和响应发布者与底层套接字之间追踪数据流更容易了。这降低了复杂性，并最大程度上提高了 HTTP/1 和 HTTP/2 之间的重用的可能性。</p>
<h2>Module</h2>
<h2>String API</h2>
<p><code>repeat</code></p>`,r:{minutes:.44,words:131},t:"Java 11",y:"a"}}],["/se/lang/java/feature/java17.html",{loader:()=>l(()=>import("./java17.html-CObuqKvq.js"),__vite__mapDeps([682,1])),meta:{d:1700646963e3,e:`
<h2>Switch</h2>
<h3>表达式扩展</h3>
<h3>模式匹配</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">static</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> formatterPatternSwitch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> o) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> switch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (o) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        case</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"null"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        case</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">format</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"int %d"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,i);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        case</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Long</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> l </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">format</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"long %d"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,l);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        case</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Double</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> d </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">format</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"double %f"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,d);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        case</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> s </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">format</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"String %s"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,s);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        default</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> -&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> o</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getclass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getSimpleName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">""</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">o</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.48,words:443},t:"Java 17",y:"a"}}],["/se/lang/java/feature/java21.html",{loader:()=>l(()=>import("./java21.html-CWsNa78w.js"),__vite__mapDeps([683,1])),meta:{d:1700646963e3,e:`
<h2>VirtualThread</h2>
<h2>String Template</h2>
`,r:{minutes:.02,words:5},t:"Java 21",y:"a"}}],["/se/lang/java/feature/java8.html",{loader:()=>l(()=>import("./java8.html-Dou623NO.js"),__vite__mapDeps([684,1])),meta:{d:1679321449e3,e:`
<h2>Stream</h2>
<p>java 新增了 <code>java.util.stream</code> 包，它和之前的流大同小异。之前接触最多的是资源流，比如<code>java.io.FileInputStream</code>，通过流把文件从一个地方输入到另一个地方，它只是内容搬运工，对文件内容不做任何<em>CRUD</em>。</p>
<p><code>Stream</code>依然不存储数据，不同的是它可以检索(Retrieve)和逻辑处理集合数据、包括筛选、排序、统计、计数等。可以想象成是 Sql 语句。</p>
<p>它的源数据可以是 <code>Collection</code>、<code>Array</code> 等。由于它的方法参数都是函数式接口类型，所以一般和 Lambda 配合使用。</p>`,r:{minutes:3.65,words:1095},t:"Java 8",y:"a"}}],["/se/lang/java/io/",{loader:()=>l(()=>import("./index.html-BYRUf7zB.js"),__vite__mapDeps([685,1])),meta:{d:1700646963e3,e:`
<ul>
<li>
<p>BIO (Blocking I/O)</p>
<p><strong>同步阻塞 IO 模型</strong></p>
</li>
<li>
<p>NIO (Non-blocking I/O)</p>
<p><strong>I/O 多路复用模型</strong></p>
</li>
<li>
<p>AIO (Asynchronous I/O)</p>
<p>AIO 也就是 NIO 2。Java 7 中引入了 NIO 的改进版 NIO 2,它是异步 IO 模型。</p>
</li>
</ul>
<h2>设计模式</h2>
<h3>装饰器模式</h3>
<p><strong>装饰器（Decorator）模式</strong> 可以在不改变原有对象的情况下拓展其功能。</p>`,r:{minutes:2.27,words:680},t:"IO",y:"a"}}],["/se/lang/java/io/nio.html",{loader:()=>l(()=>import("./nio.html-FGuK0y3e.js"),__vite__mapDeps([686,1])),meta:{d:1715153702e3,e:`
<p>在传统的 Java I/O 模型（BIO）中，I/O 操作是以阻塞的方式进行的。也就是说，当一个线程执行一个 I/O 操作时，它会被阻塞直到操作完成。这种阻塞模型在处理多个并发连接时可能会导致性能瓶颈，因为需要为每个连接创建一个线程，而线程的创建和切换都是有开销的。</p>
<p>为了解决这个问题，在 Java1.4 版本引入了一种新的 I/O 模型 — <strong>NIO</strong> （New IO，也称为 Non-blocking IO） 。NIO 弥补了同步阻塞 I/O 的不足，它在标准 Java 代码中提供了非阻塞、面向缓冲、基于通道的 I/O，可以使用少量的线程来处理多个连接，大大提高了 I/O 效率和并发。</p>`,r:{minutes:.85,words:254},t:"NIO",y:"a"}}],["/se/lang/java/jvm/",{loader:()=>l(()=>import("./index.html-DaP9vXNp.js"),__vite__mapDeps([687,1])),meta:{d:1719451307e3,e:`
<p>参考引文：深入理解Java虚拟机-周志明</p>
<ul>
<li>自动内存管理
<ul>
<li>内存区域</li>
<li>垃圾回收</li>
</ul>
</li>
<li>执行系统
<ul>
<li>类文件结构</li>
<li>类加载机制</li>
<li>字节码引擎</li>
</ul>
</li>
<li>编译优化
<ul>
<li>前端编译
<ul>
<li>javac编译器</li>
<li>语法糖</li>
</ul>
</li>
<li>后端编译
<ul>
<li>即时编译器 JIT</li>
<li>提前编译器</li>
<li>编译器优化</li>
</ul>
</li>
</ul>
</li>
<li>高效并发
<ul>
<li>JMM</li>
<li>线程协程</li>
<li>线程安全</li>
<li>锁优化</li>
</ul>
</li>
</ul>`,r:{minutes:.34,words:102},t:"Java Virtual Machine",y:"a"}}],["/se/lang/java/jvm/%E5%8F%82%E6%95%B0.html",{loader:()=>l(()=>import("./参数.html-CdxNz3o1.js"),__vite__mapDeps([688,1])),meta:{d:1715153702e3,e:`
<h2>堆内存相关</h2>
<p><img src="https://javaguide.cn/assets/内存区域常见配置参数-YVcjKi3R.png" alt="内存区域常见配置参数" loading="lazy"></p>
<ul>
<li><code>-XX:MaxHeapFreeRatio</code> : 设置 GC 后, 堆空闲的最大百分比，以避免收缩。</li>
<li><code>-XX:SurvivorRatio</code> : eden/survivor 空间的比例, 例如<code>-XX:SurvivorRatio=6</code> 设置每个 survivor 和 eden 之间的比例为 1:6。</li>
<li><strong><code>-XX:NewRatio=&lt;int&gt;</code></strong> 来设置老年代与新生代内存的比值。</li>
</ul>`,r:{minutes:7.67,words:2301},t:"参数",y:"a"}}],["/se/lang/java/jvm/%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5.html",{loader:()=>l(()=>import("./问题排查.html-BT_GG7ij.js"),__vite__mapDeps([689,1])),meta:{d:1684318252e3,e:`
<h2>内存泄漏</h2>
<h2>CPU 过高/爆掉</h2>
<p>JVM 调优过程中，如果 CPU 爆掉了，可以通过以下步骤进行排查：</p>
<ol>
<li>
<p>使用 top 命令查看 CPU 占用率最高的进程，确定是哪个进程导致了 CPU 爆满。</p>
</li>
<li>
<p>使用 jstack 命令获取 Java 进程的线程堆栈信息，查看哪些线程正在运行，是否存在死循环、长时间等待等问题。</p>
</li>
<li>
<p>使用 jmap 命令获取 Java 进程的内存信息，查看堆内存使用情况、GC 情况等，是否存在内存泄漏等问题。</p>
</li>
<li>
<p>使用 jstat 命令获取 Java 进程的 GC 情况，查看 GC 频率、GC 时间等，是否存在频繁的 Full GC 等问题。</p>
</li>
<li>
<p>根据以上信息，确定问题所在，进行相应的优化和调整，例如优化代码、调整 JVM 参数、增加硬件资源等。</p>
</li>
</ol>`,r:{minutes:.95,words:285},t:"线上问题排查",y:"a"}}],["/se/lang/python/framework/",{loader:()=>l(()=>import("./index.html-Be3C3_sV.js"),__vite__mapDeps([690,1])),meta:{d:1731177473e3,e:`
<p>DRF(Django rest framework)</p>
<p>Flask</p>
<p>FastAPI</p>
`,r:{minutes:.02,words:7},t:"Framework",y:"a"}}],["/test/GRE/VERBAL/Blank/",{loader:()=>l(()=>import("./index.html-CPE_A-L9.js"),__vite__mapDeps([691,1])),meta:{d:1672653291e3,e:`
<h3>题型</h3>
<ul>
<li>
<p>文本填空</p>
<p>类似完形填空</p>
<ul>
<li>单空</li>
<li>双空</li>
<li>三空</li>
</ul>
</li>
<li>
<p>句子等价</p>
<p>六选二：</p>
<p>等价词在宏观上可能有语义区别</p>
<p>在原题的语义环境中进行等价词的理解</p>
</li>
</ul>
<p>时间前后对比，一定有变化</p>
<ul>
<li>相反变化，出现多</li>
<li>程度变化，出现少</li>
</ul>
<p>时间前后对比</p>
<ul>
<li>until=before</li>
<li>past</li>
</ul>`,r:{minutes:.32,words:95},t:"Blank",y:"a"}}],["/test/TOEFL/LISTENING/BEAT/",{loader:()=>l(()=>import("./index.html-CxzV71EA.js"),__vite__mapDeps([692,1])),meta:{d:1696218053e3,e:`
<h2>日程表</h2>
<table>
<thead>
<tr>
<th>日程</th>
<th>任务</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>周一</td>
<td>模拟测试</td>
<td>计时测验 总结反思</td>
</tr>
<tr>
<td>周二三</td>
<td>精练讲解</td>
<td>基础题库</td>
</tr>
<tr>
<td>周四五</td>
<td>精练讲解</td>
<td>拓展题库</td>
</tr>
<tr>
<td>周六</td>
<td>学科强化</td>
<td>高频学科 精听强化</td>
</tr>
<tr>
<td>周日</td>
<td>本周复习</td>
<td>错题复盘 保持语境</td>
</tr>
</tbody>
</table>`,r:{minutes:1.74,words:521},t:"方法",y:"a"}}],["/test/TOEFL/LISTENING/BEAT/%E6%96%B0%E6%96%B9%E6%B3%95.html",{loader:()=>l(()=>import("./新方法.html-wn4ORI1I.js"),__vite__mapDeps([693,1])),meta:{d:1694741314e3,e:`
<p>五套 85-90% 音频信号</p>
<p>X 想象力</p>
<p>精练、精听</p>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/image-20230912224631931.png" alt="image-20230912224631931" loading="lazy"></p>
<p>每题30s</p>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/image-20230912225925864.png" alt="image-20230912225925864" loading="lazy"></p>`,r:{minutes:.85,words:254},t:"BEAT 方法",y:"a"}}],["/test/TOEFL/LISTENING/%E5%9F%BA%E7%A1%80%E8%AF%BE/%E5%8D%95%E8%AF%8D.html",{loader:()=>l(()=>import("./单词.html-1_sLCf57.js"),__vite__mapDeps([694,1])),meta:{d:1691648992e3,e:`
<h2>音标</h2>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-08-07 23.53.54.png" alt="截屏2023-08-07 23.53.54" loading="lazy"></p>
<h3>元音</h3>
<p>feel fill fell full fool fail<br>
heal hill hell hall hole hail<br>
fan fawn fun phone feign fend</p>
<h3>辅音</h3>
<p>face vase waste<br>
fence vent went</p>`,r:{minutes:1.33,words:398},t:"单词",y:"a"}}],["/test/TOEFL/LISTENING/%E5%9F%BA%E7%A1%80%E8%AF%BE/%E5%8F%A5%E5%AD%90.html",{loader:()=>l(()=>import("./句子.html-rRvlAOSn.js"),__vite__mapDeps([695,1])),meta:{d:1691648992e3,e:`
<h2>连读</h2>
<h3>辅音 + 元音</h3>
<blockquote>
<p>同一个意群直接连，当作一个单词，可以出现浊化、失暴、弱读等情况</p>
</blockquote>
<ul>
<li>read only</li>
<li>fall off</li>
<li>an art</li>
</ul>
<h4>浊化连读</h4>
<p>that I'm = the dime</p>
<p>Out in</p>
<p>They tell me <em>the dime</em> easier to understand.</p>
<p>They tell me <strong>that I'm</strong> easier to understand.</p>`,r:{minutes:.93,words:280},t:"句子",y:"a"}}],["/test/TOEFL/LISTENING/%E5%9F%BA%E7%A1%80%E8%AF%BE/%E5%9F%BA%E7%A1%80.html",{loader:()=>l(()=>import("./基础.html-DEZsPkgo.js"),__vite__mapDeps([696,1])),meta:{d:1684318252e3,e:`
<p>音标</p>
<p>单词读法</p>
<p>单词音变</p>
<p>连读弱读爆破等规则</p>
<p>拼读法联系段落</p>
<p>句子精听步骤讲解</p>
<p>精听段落训练及拼读法巩固</p>
<p>清音：</p>
<p>浊音：</p>
<p>元音都是浊音，后面跟 s 的时候就读 z</p>
<h2>音标</h2>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-05-14 15.39.44.png" alt="截屏2023-05-14 15.39.44" loading="lazy"></p>`,r:{minutes:4.72,words:1417},t:"基础",y:"a"}}],["/test/TOEFL/LISTENING/%E5%9F%BA%E7%A1%80%E8%AF%BE/%E6%AE%B5%E8%90%BD.html",{loader:()=>l(()=>import("./段落.html-DpHNj7wr.js"),__vite__mapDeps([697,1])),meta:{d:1691648992e3,e:`
<h2>难点分类</h2>
<h3>语音类</h3>
<p>And industrial applications of <strong>refrigerated air</strong> have been extremely important.</p>
<p>The shadows underneath the paint showed <strong>folds in clothes and</strong> jewels (<s>their subjects wore</s>).</p>
<h3>结构类</h3>
<p>Most current artists place <strong>more</strong> emphasis on the painting's surface, its texture on their art work <strong>than</strong> the display of colors and lines.</p>`,r:{minutes:.98,words:294},t:"段落",y:"a"}}],["/test/TOEFL/LISTENING/%E6%9D%B0%E5%93%A5%E8%AF%BE/1.%20%E4%B8%AD%E5%BF%83%E9%80%BB%E8%BE%91%E7%B2%BE%E5%90%AC%E6%B3%95.html",{loader:()=>l(()=>import("./1. 中心逻辑精听法.html-lnhfyHWx.js"),__vite__mapDeps([698,1])),meta:{d:1669446166e3,e:`
<p>提炼简化能力</p>
<h2>中心逻辑</h2>
<p>理解目的：全文中心与逻辑结构</p>
<p>精听方式：在讲什么、为什么讲、要讲什么</p>
<h3>中心句</h3>
<p>中心：中心句，文章是围绕着中心句来说的而不是中心词</p>
<p><strong>中心句：完整的有因果逻辑的句子</strong></p>
<blockquote>
<p>很多真题里面标志句后面跟的是中心词，并没有跟着完整的中心句。<strong>经常是中心词，没有出现中心句</strong></p>
</blockquote>
<p>中心句意识</p>
<p>如果中心句中的核心词未知，则讲座一开始会先讲这个概念</p>`,r:{minutes:3.65,words:1096},t:"中心逻辑精听法",y:"a"}}],["/test/TOEFL/LISTENING/%E6%9D%B0%E5%93%A5%E8%AF%BE/2.%20%E9%A2%98%E5%9E%8B.html",{loader:()=>l(()=>import("./2. 题型.html-Vkcfeg3e.js"),__vite__mapDeps([699,1])),meta:{d:1669446166e3,e:`
<p>音节听力能力，记音节</p>
<p>题型现状：重听题变少，态度和多选变多</p>
<h2>听力题型</h2>
<h3>题型目的</h3>
<p>不可能做到全部都听懂，所以需要理解出题和做题的思路。</p>
<h3>题型判断标准</h3>
<p>标准：题型 = 题干关键词 + 正确选项</p>
<blockquote>
<p>平时练习的时候判断，来懂这个思路</p>
</blockquote>
<p>题干关键词 + 正确选项来判断题型：平时练习的时候判断，来懂这个思路</p>
<h4>考查形式</h4>
<p>（不重要）</p>
<ul>
<li>
<p>细节题：在听力里不分细节题和推断题</p>
<p>say = infer = imply = explain = illustrate = demonstrate = 说</p>
</li>
<li>
<p>目的题：why，展开证明中心的目的 or 细节证明中心的目的（中心）</p>
</li>
<li>
<p>多选题：看在考两个什么，两个细节 or <strong>两个中心</strong>（居多）</p>
</li>
<li>
<p>重听题：现在很少了，让位给态度题、多选题了</p>
</li>
<li>
<p>态度题：大态度、小态度、多个态度</p>
</li>
</ul>`,r:{minutes:2.19,words:658},t:"题型",y:"a"}}],["/test/TOEFL/LISTENING/%E6%9D%B0%E5%93%A5%E8%AF%BE/3.%20%E7%AC%94%E8%AE%B0%E6%B3%95.html",{loader:()=>l(()=>import("./3. 笔记法.html-C1Hh9VOM.js"),__vite__mapDeps([700,1])),meta:{d:1669446166e3,e:`
<p>取决于题型</p>
<h2>笔记的意义</h2>
<ol>
<li>
<p>心态</p>
<p>不甘心：❌ 会错过重要听力的内容，也不理解意思；</p>
<p>会走神：❌ 找别的方法，如盯着一个地方看；</p>
<p>怕忘记：❌ 听懂了主要内容，基本上不会忘，而且答案选项可以帮回忆，脑补；</p>
<p>找答案：对，但是优先保听</p>
</li>
<li>
<p>结合出题</p>
<p>答案选项可以帮回忆，脑补；</p>
</li>
<li>
<p>什么时候记</p>
<p>理解，不影响后面听的时候记</p>
<p>23 分以下的同学不要记笔记</p>
<p>除非特别简单，能完全听懂，否则少记</p>
<p>勉强听懂的文章，不太能记笔记，保听少记</p>
<p>24 分是听懂个大概</p>
<p>25、27 分的同学也要少记笔记，</p>
<p>低分段中分段，笔记越少越好</p>
<p>高分段，听懂更多，有时间记意思</p>
<p>尽量 100%精力去听，少记笔记，只记主干</p>
<blockquote>
<p>没有理解不要记</p>
</blockquote>
<p>中心句，听出来不一定记，因为时间很短，记中心词无效（因为全文都在说），记别的又费时间</p>
</li>
<li>
<p>记哪些内容</p>
<p>全文中心 + 段落中心 + 段内展开</p>
<p>细节不记因为基本不考且很多，而且听懂就能选</p>
</li>
<li>
<p>怎么记合适</p>
<p>笔记 + 画图 + 脑补</p>
<p>笔记：速记符号，简写、汉字、符号</p>
<p>逻辑</p>
<ul>
<li>原因，∵</li>
<li>对比，vs</li>
<li>转折，Z</li>
<li>并列，1 2 3</li>
</ul>
<p>好坏+-，⬆️⬇️</p>
</li>
</ol>`,r:{minutes:1.4,words:420},t:"笔记法",y:"a"}}],["/test/TOEFL/LISTENING/%E6%A4%85%E5%90%AC/",{loader:()=>l(()=>import("./index.html-cAT-UJ8E.js"),__vite__mapDeps([701,1])),meta:{d:1696818614e3,e:`
<p>28 以下其实都是没听懂，28 以上才是听懂</p>
<p>几句没听懂也不影响，因为重要的信息很多地方是重复，听懂一处即可理解</p>
<p>没记住，无所谓，留下印象，后面题目的选项都会有非常好的提示</p>
<p>训练要做段听懂的训练，而不是单句训练，因为有一整段上下文，更容易听懂。单句很难，且无意义</p>
<p>主旨题如果是多选题，那就是两个大层次的段落主旨</p>
<h3>心法</h3>
<ol>
<li>
<p>不要记笔记，一心别二用。非听力记笔记（写作口语）</p>
<p>25 的不记笔记=》26/27</p>
</li>
<li>
<p>想不起来的内容在题目中会有提示</p>
</li>
<li>
<p>题目除了主旨第一题，重听题最后一个，其他按照顺序来出</p>
</li>
<li>
<p>内存 50s 足够。分层 -- 主动清内存 熟悉套路</p>
<p>一层大概就是 40-50s</p>
<p>分层标志：now, well, but, 天使音</p>
</li>
<li>
<p>看阅读也不一定能看懂</p>
</li>
<li>
<p>坚持（单篇-解释，60 万字到满分）</p>
<p>没听懂的东西，坚持，后面会有解释</p>
<p>每篇文章重复听五遍：最后 1.2-1.5 倍速</p>
</li>
</ol>`,r:{minutes:11.78,words:3533},t:"椅听方法论",y:"a"}}],["/test/TOEFL/LISTENING/%E6%A4%85%E5%90%AC/Untitled.html",{loader:()=>l(()=>import("./Untitled.html-C39sVC0b.js"),__vite__mapDeps([702,1])),meta:{e:`
<ol>
<li>
<p>不要记笔记，一心别二用。非听力记笔记（写作口语）</p>
</li>
<li>
<p>想不起来的内容在题目中会有提示</p>
</li>
<li>
<p>题目除了主旨第一题，重听题最后一个，其他按照顺序来出</p>
</li>
<li>
<p>内存 50s 足够。分层 -- 主动清内存 熟悉套路</p>
<p>一层大概就是 40-50s</p>
<p>分层标志：now, well, but</p>
</li>
<li>
<p>看阅读也不一定能看懂</p>
</li>
<li>
<p>坚持（单篇-解释，60 万字到满分）</p>
<p>没听懂的东西，坚持，后面会有解释</p>
<p>每篇文章重复听五遍：最后 1.2-1.5 倍速</p>
</li>
</ol>`,r:{minutes:2.6,words:781},t:"方法",y:"a"}}],["/test/TOEFL/LISTENING/%E6%A4%85%E5%90%AC/%E5%AF%B9%E8%AF%9D.html",{loader:()=>l(()=>import("./对话.html-Oj7w6B0g.js"),__vite__mapDeps([703,1])),meta:{d:1696919008e3,e:`
<p>每个层次特别短</p>
<p>6-8 个子话题</p>
<p>15-20s 一个子话题</p>
<h3>分层词</h3>
<ul>
<li>but</li>
<li>well</li>
<li>now</li>
<li>OK</li>
<li>Great</li>
<li>Anyway</li>
<li>So</li>
</ul>
<h3>难点解决</h3>
<ol>
<li>
<p>conversation 语速快</p>
</li>
<li>
<p>短语密集</p>
</li>
<li>
<p>没有重复</p>
<p>排除法，有的选项非常离谱，带着已有的印象排除即可</p>
</li>
<li>
<p>东拉西扯</p>
<p>分层法</p>
<p>丢了一点信息，不要求全，进入下一个 part 好好听</p>
</li>
</ol>`,r:{minutes:.44,words:132},t:"对话",y:"a"}}],["/test/TOEFL/LISTENING/%E6%A4%85%E5%90%AC/%E6%96%B9%E6%B3%95.html",{loader:()=>l(()=>import("./方法.html-BnFFJxH1.js"),__vite__mapDeps([704,1])),meta:{d:1696919008e3,e:`
<ol>
<li>
<p>不要记笔记，一心别二用。非听力记笔记（写作口语）</p>
</li>
<li>
<p>想不起来的内容在题目中会有提示</p>
</li>
<li>
<p>题目除了主旨第一题，重听题最后一个，其他按照顺序来出</p>
</li>
<li>
<p>内存 50s 足够。分层 -- 主动清内存 熟悉套路</p>
<p>一层大概就是 40-50s</p>
<p>分层标志：now, well, but</p>
</li>
<li>
<p>看阅读也不一定能看懂</p>
</li>
<li>
<p>坚持（单篇-解释，60 万字到满分）</p>
<p>没听懂的东西，坚持，后面会有解释</p>
<p>每篇文章重复听五遍：最后 1.2-1.5 倍速</p>
</li>
</ol>`,r:{minutes:2.6,words:781},t:"方法",y:"a"}}],["/test/TOEFL/LISTENING/%E7%B2%BE%E5%90%AC%E8%90%A5/1.%20%E4%B8%AD%E5%BF%83%E9%80%BB%E8%BE%91.html",{loader:()=>l(()=>import("./1. 中心逻辑.html-CO1xiBkP.js"),__vite__mapDeps([705,1])),meta:{d:1691848755e3,e:`
<details class="hint-container details"><summary>课程介绍</summary>
<h2>课程介绍</h2>
<p>课前+课中+课后</p>
<p>听懂一个句子的前提</p>
<ul>
<li>单词</li>
<li>语音</li>
<li>语法</li>
</ul>
<blockquote>
<p>这个是最后一期精听营，后面她就不带了</p>
</blockquote>
<p>8.10-10.10 批改时间</p>
<h3>课程内容</h3>
<ol>
<li>
<p>课：</p>
<ol>
<li>
<p>基础课 三次</p>
<p>20 分以下必听</p>
</li>
<li>
<p>长难句 2h</p>
</li>
<li>
<p>逻辑讲解课</p>
</li>
<li>
<p>误区讲解课</p>
<p>适合备考一段时间的同学</p>
</li>
</ol>
</li>
<li>
<p>群：</p>
<p>CCtalk 群</p>
<p>微信大群</p>
<p>专属小群</p>
</li>
<li>
<p>作业：</p>
<ul>
<li>
<p><strong>单词</strong></p>
<p>每天背单词进度，官网练习的截图发群里</p>
<p>错题整理朗读，朗读录音发群里</p>
<p>SA 帮改</p>
</li>
<li>
<p><strong>语句</strong></p>
<p>100 句</p>
<p>每天完成 5 个句子精听分析跟读</p>
</li>
</ul>
</li>
<li>
<p>五次正课内容：</p>
<ol>
<li>精听分析方法 1L</li>
<li>题型选项设计 2L</li>
<li>笔记原则 2L</li>
<li>知识梳理 2L</li>
<li>对话理论 3C</li>
</ol>
<p>匹配段落练习</p>
</li>
</ol>
</details>`,r:{minutes:5.93,words:1778},t:"1. 中心逻辑",y:"a"}}],["/test/TOEFL/LISTENING/%E7%B2%BE%E5%90%AC%E8%90%A5/2.%20%E5%87%BA%E9%A2%98%E6%80%9D%E8%B7%AF.html",{loader:()=>l(()=>import("./2. 出题思路.html-BoUoEymW.js"),__vite__mapDeps([706,1])),meta:{d:1691848755e3,e:`
<h2>听力题型（出题思路）</h2>
<blockquote>
<p>平时做完题，培养考点意识的工作。不是考场的时候</p>
</blockquote>
<p>目的：培养考点意识</p>
<p>标准：题干、选项</p>
<p>不能脱离原文，脱离了判断题型没意义，题干结合正确选项</p>
<h3>七类题型</h3>
<ul>
<li>全文中心</li>
<li>段落中心</li>
<li>段内展开</li>
<li>展开证明中心的目的题</li>
<li>细节题（低频）</li>
<li>细节证明中心的目的题</li>
<li>段间关系（低频）</li>
</ul>
<h2>选项设计</h2>`,r:{minutes:2.58,words:774},t:"2. 出题思路",y:"a"}}],["/test/TOEFL/LISTENING/%E7%B2%BE%E5%90%AC%E8%90%A5/3.%20%E7%AC%94%E8%AE%B0%E6%96%B9%E6%B3%95.html",{loader:()=>l(()=>import("./3. 笔记方法.html-CEM4HFhe.js"),__vite__mapDeps([707,1])),meta:{d:1692146817e3,e:`
<h2>What 笔记是什么</h2>
<p>Info storage</p>
<p>笔记：把大脑处理过的信息记在纸上，所以笔记脑记都可以</p>
<p>将线性文本转化为立体逻辑</p>
<h3>笔记目的误区</h3>
<h4>错误目的</h4>
<ul>
<li>
<p>怕忘记</p>
</li>
<li>
<p>找答案</p>
<p>不会出重读的原词，重读的原词一般是出到误导性的错误选项里</p>
</li>
<li>
<p>防走神</p>
</li>
<li>
<p>不甘心</p>
</li>
</ul>
<p>走神原因</p>
<ol>
<li>
<p>听累了，注意力不集中（备考初期的考生）</p>
</li>
<li>
<p>听不懂，接不上内容了</p>
<ol>
<li>
<p>听力层面，难词难句</p>
<p>（20 分同学两方面都需要解决一下</p>
</li>
<li>
<p>逻辑层面，逻辑衔接</p>
</li>
</ol>
</li>
</ol>`,r:{minutes:2.8,words:840},t:"3. 笔记方法",y:"a"}}],["/test/TOEFL/LISTENING/%E7%B2%BE%E5%90%AC%E8%90%A5/4.%20%E8%AE%B2%E5%BA%A7%E6%80%BB%E7%BB%93.html",{loader:()=>l(()=>import("./4. 讲座总结.html-CAB-ySg8.js"),__vite__mapDeps([708,1])),meta:{d:1692319815e3,e:`
<h2>知识点梳理</h2>
<h3>全文中心句</h3>
<p>中心逻辑精听法</p>
<p>中心：</p>
<ol>
<li>开门见山</li>
<li>背景铺垫</li>
<li>自己总结</li>
</ol>
<p>先识别再理解，代入感</p>
<p>作用：</p>
<ol>
<li>
<p>预判</p>
</li>
<li>
<p>筛选</p>
</li>
<li>
<p>出题</p>
</li>
<li>
<p>做题</p>
<p>why mention</p>
</li>
</ol>
<h3>逻辑</h3>
<h4>整体逻辑</h4>
<p>用中心句串起来的文章思路</p>
<h4>单一逻辑</h4>`,r:{minutes:1.53,words:459},t:"4. 讲座总结",y:"a"}}],["/test/TOEFL/LISTENING/%E7%B2%BE%E5%90%AC%E8%90%A5/5.%20%E5%AF%B9%E8%AF%9D%E4%B8%B2%E8%81%94.html",{loader:()=>l(()=>import("./5. 对话串联.html-BUmA9sH0.js"),__vite__mapDeps([709,1])),meta:{d:1692319815e3,e:`
<p>对话不记笔记，语速快，耽误听、篇幅短可以记住</p>
<h2>对话特点</h2>
<p>篇幅 2-3mins 5 个题</p>
<blockquote>
<p>考试会出 1 生活、1 专业</p>
<p>难度低于讲座</p>
<p>25 分，conversation 两篇最多错 1 题</p>
</blockquote>
<h3>对话内容</h3>
<p>student &amp;</p>
<ul>
<li>staff：宿舍、借书、停车、餐厅、活动</li>
<li>advisor：选课、请假、转专业</li>
<li>prof：
<ul>
<li>作业、Paper</li>
<li>mini lec（天文、考古、艺术、地质、生物等，心理等低频）</li>
</ul>
</li>
</ul>`,r:{minutes:2.2,words:659},t:"5. 对话串联",y:"a"}}],["/test/TOEFL/LISTENING/%E7%B2%BE%E5%90%AC%E8%90%A5/%E5%86%85%E5%AE%B9%E6%80%9D%E8%B7%AF.html",{loader:()=>l(()=>import("./内容思路.html-BsGAG6es.js"),__vite__mapDeps([710,1])),meta:{d:1692146817e3,e:`
<h2>讲座</h2>
<h3>通用思路</h3>
<ul>
<li>
<p>铺垫段 [0, 30], [60, 100]s</p>
<p>背景铺垫</p>
<p>有长有短，短的时候很少出题，长的时候考有逻辑的点</p>
</li>
<li>
<p><strong>中心句</strong></p>
</li>
<li>
<p>主体段 1</p>
</li>
<li>
<p>主体段 2</p>
</li>
<li>
<p>主体段 3</p>
<p>（主体段 4）</p>
<p>（教授态度）</p>
</li>
</ul>
<h3>艺术类</h3>
<blockquote>
<p>泛艺术类：艺术、音乐、文学、建筑、摄影、舞蹈、戏剧</p>
<p>都可以按照这个内容思路</p>
</blockquote>`,r:{minutes:1.95,words:585},t:"内容思路",y:"a"}}],["/test/TOEFL/LISTENING/%E7%B2%BE%E5%90%AC%E8%90%A5/%E6%96%B0%E6%96%B9%E6%B3%95.html",{loader:()=>l(()=>import("./新方法.html-BougPBwG.js"),__vite__mapDeps([711,1])),meta:{d:1694741314e3,e:`
<p>五套 85-90% 音频信号</p>
<p>X 想象力</p>
<p>精练、精听</p>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/image-20230912224631931.png" alt="image-20230912224631931" loading="lazy"></p>
<p>每题30s</p>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/image-20230912225925864.png" alt="image-20230912225925864" loading="lazy"></p>`,r:{minutes:.84,words:252},t:"x",y:"a"}}],["/test/TOEFL/LISTENING/%E7%B2%BE%E5%90%AC%E8%90%A5/%E8%AE%B2%E5%BA%A7%E4%B8%93%E9%A2%98.html",{loader:()=>l(()=>import("./讲座专题.html-C5IZhEkh.js"),__vite__mapDeps([712,1])),meta:{d:1692718866e3,e:`
<h2>主旨题</h2>
<p>全文中心 =&gt; 主旨题</p>
<ul>
<li>中心标志</li>
<li>中心引出方式
<ul>
<li>开门见山</li>
<li>背景铺垫，前 1 分钟</li>
<li>自己总结</li>
</ul>
</li>
</ul>
<h3>Moon</h3>
<blockquote>
<p>开门见山</p>
<p>中心标志：Today we are gonna talk about</p>
</blockquote>
<p>中心句：theories of moon form ∵ yet to provide</p>
<p>Ns =&gt; 并列结构</p>`,r:{minutes:2.19,words:656},t:"讲座专题",y:"a"}}],["/test/TOEFL/LISTENING/%E7%BB%83%E4%B9%A0/%E5%AF%B9%E8%AF%9D%E7%BB%83%E4%B9%A0.html",{loader:()=>l(()=>import("./对话练习.html-DTwrRwJO.js"),__vite__mapDeps([713,1])),meta:{d:1686210114e3,e:`
<h2>生活对话</h2>
<h3>上课</h3>
<p>中心：没上课，</p>
<p>原因：排练</p>
<p>原因：人多+乐团 约不</p>
<p>要上课录像 ❌</p>
<p>原因：坏</p>
<p>event</p>
<p>exam</p>
<h3>宿舍</h3>
<h4>换宿舍</h4>
<p>寒暄：</p>
<p>hi</p>
<p>来意：</p>
<p>Check application: change dorm</p>
<p>: share a car</p>
<p>X own building</p>
<p>: brother evening job</p>
<p>问题：</p>`,r:{minutes:1.6,words:480},t:"对话练习",y:"a"}}],["/test/TOEFL/LISTENING/%E7%BB%83%E4%B9%A0/%E8%AE%B2%E5%BA%A7%E7%BB%83%E4%B9%A0.html",{loader:()=>l(()=>import("./讲座练习.html-BZkER2i4.js"),__vite__mapDeps([714,1])),meta:{d:1686210114e3,e:`
<h2>Coral Bleaching</h2>
<blockquote>
<p>生物</p>
</blockquote>
<p>中心句：coral 白化 -&gt; coral reef↓</p>
<ul>
<li>预判：珊瑚、 白化、减少</li>
</ul>
<p>coral&lt;=&gt;zoo，</p>
<ul>
<li>
<p>zoo-&gt;coral</p>
<ul>
<li>
<p>food</p>
<p>photoxxx</p>
</li>
<li>
<p>color</p>
</li>
</ul>
</li>
<li>
<p>coral-&gt;zoo</p>
</li>
</ul>`,r:{minutes:4.14,words:1242},t:"讲座练习",y:"a"}}],["/test/TOEFL/LISTENING/%E9%95%BF%E9%9A%BE%E5%8F%A5/1.html",{loader:()=>l(()=>import("./1.html-Bp0xWwG2.js"),__vite__mapDeps([715,1])),meta:{d:1691648992e3,e:`<p>连读</p>
<ul>
<li>辅音+元音</li>
<li>辅音+辅音，发音相似/相同的辅音，只发一次
<ul>
<li>classic cases，/clasicasis/</li>
<li>clothes 母语者简化读为/clos/</li>
</ul>
</li>
</ul>
<p>清浊：元音还有浊辅音都是浊音</p>
<p>浊音：元音，wl，</p>
<p>清后清、浊后浊</p>
<ul>
<li>浊音后面的 s 读/z/
<ul>
<li>shadows</li>
<li>jewels</li>
</ul>
</li>
<li>eg.
<ul>
<li>showed /d/</li>
<li>watched /t/</li>
</ul>
</li>
</ul>`,r:{minutes:.68,words:204},t:"",y:"a"}}],["/test/TOEFL/LISTENING/%E9%95%BF%E9%9A%BE%E5%8F%A5/2.html",{loader:()=>l(()=>import("./2.html-Cr3Pw74o.js"),__vite__mapDeps([716,1])),meta:{d:1691648992e3,e:`
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-08-05 21.55.29.png" alt="截屏2023-08-05 21.55.29" loading="lazy"></p>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-08-05 21.56.08.png" alt="截屏2023-08-05 21.56.08" loading="lazy"></p>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-08-05 21.59.09.png" alt="截屏2023-08-05 21.59.09" loading="lazy"></p>`,r:{minutes:.29,words:87},t:"n, l",y:"a"}}],["/test/TOEFL/LISTENING/%E9%95%BF%E9%9A%BE%E5%8F%A5/3.html",{loader:()=>l(()=>import("./3.html-DctHb_wV.js"),__vite__mapDeps([717,1])),meta:{d:1691648992e3,e:`<p>两个元音之间：/t/-&gt;/d/</p>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-08-06 13.26.42.png" alt="截屏2023-08-06 13.26.42" loading="lazy"></p>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-08-06 13.27.15.png" alt="截屏2023-08-06 13.27.15" loading="lazy"></p>`,r:{minutes:.38,words:115},t:"",y:"a"}}],["/test/TOEFL/READING/BEAT/",{loader:()=>l(()=>import("./index.html-DIA1KMjD.js"),__vite__mapDeps([718,1])),meta:{d:1696218053e3,e:`
<p>每读完一段就停下 10s 总结段落中心</p>
<p>段落大纲：设问、因果、对比、分类</p>
<h2>时间表</h2>
<table>
<thead>
<tr>
<th>日程</th>
<th>任务</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>周一</td>
<td>模拟测试</td>
<td>即时评分 实战检验 自我反思</td>
</tr>
<tr>
<td>周二到六</td>
<td>文章练习</td>
<td>全篇精讲 意群难句 题目解析</td>
</tr>
<tr>
<td>周日</td>
<td>一周复习</td>
<td>总结错题 结构复述 难句复习</td>
</tr>
</tbody>
</table>`,r:{minutes:2.59,words:777},t:"BEAT",y:"a"}}],["/test/TOEFL/READING/%E7%BB%83%E4%B9%A0/BEAT.html",{loader:()=>l(()=>import("./BEAT.html-BXpskPrs.js"),__vite__mapDeps([719,1])),meta:{d:1696218053e3,e:`
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/1495450220107407.jpg" alt="22.3.jpg" loading="lazy"></p>
<hr>
<p>Q 1</p>
<ol>
<li>Which of the following is NOT mentioned in paragraph 1 as a disadvantage of the Mesopotamian plain?</li>
</ol>
<p>○There was not very much rainfall for most of the year.（第一段第 5 句）</p>`,r:{minutes:5.1,words:1529},t:"阅读",y:"a"}}],["/test/TOEFL/READING/%E7%BB%83%E4%B9%A0/%E7%BB%83%E4%B9%A0.html",{loader:()=>l(()=>import("./练习.html-BWVjT5Tq.js"),__vite__mapDeps([720,1])),meta:{d:1693701044e3,e:`
<h3>高频题答案</h3>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-09-02 13.52.23.png" alt="Keys" loading="lazy"></p>
<p>17: BD</p>
<p>16: 10 分（扣 1）</p>
<p>17: Sea Turtle Hatchling Strategies for Navigation</p>
<p>CBDCB</p>
<ol start="2">
<li>most：light</li>
<li>形状可；人光害 gui</li>
<li>x</li>
<li>geo</li>
</ol>`,r:{minutes:.66,words:197},t:"练习",y:"a"}}],["/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/1.%20%20%E6%80%BB%E7%BB%93%E9%A2%98.html",{loader:()=>l(()=>import("./1.  总结题.html-dUzWsx3n.js"),__vite__mapDeps([721,1])),meta:{d:1669446166e3,e:`
<blockquote>
<p>又称小结题、总结题、六选三</p>
</blockquote>
<p>每篇文章，最后一道题</p>
<p>一般一次考试出现 2-3 题，有的文章末尾没有的话就是表格题（七选五）</p>
<p>经验：EF一定是说的最后一段话的内容</p>
<h3>题干</h3>
<p>Directions：most important</p>
<p>Brief summary，出题人给的正确答案，可以做一个参考</p>
<p>表达最重要的信息，有的选项他与原文一致，但是不能选因为不是重要信息</p>
<ol>
<li>
<p>可以体现中心的细节可以选</p>
<p>误区：细节都不选是错误的。因为体现中心的细节可以选。</p>
</li>
<li>
<p>刷题时千万不要马后炮</p>
</li>
</ol>`,r:{minutes:1.6,words:479},t:"总结题",y:"a"}}],["/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/10.%20%E8%A1%A8%E6%A0%BC%E9%A2%98.html",{loader:()=>l(()=>import("./10. 表格题.html-HnIHV0PJ.js"),__vite__mapDeps([722,1])),meta:{d:1696741225e3,e:`
`,r:{minutes:.01,words:3},t:"表格题",y:"a"}}],["/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/2.%20%E8%AF%8D%E6%B1%87%E9%A2%98.html",{loader:()=>l(()=>import("./2. 词汇题.html-BWgi3v4x.js"),__vite__mapDeps([723,1])),meta:{d:1669446166e3,e:`
<p>词霸营、400 题</p>
<h3>题干</h3>
<p>The word X in the passage is closest in meaning to</p>
<p>3 篇文章大概 6-8 个左右</p>
<p>单词在语境中的含义</p>
<h3>方法一</h3>
<p>生词的含义在从句和上下句中暗示</p>
<h3>方法二</h3>
<p>并列、平行与排比</p>
<ul>
<li>A and B</li>
<li>as well as</li>
<li>or</li>
<li>also</li>
<li>so as</li>
</ul>
<h3>方法三</h3>
<p>对比，转折</p>`,r:{minutes:.4,words:121},t:"词汇题",y:"a"}}],["/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/3.%20%E6%8C%87%E4%BB%A3%E9%A2%98.html",{loader:()=>l(()=>import("./3. 指代题.html-BOdBNRPG.js"),__vite__mapDeps([724,1])),meta:{d:1669446166e3,e:`
<h3>题干</h3>
<p>The word X in the passage refers to</p>
<p>(it, they)</p>
<p>题量 0-4 个</p>
<h3>解法</h3>
<p>根据四种代词现象反推即可</p>
<ol>
<li><strong>所有格代词</strong>指代前面位置上最近的名词</li>
<li>后半句的代词主语指代前半句的名词主语</li>
<li><strong>并列</strong>的及物动词，第二个动词的代词宾语指代一个动词的名词宾语</li>
<li>代词主语指代前一句话主句中的名词主语</li>
</ol>
`,r:{minutes:.4,words:119},t:"指代题",y:"a"}}],["/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/4.%20%E7%AE%80%E5%8C%96%E9%A2%98.html",{loader:()=>l(()=>import("./4. 简化题.html-CmQITIxF.js"),__vite__mapDeps([725,1])),meta:{d:1669446166e3,e:`
<p>题干：Which of the sentences below best expresses the essential information in the highlighted sentence in the passage?</p>
<p>数量：一共 2-3，基本上每篇一个</p>
<p>best 最好的</p>
<p>essential 核心信息</p>
<p>逻辑</p>
<ul>
<li>因果</li>
<li>转折</li>
<li>对比</li>
<li>比较 than</li>
</ul>
<p>核心信息：</p>
<ol>
<li>
<p>修饰主体不变</p>
<p>插入语等成分不能升级到主要地位</p>
</li>
<li>
<p>程度不变</p>
<ul>
<li>大小 biggest</li>
<li>多少 most, only, all, ...</li>
<li>强弱 always, must, should, ...</li>
</ul>
</li>
<li>
<p>范围不变</p>
</li>
<li>
<p>逻辑关系不变</p>
<ul>
<li>因果</li>
<li>转折</li>
<li>对比</li>
<li>比较 than</li>
</ul>
</li>
</ol>`,r:{minutes:.7,words:211},t:"句子简化题",y:"a"}}],["/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/5.%20%E6%8F%92%E5%85%A5%E9%A2%98.html",{loader:()=>l(()=>import("./5. 插入题.html-CIXScdnG.js"),__vite__mapDeps([726,1])),meta:{d:1669446166e3,e:`
<p>句间关系</p>
<p>拆分待插入句</p>
<ul>
<li>分、从句信号词</li>
<li>标点符号</li>
<li>动词</li>
</ul>
<p>拆成前后两个部分，找核心的指代词或名词，然后在原文中找前后符合的对应。</p>
<h3>方式一：指代暗示</h3>
<p>如果待插入句里面有 these, this, They, it 等代词，看指代内容是谁，那前一句一定有对应的成分</p>
<p>对应的方法，同指代题一样，只是反过来应用</p>
<h3>方式二：段落结构暗示</h3>
<p>概述-&gt;细节</p>
<p>概述永远放在细节前，细节永远在概述之后</p>
<h3>方法三：逻辑关系暗示</h3>`,r:{minutes:.71,words:214},t:"句子插入题",y:"a"}}],["/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/6.%20%E7%BB%86%E8%8A%82%E9%A2%98.html",{loader:()=>l(()=>import("./6. 细节题.html-Br2ZIrVW.js"),__vite__mapDeps([727,1])),meta:{d:1669446166e3,e:`
`,r:{minutes:.01,words:3},t:"细节题",y:"a"}}],["/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/7.%20%E6%8E%92%E9%99%A4%E9%A2%98.html",{loader:()=>l(()=>import("./7. 排除题.html-CHRgQ0OE.js"),__vite__mapDeps([728,1])),meta:{d:1696741225e3,e:`
`,r:{minutes:.01,words:3},t:"排除题",y:"a"}}],["/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/8.%20%E6%8E%A8%E6%96%AD%E9%A2%98.html",{loader:()=>l(()=>import("./8. 推断题.html-xzQwHsGm.js"),__vite__mapDeps([729,1])),meta:{d:1669446166e3,e:`
<p>GRE 推断题的简-版</p>
<ul>
<li>正向推断</li>
<li>负向推断</li>
</ul>
<p>标志词：suggest/infer</p>
<h3>逻辑</h3>
<ul>
<li>
<p>比较逻辑</p>
<ul>
<li>不同对象，unlike 北京，广州热</li>
<li>不同时间，before 上课, 不认识老师</li>
</ul>
</li>
<li>
<p>因果逻辑</p>
<p>因为疫情，so 我们有缘在一起</p>
</li>
<li>
<p>举例逻辑</p>
<p>湖南喜欢辣椒，比如鑫哥</p>
</li>
</ul>
<p>推断题</p>
<ul>
<li>比较
<ul>
<li>不同对象比较，unlike 北京，广州热</li>
<li>不同时间比较，before 上课，不认识老师</li>
<li>非黑即白，说 1 和 3 重要，则 2 一定不重要</li>
</ul>
</li>
<li>因果
<ul>
<li>可能不需要推，就是原文的因或者果</li>
</ul>
</li>
<li>举例</li>
</ul>`,r:{minutes:.53,words:159},t:"推断题",y:"a"}}],["/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/9.%20%E7%9B%AE%E7%9A%84%E9%A2%98.html",{loader:()=>l(()=>import("./9. 目的题.html--LbX8gyg.js"),__vite__mapDeps([730,1])),meta:{d:1669446166e3,e:`
<p>Why does the author mention/use/include "word" ... ?</p>
<p>考法</p>
<ol>
<li>
<p>举例逻辑</p>
<p>TS 中心词的体现</p>
<p>TS、例子、选项</p>
</li>
<li>
<p>段落功能</p>
</li>
<li>
<p>实验类</p>
<p>控制变量</p>
</li>
</ol>
<p>举例逻辑</p>
<p>TS + eg，举例为了证实 TS</p>
<p>TS 位置的情况</p>
<ul>
<li>段首句</li>
<li>转折</li>
<li>一个小段作为前一段 TS 的例子</li>
</ul>`,r:{minutes:.31,words:94},t:"目的题",y:"a"}}],["/test/TOEFL/SPEAKING/BEAT/BEAT.html",{loader:()=>l(()=>import("./BEAT.html-DhCzxiDP.js"),__vite__mapDeps([731,1])),meta:{d:1669794167e3,t:"",y:"a"}}],["/test/TOEFL/SPEAKING/BEAT/",{loader:()=>l(()=>import("./index.html-DL31c4nf.js"),__vite__mapDeps([732,1])),meta:{d:1696218053e3,e:`
<p>核心语料准备20套左右即可覆盖95%，30套-&gt;27分</p>
<h2>时间表</h2>
<table>
<thead>
<tr>
<th>日程</th>
<th>任务</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>周一</td>
<td>每周高频真题</td>
<td>高频自测考题解析</td>
</tr>
<tr>
<td>周二五</td>
<td>独立口语</td>
<td>核心语料演练示范</td>
</tr>
<tr>
<td>周六</td>
<td>综合口语</td>
<td>笔记总结演练示范</td>
</tr>
<tr>
<td>周日</td>
<td>本周复习</td>
<td>考题归纳语料巩固</td>
</tr>
</tbody>
</table>`,r:{minutes:9.09,words:2728},t:"BEAT",y:"a"}}],["/test/TOEFL/SPEAKING/BEAT/Untitled.html",{loader:()=>l(()=>import("./Untitled.html-ijY4nAeW.js"),__vite__mapDeps([733,1])),meta:{e:`<p><strong>1.</strong> Some people think historical sites should be open to the general public, but some people think historical cites should only be open to experts and researchers. Which do you think is better?</p>
<p><strong>2.</strong> Some people prefer to resolve problems with friends directly face to face or on the phone. Some others prefer to resolve problems by writing, sending E-mail or text message. Which one do you prefer? Why?</p>`,r:{minutes:1.61,words:483},t:"",y:"a"}}],["/test/TOEFL/SPEAKING/BEAT/%E5%8F%91%E9%9F%B3%E9%9B%95%E5%88%BB.html",{loader:()=>l(()=>import("./发音雕刻.html-fa1nI5LI.js"),__vite__mapDeps([734,1])),meta:{d:1695194309e3,e:`
<p><a href="https://www.bilibili.com/video/BV1pp411f7Qr/?p=1" target="_blank" rel="noopener noreferrer">Andy 纠音</a></p>
<p>**【低分原因】**90%的口语低分，都是因为发音无法达到Clear评分要求：考官听不懂考生“咕哝”啥，内容评分只会更低。</p>
<p>**【解决原理】**先学走再学跑，慢速跟读最有效：先放慢语速纠音，清晰*<em>Clear让考官听懂*</em>，然后再慢慢提速。</p>
<p>*<em>【纠音作业】<strong>先看着文本，</strong></em>*听一遍****<strong>美语母语慢速录音，再跟读校对5遍——不苛求达到母语，但求Clear让考官听懂！</strong></p>`,r:{minutes:1.06,words:318},t:"发音雕刻",y:"a"}}],["/test/TOEFL/SPEAKING/BEAT/%E5%B7%A5%E4%BD%9C%E7%B1%BB.html",{loader:()=>l(()=>import("./工作类.html-DuoHjSNc.js"),__vite__mapDeps([735,1])),meta:{d:1696741225e3,e:`
<h2>工作经历</h2>
<p>Talk about an important experience that you recently had. Describe what happened and explain why it was important to you.</p>
<hr>
<p>① The important experience I recently had was my internship at a multinational company.</p>
<p>A</p>
<blockquote>
<p>made friends, a great influence on me, committed to the work</p>
</blockquote>`,r:{minutes:3.09,words:927},t:"工作类",y:"a"}}],["/test/TOEFL/SPEAKING/BEAT/%E6%95%99%E8%82%B2%E7%B1%BB.html",{loader:()=>l(()=>import("./教育类.html-UqN23al2.js"),__vite__mapDeps([736,1])),meta:{d:1695194309e3,e:`
<h2>做饭</h2>
<p>Do you agree or disagree with the following statement? Children at an early age should learn independent living skills.</p>
<hr>
<p>I agree that children should learn independent living skills, such as cooking.</p>
<p>A</p>
<blockquote>
<p>studying overseas, don't worry about</p>
</blockquote>`,r:{minutes:16.22,words:4865},t:"教育类",y:"a"}}],["/test/TOEFL/SPEAKING/BEAT/%E7%94%9F%E6%B4%BB%E7%B1%BB.html",{loader:()=>l(()=>import("./生活类.html-nSO7iCls.js"),__vite__mapDeps([737,1])),meta:{d:1696218053e3,e:`
<h2>通勤-地铁</h2>
<p>What characteristic in a house or apartment do you think is the most important for making it a good place to live: Being convenient to commute or living with kind roommates? Explain why you think it is important.</p>
<hr>
<p>① I think a place to live should be convenient for commuting.</p>`,r:{minutes:15.99,words:4798},t:"生活类",y:"a"}}],["/test/TOEFL/SPEAKING/BEAT/%E7%BB%BC%E5%90%88%E5%8F%A3%E8%AF%AD.html",{loader:()=>l(()=>import("./综合口语.html-2EIXhJIy.js"),__vite__mapDeps([738,1])),meta:{d:1700646963e3,e:`<p>先【简述学科概念：无需细节】</p>
<p>Implicit memory refers to information people can't consciously recall but still influences their minds.</p>
<p>然后【说明教授例证：一句不要多】</p>
<p>The professor gives an example of advertising.</p>
<p>重点【补充例证细节：尽量详尽】</p>
<p>When people are driving along the road, they may see plenty of advertising billboards. Even though drivers may not consciously remember them, these advertisements still affect them.</p>`,r:{minutes:.62,words:185},t:"",y:"a"}}],["/test/TOEFL/SPEAKING/BEAT/%E8%A7%82%E7%82%B9.html",{loader:()=>l(()=>import("./观点.html-BZ2vvF-f.js"),__vite__mapDeps([739,1])),meta:{d:1700646963e3,e:`
<p>提前准备 Task1 万能素材/理由，比如：</p>
<p>health,</p>
<p>save time/efficiency,</p>
<p>relax oneself/reduce pressure,</p>
<p>save money/part-time job,</p>
<p>have a better understanding of knowledge,</p>
<p>broaden horizons,</p>
<p>protect the environment,</p>
<p>career/ job opportunities/learn practical skills</p>`,r:{minutes:2.11,words:632},t:"观点",y:"a"}}],["/test/TOEFL/SPEAKING/BEAT/%E9%A2%98%E7%9B%AE.html",{loader:()=>l(()=>import("./题目.html-pXkxTavI.js"),__vite__mapDeps([740,1])),meta:{d:1700646963e3,e:`<p><strong>1.</strong> Some people think historical sites should be open to the general public, but some people think historical cites should only be open to experts and researchers. Which do you think is better?</p>
<p><strong>2.</strong> Some people prefer to resolve problems with friends directly face to face or on the phone. Some others prefer to resolve problems by writing, sending E-mail or text message. Which one do you prefer? Why?</p>`,r:{minutes:1.61,words:483},t:"",y:"a"}}],["/test/TOEFL/SPEAKING/BEAT/%E9%AB%98%E9%A2%91%E7%9C%9F%E9%A2%98.html",{loader:()=>l(()=>import("./高频真题.html-BT0jHOmQ.js"),__vite__mapDeps([741,1])),meta:{d:1700646963e3,e:`
<p>自测（独立口语计时）</p>
<h3>Oct. 11</h3>
<p>Is it a good idea for the university to limit students' working time?</p>
<hr>
<p>一【牢记应试 3 原则】</p>
<p>1.【应试别钻牛角尖】口语不是辩论比赛，不求论证完美，但求流利清晰。</p>
<p>2.【15 秒准备做什么】准备时间很短，如果现想现编，很可能 “口语车祸现场”；应试技巧：15 秒内确认，在提前积累的语料里，哪些更适合回答本题——只要不跑题，开说别纠结。</p>
<p>3.【45 秒答题的重点】先保证发音清晰，让机评识别发音，人工听懂说什么；超时没关系，但不要大段空白——回到口语应试本质：宁可论证有瑕疵，也不要让口语大段空白。</p>`,r:{minutes:3.57,words:1070},t:"高频真题",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/1.html",{loader:()=>l(()=>import("./1.html-DiEVaIRW.js"),__vite__mapDeps([742,1])),meta:{d:1673100434e3,e:`
<h3>1</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-02-09 08.40.20.png" alt="截屏2023-02-09 08.40.20" loading="lazy"></p>
<p>agree</p>
<ul>
<li>
<p>Encourage young people to take action</p>
<p>Celebrity 定义</p>
<p>Young people look up to them,</p>
<p>=&gt; they imitate their idols' behaviors and attitude</p>
<p>eg. Fancy, singer, environmental protection</p>
</li>
</ul>`,r:{minutes:.58,words:174},t:"Day 1",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/10..html",{loader:()=>l(()=>import("./10..html-pwx5wwlH.js"),__vite__mapDeps([743,1])),meta:{d:1674459084e3,e:`
<h3>9</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-15 23.43.10.png" alt="截屏2023-01-15 23.43.10" loading="lazy"></p>
<p>disagree</p>
<ul>
<li>
<p>increase efficiency and accuracy</p>
<p>Eg. math exam, do it to calculate some complicated and difficult equations</p>
<p>=&gt; save time and get more accurate results</p>
<p>=&gt; get high efficiency in the exam</p>
</li>
<li>
<p>convenient</p>
<p>I mean, in this mordern society, everyone has got a smartphone, right? They can use the e-calculator on their phones.</p>
</li>
</ul>`,r:{minutes:.36,words:108},t:"Day 10：2017 年",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/12.html",{loader:()=>l(()=>import("./12.html-uclgVUkB.js"),__vite__mapDeps([744,1])),meta:{d:1674459084e3,e:`
<h3>11</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-17 23.30.11.png" alt="截屏2023-01-17 23.30.11" loading="lazy"></p>
<p>disagree</p>
<ul>
<li>
<p>Plays an essential role in providing educational resources centers for every one in the community</p>
</li>
<li>
<p>Atmosphere is good</p>
<p>&lt;= very quiet and comfortable</p>
<p>=&gt; I can fully concentrate on my study</p>
</li>
</ul>`,r:{minutes:.71,words:213},t:"Day 12：2018 年",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/14.%20.html",{loader:()=>l(()=>import("./14. .html-BboXaNMr.js"),__vite__mapDeps([745,1])),meta:{d:1674459084e3,e:`
<h3>13</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-19 21.45.16.png" alt="截屏2023-01-19 21.45.16" loading="lazy"></p>
<p>短语积累：</p>
<blockquote>
<p>Stand a better chance at doing sth. 更有机会做某事</p>
</blockquote>
<p>Travel long distance 面对面语料</p>
<h3>13</h3>`,r:{minutes:1.28,words:385},t:"Day 14",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/15.html",{loader:()=>l(()=>import("./15.html-BUIdjf3Q.js"),__vite__mapDeps([746,1])),meta:{d:1674459084e3,e:`
<h3>14</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-20 09.05.55.png" alt="截屏2023-01-20 09.05.55" loading="lazy"></p>
<blockquote>
<p>invade one's privacy 侵犯某人隐私</p>
<p>Take responsibility for 为某事负责</p>
</blockquote>
<p>agree</p>
<ul>
<li>
<p>Invade children; s privacy <strong>侵犯隐私语料</strong></p>
<p>&lt;= implite and rude</p>
<p>=&gt; cause conflict and jeopardize their relationship</p>
<p>everyone has his or her own privacy</p>
<p>invading it shows no respect to others</p>
</li>
<li>
<p>children should pay attention to their grades by themselves</p>
</li>
</ul>`,r:{minutes:1.34,words:401},t:"Day 15：2019 年",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/16.html",{loader:()=>l(()=>import("./16.html-n6QoixZc.js"),__vite__mapDeps([747,1])),meta:{d:1674459084e3,e:`
<h3>15</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-21 23.28.25.png" alt="截屏2023-01-21 23.28.25" loading="lazy"></p>
<p>agree</p>
<ul>
<li>
<p>Waste them a lot of time 时间宝贵，学生很忙语料</p>
<p>study should always be the top priority</p>
</li>
<li>
<p>kids not mature to tell right from wrong</p>
<p>may imitate some negative behaviors in video games, like bad language or violence</p>
</li>
</ul>`,r:{minutes:.63,words:190},t:"Day 16：2019 年",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/17.html",{loader:()=>l(()=>import("./17.html-CF6dbYMN.js"),__vite__mapDeps([748,1])),meta:{d:1674459084e3,e:`
<h3>16</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-22 23.49.34.png" alt="截屏2023-01-22 23.49.34" loading="lazy"></p>
<p>praise</p>
<p>鼓励语料：英语比赛</p>
<h3>16</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-22 23.50.17.png" alt="截屏2023-01-22 23.50.17" loading="lazy"></p>`,r:{minutes:.39,words:116},t:"Day 17：2019 年",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/18.html",{loader:()=>l(()=>import("./18.html-COeJJLuE.js"),__vite__mapDeps([749,1])),meta:{d:1674459084e3,e:`
<h3>17</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-23 14.44.11.png" alt="截屏2023-01-23 14.44.11" loading="lazy"></p>
<p>A: different places</p>
<ul>
<li>
<p>broadens my horizon and enhances my knowledge</p>
<p>eg.</p>
<ul>
<li>visiting museums</li>
<li>tasting local food</li>
<li>Talking with the locals</li>
</ul>
<p>=&gt; know more about American cultures and custom</p>
</li>
</ul>`,r:{minutes:.87,words:262},t:"Day 18：2019 年",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/19.html",{loader:()=>l(()=>import("./19.html-rB9e5PBf.js"),__vite__mapDeps([750,1])),meta:{d:1674813807e3,e:`
<h3>17</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-24 23.55.09.png" alt="截屏2023-01-24 23.55.09" loading="lazy"></p>
<p>A：different</p>
<ul>
<li>broaden horizons</li>
</ul>
<h3>17</h3>
`,r:{minutes:.1,words:30},t:"Day 19：2020 年",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/20.html",{loader:()=>l(()=>import("./20.html-MFFv8aL3.js"),__vite__mapDeps([751,1])),meta:{d:1674813807e3,e:`
<h3>19</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-25 23.09.48.png" alt="截屏2023-01-25 23.09.48" loading="lazy"></p>
<p>高效：学生繁忙语料</p>
<p>A: one time</p>
<ul>
<li>
<p>more efficient</p>
<p>&lt;= time is very precious for me</p>
<p>学生繁忙语料</p>
</li>
<li>
<p>Environment is more comfortable</p>
</li>
</ul>`,r:{minutes:1.28,words:384},t:"Day 20：2020 年",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/21.html",{loader:()=>l(()=>import("./21.html-Cp_HeTcE.js"),__vite__mapDeps([752,1])),meta:{d:1674813807e3,e:`
<h3>20</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-27 00.03.32.png" alt="截屏2023-01-27 00.03.32" loading="lazy"></p>
<p>disagree</p>
<ul>
<li>Face-to-face 语料</li>
<li>online: get distracted</li>
</ul>
<h3>20</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-27 00.05.39.png" alt="截屏2023-01-27 00.05.39" loading="lazy"></p>`,r:{minutes:.18,words:54},t:"Day 21: 2020",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/23.html",{loader:()=>l(()=>import("./23.html-Do0Dr4-G.js"),__vite__mapDeps([753,1])),meta:{d:167500749e4,e:`
<h3>22</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-27 23.58.11.png" alt="截屏2023-01-27 23.58.11" loading="lazy"></p>
<p>agree</p>
<ul>
<li>teachers are human, we are not perfect</li>
<li>model how they respond when they are wrong</li>
</ul>
<h3>22</h3>`,r:{minutes:.67,words:201},t:"Day 23：2020 年",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/24.html",{loader:()=>l(()=>import("./24.html-B4jmIIhE.js"),__vite__mapDeps([754,1])),meta:{d:1675259084e3,e:`
<h3>23</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-29 23.57.33.png" alt="截屏2023-01-29 23.57.33" loading="lazy"></p>
<p>Hard work</p>
<ul>
<li>need hard work to success</li>
</ul>
`,r:{minutes:.11,words:32},t:"Day 24：2020 年",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/25.html",{loader:()=>l(()=>import("./25.html-B6js6ALx.js"),__vite__mapDeps([755,1])),meta:{d:1675259084e3,e:`
<h3>24</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-30 23.35.44.png" alt="截屏2023-01-30 23.35.44" loading="lazy"></p>
<p>Cut budge in academic clubs</p>
<ul>
<li>doing sports is very beneficial for their physical and mental health</li>
<li>Sports clubs need more money to buy all sorts of equipment</li>
</ul>`,r:{minutes:.42,words:126},t:"Day 25：2021 年",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/26.html",{loader:()=>l(()=>import("./26.html-DLi_MAwe.js"),__vite__mapDeps([756,1])),meta:{d:1675259084e3,e:`
<h3>25</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-02-01 00.36.59.png" alt="截屏2023-02-01 00.36.59" loading="lazy"></p>
<p>A：big city</p>
<ul>
<li>
<p>More interesting to do</p>
<p>去美国 Boston 旅游语料</p>
</li>
<li>
<p>Convenient due to public transportation</p>
</li>
</ul>`,r:{minutes:.23,words:69},t:"Day 26：2021 年",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/27.html",{loader:()=>l(()=>import("./27.html-DMOe0oMu.js"),__vite__mapDeps([757,1])),meta:{d:1675259084e3,e:`
<h3>26</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-02-01 21.45.07.png" alt="截屏2023-02-01 21.45.07" loading="lazy"></p>
<p>A: experienced</p>
<ul>
<li>
<p>more rich teaching experience, and teach more effectively</p>
<p>eg. fancy</p>
<p>20 years</p>
<p>=&gt; good at teaching</p>
<ul>
<li>know how to use the most interesting way to teach complicated and boring grammar.</li>
<li>knows how to attract students attention in class</li>
<li>focus on what she is saying for the whole 45 mins</li>
</ul>
</li>
<li></li>
</ul>`,r:{minutes:1.18,words:354},t:"Day 27：2021 年",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/28.html",{loader:()=>l(()=>import("./28.html-D8A4X-ff.js"),__vite__mapDeps([758,1])),meta:{d:1675410392e3,e:`
<h3>27</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-02-02 23.41.56.png" alt="截屏2023-02-02 23.41.56" loading="lazy"></p>
<p>agree</p>
<ul>
<li>
<p>may leave a bad impression on others</p>
<p>eg. dinner table</p>
<p>&lt;= shows no respect to others on the table</p>
<p>eg. Bob,</p>
</li>
<li>
<p>Some public areas ban the use of cellphones</p>
</li>
</ul>`,r:{minutes:.25,words:75},t:"Day 28：2021 年",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/29.html",{loader:()=>l(()=>import("./29.html-Dwhg2Fuz.js"),__vite__mapDeps([759,1])),meta:{d:1677504602e3,e:`
<h3>28</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-02-03 23.32.34.png" alt="截屏2023-02-03 23.32.34" loading="lazy"></p>
<p>agree</p>
<ul>
<li>
<p>Life pace in small town is slower</p>
<p>=&gt; more time to care about eac other</p>
</li>
<li>
<p>City: busy, can't pay too much</p>
</li>
<li>
<p>Know each other for many years</p>
</li>
</ul>`,r:{minutes:.18,words:53},t:"Day 29：2021 年",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/7.%20.html",{loader:()=>l(()=>import("./7. .html-Dt_UiTlT.js"),__vite__mapDeps([760,1])),meta:{d:1673752751e3,e:`
<h3>61</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-12 20.12.50.png" alt="截屏2023-01-12 20.12.50" loading="lazy"></p>
<p>花费很多钱：I will cost me an arm and a leg</p>
<p>钱应该花在更有意义的地方：the money should be saved to do other meaningful things, like buying books or taveling</p>`,r:{minutes:.78,words:233},t:"Day 7：2017 年",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/9.%20.html",{loader:()=>l(()=>import("./9. .html-CNW9FJa0.js"),__vite__mapDeps([761,1])),meta:{d:1673752751e3,e:`
<h3>8</h3>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-01-14 22.59.09.png" alt="截屏2023-01-14 22.59.09" loading="lazy"></p>
<p>Agree</p>
<ul>
<li>
<p>Develop child's independence</p>
<p>&lt;= I need to do some basic household tasks by myself, such as</p>
<ul>
<li>doing laundry</li>
<li>washing dished</li>
<li>vacuuming the floor, etc.</li>
</ul>
<p>=&gt; Now, I am studying in a city which is far away from my hometown, but I can totally take care of myself and live independently.</p>
</li>
<li>
<p>Strengthen their relationships</p>
<p>&lt;= they can spend time together doing interesting things</p>
</li>
</ul>`,r:{minutes:1.26,words:377},t:"Day 9：2017 年",y:"a"}}],["/test/TOEFL/SPEAKING/exercise/",{loader:()=>l(()=>import("./index.html-DnPu9D3k.js"),__vite__mapDeps([762,1])),meta:{d:1673100434e3,e:`
<p>16-22 年 370 道独立题</p>
<p>30 天，</p>
`,r:{minutes:.04,words:13},t:"刷题营",y:"a"}}],["/test/TOEFL/SPEAKING/%E5%8F%91%E9%9F%B3/",{loader:()=>l(()=>import("./index.html-icnBHPiq.js"),__vite__mapDeps([763,1])),meta:{d:1695194309e3,e:`
<p>【低分原因】90%的口语低分，都是因为发音无法达到Clear评分要求：考官听不懂考生“咕哝”啥，内容评分只会更低。</p>
<p>【解决原理】先学走再学跑，慢速跟读最有效：先放慢语速纠音，清晰Clear让考官听懂，然后再慢慢提速。</p>
<p>【纠音作业】先看着文本，听一遍美语母语慢速录音，再跟读校对5遍——不苛求达到母语，但求Clear让考官听懂！</p>
<h3>Day 1</h3>
<p>① I agree that children should learn independent living skills, such as cooking.</p>
<p>② First, cooking is a necessary skill, especially for international students.</p>`,r:{minutes:1.17,words:351},t:"发音",y:"a"}}],["/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/1.html",{loader:()=>l(()=>import("./1.html-DKvQcuPm.js"),__vite__mapDeps([764,1])),meta:{d:1691848755e3,e:`
<h3>1</h3>
<p>Which do you prefer: start a project as early as possible or wait until the due time?</p>
<hr>
<p>I prefer to start a project as early as possible, because it makes me more productive while reducing stress at the same time. However, if I wait until the last minute, maybe I will fail the deadline.</p>`,r:{minutes:4.42,words:1325},t:"Day 1",y:"a"}}],["/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/10.html",{loader:()=>l(()=>import("./10.html-B-2Z9Wqd.js"),__vite__mapDeps([765,1])),meta:{d:1691848755e3,e:`
<h3>7</h3>
<p>Do you agree or disagree with the following statement? To truly know about a county, it is necessary to learn a major language of this country. Use specific reasons and examples to support your position.</p>
<hr>
<p>I disagree that it is necessary to learn a country's language if people want to get to know the country, because learning a new language requires years of efforts.</p>`,r:{minutes:3.11,words:933},t:"Day 10",y:"a"}}],["/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/2.html",{loader:()=>l(()=>import("./2.html-2wXx-P8J.js"),__vite__mapDeps([766,1])),meta:{d:1691848755e3,e:`
<h3>9</h3>
<p>Many people think that students study course materials more effectively by taking exams, while others think that students learn more effective through doing other activities such as writing paper or completing projects, which do you think is more effective for students to learn.</p>
<hr>`,r:{minutes:4.61,words:1382},t:"Day 2",y:"a"}}],["/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/3.html",{loader:()=>l(()=>import("./3.html-BVk6LmbA.js"),__vite__mapDeps([767,1])),meta:{d:1691848755e3,e:`
<h3>1</h3>
<p>Some people choose to work in a small company or organization with a few workers. Others prefer to work in a large company or organization with thousands of employees. Which do you think is better?</p>
<hr>
<p>I prefer to work in a large company with thousands of employees, because it provides me with a better platform to accumulate more practical working experience and skills. However, if I work in a small company, I can't make big progress.</p>`,r:{minutes:5.65,words:1695},t:"Day 3",y:"a"}}],["/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/4.html",{loader:()=>l(()=>import("./4.html-DjhJIteY.js"),__vite__mapDeps([768,1])),meta:{d:1691848755e3,e:`
<h3>2</h3>
<p>Do you agree or disagree with the statement that school should limit the time that student doing part-time jobs in school?</p>
<hr>
<p>I agree that the school should limit the time that student doing part-time jobs in school, because study is the top priority for students, they should spend more time on study instead of part-time jobs.</p>`,r:{minutes:4.21,words:1264},t:"Day 4",y:"a"}}],["/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/5.html",{loader:()=>l(()=>import("./5.html-BSz3SdCY.js"),__vite__mapDeps([769,1])),meta:{d:1691848755e3,e:`
<h3>3</h3>
<p>Do you agree or disagree with the following statement? Parents should use money as an incentive for kids to behave well in school.</p>
<hr>
<p>I agree that parents should use money as an incentive for kids to behave well in school, because it's an excellent motivator for kids.</p>
<p>I mean, it can encourage them to study harder. There is no doubt that everyone likes money, right? Including kids! Kids can use their pocket money to buy things they like, such as comic books, snacks and toys. Therefore, money is a tangible evidence of what they' ve accomplished.</p>`,r:{minutes:4.39,words:1318},t:"Day 5",y:"a"}}],["/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/6.html",{loader:()=>l(()=>import("./6.html-DlwWShNk.js"),__vite__mapDeps([770,1])),meta:{d:1691848755e3,e:`
<h3>4</h3>
<p>Do you agree or disagree with the following statement? It is never acceptable to interrupt another person when he or she is talking.</p>
<hr>
<p>I agree that it's not good to interrupt others when they are talking, because it tells others that you don't care what they say. It shows no respect to others.</p>`,r:{minutes:2.18,words:653},t:"Day 6",y:"a"}}],["/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/7.html",{loader:()=>l(()=>import("./7.html-DdJ__Bzw.js"),__vite__mapDeps([771,1])),meta:{d:1691848755e3,e:`
<h3>5</h3>
<p>Do you agree or disagree with the following statement? With the popularity of the technology that focuses on entertainment, people read fewer books than before.</p>
<hr>
<p>I agree with the statement that with the popularity of the technology that focuses on entertainment, people read fewer books than before, because there are so many interesting things for people to do to kill the time.</p>`,r:{minutes:4.3,words:1291},t:"Day 7",y:"a"}}],["/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/8.html",{loader:()=>l(()=>import("./8.html-C41Z6WHf.js"),__vite__mapDeps([772,1])),meta:{d:1691848755e3,e:`
<h3>5</h3>
<p>Some people prefer to do several tasks or projects together at the same time. Others prefer to work on one task or project at a time. Which way of working do you prefer and why?</p>
<hr>
<p>I prefer to work on one task or project at a time, because I can be fully concentrated on the task and complete it with high quality. However, if I do several tasks at the same time, it's easy for me to make mistakes.</p>`,r:{minutes:4.5,words:1351},t:"Day 8",y:"a"}}],["/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/9.html",{loader:()=>l(()=>import("./9.html-ImNKWCZB.js"),__vite__mapDeps([773,1])),meta:{d:1691848755e3,e:`
<h3>6</h3>
<p>Your professor is asking you to help with some research work on the weekend, but you have planned to go to your sister's birthday party. Which would you choose to do? Explain why?</p>
<hr>
<p>I choose to go to my sister's party, because I can make friends and relax in the party. However, doing research with my professor on weekends makes me feel tired and stressed out.</p>`,r:{minutes:4.31,words:1292},t:"Day 9",y:"a"}}],["/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/",{loader:()=>l(()=>import("./index.html-D40a32Se.js"),__vite__mapDeps([774,1])),meta:{d:1691848755e3,e:`
<p>论点</p>
<p>论据 = 例子</p>
<p>论证</p>
<ul>
<li>举例</li>
<li>因果：原因 = 目的 = 功能 = 影响 = 好处 = 意义</li>
<li>对比</li>
<li>道理</li>
<li>比喻</li>
</ul>
<h2>模板</h2>
<p>看着倒计时严格按照时间卡点来练习和做题</p>
<ul>
<li>45 观点</li>
<li>30 论点一</li>
<li>05 论点二/总结</li>
</ul>
<ol>
<li>
<p>Topic sentence + Reason 15s</p>
<ul>
<li>
<p>TS：</p>
<ul>
<li>From my perspective/ For me/ Personally speaking/ In my opinion,</li>
<li>Personally speaking, I prefer ... for several reasons.</li>
<li>Personally speaking, I think + 态度</li>
<li>Well, in my opinion, I would definitely agree/ disagree with the point that ...</li>
<li>I agree/ disagree + 态度</li>
</ul>
</li>
<li>
<p>Reason：</p>
<p>原因 = 好处 = 意义</p>
<p>because</p>
</li>
<li>
<p>排除句：</p>
<blockquote>
<p>选择题，排除其他选项：选 A， however，选 B 会怎么不好。</p>
</blockquote>
<ul>
<li>However, xxx is xxx, so we may xxx.</li>
<li>However, if we xxx, we may xxx. / 虚拟语气</li>
</ul>
</li>
</ul>
</li>
<li>
<p>Examples and details 30s</p>
<blockquote>
<p>The first reason I wanna say is that…</p>
</blockquote>
<p>语料相当于例子和细节</p>
<p>（说否定时：没钱、没时间是万能原因）</p>
<p>（说小孩时：不成熟、没有自控力、浪费时间）</p>
</li>
<li>
<p>Reason 2 如果有时间，则 reason2 和 conclusion，没时间就不说</p>
<p>More importantly, ...</p>
</li>
<li>
<p>Conclusion</p>
<p>So, that's why I choose/ agree ...</p>
</li>
</ol>`,r:{minutes:15.98,words:4793},t:"独立题",y:"a"}}],["/test/TOEFL/SPEAKING/%E7%BB%83%E4%B9%A0/task2.html",{loader:()=>l(()=>import("./task2.html-BKMyHTlc.js"),__vite__mapDeps([775,1])),meta:{d:1691648992e3,e:`<p>The letter proposes that ... because ... and ...</p>
<p>community service</p>
<p>don't agree</p>
<p>nosense</p>
<p>riduculous waste time,</p>
<table>
<thead>
<tr>
<th>Reading</th>
<th>Listening</th>
</tr>
</thead>
<tbody>
<tr>
<td>R主旨：Tim Proposes to shorten history seminars from three hours to two hours.</td>
<td>L态度：Woman disagrees</td>
</tr>
<tr>
<td>R1：Most students can't concentrate for that long.</td>
<td>L1：Tim can't concentrate. Others are prepared and rested.</td>
</tr>
<tr>
<td>R2：The last hour is a waste of time.</td>
<td>L2：Last hour is the most interesting.</td>
</tr>
</tbody>
</table>`,r:{minutes:.93,words:279},t:"",y:"a"}}],["/test/TOEFL/SPEAKING/%E7%BB%83%E4%B9%A0/task3.html",{loader:()=>l(()=>import("./task3.html-DbgGLCIG.js"),__vite__mapDeps([776,1])),meta:{d:1700646963e3,e:`<h2>练习</h2>
<h3>Suspension of Disbelief</h3>
<p>阅读：The Suspension of Disbelief....(10s)</p>
<p>过渡：(5s)</p>
<ul>
<li>For example:</li>
<li>Professor gives us an example of XXX to further explain the concept.</li>
</ul>
<p>听力：(40s)</p>
<p>起因/铺垫:</p>
<p>经过:</p>
<p>结果:</p>
<p>总结：(5s)</p>
<p>This is The Suspension of Disbelief mentioned in the lecture.</p>`,r:{minutes:.26,words:77},t:"",y:"a"}}],["/test/TOEFL/SPEAKING/%E7%BB%83%E4%B9%A0/task4.html",{loader:()=>l(()=>import("./task4.html-DUqEaWF7.js"),__vite__mapDeps([777,1])),meta:{d:1700646963e3,e:`<h2>练习</h2>
<h3>resolve conflict</h3>
<ul>
<li>
<p>mediation</p>
<p>achieve compromise</p>
<p>Friends help them to achieve</p>
</li>
<li>
<p>decision</p>
<p>1 win 2 lose</p>
</li>
</ul>
`,r:{minutes:.06,words:17},t:"",y:"a"}}],["/test/TOEFL/SPEAKING/%E9%A2%84%E6%B5%8B/X.html",{loader:()=>l(()=>import("./X.html-B6OJat44.js"),__vite__mapDeps([778,1])),meta:{d:1700646963e3,e:`
`,r:{minutes:0,words:1},t:"X",y:"a"}}],["/test/TOEFL/SPEAKING/%F0%9F%8C%9F%E8%AF%AD%E6%96%99/",{loader:()=>l(()=>import("./index.html-DRiJaK90.js"),__vite__mapDeps([779,1])),meta:{d:1696742913e3,e:`
<p>口语24+必备技能</p>
<p>【高分经验】无论考题怎么出，答题都可以套用高频「核心语料」；</p>
<p>【解决问题】避免考场紧张导致：细节忘词、发音含混、语法错误；</p>
<p>【应试方法】把考题与提前积累的「核心语料」建立联系，套用直接答题。</p>
<p>一【牢记应试3原则】</p>
<ol>
<li>【应试别钻牛角尖】口语不是辩论比赛，不求论证完美，但求流利清晰。</li>
<li>【15秒准备做什么】准备时间很短，如果现想现编，很可能 “口语车祸现场”；应试技巧：15秒内确认，在提前积累的语料里，哪些更适合回答本题——只要不跑题，开说别纠结。</li>
<li>【45秒答题的重点】先保证发音清晰，让机评识别发音，人工听懂说什么；超时没关系，但不要大段空白——回到口语应试本质：宁可论证有瑕疵，也不要让口语大段空白。</li>
</ol>`,r:{minutes:1.76,words:529},t:"语料",y:"a"}}],["/test/TOEFL/SPEAKING/%F0%9F%8C%9F%E8%AF%AD%E6%96%99/%E6%95%99%E8%82%B2%E7%B1%BB.html",{loader:()=>l(()=>import("./教育类.html-CZxxqFki.js"),__vite__mapDeps([780,1])),meta:{d:1696742913e3,e:`
<p>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD:src/apply/test/TOEFL/SPEAKING/🌟语料/教育类.md</p>
<h3>1⃣️做饭</h3>
<p>========</p>
<h2>做饭</h2>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>de066bc7 (feat: 英语):src/standardized/TOEFL/SPEAKING/BEAT/教育类.md</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>`,r:{minutes:10.42,words:3125},t:"教育类",y:"a"}}],["/test/TOEFL/SPEAKING/%F0%9F%8C%9F%E8%AF%AD%E6%96%99/%E7%94%9F%E6%B4%BB%E7%B1%BB.html",{loader:()=>l(()=>import("./生活类.html-J_Tlbtlt.js"),__vite__mapDeps([781,1])),meta:{e:`
<h2>1⃣️通勤</h2>
<p>What characteristic in a house or apartment do you think is the most important for making it a good place to live: Being convenient to commute or living with kind roommates? Explain why you think it is important.</p>
<hr>
<p>① I think a place to live should be convenient for commuting.</p>`,r:{minutes:2.92,words:876},t:"生活类",y:"a"}}],["/test/TOEFL/WRITING/BEAT/",{loader:()=>l(()=>import("./index.html-BvvagwW9.js"),__vite__mapDeps([782,1])),meta:{d:1696218053e3,e:`
<h2>时间表</h2>
<table>
<thead>
<tr>
<th>时间</th>
<th>任务</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>周一</td>
<td>话题模板归纳</td>
<td>高频话题写作模板</td>
</tr>
<tr>
<td>周二</td>
<td>学术讨论写作</td>
<td>思路讲解满分示范</td>
</tr>
<tr>
<td>周三</td>
<td>学术讨论写作</td>
<td>思路讲解满分示范</td>
</tr>
<tr>
<td>周四</td>
<td>学术讨论写作</td>
<td>思路讲解满分示范</td>
</tr>
<tr>
<td>周五</td>
<td>学术讨论写作</td>
<td>思路讲解满分示范</td>
</tr>
<tr>
<td>周六</td>
<td>综合写作</td>
<td>论证演示满分示范</td>
</tr>
<tr>
<td>周日</td>
<td>本周复习</td>
<td>考题归纳金句巩固</td>
</tr>
</tbody>
</table>`,r:{minutes:1.49,words:446},t:"BEAT",y:"a"}}],["/test/TOEFL/WRITING/BEAT/Untitled.html",{loader:()=>l(()=>import("./Untitled.html-V38XTXfu.js"),__vite__mapDeps([783,1])),meta:{e:"<p>Amy articulates a compelling argument that the government should not add tax for public transportation. Admittedly, tax revenue for public transportation will be a cost for all the people. However, taking accountability for the benefit of the public transportation, I am inclined to support the tax renenue for public transportation. In other word, the conveniece brought by the public transportation is of great significance of the promotion of the overall society's efficiency. Not only can public transportation provide more , but also can alleviate the burden of those with limited income. For example, during my internship at Beijing, thanks to the police that university students can take public transportation for free during summer vaccation, I save a lot of money of my everyday commuting.</p>",r:{minutes:2.33,words:698},t:"",y:"a"}}],["/test/TOEFL/WRITING/BEAT/%E4%B8%87%E8%83%BD%E5%8E%9F%E5%9B%A0.html",{loader:()=>l(()=>import("./万能原因.html-DDxppTAg.js"),__vite__mapDeps([784,1])),meta:{d:1694686552e3,e:`
<p>方便、效率</p>
<p>经济、耐久</p>
<p>安全、环保</p>
<p>交流、经验</p>
<p>乐趣、成就</p>
<p>情感、健康</p>
<p>例证细节</p>
<ol>
<li>记叙文法：时间、地点、人物、起因、经过、结果，六选四即可</li>
<li>引用数据：</li>
<li>对比分析：对比信号引导，或虚拟语气假设，再论述一遍</li>
<li>名人名言：需要大量积累，记忆耗时，备考有一定难度</li>
</ol>
<p>造句方法：</p>
<p>先把句子主干（主谓宾）按下来，然后记叙文六要素，相应放到一下句子结构中</p>
<ol>
<li>发展要素：","后面用分词结构引出</li>
<li>结果要素：thus</li>
</ol>`,r:{minutes:5.91,words:1774},t:"万能理由",y:"a"}}],["/test/TOEFL/WRITING/BEAT/%E6%A8%A1%E6%9D%BF.html",{loader:()=>l(()=>import("./模板.html-lib9rHyR.js"),__vite__mapDeps([785,1])),meta:{d:1696565234e3,e:`
<p>自制模版原则：自己用的顺手</p>
<ul>
<li>开放型话题，可以用【直给型大纲】；如果怕输出细节字数不够，</li>
<li>也可以用【让步型大纲】的 7 句话结构</li>
</ul>
<h2>基础提纲</h2>
<h3>让步型</h3>
<ol>
<li>
<p>Andrew articulates a compelling assertion that [填入 Andrew 的观点].</p>
</li>
<li>
<p>Admittedly, [填入 Andrew 的理由], fulfilling the local residents' desire for a richer spiritual life.</p>
</li>
<li>
<p>However, taking accountability for [话题背景], [填入自己的观点].</p>
<ul>
<li>
<p>【选择题】I am leaning toward/ I think/am inclined to prioritize</p>
</li>
<li>
<p>【判断题】</p>
<ul>
<li>
<p>【否定】A can be challenging</p>
<p>A cannot objectively B</p>
<p>A cannot simply B</p>
</li>
<li>
<p>【肯定】I am leaning towards</p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>In other words, in the context of [填入讨论的背景或主题], an art gallery that brings economic benefits is more likely to secure sustained support.</p>
</li>
<li>
<p>【解释陈述】示范：Specifically, the communities around an art gallery can witness an increase in consumption and tax revenue, ensuring its sustainable development.</p>
</li>
<li>
<p>【例证细节】自己准备 1-2 个可以替换的例证，无论是“记叙文法”还是“引用调查法”，只要能保证考试现场快速输出就可以。</p>
</li>
<li>
<p>Therefore, although [填入 andrew 的观点] might resonate with a portion of the population, [填入自己的观点] would be more beneficial to the long-term development.</p>
</li>
</ol>`,r:{minutes:11.53,words:3459},t:"模板",y:"a"}}],["/test/TOEFL/WRITING/BEAT/%E7%BB%83%E4%B9%A0.html",{loader:()=>l(()=>import("./练习.html-DcTGgboS.js"),__vite__mapDeps([786,1])),meta:{d:1696565234e3,e:`
<h2>科技</h2>
<h3>积累</h3>
<ol>
<li>保罗提出了一个有道理的观点。</li>
</ol>
<p>Paul makes a valid point.</p>
<ol start="2">
<li>投资教育设备凸显了大学对提高研究效率的支持。</li>
</ol>
<p>Investing in educational equipment highlights a university's support for promoting research efficiency.</p>
<ol start="3">
<li>预算分配应优先考虑提高教育工作者的福利。</li>
</ol>`,r:{minutes:18.37,words:5510},t:"练习",y:"a"}}],["/test/TOEFL/WRITING/BEAT/%E7%BB%BC%E5%90%88%E5%86%99%E4%BD%9C.html",{loader:()=>l(()=>import("./综合写作.html-BMpCcFjy.js"),__vite__mapDeps([787,1])),meta:{d:1695639496e3,e:`
<h3>第一步，阅读短文</h3>
<p>时间 3 分钟，重点抓“主论点和分论点”</p>
<h3>第二步，收听讲座</h3>
<p>点击播放键听讲座：记录观点是支持还是反对；以及针对短文的 3 个分论点，尽全力记录听力 3 个分论点的细节。</p>
<p>荧光：采分信号</p>
<p>粗体：采分内容</p>
<h3>第三步，开始答题</h3>
<p>20 分钟答题，参考 Part 4 范文自己批改。</p>
<h3>参考案例</h3>
<ol>
<li>
<p>综合写作结构句型</p>
<p>【首段】说明听力和阅读的关系：支持或反对；</p>
<p>【随后 3 个主体段】把听力的 3 个分论点和阅读的 3 个分论点，依次对比。</p>
<p>【注意】用听力的分论点对应阅读的分论点，阅读只需写出分论点，不用牵扯太多细节，但听力除了写出分论点，要尽全力补充论据细节。</p>
</li>
<li>
<p>综合写作建议 225 词-260 词，至少留出 3 分钟检查拼写和语法。</p>
</li>
<li>
<p>【应试技巧】考试如果听力的细节记不全，答题字数达不到要求，可以最后加个第 5 段：再总结一遍阅读和听力的关系，字数至少达到 225 词。结尾总结参考：</p>
</li>
</ol>`,r:{minutes:6.01,words:1802},t:"综合写作",y:"a"}}],["/test/TOEFL/WRITING/BEAT/%E8%A1%A8%E8%BE%BE%E4%B8%8E%E5%8F%A5%E5%BC%8F.html",{loader:()=>l(()=>import("./表达与句式.html-Dwkd628H.js"),__vite__mapDeps([788,1])),meta:{d:1693044666e3,e:`
<p>on par with 与…不相上下;与...同等水平;与……平分秋色</p>
<h2>常用表达</h2>
<h3>有作用</h3>
<p>is benificial to</p>
<p>constitutes to</p>
<p>in conductive to</p>
<p>is crucial in</p>
<p>allows sb to</p>
<p><strong>exert</strong> a negative / positive impact on</p>
<p>is an <strong>indispensable</strong> part of</p>
<p>play a vital part in doing</p>`,r:{minutes:1.32,words:395},t:"表达与句式",y:"a"}}],["/test/TOEFL/WRITING/BEAT/%E9%80%A0%E5%8F%A5.html",{loader:()=>l(()=>import("./造句.html-_A7USwfi.js"),__vite__mapDeps([789,1])),meta:{d:1695091302e3,e:`
<p>a host of</p>
<h2>简单句、并列句</h2>
<blockquote>
<p>科技类</p>
</blockquote>
<h3>主谓</h3>
<p>A host of physical and psychological problems may arise in a single-sex school.</p>
<blockquote>
<p>Arise, appear, emerge</p>
</blockquote>
<h3>主谓宾</h3>
<blockquote>
<p>动词不定式可以充当宾语</p>
</blockquote>
<p>Quality education aims to promote the all-round development of children.</p>`,r:{minutes:5.91,words:1774},t:"造句",y:"a"}}],["/test/TOEFL/WRITING/BEAT/%E9%A2%98%E7%9B%AE.html",{loader:()=>l(()=>import("./题目.html-BLaEaRvY.js"),__vite__mapDeps([790,1])),meta:{d:1700646963e3,e:"<p>Amy articulates a compelling argument that the government should not add tax for public transportation. Admittedly, tax revenue for public transportation will be a cost for all the people. However, taking accountability for the benefit of the public transportation, I am inclined to support the tax renenue for public transportation. In other word, the conveniece brought by the public transportation is of great significance of the promotion of the overall society's efficiency. Not only can public transportation provide more , but also can alleviate the burden of those with limited income. For example, during my internship at Beijing, thanks to the police that university students can take public transportation for free during summer vaccation, I save a lot of money of my everyday commuting.</p>",r:{minutes:2.33,words:698},t:"",y:"a"}}],["/test/TOEFL/WRITING/BEAT/%E9%AB%98%E9%A2%91%E8%AF%9D%E9%A2%98.html",{loader:()=>l(()=>import("./高频话题.html-CmdY08xP.js"),__vite__mapDeps([791,1])),meta:{d:1695091302e3,e:`
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/1483280643919158.jpg" alt="12 items.jpg" loading="lazy"></p>
<h2>公共建筑类</h2>
<ul>
<li>【交流】剧场提供交流场所，活跃社区互动，讨论新剧目。</li>
<li>【乐趣】剧场演出，居民观看放松解压，增加生活乐趣。</li>
<li>【经济】剧场演出增加收入，吸引人群带动周边消费。</li>
</ul>
<h3>模板</h3>
<ol>
<li>【让步认可】Andrew's viewpoint that [填入 Andrew 的观点] holds merit.</li>
<li>【让步理由】Admittedly, [填入 Andrew 的理由], fulfilling the local residents' desire for a richer spiritual life.</li>
<li>【转折观点】However, taking into account the correlation between public facilities and urban development, [填入自己的观点].</li>
<li>【给出理由】In other words, concerning [填入讨论的背景或主题], an art gallery that brings economic benefits is more likely to secure sustained support.</li>
<li>【解释陈述】示范：Specifically, the communities around an art gallery can witness an increase in consumption and tax revenue, ensuring its sustainable development.</li>
<li>【例证细节】自己准备 1-2 个可以替换的例证，无论是“记叙文法”还是“引用调查法”，只要能保证考试现场快速输出就可以。</li>
<li>【总结观点】Therefore, although [填入 andrew 的观点] might resonate with a portion of the population, [填入自己的观点] would be more beneficial to the long-term development.</li>
</ol>`,r:{minutes:9.74,words:2921},t:"高频话题",y:"a"}}],["/test/TOEFL/WRITING/%E7%BB%83%E4%B9%A0/%E6%96%B0%E7%89%88%E7%BB%83%E4%B9%A0.html",{loader:()=>l(()=>import("./新版练习.html-peqdVT_8.js"),__vite__mapDeps([792,1])),meta:{d:1700646963e3,e:`<p>Andrew articulates a compelling argument that</p>
<p>Admittedly,</p>
<p>However, taking the accountability for STH, I am leaning toward that</p>
<p>In other words, in the context of,</p>
<p>Therefore, although might resonate with a portion of the population,</p>
<p>51</p>
<p>Claire articulates a compelling argument that taking responsibility for mistakes is crucial.</p>`,r:{minutes:5.67,words:1700},t:"",y:"a"}}],["/test/TOEFL/WRITING/%E7%BB%83%E4%B9%A0/%E7%8B%AC%E7%AB%8B%E9%A2%98.html",{loader:()=>l(()=>import("./独立题.html-BiFGKUJN.js"),__vite__mapDeps([793,1])),meta:{d:1669446166e3,e:`<p>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD:src/standardized/TOEFL/WRITING/练习.md</p>
<h1>练习</h1>
<h2>讨论板</h2>
<h2>综合写作</h2>
<h2>独立写作</h2>
<p>========</p>
<h1>独立题</h1>
<h3>1</h3>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>528220a6 (feature: 更新写作笔记):src/standardized/TOEFL/WRITING/练习/独立题.md</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>`,r:{minutes:.96,words:287},t:"练习",y:"a"}}],["/test/TOEFL/WRITING/%E7%BB%83%E4%B9%A0/%E7%BB%BC%E5%90%88%E9%A2%98.html",{loader:()=>l(()=>import("./综合题.html-BkpnoPd-.js"),__vite__mapDeps([794,1])),meta:{d:1693548089e3,e:`
<p>The author in the reading holds that, while the professor in the lecture expresses an opposite opinion.</p>
<p>To begin with, the author claims that . However, the lecturer refutes that</p>
<p>Moreover, the author believes that. On the contrary, the lecturer rebuts</p>
<p>Finally, the author puts forward that. Instead, the lecturer retorts that</p>`,r:{minutes:.36,words:107},t:"综合题",y:"a"}}],["/test/TOEFL/WRITING/%E7%BB%83%E4%B9%A0/%E8%AE%A8%E8%AE%BA%E6%9D%BF.html",{loader:()=>l(()=>import("./讨论板.html-BD23XXaT.js"),__vite__mapDeps([795,1])),meta:{e:`
<p>Andrew presents a compelling argument in favor of promoting student sports activities.</p>
<p>Admittedly, sports participation is an excellent means to promote students' physical health.</p>
<p>However, considering the responsibilities in promoting academic excellence, I am inclined to prioritize the construction of a new library. In my view, a new library can enhance teaching and scholarly communication.</p>`,r:{minutes:9.3,words:2790},t:"讨论板",y:"a"}}],["/algo/summary/optimise/decrease-conquer/2ptr/",{loader:()=>l(()=>import("./index.html-jIzfdOos.js"),__vite__mapDeps([796,1])),meta:{d:1735767391e3,e:`
<p>双指针</p>
<p>核心：利用单调性，不走回头路，使 On2 -&gt; On</p>
<p>按方向划分：</p>
<ul>
<li>
<p>同向</p>
</li>
<li>
<p>相向</p>
</li>
<li>
<p>背向</p>
<p>判断回文串、中心往外扩散</p>
</li>
<li>
<p>平行</p>
<p>两个序列</p>
</li>
</ul>
<p>按逻辑划分：</p>
<ul>
<li>同向：每轮循环中，j走一步，满足条件时i走若干步，i的总步数往往小于j
<ul>
<li>可是相向、背向、平行</li>
<li>累积：滑动窗口</li>
<li>数对
<ul>
<li>去重</li>
<li>端点</li>
<li>匹配</li>
<li>划分</li>
</ul>
</li>
</ul>
</li>
<li>逆向：每轮循环中，满足条件时i走一步，不满足条件时j走一步
<ul>
<li>可是相向、背向、平行</li>
<li>累积：前后缀</li>
<li>数对
<ul>
<li>2Sum</li>
<li>merge</li>
<li>Z型遍历</li>
<li>翻转
<ul>
<li>partition</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>`,r:{minutes:1.16,words:349},t:"Two Pointers",y:"a"}}],["/algo/summary/optimise/decrease-conquer/binary/",{loader:()=>l(()=>import("./index.html-DJM3yPoh.js"),__vite__mapDeps([797,1])),meta:{d:1732244737e3,e:`
<p>每一个元素在目标函数上都只有两种取值，然后可以唯一对应到两种操作，可以避免走回头路，可以做到：</p>
<ul>
<li>将On2的问题优化到On
<ul>
<li>双指针本来为组合问题，复杂度应为On2</li>
</ul>
</li>
<li>将On的问题优化到Ologn</li>
</ul>
<p>特殊有序</p>
<ul>
<li></li>
</ul>
<p>二分答案</p>
<ul>
<li>线性扫描</li>
<li>逆向双针</li>
<li>滑动窗口</li>
<li>Z型遍历</li>
<li>动态规划</li>
</ul>
<p>滑动窗口</p>
<hr>
<p>有序数组</p>`,r:{minutes:.7,words:211},t:"二值有序",y:"a"}}],["/algo/summary/optimise/decrease-conquer/delete/monotic-stack.html",{loader:()=>l(()=>import("./monotic-stack.html-DV_B0iP5.js"),__vite__mapDeps([798,1])),meta:{d:1732244737e3,e:`
<p>可以用模板，也可以不用，有的时候需要存额外信息，就不用用这个模板</p>
<p>单调栈模板</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MonoticStack</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Deque</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> stack </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayDeque</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    BiPredicate</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> isValid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Optional</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">BiConsumer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> prev</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> MonoticStack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">BiPredicate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">isValid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">isValid</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> isValid;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        stack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">isValid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), i)) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ifPresent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(f </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">accept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), i));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ifPresent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(f </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">accept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), i));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        stack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(n);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> stack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peekLast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.15,words:345},t:"单调栈",y:"a"}}],["/algo/summary/optimise/decrease-conquer/delete/monotic.html",{loader:()=>l(()=>import("./monotic.html-4m3_HHM1.js"),__vite__mapDeps([799,1])),meta:{d:1732244737e3,e:`
<p>单调队列模板</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MonoticDeque</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayDeque</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    BiPredicate</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> isValid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Optional</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">BiConsumer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> prev</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> MonoticDeque</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">BiPredicate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">isValid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">isValid</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> isValid;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">isValid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), n)) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ifPresent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(f </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">accept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), n));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ifPresent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(f </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">accept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), n));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(n);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peekLast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> pollLast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            pollLast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.88,words:263},t:"单调队列",y:"a"}}],["/algo/summary/optimise/decrease-conquer/greedy/",{loader:()=>l(()=>import("./index.html-6xAGKYvv.js"),__vite__mapDeps([800,1])),meta:{d:1732244737e3,e:`
<p><a href="https://leetcode.cn/circle/discuss/g6KTKL/" target="_blank" rel="noopener noreferrer">贪心题单</a></p>
<p>贪心算法（greedy algorithm），每一步行动总是按某种指标选取最优的操作。而且目光短浅，总是只看眼前，并不考虑以后可能造成的影响。</p>
<p>可想而知，并不是所有的时候贪心法都能获得最优解，所以一般使用贪心法的时候，都要确保自己能证明其正确性。</p>
<p>贪心问题，经常涉及：排序、堆等方法</p>
<p>策略</p>
<ul>
<li>
<p>从最小/最大开始贪心，优先考虑最小/最大的数，从小到大/从大到小贪心。</p>
<p>在此基础上，衍生出了反悔贪心。</p>
</li>
<li>
<p>从最左/最右开始贪心，思考最前/最后的数的策略，把 n 个数的原问题转换成 n−1 个数（或更少）的子问题。</p>
</li>
</ul>`,r:{minutes:4.91,words:1473},t:"贪心有序",y:"a"}}],["/algo/summary/optimise/decrease-conquer/greedy/%E4%B8%AD%E4%BD%8D%E6%95%B0.html",{loader:()=>l(()=>import("./中位数.html-DCOImHw0.js"),__vite__mapDeps([801,1])),meta:{d:1732244737e3,e:`
<p>Problem: 462. 最小操作次数使数组元素相等 II 【模板】</p>
<p>Problem: 2033. 获取单值网格的最小操作数 【小转换】</p>
<p>Problem: 2448. 使数组相等的最小开销 【思维转换，把代价视为多个数即可】</p>
<p>Problem: 2607. 使子数组元素和相等 【新套路】</p>
<p>Problem: 1703. 得到连续 K 个 1 的最少相邻交换次数 【转换较为困难】</p>
<p>Problem: 2967. 使数组成为等数数组的最小代价 【综合体（回文数预处理+中位数贪心）】</p>
<p>中位数贪心主要的思想是求数轴上有 n 个点，然后求一个数使得该点到数轴上所有点的距离之和最小，那这个数一定是在最中间的点处。</p>`,r:{minutes:.78,words:234},t:"中位数",y:"a"}}],["/algo/summary/optimise/decrease-conquer/greedy/%E5%8C%BA%E9%97%B4.html",{loader:()=>l(()=>import("./区间.html-DvwRhFkR.js"),__vite__mapDeps([802,1])),meta:{d:1732244737e3,e:`
<p>不相交区间</p>
<p>区间选点</p>
<p>区间覆盖</p>
<h3>区间分组</h3>
<p>给定一些区间，把这些区间分成最少的组，使得每组内的区间互不相交。</p>
<p>开始早的在前；开始时间一样，晚结束的在前；</p>
<p><code>a ASC, b ASC</code></p>
<p>选择：</p>
<p>任务调度/会议室</p>
<h3>不相交区间</h3>
<p>按照b升序排列</p>
<p><code>b ASC</code></p>
<p>选择：一定选择第一个区间</p>
<h3>区间选点</h3>
<p><code>b ASC, a DESC</code></p>`,r:{minutes:.49,words:147},t:"区间",y:"a"}}],["/algo/summary/optimise/decrease-conquer/greedy/%E5%8F%8D%E6%82%94.html",{loader:()=>l(()=>import("./反悔.html-CJs-oi2_.js"),__vite__mapDeps([803,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/algo/summary/optimise/decrease-conquer/greedy/%E5%90%88%E5%B9%B6.html",{loader:()=>l(()=>import("./合并.html-TaHBSqJd.js"),__vite__mapDeps([804,1])),meta:{d:1732244737e3,e:`
<p>Huffman编码</p>
<p>最优编码问题</p>
`,r:{minutes:.04,words:11},t:"合并",y:"a"}}],["/algo/summary/optimise/decrease-conquer/greedy/%E5%BA%8F%E5%88%97.html",{loader:()=>l(()=>import("./序列.html-CSgCSORm.js"),__vite__mapDeps([805,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/algo/summary/optimise/decrease-conquer/greedy/%E8%83%8C%E5%8C%85.html",{loader:()=>l(()=>import("./背包.html-DLdRW0v0.js"),__vite__mapDeps([806,1])),meta:{d:1732244737e3,e:`
<p>最优装载问题</p>
<p>部分背包问题</p>
<p>乘船问题</p>
`,r:{minutes:.06,words:18},t:"背包",y:"a"}}],["/algo/summary/optimise/decrease-conquer/kptr/",{loader:()=>l(()=>import("./index.html-D9OMtj9v.js"),__vite__mapDeps([807,1])),meta:{d:1732244737e3,e:`
<p>多指针</p>
<p>用堆来存储K指针，每次取权值最大/最小的指针，更新答案并把该指针后移并放入堆中</p>
<p>每次移动某一个最优的指针，在任意n轮操作时，堆中的元素始终是这k个序列中n轮操作时的最优切面（比较抽象但是可以通过最小区间问题来理解）</p>
<p>经典问题：</p>
<p>多路归并（k-way merge）</p>
<p>丑数问题</p>
<p>最小区间</p>
<p>队列中</p>
`,r:{minutes:.42,words:127},t:"K Pointers",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E5%8C%BA%E9%97%B4/%E5%8C%BA%E9%97%B4%E5%9E%8B.html",{loader:()=>l(()=>import("./区间型.html-DK6LdHrA.js"),__vite__mapDeps([808,1])),meta:{d:1732244737e3,e:`
<p>给定一个序列/字符串，进行一些操作<br>
最后一步会将序列字符串去头/去尾<br>
剩下的会是一个区间[i, j]</p>
<p>特点：</p>
<p>题目会存在Subarray/Substring相关的字眼</p>
<p>状态：</p>
<ol>
<li><code>f[i][j]</code>表示子串<code>[i,j]</code>时的性质，或</li>
<li><code>f[i][k]</code>表示以i开头长度为k的区间性质</li>
</ol>
<p>用<code>f[i][j]</code>表示数组/字符串中<code>[i,j]</code>这一段区间的最优值/可行性/方案总数</p>`,r:{minutes:4.29,words:1288},t:"区间型",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E5%9D%90%E6%A0%87/2d.html",{loader:()=>l(()=>import("./2d.html-u_IXGf5r.js"),__vite__mapDeps([809,1])),meta:{d:1733274761e3,e:`
<p>Unique Paths</p>
<p>状态：<code>f[i][j]</code>表示到坐标i,j位置的方案数</p>
<p>转移：<code>f[i][j]=f[i-1][j]+f[i][j-1]</code></p>
<p>边界：<code>f[0][0]=1</code></p>
<hr>
<p>Unique Paths II</p>
<blockquote>
<p>有些各自有障碍物，不能通过</p>
</blockquote>
<p>状态：<code>f[i][j]</code>表示到坐标i,j位置的方案数</p>
<p>转移：<code>f[i][j]=f[i-1][j]+f[i][j-1], 0|g[i][j]==1</code></p>`,r:{minutes:4.13,words:1240},t:"二维型",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E5%9D%90%E6%A0%87/%E5%9D%90%E6%A0%87%E5%9E%8B.html",{loader:()=>l(()=>import("./坐标型.html-DYE-kC2j.js"),__vite__mapDeps([810,1])),meta:{d:1732244737e3,e:`
<p>状态：<code>f[i]</code>表示以<code>a[i]</code>为<strong>结尾</strong>的子序列的某种性质</p>
<p>边界：<code>f[0]</code>就是以<code>a[0]</code>为结尾的子序列的性质（没法从前面推导）</p>
<p>本质上是找一个以i结尾的路径（子序列）</p>
<p>给定一个序列或网格，需要找到序列中某个/些子序列或网格中的某条路径的性质</p>
<p>坐标型动态规划的初始条件f[0]就是指以a[0]为结尾的子序列的性质</p>
<p>状态i表示以a为结尾的满足条件的子序列的性质</p>
<p><code>f[i][j]</code>中的下标，表示以格子<code>(i,j)</code>为结尾的满足条件的路径的性质</p>`,r:{minutes:6.3,words:1890},t:"坐标型",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E5%BA%8F%E5%88%97/%E5%88%92%E5%88%86%E5%9E%8B.html",{loader:()=>l(()=>import("./划分型.html-DOyTJkOE.js"),__vite__mapDeps([811,1])),meta:{d:1732244737e3,e:`
<p>划分型动态规划，属于序列型动态规划，但是通常需要加上段数信息</p>
<p>给定长度为N的序列或字符串，要求划分为若干段（有限段、不限段）</p>
<p>让你将字符串、数组划分为若干部分或指定个数部分<br>
开动规数组时，n和k都需要+1<br>
方程推导是去找最后一个部分从哪儿切开</p>
<p>要求将一个序列或字符串划分成若干满足要求的片段</p>
<p>解决方法：最后一步→最后一段，枚举最后一段的起点</p>
<ul>
<li>
<p>不定段数，用<code>f[i]</code>表示前i个元素分段后的可行性/最优值/方式数：</p>
<ul>
<li>Perfect Squares, Palindrome Partition lI</li>
</ul>
</li>
<li>
<p>指定段数，用<code>f[i][j]</code>表示前i个元素分成j段后的可行性/最优值/方式数：</p>
<ul>
<li>Copy Books</li>
</ul>
</li>
</ul>`,r:{minutes:2.48,words:745},t:"划分型",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E5%BA%8F%E5%88%97/%E5%8F%8C%E5%BA%8F%E5%9E%8B.html",{loader:()=>l(()=>import("./双序型.html-D-EW5kLv.js"),__vite__mapDeps([812,1])),meta:{d:1732244737e3,e:`
<p>有两个序列/字符串，需要进行一些操作<br>
每个序列本身是一维的，可以转化为二维动态规划</p>
<p>常见是匹配型，也有双区间的</p>
<p>两个字符串的匹配值依赖于两个字符串前缀的匹配值<br>
字符串长度为 n,m 则需要开(n+1)x(m+1)的状态数组<br>
要初始化<code>dp[i][0]</code>与<code>dp[0][i]</code><br>
通常都可以用滚动数组进行空间优化</p>
<p>也可以用滚动数组优化</p>
<hr>
<p>两个一维序列/字符串</p>
<p>突破口</p>
<ul>
<li>串A和串B的最后一个字符是否匹配</li>
<li>是否需要串A/串B的最后一个字符</li>
<li>缩减问题规模</li>
</ul>`,r:{minutes:3.41,words:1022},t:"双序型",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E5%BA%8F%E5%88%97/%E5%BA%8F%E5%88%97%E5%9E%8B.html",{loader:()=>l(()=>import("./序列型.html-CgoFqz6P.js"),__vite__mapDeps([813,1])),meta:{d:1732244737e3,e:`
<p>题目变种多，没有固定模板，见招拆招</p>
<p>分类</p>
<p>前缀型/序列型</p>
<ul>
<li>背包型</li>
<li>划分型</li>
<li>双序型/匹配型</li>
</ul>
<p>后缀型</p>
<p>对于博弈问题，每次都取头部的东西（边不可逆），再往后选，这样只能从后往前推</p>
<p>也适合于不确定终点的时候使用</p>
<hr>
<p>给定一个序列</p>
<p>状态：<code>f[i]</code>表示前i个元素<code>a[0],a[1],...,a[i-1]</code>的某种性质</p>
<p>边界：<code>f[0]</code>表示空序列的性质</p>`,r:{minutes:5.6,words:1679},t:"序列型",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E5%BA%8F%E5%88%97/%E8%82%A1%E7%A5%A8%E9%97%AE%E9%A2%98.html",{loader:()=>l(()=>import("./股票问题.html-h4eHVsJ7.js"),__vite__mapDeps([814,1])),meta:{d:1732244737e3,e:`
<p>那么对于这道题，我们具体到每一天，看看总共有几种可能的「状态」，再找出每个「状态」对应的「选择」。我们要穷举所有「状态」，穷举的目的是根据对应的「选择」更新状态。听起来抽象，你只要记住「状态」和「选择」两个词就行，下面实操一下就很容易明白了。</p>
<h3>选择</h3>
<p><strong>每天都有三种「选择」</strong>：买入、卖出、无操作，我们用 <code>buy</code>, <code>sell</code>, <code>rest</code> 表示这三种选择。</p>
<h3>限制</h3>
<p><code>sell</code> 必须在 <code>buy</code> 之后，<code>buy</code> 必须在 <code>sell</code> 之后。那么 <code>rest</code> 操作还应该分两种状态，一种是 <code>buy</code> 之后的 <code>rest</code>（持有了股票），一种是 <code>sell</code> 之后的 <code>rest</code>（没有持有股票）。</p>`,r:{minutes:1.63,words:489},t:"股票问题",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E6%95%B0%E4%BD%8D/%E6%95%B0%E4%BD%8D%E5%9E%8B.html",{loader:()=>l(()=>import("./数位型.html-C5VDrLv1.js"),__vite__mapDeps([815,1])),meta:{d:1732244737e3,e:`
<p>状态：<code>f[pos][mask][bound]</code></p>
<hr>
<p>灵神 @灵茶山艾府 的 [数位dp] 相关题目：</p>
<ul>
<li>面试题17.06 <a href="https://leetcode.cn/problems/number-of-2s-in-range-lcci/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/number-of-2s-in-range-lcci/</a></li>
<li>233 <a href="https://leetcode.cn/problems/number-of-digit-one/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/number-of-digit-one/</a></li>
<li>600 <a href="https://leetcode.cn/problems/non-negative-integers-without-consecutive-ones/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/non-negative-integers-without-consecutive-ones/</a></li>
<li>902 <a href="https://leetcode.cn/problems/numbers-at-most-n-given-digit-set/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/numbers-at-most-n-given-digit-set/</a></li>
<li>1012 <a href="https://leetcode.cn/problems/numbers-with-repeated-digits/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/numbers-with-repeated-digits/</a></li>
<li>1067 <a href="https://leetcode.cn/problems/digit-count-in-range/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/digit-count-in-range/</a></li>
<li>1397 <a href="https://leetcode.cn/problems/find-all-good-strings/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/find-all-good-strings/</a></li>
<li>2376 <a href="https://leetcode.cn/problems/count-special-integers/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/count-special-integers/</a></li>
</ul>`,r:{minutes:.27,words:82},t:"数位型",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E6%A0%91%E5%BD%A2/%E6%A0%91%E4%B8%8A%E5%9E%8B.html",{loader:()=>l(()=>import("./树上型.html-BBsafpZy.js"),__vite__mapDeps([816,1])),meta:{d:1732244737e3,e:`
<p>可以理解成后缀型（即当前结点即整个子树的某种性质）</p>
<p>常见处理方法，通过设计一层状态，来把多层问题（如需下下层）转化成只需要下一层（典型如打家劫舍III、树的最大独立集）</p>
<p>注：可能有同学觉得树形 DP 没有重复访问同一个状态（重叠子问题），并不能算作 DP，而是算作普通的递归。这么说也有一定道理，不过考虑到思维方式和 DP 是一样的自底向上，所以仍然叫做树形 DP。此外，如果是自顶向下的递归做法，是存在重叠子问题的，一般要结合记忆化搜索实现。</p>
<ul>
<li></li>
</ul>
<h2>例题</h2>
<p>树的最大独立集</p>
<blockquote>
<p>k</p>
</blockquote>`,r:{minutes:2.99,words:898},t:"树上型",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E7%8A%B6%E5%8E%8B/%E7%8A%B6%E5%8E%8B%E5%9E%8B.html",{loader:()=>l(()=>import("./状压型.html-DX-2ddZY.js"),__vite__mapDeps([817,1])),meta:{d:1732244737e3,e:`
<p>状态压缩DP，State Compression DP，又称Bitmask DP。</p>
<p>排列类问题，往往可以用状压型DP解决</p>
<p>通常的dp是用一个变量（如dp[i], dp[j]）表示一个状态，而Bitmask DP使用一个bitmask变量（dp[bitmask]），来表示一个集合的状态。bitmask是一个二进制或多进制数，是一个整数，状态压缩也就是将集合的状态压缩为一个整数来表示。</p>
<p>技巧：</p>
<p>如果用二进制表示子集并进行动态规划，集合中的元素就隐含了阶段信息。例如，</p>
<ol>
<li>可以把集合中的最大元素当作“阶段”</li>
<li>可以把集合中的一的个数当作阶段</li>
</ol>`,r:{minutes:4.51,words:1353},t:"状压型",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E7%BA%A6%E6%9D%9F/%E7%8A%B6%E6%80%81%E5%9E%8B.html",{loader:()=>l(()=>import("./状态型.html-36isKsvw.js"),__vite__mapDeps([818,1])),meta:{d:1732244737e3,e:`
<p>状态机约束，作为一层状态</p>
<p>一般定义 <code>f[i][j]</code> 表示前缀 <code>a[:i]</code> 在状态 j 下的最优值。一般 j 都很小。代表题目是「买卖股票」系列。</p>
<ul>
<li>
<p>乘积最大子数组</p>
<p>最大/最小值</p>
</li>
<li>
<p>买卖股票的最佳时机</p>
<p>是否持有股票</p>
</li>
<li>
<p>粉刷房子</p>
<p>粉刷哪种颜色</p>
</li>
</ul>
<p>注：某些题目做法不止一种，除了状态机 DP 以外，也有前后缀分解的做法。</p>
`,r:{minutes:.4,words:120},t:"状态型",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E7%BA%A6%E6%9D%9F/%E8%83%8C%E5%8C%85%E5%9E%8B.html",{loader:()=>l(()=>import("./背包型.html-CxAzrp_Y.js"),__vite__mapDeps([819,1])),meta:{d:1732244737e3,e:`
<p>属于前缀型的一种</p>
<p>核心是有一个维度是val的和/积</p>
<p>你有一个背包，背包有最大承重</p>
<p>商店里有若干物品，每个物品有重量和价值</p>
<p>目标：不撑爆背包的前提下</p>
<ul>
<li>装下最多重量物品</li>
<li>装下最大总价值的物品</li>
<li>有多少种方式正好装满一书包物品</li>
</ul>
<p>可以多维价值叠加 eg. 盈利计划</p>
<p>费用和价值互换：</p>
<ul>
<li>价值加起来比较小的话，可以与费用互换
<ul>
<li>贿赂怪兽：</li>
</ul>
</li>
</ul>
<h2>状态定义</h2>`,r:{minutes:12.3,words:3690},t:"背包型",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E8%BF%9B%E9%98%B6/kth.html",{loader:()=>l(()=>import("./kth.html-DU1NUJQd.js"),__vite__mapDeps([820,1])),meta:{d:1735767391e3,e:`
<p>对于求次优解、第K优解类的问题，如果相应的最优解问题能写出状态转移方程、用动态规划解决，那么求次优解往往可以相同的复杂度解决，第K优解则比求最优解的复杂度上多一个系数K。</p>
<p>其基本思想是将每个状态都表示成有序队列，将状态转移方程中的max/min转化成有序队列的合并。这里仍然以01背包为例讲解一下。</p>
<p>首先看01背包求最优解的状态转移方程：<code>f[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}</code>。如果要求第K优解，那么状态<code>f[i][v]</code>就应该是一个大小为K的数组<code>f[i][v][1..K]</code>。其中<code>f[i][v][k]</code>表示前i个物品、背包大小为 v时，第k优解的值。“f[i][v]是一个大小为K的数组”这一句，熟悉C语言的同学可能比较好理解，或者也可以简单地理解为在原来的方程中加了一维。 显然f[i][v][1..K]这K个数是由大到小排列的，所以我们把它认为是一个有序队列。</p>`,r:{minutes:2.31,words:692},t:"第 K th 优解",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E8%BF%9B%E9%98%B6/%E4%BC%98%E5%8C%96.html",{loader:()=>l(()=>import("./优化.html-nREnR7WK.js"),__vite__mapDeps([821,1])),meta:{d:1732244737e3,e:`
<blockquote>
<p>复杂度理论</p>
</blockquote>
<p>动态规划的时间复杂度</p>
<p>O(状态总数*每个状态的处理耗费)=O(状态总数*决策数)</p>
<h2>空间优化</h2>
<h3>滚动数组</h3>
<p>条件：如果状态依赖关系只在<strong>相邻的层</strong>之间，则滚动数组可以让空间复杂度降维</p>
<ol>
<li>
<p>一般的，数组开依赖的相邻层数+1</p>
<p>数字三角形的状态转移方程为</p>
<p><code>dp[i][j]=min(dp[i-1][j],dp[i-1][j-1])+A[i][j]]</code></p>
<p>滚动数组优化之后为</p>
<p><code>dp[i%2][j]=min(dp[(i-1)%2][j],dp[(i-1)%2][j-1]）+A[i][j]</code></p>
</li>
<li>
<p>特殊的，如果只依赖上一层，且方向是单向的，则可以直接无需这一维度</p>
<p>需要注意转移的顺序，正着还是反着（取决于是否可以用这一层的结果）</p>
</li>
</ol>`,r:{minutes:3.75,words:1125},t:"优化",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E8%BF%9B%E9%98%B6/%E5%85%B7%E4%BD%93%E6%96%B9%E6%A1%88.html",{loader:()=>l(()=>import("./具体方案.html-BHeEfkXM.js"),__vite__mapDeps([822,1])),meta:{d:1732244737e3,e:`
<p>动态规划算法虽然不擅于找所有方案<br>
但是找最优值的具体方案还是可以的</p>
<blockquote>
<p>这种情况建议记忆化搜索</p>
</blockquote>
<h2>倒推法</h2>
<p>记录每个状态的最优值是从哪个前继状态来的<br>
通常需要一个和状态数组同样维度的数组<br>
<code>prev[i]</code>记录使得<code>dp[i]</code>获得最优值的那个j是准<br>
j是方程<code>dp[i]=max{dp[j]]+1}</code>里的j</p>
<p>改动要点</p>
<ol>
<li>prev数组记录前继最优状态，有时也不需要prev数组，倒推的时候一步一步推prev即可，参考lc368 最大整除子集</li>
<li>max()的写法要改为f的写法</li>
<li>找到最长龙的结尾，从结尾倒推出整条龙</li>
</ol>`,r:{minutes:4.03,words:1210},t:"具体方案",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E8%BF%9B%E9%98%B6/%E8%BF%9B%E9%98%B6.html",{loader:()=>l(()=>import("./进阶.html-CtXUddDc.js"),__vite__mapDeps([823,1])),meta:{d:1732244737e3,e:`
<h2>是否能够使用动态规划的核心</h2>
<p>是否存在一种状态表示方法</p>
<p>可以使得状态之间的依赖关系可以被拓扑排序（DAG）<br>
推论：动态规划处理的状态要有方向性（才不会有循环依赖）</p>
<blockquote>
<p>看不懂没关系，之后做题慢慢带着这个推论去体会</p>
</blockquote>
<h3>坐标</h3>
<p>停在原地的方案数</p>
<p>状态：<code>dp[i][j]</code>表示走了i次以后，走到坐标j的路径数</p>
<p>方法：把所有可能会影响到结果的信息都往状态数组里丢</p>
<p>时间复杂度：通用计算公式O状态总数计算每个状态的时间)</p>`,r:{minutes:4.06,words:1217},t:"进阶",y:"a"}}],["/algo/summary/optimise/dynamic-programming/%E8%BF%9B%E9%98%B6/%E9%9A%BE%E9%A2%98.html",{loader:()=>l(()=>import("./难题.html-BkXBcnnz.js"),__vite__mapDeps([824,1])),meta:{d:1732244737e3,e:`
<p>综合型动态规划<br>
需要辅助数据结构算法（字母树，哈希表，二分查找）的动态规划<br>
万变不离其宗</p>
<hr>
<p>Minimum Adjustment Cost</p>
<p>最后一步：将A改成B,A[n-1]改成X,这一步代价是A[n-1]-X</p>
<p>需要确保X-B[n-2]&lt;=Target</p>
<p>前面n-1个元素A[0.n-2]改成B[0.n-2],需要知道最小代价，并确保B[0.n-2]中任意两个相邻的元素的差不超过Target子问题</p>
<p>但是有一个问题，改A[n-1]时不知道Bn-2]是多少</p>
<ul>
<li>只有知道了B[n-2],才能确定A[n-1]能改成B[n-2]-Target&lt;=X&lt;=B[n-2]+Target</li>
</ul>`,r:{minutes:1.84,words:553},t:"综合型",y:"a"}}],["/algo/summary/search/DFS/enumerate/",{loader:()=>l(()=>import("./index.html-foJ_OZ2a.js"),__vite__mapDeps([825,1])),meta:{d:1732244737e3,e:`
<p>枚举类问题的特点：</p>
<ol>
<li>
<p>深度线性</p>
<p>解空间的深度小于等于传入序列的长度</p>
<p>故栈空间占用始终是线性可解的</p>
</li>
<li>
<p>宽度指数</p>
<p>解空间的宽度呈现指数级别增长</p>
<p>每个节点可以扩散0-n个</p>
</li>
</ol>
<p>搜索</p>
<h2>简单枚举</h2>
<p>xxx</p>
<h2>排列枚举</h2>
<h3>序列全排列</h3>
<h3>下一个排列</h3>
<h2>子集枚举</h2>
<p>从代码量看，枚举子集的最简单方法是二进制法</p>
<h3>增量构造法</h3>`,r:{minutes:.81,words:243},t:"枚举：宽树搜索",y:"a"}}],["/algo/summary/search/DFS/recursion/",{loader:()=>l(()=>import("./index.html-DI-VgQSJ.js"),__vite__mapDeps([826,1])),meta:{d:1732244737e3,e:`
<p>啥是递归？</p>
<p>当函数直接或者间接调用自己时，则发生了递归</p>
<p>递归的定义：参见“递归的定义”</p>
<hr>
<p>递归的三要素</p>
<ul>
<li>
<p>递归的定义 (接收什么参数, 返回什么值, 代表什么含义)</p>
</li>
<li>
<p>递归的拆解 (把大问题拆解成小问题)（或者叫转移）</p>
</li>
<li>
<p>递归的出口 (到什么时候结束)</p>
</li>
</ul>
<hr>
<p>迭代形式与递归形式比较</p>
<p>时间复杂度：迭代O(n), 递归O(n)</p>
<p>空间复杂度：迭代O(1), 递归O(n)</p>`,r:{minutes:2.36,words:709},t:"递归",y:"a"}}],["/algo/summary/search/DFS/recursion/%E5%8D%95%E5%90%91%E9%80%92%E5%BD%92.html",{loader:()=>l(()=>import("./单向递归.html-Dz1C3RD1.js"),__vite__mapDeps([827,1])),meta:{d:1732244737e3,e:`
<p>回顾上一章的内容</p>
<p>二阶阶乘</p>
<p>使用普通递归来解决</p>
<p>把普通递归转化成尾递归</p>
<p>把尾递归转化成迭代</p>
<p>颠倒二进制位</p>
<p>使用普通递归来解决</p>
<p>把普通递归转化成尾递归</p>
<p>把尾递归转化成迭代</p>
<hr>
<p>参数传递</p>
<p>值传递</p>
<p>引用传递</p>
<p>递归三要素</p>
<ul>
<li>
<p>递归的定义</p>
</li>
<li>
<p>递归的拆解</p>
</li>
<li>
<p>递归的出口</p>
</li>
</ul>
<p>爆栈</p>
<p>递归调用将栈空间消耗完</p>`,r:{minutes:1.55,words:465},t:"单向递归",y:"a"}}],["/algo/summary/search/DFS/recursion/%E5%8F%8C%E5%90%91%E9%80%92%E5%BD%92.html",{loader:()=>l(()=>import("./双向递归.html-B1jFsAka.js"),__vite__mapDeps([828,1])),meta:{d:1732244737e3,e:`
<p>两两交换链表中的节点</p>
<ul>
<li>
<p>递归比迭代更加好想，好写，不易出bug</p>
</li>
<li>
<p>但是递归有可能发生爆栈</p>
</li>
</ul>
<p>经典二分查找问题</p>
<p>快速幂</p>
<ul>
<li>
<p>和递归的核心思想由大化小完美贴合的两个算法</p>
</li>
<li>
<p>换种递归拆分的方法会让时间复杂度和栈深度降低很多</p>
</li>
<li>
<p>由于每次砍掉一半，递归深度不会太深，没有爆栈风险</p>
</li>
</ul>
<hr>
<p>二叉树的深度优先遍历</p>
<ul>
<li>
<p>前序遍历</p>
</li>
<li>
<p>中序遍历</p>
</li>
<li>
<p>后续遍历</p>
</li>
</ul>`,r:{minutes:4.94,words:1482},t:"双向递归",y:"a"}}],["/algo/summary/search/DFS/recursion/%E5%A4%9A%E5%90%91%E9%80%92%E5%BD%92.html",{loader:()=>l(()=>import("./多向递归.html-BkSwkUE7.js"),__vite__mapDeps([829,1])),meta:{d:1735767391e3,e:`
<ul>
<li>子集
<ul>
<li>二叉树遍历解法</li>
<li>组合数解法</li>
</ul>
</li>
<li>子集 II
<ul>
<li>二叉树遍历解法</li>
<li>组合数解法</li>
</ul>
</li>
<li>数字组合
<ul>
<li>二叉树遍历解法</li>
<li>组合数解法</li>
</ul>
</li>
</ul>
<h2>子集</h2>
<h3>二叉树遍历解法</h3>
<p>递归的定义</p>
<p>• helper(nums, start, end, combinations, combination)</p>
<p>• =&gt;</p>`,r:{minutes:1.6,words:480},t:"多向递归",y:"a"}}],["/algo/summary/search/DFS/recursion/%E9%9D%9E%E9%80%92%E5%BD%92.html",{loader:()=>l(()=>import("./非递归.html-C-SpaQKg.js"),__vite__mapDeps([830,1])),meta:{d:1735767391e3,e:`
<p>递归改非递归</p>
<ul>
<li>尾递归</li>
<li>非尾递归
<ul>
<li>栈模拟</li>
<li>特殊思路</li>
</ul>
</li>
</ul>
<p>二叉树非递归</p>
<ul>
<li>栈模拟
<ul>
<li>前序</li>
<li>中序</li>
<li>后序</li>
</ul>
</li>
<li>Moris</li>
</ul>
<p>组合类</p>
<ul>
<li><strong>二进制枚举</strong></li>
<li>二叉树遍历</li>
<li>组合数</li>
</ul>
<p>排列类</p>
<ul>
<li><strong>下一个排列</strong></li>
<li>栈模拟（count）</li>
</ul>`,r:{minutes:.53,words:160},t:"非递归",y:"a"}}],["/algo/summary/structure/linear/array/",{loader:()=>l(()=>import("./index.html-WOQcB2tX.js"),__vite__mapDeps([831,1])),meta:{d:1732244737e3,e:`
`,r:{minutes:.01,words:4},t:"数组算法",y:"a"}}],["/algo/summary/structure/linear/linked/1.%20%E8%99%9A%E6%8B%9F%E5%A4%B4%E8%8A%82%E7%82%B9.html",{loader:()=>l(()=>import("./1. 虚拟头节点.html-BvRGWAul.js"),__vite__mapDeps([832,1])),meta:{d:1732244737e3,e:`
<h3>基本使用</h3>
<p>定义：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ListNode</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> dummy </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ListNode</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> head)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:.82,words:246},t:"虚拟头节点",y:"a"}}],["/algo/summary/structure/linear/linked/2.%20%E5%9F%BA%E6%9C%AC%E6%8A%80%E5%B7%A7.html",{loader:()=>l(()=>import("./2. 基本技巧.html-ENEKUkqR.js"),__vite__mapDeps([833,1])),meta:{d:1732244737e3,e:`
<p>Basic Linked List Skills</p>
<ol>
<li>
<p>traversal</p>
<ul>
<li>
<p>迭代遍历</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// FOR：先序：访问</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ListNode</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> p </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (p </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // TODO</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    p </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// FOR：先序：访问</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ListNode</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> p </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> dummy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // TODO</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    p </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 写法2，不推荐，因为局部变量，且边界不好控制，且移动语句受限</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ListNode</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> p </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> p </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> p </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>
</li>
</ol>`,r:{minutes:.87,words:261},t:"基本技巧",y:"a"}}],["/algo/summary/structure/linear/linked/3.%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8.html",{loader:()=>l(()=>import("./3. 反转链表.html-k4rAImhL.js"),__vite__mapDeps([834,1])),meta:{d:1732244737e3,e:`
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 反转prev的后面，并且返回尾指针</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ListNode</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> reverse</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ListNode</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> prev) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    ListNode</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> curr </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">curr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        ListNode</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> next </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> curr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        curr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> curr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.78,words:534},t:"反转链表",y:"a"}}],["/algo/summary/structure/linear/linked/4.%20%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%82%B9.html",{loader:()=>l(()=>import("./4. 链表中点.html-C1RE7wJM.js"),__vite__mapDeps([835,1])),meta:{d:1732244737e3,e:`
`,r:{minutes:.01,words:4},t:"链表中点",y:"a"}}],["/algo/summary/structure/linear/linked/5.%20%E9%93%BE%E8%A1%A8%E6%B1%82%E7%8E%AF.html",{loader:()=>l(()=>import("./5. 链表求环.html-DCKdKjKC.js"),__vite__mapDeps([836,1])),meta:{d:1732244737e3,e:`
`,r:{minutes:.01,words:4},t:"链表求环",y:"a"}}],["/algo/summary/structure/linear/linked/",{loader:()=>l(()=>import("./index.html-CJXjZB1w.js"),__vite__mapDeps([837,1])),meta:{d:1732244737e3,e:`
<p>链表</p>
<ul>
<li>Singly Linked List</li>
<li>Doubly Linked List
<ul>
<li>原地删除</li>
<li>反向遍历</li>
</ul>
</li>
</ul>
<h3>主要技巧</h3>
<ul>
<li>
<p>Dummy 虚拟头节点</p>
<p>使用场景：</p>
<ul>
<li>头节点不确定时，如创建一个新的链表（初始时无法判断是否为空）
<ul>
<li>合并链表（到一个新的链表）merge</li>
<li>划分链表（到两个新的链表）partition</li>
</ul>
</li>
<li>头节点可能被变动时，如添加、删除、移动
<ul>
<li>删除节点
<ul>
<li>链表去重</li>
<li>删除值为x的节点</li>
</ul>
</li>
<li>移动
<ul>
<li>反转链表</li>
<li>交换链表节点</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>双指针</p>
<p>技巧分类及使用场景：</p>
<ul>
<li>快慢双指针
<ul>
<li>链表中点：middle</li>
<li>链表求环：circle</li>
</ul>
</li>
<li>同向双指针
<ul>
<li>反转链表：reverse</li>
<li>链表去重：deduplication</li>
<li>划分链表：partition，lomoto写法，结合前序遍历可拓展为quickSort</li>
<li>倒序查找：findFromEnd</li>
</ul>
</li>
<li>平行双指针
<ul>
<li>合并链表：merge，结合后序遍历可拓展为mergeSort</li>
<li>划分链表：partition，结合前序遍历可拓展为quickSort</li>
<li>链表交点</li>
</ul>
</li>
</ul>
</li>
</ul>`,r:{minutes:1.21,words:364},t:"Linked List",y:"a"}}],["/algo/summary/structure/tree/bitree/BST.html",{loader:()=>l(()=>import("./BST.html-CnObh8RH.js"),__vite__mapDeps([838,1])),meta:{d:1732244737e3,e:`
<p>中序遍历是有序数组，且可以二分搜索（for循环非递归）</p>
<p>TreeMap 的 Entry 是 linkedTreeNode 有左右儿子和父亲节点</p>
<hr>
<p>判断二叉搜索树</p>
`,r:{minutes:.16,words:49},t:"二叉搜索树",y:"a"}}],["/algo/summary/structure/tree/bitree/",{loader:()=>l(()=>import("./index.html-CAkluYy1.js"),__vite__mapDeps([839,1])),meta:{d:1732244737e3,e:`
<p>二叉树解题的思维模式分两类：</p>
<ol>
<li>是否可以通过遍历一遍二叉树得到答案？如果可以，用一个 traverse 函数配合外部变量来实现，这叫「遍历」的思维模式。</li>
<li>是否可以定义一个递归函数，通过子问题（子树）的答案推导出原问题的答案？如果可以，写出这个递归函数的定义，并充分利用这个函数的返回值，这叫「分解问题」的思维模式。</li>
</ol>
<p>无论使用哪种思维模式，你都需要思考：</p>
<p>如果单独抽出一个二叉树节点，它需要做什么事情？需要在什么时候（前/中/后序位置）做？其他的节点不用你操心，递归函数会帮你在所有节点上执行相同的操作。</p>`,r:{minutes:1.09,words:328},t:"二叉树",y:"a"}}],["/algo/summary/structure/tree/bitree/dfs.html",{loader:()=>l(()=>import("./dfs.html-D6L8IcbB.js"),__vite__mapDeps([840,1])),meta:{d:1732244737e3,e:`
<p>局部传值</p>
<p>本质上是在传递从根到当前节点的路径（栈）上的信息。</p>
<ul>
<li>
<p>有的是直接要栈本身或栈中的部分信息（比如祖父是谁），</p>
<p>如，lc1315 祖父节点值为偶数的节点和</p>
</li>
<li>
<p>有的是路径的聚合，比如路径上的最大值/最小值这些</p>
<p>如，</p>
</li>
</ul>
`,r:{minutes:.29,words:88},t:"DFS",y:"a"}}],["/cs/database/mysql/engine/innodb/1.%20%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84.html",{loader:()=>l(()=>import("./1. 逻辑存储结构.html-DbKrd-P_.js"),__vite__mapDeps([841,1])),meta:{d:1672746435e3,e:`
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/表空间结构.drawio.png" alt="img" loading="lazy"></p>
<ul>
<li>
<p>表空间 Tablespace</p>
<p>系统、独立、通用、撤销、临时表空间</p>
</li>
<li>
<p>段 Segment：</p>
</li>
<li>
<p>区 Extent：一个区 1M，64 个连续的页</p>
</li>
<li>
<p>页 Page：每个页大小 16k，存储引擎磁盘管理的最小单元</p>
<ul>
<li>数据页</li>
<li>溢出页</li>
<li>Undo 页</li>
</ul>
</li>
<li>
<p>行 Row</p>
</li>
</ul>`,r:{minutes:11.21,words:3364},t:"逻辑存储结构",y:"a"}}],["/cs/database/mysql/engine/innodb/2.%20%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84.html",{loader:()=>l(()=>import("./2. 引擎架构.html-C4lZFZEq.js"),__vite__mapDeps([842,1])),meta:{d:1672746435e3,e:`
<p>整体架构图</p>
<img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-04-05 20.23.31.png" alt="截屏2023-04-05 20.23.31" style="zoom:50%;">
<h2>In-Memory Structure</h2>
<p>内存结构</p>
<h3>Buffer Pool 缓冲池</h3>
<p>缓冲池是主内存中的一个区域，里面可以缓存磁盘上经常操作的真实数据，在执行增删改查操作时，先操作缓冲池中的数据（若缓冲池没有数据，则从磁盘加载并缓存），然后再以一定频率刷新到磁盘，从而减小磁盘 IO，加快处理速度。</p>`,r:{minutes:3.75,words:1125},t:"引擎架构",y:"a"}}],["/cs/database/mysql/engine/innodb/3.%20%E4%BA%8B%E5%8A%A1%E5%8E%9F%E7%90%86.html",{loader:()=>l(()=>import("./3. 事务原理.html-DhqCEphF.js"),__vite__mapDeps([843,1])),meta:{d:1672746435e3,e:`
<p>事务性质 ACID</p>
<ul>
<li>A: undo log</li>
<li>I: MVCC</li>
<li>D: redo log</li>
</ul>
<h2>redo log</h2>
<p>保证：<strong>持久性</strong>：事务一旦提交或回滚，他对数据库中数据的改变就是永久的。</p>
<p>物理日志：存操作的指令</p>
<p>该日志文件由两部分组成：</p>
<ul>
<li>重做日志缓冲(redo log buffer)</li>
<li>重做日志文件(redo log file)</li>
</ul>
<p>前者是在内存中，后者在磁盘中。当事务提交之后会把所有修改信息都存到该日志文件中，用于在刷新脏页到磁盘，发生错误时，进行数据恢复使用。</p>`,r:{minutes:9.37,words:2810},t:"事务原理",y:"a"}}],["/cs/database/mysql/engine/innodb/",{loader:()=>l(()=>import("./index.html-BV03OjX6.js"),__vite__mapDeps([844,1])),meta:{d:1672647518e3,e:`
<ul>
<li>
<p>逻辑存储结构</p>
<ul>
<li>文件结构</li>
<li>行格式</li>
<li>页格式</li>
</ul>
</li>
<li>
<p>引擎架构</p>
<ul>
<li>
<p>内存结构</p>
</li>
<li>
<p>磁盘结构</p>
</li>
<li>
<p>后台线程</p>
</li>
</ul>
</li>
<li>
<p>事物原理</p>
<ul>
<li>redo log</li>
<li>undo log</li>
<li>MVCC</li>
</ul>
</li>
</ul>
`,r:{minutes:.15,words:44},t:"InnoDB 原理",y:"a"}}],["/cs/database/redis/practice/best/%E6%89%B9%E5%A4%84%E7%90%86%E4%BC%98%E5%8C%96.html",{loader:()=>l(()=>import("./批处理优化.html-DzBAVrPs.js"),__vite__mapDeps([845,1])),meta:{d:1677504602e3,e:`
<p>pipeline：单机模式下的批处理</p>
<p>使用批量操作可以减少网络传输次数，进而有效减小网络开销，大幅减少 RTT。</p>
<p>另外，除了能减少 RTT 之外，发送一次命令的 socket I/O 成本也比较高（涉及上下文切换，存在<code>read()</code>和<code>write()</code>系统调用），批量操作还可以减少 socket I/O 成本。这个在官方对 pipeline 的介绍中有提到：<a href="https://redis.io/docs/manual/pipelining/" target="_blank" rel="noopener noreferrer">https://redis.io/docs/manual/pipelining/open in new window</a> 。</p>`,r:{minutes:1.95,words:585},t:"批处理优化",y:"a"}}],["/cs/database/redis/practice/best/%E9%94%AE%E5%80%BC%E8%AE%BE%E8%AE%A1.html",{loader:()=>l(()=>import("./键值设计.html-DPtfeJse.js"),__vite__mapDeps([846,1])),meta:{d:1677504602e3,e:`
<h2>优雅的key结构</h2>
<p>Redis的Key虽然可以自定义，但最好遵循下面的几个最佳实践约定：</p>
<ul>
<li>遵循基本格式：[业务名称]：[数据名]：[id]</li>
<li>长度不超过44字节</li>
<li>不包含特殊字符</li>
</ul>
<p>例如：我们的登录业务，保存用户信息，其key是这样的：</p>
<p>优点：</p>
<ul>
<li>
<p>可读性强</p>
</li>
<li>
<p>避免key冲突</p>
</li>
<li>
<p>方便管理</p>
</li>
<li>
<p>节省内存</p>
<p>key是string类型，底层编码包含：int、embstr和raw三种。</p>
<p>在小于44字节时，是embstr编码，采用连续内存空间，内存占用更小（减少内存碎片）</p>
<p>（可用通过<code>object encoding xxx</code>查看编码方式）</p>
</li>
</ul>`,r:{minutes:1.69,words:506},t:"键值设计",y:"a"}}],["/cs/database/redis/practice/design/distributed-lock.html",{loader:()=>l(()=>import("./distributed-lock.html-BzykBW4Q.js"),__vite__mapDeps([847,1])),meta:{d:1680090419e3,e:`
<p>满足分布式系统或集群模式下多进程可见并且互斥的锁。</p>
<ul>
<li>多进场可见</li>
<li>互斥</li>
<li>高可用</li>
<li>高性能</li>
<li>安全性</li>
<li>锁自身的特性：公平非公平等</li>
</ul>
<h2>SET NX 实现</h2>
<h3>操作</h3>
<h4>获取锁</h4>
<div class="language-redis line-numbers-mode" data-highlighter="shiki" data-ext="redis" data-title="redis" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 添加锁，NX是互斥，EX是超时时间秒，PX是毫秒</span></span>
<span class="line"><span>SET lock thread1 EX 10 NX</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.39,words:1317},t:"分布式锁",y:"a"}}],["/cs/database/redis/practice/design/follow.html",{loader:()=>l(()=>import("./follow.html-Bl0AibHn.js"),__vite__mapDeps([848,1])),meta:{d:1677504602e3,e:`
<h2>关注和取关</h2>
<ol>
<li>关注和取关两个接口</li>
<li>判断是否关注的接口</li>
</ol>
<p>这个放到表里面，联系集</p>
<h2>共同关注</h2>
<p>使用 redis set 结构实现</p>
<p><code>sinter</code> 指令可以实现集合求交集</p>
<h2>关注推送</h2>
<p>也叫 Feed 流。</p>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-02-11 11.08.57.png" alt="截屏2023-02-11 11.08.57" loading="lazy"></p>`,r:{minutes:1.57,words:470},t:"关注",y:"a"}}],["/cs/database/redis/practice/design/global-id.html",{loader:()=>l(()=>import("./global-id.html-B-vn-J5W.js"),__vite__mapDeps([849,1])),meta:{d:1680090419e3,e:`
<h2>基本概念</h2>
<h3>数据库自增主键的问题</h3>
<ul>
<li>会泄露一些信息，如每天有多少单</li>
<li>可能会分库分表（分布式存储），如果是数据库的自增主键，那就无法保证 iid 的唯一性了</li>
</ul>
<h3>全局 ID 生成器的特性</h3>
<p>分布式系统下用来生成全局唯一的 ID 的工具，要满足如下特性：</p>
<ul>
<li>唯一性</li>
<li>高可用：什么时候要 id 都能给</li>
<li>高性能</li>
<li>递增性：同时还可以有一个统计的效果</li>
<li>安全性：为增加安全性，我们加入一些其他信息防止被猜出来</li>
</ul>`,r:{minutes:1.33,words:400},t:"全局 ID 生成器",y:"a"}}],["/cs/database/redis/practice/design/nearby.html",{loader:()=>l(()=>import("./nearby.html-CWQIMh90.js"),__vite__mapDeps([850,1])),meta:{d:1680090419e3,e:`
<p>基于地理坐标搜索，即经纬度，GEO 结构底层是 ZSET</p>
<ul>
<li>
<p><code>GEOADD</code>，key，(x, y, member)，member 建议存数据库里面的 id</p>
</li>
<li>
<p><code>GEOPOS</code></p>
</li>
<li>
<p><code>GEOHASH</code>，</p>
</li>
<li>
<p><code>GEODIST</code>，两个 key 之间的距离，返回的单位都是 km</p>
</li>
<li>
<p><code>GEORADIUS</code>，圆心，半径，可以把这个范围内的所有的都返回出来，并按距离排好序，可以实现附近的人功能，6.2 以后废弃，替换为 GEOSEARCH</p>
</li>
<li>
<p><code>GEOSEARCH</code>，不仅支持圆形，还支持方形等，拓展性更好，其他方面与上面那个相同，半径长度的单位是 km</p>
</li>
<li>
<p><code>GEOSEARCHSTORE</code>，不返回，只是讲搜索结果存储到一个指定的 key</p>
</li>
</ul>`,r:{minutes:.66,words:199},t:"附近",y:"a"}}],["/cs/database/redis/practice/design/rate.html",{loader:()=>l(()=>import("./rate.html-C_pzrJT3.js"),__vite__mapDeps([851,1])),meta:{d:1677504602e3,e:`
<h2>点赞</h2>
<h3>一人一赞</h3>
<p>方案一：</p>
<ul>
<li>数据库建立联系集，点赞和取消都在数据库做 crud</li>
<li>缺点：太重</li>
</ul>
<p>方案二：</p>
<ul>
<li>Redis Set：集合并且唯一</li>
</ul>
<h3>点赞排行榜</h3>
<p>按照点赞的时间排序，展示点赞排行的前五名</p>
<p>SortedSet，</p>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2023-02-10 23.06.43.png" alt="截屏2023-02-10 23.06.43" loading="lazy"></p>`,r:{minutes:.46,words:137},t:"点赞排行",y:"a"}}],["/cs/database/redis/practice/design/seckill.html",{loader:()=>l(()=>import("./seckill.html-_qApFHQn.js"),__vite__mapDeps([852,1])),meta:{d:1677504602e3,e:`
<h3>超卖解决</h3>
<p>悲观锁：添加同步锁，让线程串行执行</p>
<ul>
<li>优点：简单粗暴</li>
<li>缺点：性能一般</li>
</ul>
<p>乐观锁：不加锁，在更新的时候判断是否有其他线程在修改</p>
<p>版本号，这样需要数据库加字段；或简化为：CAS 法</p>
<ul>
<li>优点：性能好</li>
<li>缺点：成功率太低</li>
</ul>
<p>改进：不再判断是否相等，只判断是否大于零，类似双锁校验</p>
<h3>一人一单</h3>
<p>因为购买数量是否修改过数据库里面不存在，所以不难使用乐观锁方案，</p>
<p>如果是带事物的情况下，锁的范围应该包括整个方法，否则回滚的时候又线程不安全了</p>`,r:{minutes:1.02,words:305},t:"秒杀",y:"a"}}],["/cs/database/redis/practice/design/sign.html",{loader:()=>l(()=>import("./sign.html-mKlAxHHr.js"),__vite__mapDeps([853,1])),meta:{d:1680090419e3,e:`
<h2>BitMap 用法</h2>
<p>必要性：签到如果存在数据库表中，耗费内存，数据库压力大</p>
<p>每一个 bit 位对应当月的每一天，形成映射变细。用 0 和 1 标示业务状态。这种思路就称为位图（BitMap），这样一个月只需要 31 位，2 个字节</p>
<p>布隆过滤器底层是 BitMap</p>
<p>Redis 中 String 底层就是 BitMap，因此最大上限是 512M，2^32 个 bit 位</p>
<p>默认就是 0，故只有要设为 1 的才需要 set</p>
<ul>
<li>
<p><code>SETBIT</code></p>
</li>
<li>
<p><code>GETBIT</code></p>
</li>
<li>
<p><code>BITCOUNT</code></p>
</li>
<li>
<p><code>BITFIELD</code></p>
</li>
</ul>`,r:{minutes:.54,words:162},t:"签到",y:"a"}}],["/cs/database/redis/practice/design/uvpv.html",{loader:()=>l(()=>import("./uvpv.html-CL_MpcqS.js"),__vite__mapDeps([854,1])),meta:{d:1680090419e3,e:`
<h3>UV/PV 概念</h3>
<ul>
<li>UV：全称 Unique Visitor,也叫独立访客量，是指通过互联网访问、浏览这个网页的自然人。1 天内同一个用户多次访问该网站，只记录 1 次。</li>
<li>PV：全称 Page View,也叫页面访问量或点击量，用户每访问网站的一个页面，记录 1 次 PV,用户多次打开页面，则记录多次 PV。往往用来衡量网站的流量。</li>
</ul>
<h2>HyperLogLog</h2>
<p>基于 LogLog 派生的概率算法，用于确定非常大的集合的基数，而不需要存储其所有值。</p>
<p>相同元素进去永远只有一次</p>
<p>单个 HLL 的内存永远小于 16kb，误差 0.81%，1w 人误差也就 80 人，不影响</p>`,r:{minutes:.86,words:257},t:"UV",y:"a"}}],["/cs/database/redis/practice/problem/atomic.html",{loader:()=>l(()=>import("./atomic.html-Clr8ZDzI.js"),__vite__mapDeps([855,1])),meta:{d:1679578424e3,e:`
<p><strong>Redis 并不保证原子性</strong>。但是 Redis中有一些原子操作。</p>
<ul>
<li>
<p>原子性：事务中的命令要不全部成功，要不全部失败并回滚。</p>
</li>
<li>
<p>原子操作：原子操作是指在多线程或并发编程中，一个无法或不需要进一步分割的最小的操作单元。这种操作要么完全执行，要么完全不执行，且其执行过程中<strong>不会被其他线程或操作打断</strong>。原子操作是并发控制中用于防止竞态条件的重要概念。</p>
<p>原子操作本身的定义主要关注于其<strong>不可分割</strong>的性质，并不直接包括错误处理或回滚机制。并<strong>不保证出错会回滚</strong></p>
<ul>
<li><strong>硬件级原子操作</strong>：如处理器指令实现的原子操作，如果发生错误（例如内存访问错误），这类操作通常不会执行任何回滚操作。</li>
</ul>
</li>
<li>
<p><strong>软件级原子操作</strong>：在软件层面，原子操作通常通过锁或其他同步机制实现。如果这些操作在执行过程中遇到错误，它们不会自动回滚之前的操作，但是可以由程序员设计错误处理逻辑来决定如何响应错误。这可能包括释放获取的锁，记录错误信息，或者重试操作。</p>
</li>
</ul>`,r:{minutes:3.96,words:1187},t:"原子性保证",y:"a"}}],["/cs/database/redis/practice/problem/bigkey.html",{loader:()=>l(()=>import("./bigkey.html-Blp8Kwwu.js"),__vite__mapDeps([856,1])),meta:{d:1715153702e3,e:`
<p>阿里广告平台，海量数据里查询某一固定前缀的ky<br>
小红书，你如何生产上限制keys*/flushdb/.flushall等危险命令以防止误删误用？<br>
美团，MEMORY USAGE命令你用过吗？<br>
BigKey问题，多大算big?你如何发现？如何删除？如何处理？<br>
BigKey你做过调优吗？惰性释放lazyfree了解过吗？<br>
Morekey 问题，生产上redis数据库有1000W记录，你如何遍历？key*可以吗？</p>
<p>conf</p>
<p>禁用 flushall key *</p>
<p>rename command keys ""</p>`,r:{minutes:.88,words:264},t:"Big Key",y:"a"}}],["/cs/database/redis/practice/problem/cache-preheat.html",{loader:()=>l(()=>import("./cache-preheat.html-VFKNnqki.js"),__vite__mapDeps([857,1])),meta:{d:1679321449e3,e:`
<h3>问题分析</h3>
<p>冷启动：服务刚刚启动时，Redis 中并没有缓存，如果所有商品数据都在第一次查询时添加缓存，可能会给数据库带来较大压力。</p>
<p>缓存预热：在实际开发中，我们可以利用大数据统计用户访问的热点数据，在项目启动时将这些热点数据提前查询并保存到 Redis 中。</p>
<p>缓存预热就是系统上线前后，将相关的缓存数据直接加载到缓存系统中去，而不依赖用户。这样就可以避免在用户请求的时候，先查询数据库，然后再将数据缓存的问题。用户直接查询事先被预热的缓存数据，这样可以避免那么系统上线初期，对于高并发的流量，都会访问到数据库中， 对数据库造成流量的压力。根据数据不同量级，可以有以下几种做法：</p>`,r:{minutes:3.75,words:1124},t:"冷启动问题：缓存预热",y:"a"}}],["/cs/database/redis/practice/problem/cache-problem.html",{loader:()=>l(()=>import("./cache-problem.html-UnMhJNKQ.js"),__vite__mapDeps([858,1])),meta:{d:1672229303e3,e:`
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/061e2c04e0ebca3425dd75dd035b6b7b.png" alt="图片" loading="lazy"></p>
<h2>缓存穿透</h2>
<p>Pass Through</p>
<h3>概念</h3>
<p>客户端请求的数据在缓存中和数据库中<strong>都不存在</strong>，这样缓存永远不会生效，这些请求都会打到数据库。</p>
<h3>被动方案</h3>
<ul>
<li>
<p>缓存空对象</p>
<ul>
<li>优点：实现简单，维护方便</li>
<li>缺点：
<ul>
<li>额外的内存消耗（不过可以通过 TTL 来缓解）</li>
<li>可能造成短期的不一致</li>
</ul>
</li>
</ul>
</li>
<li>
<p>布隆过滤</p>
<ul>
<li>
<p>优点：内存占用比较少，没有多余 key</p>
</li>
<li>
<p>缺点：</p>
<ul>
<li>
<p>实现复杂（hash + bitmap + 概率实现的）</p>
</li>
<li>
<p>存在误判可能（假阳性</p>
<p>说不存在一定不存在，但是说存在的时候也有一定概率是不存在的</p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>接口限流</p>
<p>根据用户或者 IP 对接口进行限流，对于异常频繁的访问行为，还可以采取黑名单机制，例如将异常 IP 列入黑名单。</p>
</li>
</ul>`,r:{minutes:4.96,words:1488},t:"缓存问题：穿透、击穿、雪崩",y:"a"}}],["/cs/database/redis/practice/problem/consistency.html",{loader:()=>l(()=>import("./consistency.html-D07urFdL.js"),__vite__mapDeps([859,1])),meta:{d:1715153702e3,e:`
<p>缓存更新策略</p>
<p><a href="https://juejin.cn/post/6964531365643550751" target="_blank" rel="noopener noreferrer">方案讲解</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1926259" target="_blank" rel="noopener noreferrer">https://cloud.tencent.com/developer/article/1926259</a></p>
<h2>概览</h2>`,r:{minutes:10.49,words:3147},t:"双写一致性",y:"a"}}],["/cs/database/redis/practice/problem/hotkey.html",{loader:()=>l(()=>import("./hotkey.html-D2p3MBhB.js"),__vite__mapDeps([860,1])),meta:{d:1715153702e3,e:`
<p>如果一个 key 的访问次数比较多且明显多于其他 key 的话，那这个 key 就可以看作是 <strong>hotkey（热 Key）</strong>。例如在 Redis 实例的每秒处理请求达到 5000 次，而其中某个 key 的每秒访问量就高达 2000 次，那这个 key 就可以看作是 hotkey。</p>
<h4>情况</h4>
<p>处理 hotkey 会占用大量的 CPU 和带宽，可能会影响 Redis 实例对其他请求的正常处理。此外，如果突然访问 hotkey 的请求超出了 Redis 的处理能力，Redis 就会直接宕机。这种情况下，大量请求将落到后面的数据库上，可能会导致数据库崩溃。</p>`,r:{minutes:1.31,words:392},t:"Hot Key",y:"a"}}],["/cs/database/redis/principal/data-structure/",{loader:()=>l(()=>import("./index.html-Di_fb2D6.js"),__vite__mapDeps([861,1])),meta:{d:1669794167e3,e:`
<p>Redis 是 key-value 的数据库，key 一般是 String 类型，不过 value 的类型多种多样：</p>
<h3>基本类型</h3>
<ul>
<li>
<p>String</p>
</li>
<li>
<p>Hash</p>
</li>
<li>
<p>List</p>
</li>
<li>
<p>Set</p>
</li>
<li>
<p>Sorted Set（即 ZSet）</p>
</li>
</ul>
<h3>特殊类型</h3>
<ul>
<li>GEO</li>
<li>BitMap</li>
<li>HyperLog</li>
</ul>
`,r:{minutes:.16,words:49},t:"Redis 数据结构",y:"a"}}],["/cs/database/redis/principal/data-structure/%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B.html",{loader:()=>l(()=>import("./基本类型.html-DXKn6gXT.js"),__vite__mapDeps([862,1])),meta:{d:1677504602e3,e:`
<p>基本类型与底层数据结构对应关系如下图所示：</p>
<p><img src="https://cdn.xiaolincoding.com//mysql/other/9fa26a74965efbf0f56b707a03bb9b7f.png" alt="img" loading="lazy"></p>
<h2>String</h2>
<p>String 是最基本的 key-value 结构，key 是唯一标识，value 是具体的值，value 其实不仅是字符串， 也可以是数字（整数或浮点数），value 最多可以容纳的数据长度是 <code>512M</code>。</p>
<h3>原理</h3>`,r:{minutes:3.77,words:1132},t:"基本类型",y:"a"}}],["/cs/database/redis/principal/data-structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html",{loader:()=>l(()=>import("./数据结构.html-DX4P4uj7.js"),__vite__mapDeps([863,1])),meta:{d:1677504602e3,e:`
<h2>SDS</h2>
<p>SDS 动态字符串，字符串是 Redis 中最常用的一种数据结构。Redis 中保存的 Key 是字符串，value 往往是字符串或者字符串的集合。</p>
<h3>结构</h3>
<div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> __attribute__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ((</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">__packed__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) sdshdr16 {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    uint16_t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> len;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    uint16_t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> alloc;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    unsigned</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> flags;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> buf</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">[]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> __attribute__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ((</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">__packed__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) sdshdr32 {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    uint32_t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> len;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    uint32_t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> alloc;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    unsigned</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> flags;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> buf</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">[]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:17.55,words:5266},t:"数据结构",y:"a"}}],["/cs/database/redis/principal/data-structure/%E7%89%B9%E6%AE%8A%E7%B1%BB%E5%9E%8B.html",{loader:()=>l(()=>import("./特殊类型.html-C2aYoXn-.js"),__vite__mapDeps([864,1])),meta:{d:1677504602e3,e:`
<h2>Bitmap</h2>
<p>底层 String 类型是会保存为二进制的字节数组</p>
<h3>介绍</h3>
<p>Bitmap 存储的是连续的二进制数字（0 和 1），通过 Bitmap, 只需要一个 bit 位来表示某个元素对应的值或者状态，key 就是对应元素本身 。我们知道 8 个 bit 可以组成一个 byte，所以 Bitmap 本身会极大的节省储存空间。</p>
<p>你可以将 Bitmap 看作是一个存储二进制数字（0 和 1）的数组，数组中每个元素的下标叫做 offset（偏移量）。</p>
<h3>命令</h3>
<ul>
<li><code>SETBIT</code></li>
<li><code>GETBIT</code></li>
<li><code>BITCOUNT</code></li>
<li><code>BITOP</code></li>
<li><code>BITPOS</code></li>
</ul>`,r:{minutes:7.72,words:2315},t:"特殊类型",y:"a"}}],["/cs/database/redis/principal/memory-model/%E5%86%85%E5%AD%98%E6%B7%98%E6%B1%B0%E7%AD%96%E7%95%A5.html",{loader:()=>l(()=>import("./内存淘汰策略.html-Ba6jRaJ2.js"),__vite__mapDeps([865,1])),meta:{d:1678024743e3,e:`
<p>在主线程进行的</p>
<p>前面说的过期删除策略，是删除已过期的 key，而当 Redis 的运行内存已经超过 Redis 设置的最大内存之后，则会使用内存淘汰策略删除符合条件的 key，以此来保障 Redis 高效的运行。</p>
<h3>设置最大内存</h3>
<p>在配置文件 redis.conf 中，可以通过参数 <code>maxmemory &lt;bytes&gt;</code> 来设定最大运行内存，只有在 Redis 的运行内存达到了我们设置的最大运行内存，才会触发内存淘汰策略。 不同位数的操作系统，maxmemory 的默认值是不同的：</p>
<ul>
<li>在 64 位操作系统中，maxmemory 的默认值是 0，表示没有内存大小限制，那么不管用户存放多少数据到 Redis 中，Redis 也不会对可用内存进行检查，直到 Redis 实例因内存不足而崩溃也无作为。</li>
<li>在 32 位操作系统中，maxmemory 的默认值是 3G，因为 32 位的机器最大只支持 4GB 的内存，而系统本身就需要一定的内存资源来支持运行，所以 32 位操作系统限制最大 3 GB 的可用内存是非常合理的，这样可以避免因为内存不足而导致 Redis 实例崩溃。</li>
</ul>`,r:{minutes:4.2,words:1259},t:"内存淘汰策略",y:"a"}}],["/cs/database/redis/principal/memory-model/%E8%BF%87%E6%9C%9F%E5%88%A0%E9%99%A4%E7%AD%96%E7%95%A5.html",{loader:()=>l(()=>import("./过期删除策略.html-CqYKrLi1.js"),__vite__mapDeps([866,1])),meta:{d:1678024743e3,e:`
<p>在主线程进行的，Redis4.0以后如果是删除大key会到辅助的线程中异步删除。</p>
<h3>设置过期时间</h3>
<p>先说一下对 key 设置过期时间的命令。 设置 key 过期时间的命令一共有 4 个：</p>
<ul>
<li><code>expire &lt;key&gt; &lt;n&gt;</code>：设置 key 在 n 秒后过期，比如 expire key 100 表示设置 key 在 100 秒后过期；</li>
<li><code>pexpire &lt;key&gt; &lt;n&gt;</code>：设置 key 在 n 毫秒后过期，比如 pexpire key2 100000 表示设置 key2 在 100000 毫秒（100 秒）后过期。</li>
<li><code>expireat &lt;key&gt; &lt;n&gt;</code>：设置 key 在某个时间戳（精确到秒）之后过期，比如 expireat key3 1655654400 表示 key3 在时间戳 1655654400 后过期（精确到秒）；</li>
<li><code>pexpireat &lt;key&gt; &lt;n&gt;</code>：设置 key 在某个时间戳（精确到毫秒）之后过期，比如 pexpireat key4 1655654400000 表示 key4 在时间戳 1655654400000 后过期（精确到毫秒）</li>
</ul>`,r:{minutes:5.14,words:1542},t:"过期删除策略",y:"a"}}],["/cs/database/redis/principal/thread-%20model/%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B.html",{loader:()=>l(()=>import("./线程模型.html-BaqYzFWA.js"),__vite__mapDeps([867,1])),meta:{d:1679578424e3,e:`
<h3>Redis 是单线程吗？</h3>
<p><strong>对于读写命令</strong>来说，Redis 一直是单线程模型。不过，在 Redis 4.0 版本之后引入了多线程来执行一些大键值对的异步删除操作， Redis 6.0 版本之后引入了多线程来处理网络请求（提高网络 IO 读写性能）。</p>
<p><strong>Redis 单线程指的是「接收客户端请求-&gt;解析请求 -&gt;进行数据读写等操作-&gt;发送数据给客户端」这个过程是由一个主线程来完成的</strong>，这也是我们常说 Redis 是单线程的原因。</p>
<p>Redis 在启动的时候，是会<strong>启动后台线程</strong>（BIO）的：（Background IO）</p>`,r:{minutes:6.74,words:2021},t:"线程模型",y:"a"}}],["/se/lang/frontend/css/layout/",{loader:()=>l(()=>import("./index.html-AYIUagSX.js"),__vite__mapDeps([868,1])),meta:{d:1715153702e3,e:`
<ul>
<li>正常布局流</li>
<li><code>display</code>属性</li>
<li>弹性盒子</li>
<li>网格</li>
<li>浮动</li>
<li>定位</li>
<li>CSS 表格布局</li>
<li>多列布局</li>
</ul>
`,r:{minutes:.09,words:28},t:"Layout",y:"a"}}],["/se/lang/frontend/css/layout/flex.html",{loader:()=>l(()=>import("./flex.html-Bx2MVLoL.js"),__vite__mapDeps([869,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/se/lang/java/JUC/async/forkjoin.html",{loader:()=>l(()=>import("./forkjoin.html-BDW-krIe.js"),__vite__mapDeps([870,1])),meta:{d:1675410392e3,e:`
<p>ForkJoinTask</p>
<p>RecursiveTask</p>
<p>RecursiveAction</p>
<p>继承自 future</p>
<p>ForkJoinPool</p>
`,r:{minutes:.04,words:12},t:"分支合并",y:"a"}}],["/se/lang/java/JUC/async/future.html",{loader:()=>l(()=>import("./future.html-CEso8I-8.js"),__vite__mapDeps([871,1])),meta:{d:1677504602e3,e:`
<h2>Future</h2>
<h3>同步与异步的概念</h3>
<ul>
<li><strong>同步</strong>：发出一个调用之后，在没有得到结果之前， 该调用不可返回，一直等待。</li>
<li><strong>异步</strong>：调用在发出之后，不用等待返回结果，该调用直接返回。</li>
</ul>
<h3>阻塞与非阻塞的概念</h3>
<p>阻塞和非阻塞指：当前接口数据还未准备就绪时，线程是否被阻塞挂起。</p>
<p>阻塞挂起：就是当前线程还处于 CPU 时间片当中，调用了阻塞的方法，由于数据未准备就绪，则时间片还未到就让出 CPU。</p>
<p>所以阻塞和同步看起来都是等，但是本质上它们不一样，同步的时候可没有让出 CPU。</p>`,r:{minutes:2.35,words:704},t:"异步编程",y:"a"}}],["/se/lang/java/JUC/safe/",{loader:()=>l(()=>import("./index.html-CXUgN5OD.js"),__vite__mapDeps([872,1])),meta:{d:1675410392e3,e:`
<h2>并发编程三要素</h2>
<ul>
<li>可见性，一个线程对共享变量修改，另外的线程能立即看到最新值。</li>
<li>有序性，一个线程内代码按编写顺序执行（多线程下不能）由于指令重排序问题，代码的执行顺序未必就是编写代码时候的顺序。</li>
<li>原子性，一个线程内多行代码以一个整体运行，期间不难有其他线程的代码插队</li>
</ul>
<h3><strong>原子性</strong></h3>
<ul>
<li>起因：多线程下，不同线程的<strong>指令发生了交错</strong>导致共享变量的读写混乱</li>
<li>解决：用锁解决，volatile 并不能解决原子性</li>
</ul>`,r:{minutes:1.82,words:546},t:"线程安全",y:"a"}}],["/se/lang/java/JUC/safe/jmm.html",{loader:()=>l(()=>import("./jmm.html-BeQiAQWq.js"),__vite__mapDeps([873,1])),meta:{d:1680090419e3,e:`
<p>JMM(Java 内存模型)主要定义了对于一个共享变量，当另一个线程对这个共享变量执行写操作后，这个线程对这个共享变量的可见性。</p>
<p>java 内存模型(JMM)是线程间通信的控制机制.JMM 定义了主内存和线程之间抽象关系。线程之间的共享变量存储在主内存（main memory）中，每个线程都有一个私有的本地内存（local memory），本地内存中存储了该线程以读/写共享变量的副本。本地内存是 JMM的一个抽象概念，并不真实存在。它涵盖了缓存，写缓冲区，寄存器以及其他的硬件和编译器优化。Java 内存模型的抽象示意图如下：</p>
<h3>JMM 是如何抽象线程和主内存之间的关系？</h3>`,r:{minutes:5.45,words:1634},t:"JMM",y:"a"}}],["/se/lang/java/JUC/safe/volatile.html",{loader:()=>l(()=>import("./volatile.html-BAuFNcgn.js"),__vite__mapDeps([874,1])),meta:{d:1677504602e3,e:`
<h2>可见性</h2>
<p>在 Java 中，<code>volatile</code> 关键字可以保证变量的可见性，如果我们将变量声明为 <strong><code>volatile</code></strong> ，这就指示 JVM，这个变量是共享且不稳定的，每次使用它都到主存中进行读取，每次更新他都会刷回主存。</p>
<p>当一个变量被声明为<code>volatile</code>时，它的值的修改会立即被写入到主内存中，并且其他线程可以立即看到这个变量的最新值。</p>
<h3>过程</h3>
<ol>
<li>线程 A 将工作内存的 data 更改后，强制将 data 值刷回主内存</li>
<li>如果线程 B 的工作内存中有 data 变量的缓存时，会强制让这个 data 变量缓存失效</li>
<li>当线程 B 需要读取 data 变量的值时，先从工作内存中读，发现已经过期，就会从主内存中加载 data 变量的最新值了</li>
</ol>`,r:{minutes:1.54,words:461},t:"volatile",y:"a"}}],["/se/lang/java/JUC/sync/AQS.html",{loader:()=>l(()=>import("./AQS.html-6-f8Ye1C.js"),__vite__mapDeps([875,1])),meta:{d:1680090419e3,e:`
<h2>底层原理</h2>
<h3>核心思想</h3>
<ul>
<li>如果被请求的共享资源空闲，则将当前请求资源的线程设置为有效的工作线程，并且将共享资源设置为锁定状态。</li>
<li>如果被请求的共享资源被占用，那么就需要一套线程阻塞等待以及被唤醒时锁分配的机制，这个机制 AQS 是基于 <strong>CLH 锁</strong> （Craig, Landin, and Hagersten locks） 实现的。</li>
</ul>
<h3>CLH 锁</h3>
<p>CLH 锁是对自旋锁的一种改进，解决了自旋锁的两个缺点改进如下：</p>
<ul>
<li>饥饿问题：将线程组织成一个队列，保证先请求的线程先获得锁，避免饥饿问题。</li>
<li>锁状态去中心化，让每个线程在不同的状态变量中自旋，相当于减小锁的粒度，这样当一个线程释放它的锁时，只能使其后续线程的高速缓存失效，缩小了影响范围，从而减少了 CPU 的开销。</li>
</ul>`,r:{minutes:2.62,words:787},t:"AQS",y:"a"}}],["/se/lang/java/JUC/sync/Condition.html",{loader:()=>l(()=>import("./Condition.html-jgJhb9Kh.js"),__vite__mapDeps([876,1])),meta:{d:1675410392e3,e:`
<p>条件变量</p>
`,r:{minutes:.02,words:5},t:"Condition",y:"a"}}],["/se/lang/java/JUC/sync/CountDownLatch.html",{loader:()=>l(()=>import("./CountDownLatch.html-B8bRsSBv.js"),__vite__mapDeps([877,1])),meta:{d:1675410392e3,e:`
<p>减小计数，构造方法设置初始值，然后可以使用 countDown 方法使计数器每次减一</p>
<p>await 方法，在不为 0 时，阻塞线程，等到计数器变成 0 时唤醒线程，继续执行</p>
<p>方法</p>
<ul>
<li>countDown，使计数器每次减一（调用这个方法的线程不会阻塞）</li>
<li>await，在不为 0 时，阻塞线程，等到变成 0 时唤醒线程，继续执行</li>
</ul>
<h2>例子</h2>
<h3>生活场景</h3>
<p>6 个同学陆续离开教师后，班长才可以锁门</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 6个同学陆续离开教师后，班长才可以锁门</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] args) throws InterruptedException {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    CountDownLatch</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> latch </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> CountDownLatch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(() </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "号同学离开了教室"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 计数器减一</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            latch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">countDown</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">valueOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 等待</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    latch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "班长锁门了"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.91,words:273},t:"CountDownLatch",y:"a"}}],["/se/lang/java/JUC/sync/CyclicBarrier.html",{loader:()=>l(()=>import("./CyclicBarrier.html-Bh5Jgb44.js"),__vite__mapDeps([878,1])),meta:{d:1675410392e3,e:`
<h2>概念</h2>
<p>循环栅栏</p>
<h3>作用</h3>
<p><code>CyclicBarrier</code> 的字面意思是可循环使用（Cyclic）的屏障（Barrier）。它要做的事情是：让一组线程到达一个屏障（也可以叫同步点）时被阻塞，直到最后一个线程到达屏障时，屏障才会开门，所有被屏障拦截的线程才会继续干活。</p>
<h3>方法</h3>
<p>构造方法中，传入“目标障碍数”，达到目标障碍数后执行的线程</p>
<p>await 方法，可以理解为加 1 操作，同时阻塞该线程</p>
<h2>例子</h2>
<p>集齐 7 颗龙珠就可以召唤神龙</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> NUMBER </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] args) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    CyclicBarrier</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cyclicBarrier </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> CyclicBarrier</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(NUMBER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> () </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"召唤神龙"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    })</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(() </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "星龙珠被收集到了"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                cyclicBarrier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "星龙珠被使用完毕"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                throw</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> RuntimeException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(e)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">valueOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.73,words:218},t:"CyclicBarrier",y:"a"}}],["/se/lang/java/JUC/sync/Semaphore.html",{loader:()=>l(()=>import("./Semaphore.html-DvtngHBy.js"),__vite__mapDeps([879,1])),meta:{d:1675410392e3,e:`
<p>信号量</p>
<h2>方法</h2>
<ul>
<li>acquire，P操作，抢占一个资源</li>
<li>release，V操作，释放以后，别的阻塞进程被唤醒来抢这个资源</li>
</ul>
<h2>例子</h2>
<p>6 辆汽车，停 3 个车位</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] args) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Semaphore</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> semaphore </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Semaphore</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(() </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // 抢占车位</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                semaphore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">acquire</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "号车抢到车位"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // 随机停车时间</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">SECONDS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Random</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nextInt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "号车----离开"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InterruptedException</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                throw</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> RuntimeException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(e)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                semaphore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">release</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">valueOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.4,words:119},t:"Semaphore",y:"a"}}],["/se/lang/java/JUC/thread/",{loader:()=>l(()=>import("./index.html-D8RXzO7I.js"),__vite__mapDeps([880,1])),meta:{d:1680090419e3,e:`
<h2>线程的概念</h2>
<h3>线程与进程的比较</h3>
<p>线程与进程的比较如下：</p>
<ul>
<li>进程是资源（包括内存、打开的文件等）分配的单位，线程是 CPU 调度的单位；</li>
<li>进程拥有一个完整的资源平台，而线程只独享必不可少的资源，如寄存器和栈；</li>
<li>线程同样具有就绪、阻塞、执行三种基本状态，同样具有状态之间的转换关系；</li>
<li>线程能减少并发执行的时间和空间开销；</li>
</ul>
<p>对于，线程相比进程能减少开销，体现在：</p>
<ul>
<li>线程的创建时间比进程快，因为进程在创建的过程中，还需要资源管理信息，比如内存管理信息、文件管理信息，而线程在创建的过程中，不会涉及这些资源管理信息，而是共享它们；</li>
<li>线程的终止时间比进程快，因为线程释放的资源相比进程少很多；</li>
<li>同一个进程内的线程切换比进程切换快，因为线程具有相同的地址空间（虚拟内存共享），这意味着同一个进程的线程都具有同一个页表，那么在切换的时候不需要切换页表。而对于进程之间的切换，切换的时候要把页表给切换掉，而页表的切换过程开销是比较大的；</li>
<li>由于同一进程的各线程间共享内存和文件资源，那么在线程之间数据传递的时候，就不需要经过内核了，这就使得线程之间的数据交互效率更高了；</li>
</ul>`,r:{minutes:7.04,words:2112},t:"线程",y:"a"}}],["/se/lang/java/JUC/thread/local.html",{loader:()=>l(()=>import("./local.html-Bn4IWgzL.js"),__vite__mapDeps([881,1])),meta:{d:1715153702e3,e:`
<blockquote>
<p><a href="https://www.nowcoder.com/discuss/609547710588309504?sourceSSR=search" target="_blank" rel="noopener noreferrer">https://www.nowcoder.com/discuss/609547710588309504?sourceSSR=search</a></p>
</blockquote>
<p>解决线程安全问题的另一种思路，之前是共享资源加锁或 CAS 重试，现在是线程隔离各用各的。</p>
<p>作用：</p>
<ul>
<li>实现资源对象的线程隔离，让每个线程各用各的资源对象，避免争用引发的线程安全问题</li>
<li>实现了线程内的资源共享</li>
<li>A方法调用B方法，B方法调用C方法，如果想要传值，可以通过方法传参或者包装的对象属性进行传参，那如果这个调用链路很长呢？A-&gt;B-&gt;C-&gt;....-&gt;Z方法，但是我们发现程序的执行流顺序是自上而下的，那如果我在A点把值存到当前线程上，再在Z方法把值从当前线程上取出来用，那就不需要通过传参的方式去传，因此在 一些框架上通常可以看到XXXContext，其实就是应用了threadlocal。</li>
</ul>`,r:{minutes:12.58,words:3775},t:"ThreadLocal",y:"a"}}],["/se/lang/java/JUC/thread/pool.html",{loader:()=>l(()=>import("./pool.html-BLqtbba8.js"),__vite__mapDeps([882,1])),meta:{d:1675410392e3,e:`
<p><a href="https://blog.csdn.net/ch98000/article/details/126727000" target="_blank" rel="noopener noreferrer">Java 线程池进阶<em>服务重启线程池如何保证不丢失任务</em>一头狒狒的博客-CSDN 博客</a></p>
<h2>好处</h2>
<p>池化技术：线程池、数据库连接池、Http 连接池等等都是对这个思想的应用。池化技术的思想主要是为了减少每次获取资源的消耗，提高对资源的利用率。</p>
<p><strong>线程池</strong>提供了一种限制和管理资源（包括执行一个任务）的方式。 每个<strong>线程池</strong>还维护一些基本统计信息，例如已完成任务的数量。</p>`,r:{minutes:16.71,words:5012},t:"线程池",y:"a"}}],["/se/lang/java/JUC/thread/state.html",{loader:()=>l(()=>import("./state.html-CF5lsBIN.js"),__vite__mapDeps([883,1])),meta:{d:1680492546e3,e:`
<p>IllegalThreadStateException</p>
<h2>状态转换图</h2>
<h3>JAVA 六种状态</h3>
<p><code>threadStatus</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/640-20230516213441212.png" alt="Java 线程状态变迁图" loading="lazy"></p>
<p>Java 线程在运行的生命周期中只可能处于下面 6 种不同状态的其中一个：</p>
<ul>
<li>
<p><code>NEW</code>：初始状态，线程被创建出来但没有被调用 <code>start()</code> 。</p>
<p>此状态只是一个 java 对象，并没有与 cpu 中的一个线程关联，start 以后可运行以后关联。</p>
</li>
<li>
<p><code>RUNNABLE</code>：运行状态，线程被调用了 <code>start()</code>等待运行的状态。</p>
</li>
<li>
<p><code>BLOCKED</code>：阻塞状态，需要等待锁释放。</p>
</li>
<li>
<p><code>WAITING</code>：等待状态，表示该线程需要等待其他线程做出通知或中断。</p>
</li>
<li>
<p><code>TIME_WAITING</code>：超时等待状态，可以在指定的时间后自行返回而不是像 WAITING 那样一直等待。</p>
</li>
<li>
<p><code>TERMINATED</code>：终止状态，表示该线程已经运行完毕。</p>
</li>
</ul>`,r:{minutes:3.79,words:1137},t:"线程状态",y:"a"}}],["/se/lang/java/JUC/thread/virtual.html",{loader:()=>l(()=>import("./virtual.html-DMdrFvO-.js"),__vite__mapDeps([884,1])),meta:{d:1675410392e3,e:`
<p>协程</p>
`,r:{minutes:.01,words:3},t:"VirtualThread",y:"a"}}],["/se/lang/java/basic/class/%E5%86%85%E9%83%A8%E7%B1%BB.html",{loader:()=>l(()=>import("./内部类.html-QE8dQWf3.js"),__vite__mapDeps([885,1])),meta:{d:1673495221e3,e:`
<p>必要性：</p>
<p>每一个内部类都可以继承一个类，或者实现若干个接口，从而达到多继承的目的</p>
<h2>匿名内部类</h2>
<p>无自己的构造方法，但是可以有初始化块</p>
<p>常用于：</p>
<ol>
<li>
<p>一个 final 的 HashMap 初始化，可以直接一条语句写完很方便。</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Map</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">State</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> State</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[]</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> table </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">State</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> State</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() {{
    put(State.START, new State[]{State.START, State.SIGNED, State.IN_NUMBER, State.END});
    put(State.SIGNED, new State[]{State.END, State.END, State.IN_NUMBER, State.END});
    put(State.IN_NUMBER, new State[]{State.END, State.END, State.IN_NUMBER, State.END});
    put(State.END, new State[]{State.END, State.END, State.END, State.END});
}}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>拓展 PriorityQueue 功能，让他可以直接引用别人的数组且有自己的比较器，来不占用别人的空间，实现原地堆排序（Onlogn, O1），普通的 int[]还是直接 Arrays.sort 即可，这个没法实现，哎，因为是 private</p>
<p>常用于一个二维 int 按某一位比较，如：xx，实现不了，看来堆排序只能手撕了，不需要堆排的时候老老实实 Arrays.sort 吧</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[][] values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// values = xxx;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">PriorityQueue</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[][]</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> pq </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> PriorityQueue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[][]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">((a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> b) </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> a[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> b[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]) {{
    queue = values;
    size = values.size;
    heapify();
}}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li></li>
</ol>`,r:{minutes:.9,words:270},t:"内部类",y:"a"}}],["/se/lang/java/basic/class/%E5%B7%A5%E5%85%B7%E7%B1%BB.html",{loader:()=>l(()=>import("./工具类.html-CEsoUDmO.js"),__vite__mapDeps([886,1])),meta:{d:1679321449e3,e:`
<ul>
<li>Objects</li>
<li>Arrays</li>
<li>Collections</li>
</ul>
<h2>Arrays</h2>
<h3>sort</h3>
<p>在 Java 中，<code>Arrays.sort()</code> 方法用于对数组进行排序。这个方法的时间复杂度取决于数组的类型和大小。</p>
<ol>
<li><strong>对于基本数据类型（如 <code>int</code>、<code>double</code>、<code>char</code> 等）的数组</strong>：
<ul>
<li><code>Arrays.sort()</code> 使用的是 <strong>双枢轴快速排序算法（Dual-Pivot Quicksort）</strong>。</li>
<li>平均情况下，这种快速排序算法的时间复杂度为 <strong>O(n log n)</strong>。</li>
<li>在最坏的情况下（即输入数组已经是有序的或者逆序的），时间复杂度仍然接近 <strong>O(n log n)</strong>，这是由于双枢轴快速排序的特定实现方式。</li>
</ul>
</li>
<li><strong>对于对象数组（如 <code>Integer[]</code>、<code>String[]</code> 等）</strong>：
<ul>
<li><code>Arrays.sort()</code> 使用的是 <strong>归并排序的改进版（Timsort）</strong>。</li>
<li>这种排序算法的平均和最坏情况时间复杂度都是 <strong>O(n log n)</strong>。</li>
<li>Timsort 是一种稳定的排序算法，它优化了归并排序，在处理部分有序的数组时表现得尤其好。</li>
</ul>
</li>
</ol>`,r:{minutes:1.13,words:339},t:"常用工具类",y:"a"}}],["/se/lang/java/basic/class/%E5%B8%B8%E8%A7%81%E7%B1%BB.html",{loader:()=>l(()=>import("./常见类.html-B48-8y82.js"),__vite__mapDeps([887,1])),meta:{d:1679321449e3,e:`
<h2>Object</h2>
<h3>Object 方法</h3>
<p>全部方法如下：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * native 方法，用于返回当前运行时对象的 Class 对象，使用了 final 关键字修饰，故不允许子类重写。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> native</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Class</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getClass</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * native 方法，用于返回对象的哈希码，主要使用在哈希表中，比如 JDK 中的HashMap。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> native</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> hashCode</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 用于比较 2 个对象的内存地址是否相等，String 类对该方法进行了重写以用于比较字符串的值是否相等。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> equals</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> obj)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * naitive 方法，用于创建并返回当前对象的一份拷贝。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">protected</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> native</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> clone</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() throws </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">CloneNotSupportedException</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 返回类的名字实例的哈希码的 16 进制的字符串。建议 Object 所有的子类都重写这个方法。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> toString</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * native 方法，并且不能重写。唤醒一个在此对象监视器上等待的线程(监视器相当于就是锁的概念)。如果有多个线程在等待只会任意唤醒一个。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> native</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> notify</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * native 方法，并且不能重写。跟 notify 一样，唯一的区别就是会唤醒在此对象监视器上等待的所有线程，而不是一个线程。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> native</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> notifyAll</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * native方法，并且不能重写。暂停线程的执行。注意：sleep 方法没有释放锁，而 wait 方法释放了锁 ，timeout 是等待时间。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> native</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> wait</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">long</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> timeout) throws </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InterruptedException</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 多了 nanos 参数，这个参数表示额外时间（以毫微秒为单位，范围是 0-999999）。 所以超时的时间还需要加上 nanos 毫秒。。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> wait</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">long</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> timeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nanos) throws </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InterruptedException</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 跟之前的2个wait方法一样，只不过该方法一直等待，没有超时时间这个概念</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> wait</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() throws </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InterruptedException</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 实例被垃圾回收器回收的时候触发的操作</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">protected</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> finalize</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() throws Throwable { }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:8.16,words:2447},t:"常见类",y:"a"}}],["/se/lang/java/basic/class/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.html",{loader:()=>l(()=>import("./面向对象.html-DR8ygBlv.js"),__vite__mapDeps([888,1])),meta:{d:1680090419e3,e:`
<p>面向对象</p>
<h3>三大特征</h3>
<h4>封装 Encapsulation</h4>
<h4>继承 Inheritance</h4>
<p><strong>关于继承如下 3 点请记住：</strong></p>
<ol>
<li>子类拥有父类对象所有的属性和方法（包括私有属性和私有方法），但是父类中的私有属性和方法子类是无法访问，<strong>只是拥有</strong>。</li>
<li>子类可以拥有自己属性和方法，即子类可以对父类进行扩展。</li>
<li>子类可以用自己的方式实现父类的方法。（以后介绍）。</li>
</ol>
<h4>多态 Polymorphism</h4>`,r:{minutes:1.76,words:529},t:"Object-Oriented Programming",y:"a"}}],["/se/lang/java/basic/type/%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B.html",{loader:()=>l(()=>import("./基本类型.html-mUERlBTW.js"),__vite__mapDeps([889,1])),meta:{d:1679321449e3,e:`
<p>Java 中有 8 种基本数据类型，分别为：</p>
<ul>
<li>6 种数字类型：
<ul>
<li>4 种整数型：<code>byte</code>、<code>short</code>、<code>int</code>、<code>long</code></li>
<li>2 种浮点型：<code>float</code>、<code>double</code></li>
</ul>
</li>
<li>1 种字符类型：<code>char</code></li>
<li>1 种布尔型：<code>boolean</code></li>
</ul>
<p>间的大小如下：</p>`,r:{minutes:1.32,words:396},t:"基本数据类型",y:"a"}}],["/se/lang/java/basic/type/%E6%95%B0%E7%BB%84.html",{loader:()=>l(()=>import("./数组.html-xwYyaJwd.js"),__vite__mapDeps([890,1])),meta:{d:1673495221e3,e:`
<p>二维数组</p>
<p><a href="https://zhuanlan.zhihu.com/p/79723486" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/79723486</a></p>
<p>数组</p>
`,r:{minutes:.03,words:10},t:"数组",y:"a"}}],["/se/lang/java/basic/type/%E6%B3%9B%E5%9E%8B.html",{loader:()=>l(()=>import("./泛型.html-DLUIonMh.js"),__vite__mapDeps([891,1])),meta:{d:1704683174e3,e:`
<p>Generics</p>
<p>JDK 5 中引入的一个新特性。使用泛型参数，可以增强代码的可读性以及稳定性。</p>
<p>编译器可以对泛型参数进行检测，并且通过泛型参数可以指定传入的对象类型。比如 <code>ArrayList&lt;Persion&gt; persons = new ArrayList&lt;Persion&gt;() </code>这行代码就指明了该 ArrayList 对象只能传入 Persion 对象，如果传入其他类型的对象就会报错。</p>
<ul>
<li>泛型类</li>
<li>泛型接口</li>
<li>泛型方法</li>
</ul>
<h2>泛型擦除</h2>`,r:{minutes:2.11,words:632},t:"泛型",y:"a"}}],["/se/lang/java/basic/type/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.html",{loader:()=>l(()=>import("./类型转换.html-DqW02isK.js"),__vite__mapDeps([892,1])),meta:{d:1704683174e3,e:`
<p>类型系统通过各种机制和特性，如类型提升、泛型、自动装箱/拆箱、方法重载和重写等，确保了类型在操作中的一致性和兼容性。这些都是Java作为一种强类型语言的重要特征。</p>
<h2>类型转换</h2>
<h3>自动类型转换</h3>
<p>Widening</p>
<p>自动类型转换是指：数字表示范围小的数据类型可以自动转换成范围大的数据类型。</p>
<h3>强制类型转换</h3>
<p>强制类型转换我们再清楚不过了，即强制显示的把一个数据类型转换为另外一种数据类型。</p>
<p>如：</p>
<div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>short s = 199;</span></span>
<span class="line"><span>int i = s;// 199</span></span>
<span class="line"><span></span></span>
<span class="line"><span>double d = 10.24;</span></span>
<span class="line"><span>long ll = (long) d;// 10</span></span>
<span class="line"><span></span></span>
<span class="line"><span>int a = 30;</span></span>
<span class="line"><span>char c = (char) a;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.6,words:481},t:"类型转换 Type Casting",y:"a"}}],["/se/lang/java/framework/api/knife4j.html",{loader:()=>l(()=>import("./knife4j.html-3fDkOoYN.js"),__vite__mapDeps([893,1])),meta:{d:1691648992e3,e:`
<h2>页面 404</h2>
<p>默认情况下并不需要添加此配置即可访问</p>
<p>很多朋友在使用 SpringBoot 集成 swagger-bootstrap-ui 后，都无法访问 doc.html 界面，此时，你可能需要实现 SpringBoot 的<code>WebMvcConfigurer</code>接口，添加相关的 ResourceHandler,代码如下：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">SpringBootApplication</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> SwaggerBootstrapUiDemoApplication</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> WebMvcConfigurer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> addResourceHandlers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ResourceHandlerRegistry</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> registry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        registry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addResourceHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"doc.html"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addResourceLocations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"classpath*:/META-INF/resources/"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        registry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addResourceHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"/webjars/**"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addResourceLocations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"classpath*:/META-INF/resources/webjars/"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.6,words:180},t:"Knife4j",y:"a"}}],["/se/lang/java/framework/api/swagger.html",{loader:()=>l(()=>import("./swagger.html-CuclJGL6.js"),__vite__mapDeps([894,1])),meta:{d:1691648992e3,e:`
<p>在线文档</p>
<ol>
<li>及时性（接口变更后，能够及时准确地通知相关前后端开发人员）</li>
<li>规范性（并且保证接口的规范性，如接口的地址，请求方式，参数及响应格式和错误信息）</li>
<li>一致性（接口信息一致，不会出现因开发人员拿到的文档版本不一致，而出现分歧）</li>
<li>可测性（直接在接口文档进行测试，以方便理解业务）</li>
</ol>
<p>kife4j</p>
<p>knife4i 是为 ava MVC 框架集成 Swaggers 生成 Api 文档的增强解决方案。</p>
<p>knife4j 属于 service 模块公共资源，因此我们集成到 service-util 模块</p>`,r:{minutes:.63,words:190},t:"swagger",y:"a"}}],["/se/lang/java/framework/di/",{loader:()=>l(()=>import("./index.html-Duoa5kk-.js"),__vite__mapDeps([895,1])),meta:{d:1725612282e3,e:`
<ul>
<li>Guice 运行时</li>
<li>Dagger 编译时</li>
</ul>
<p>Guice和Dagger都是Java的依赖注入框架，他们有很多相似性，所以放到一起比较一下：</p>
<pre><code>相同点：
    基于Java
    由Google维护（Dagger最早是Square开发的，Dagger2已经过继给了Google）
    兼容JSR-330注解规范
    因为兼容JSR-330，所以需要修改源码添加注解实现注入，相对于Spring通过外部配置文件的方式对源码有侵入性
不同点
    Guice历史更悠久，早在JSR-330之前就诞生并影响了JSR-330标准的制定，Dagger是在JSR-330之后出现的
    Guice在运行时通过反射创建依赖；Dagger在编译期提前生成依赖创建的代码
    Dagger比较适合在Android上使用，因为移动平台对性能更敏感，希望反射越少越好
    Dagger的API更简单，stacetrace更友好
</code></pre>`,r:{minutes:2.1,words:631},t:"Dependency Injection",y:"a"}}],["/se/lang/java/framework/orm/",{loader:()=>l(()=>import("./index.html-jz7LPHtC.js"),__vite__mapDeps([896,1])),meta:{d:1669446166e3,e:`
`,r:{minutes:0,words:1},t:"ORM",y:"a"}}],["/se/lang/java/framework/orm/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html",{loader:()=>l(()=>import("./常见问题.html-BM0UT8Bf.js"),__vite__mapDeps([897,1])),meta:{d:1672229303e3,e:`
<h3>The error occurred while setting parameters</h3>
<p>解决办法</p>
<p>一、检查有没有拼写错误</p>
<p>比如 insert 写成 inset</p>
<p>二、检查有没有 sql 关键字</p>
<p>比如 insert into order (order_no) VALUES (1001);</p>
<p>其中表名 order 是 sql 关键字 所以加上\`\`即可，改为 INSERT INTO \`order\` (order_no) VALUES (1001);</p>
<p>或者字段名是关键词同理</p>
<p>三、有没有少写参数</p>`,r:{minutes:.3,words:91},t:"常见问题",y:"a"}}],["/se/lang/java/framework/oss/oss.html",{loader:()=>l(()=>import("./oss.html-DlGRoZiL.js"),__vite__mapDeps([898,1])),meta:{d:1731177473e3,e:`
<p>Aliyun OSS</p>
<p>AWS S3</p>
<p>Tencent Cloud COS</p>
`,r:{minutes:.03,words:8},t:"OSS",y:"a"}}],["/se/lang/java/framework/spring/",{loader:()=>l(()=>import("./index.html-Db5w2rZD.js"),__vite__mapDeps([899,1])),meta:{d:1672663528e3,e:`
<p>核心模块</p>
<ul>
<li>
<p>IoC 控制反转</p>
</li>
<li>
<p>AOP 面向切面</p>
<p>代理模式，开闭原则</p>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/20200831175708.png" alt="Spring5.x主要模块" loading="lazy"></p>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/20200902100038.png" alt="Spring 各个模块的依赖关系" loading="lazy"></p>`,r:{minutes:1.11,words:333},t:"Spring",y:"a"}}],["/se/lang/java/framework/spring/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",{loader:()=>l(()=>import("./设计模式.html-W13unLUv.js"),__vite__mapDeps([900,1])),meta:{d:1677504602e3,e:`
<h3>模板模式</h3>
<p>Spring 中 <code>JdbcTemplate</code>、<code>HibernateTemplate</code> 等以 Template 结尾的对数据库操作的类，它们就使用到了模板模式。一般情况下，我们都是使用继承的方式来实现模板模式，但是 Spring 并没有使用这种方式，而是使用 Callback 模式与模板方法模式配合，既达到了代码复用的效果，同时增加了灵活性。</p>
<h3>观察者模式</h3>
<h3>单例模式</h3>
<h3>工厂模式</h3>
`,r:{minutes:.4,words:120},t:"设计模式",y:"a"}}],["/se/lang/java/jvm/%E5%B9%B6%E5%8F%91/jmm.html",{loader:()=>l(()=>import("./jmm.html-Cz1grRZQ.js"),__vite__mapDeps([901,1])),meta:{d:1675410392e3,e:`
<p>java 内存模型(JMM)是线程间通信的控制机制.JMM 定义了主内存和线程之间抽象关系。线程之间的共享变量存储在主内存（main memory）中，每个线程都有一个私有的本地内存（local memory），本地内存中存储了该线程以读/写共享变量的副本。本地内存是 JMM的一个抽象概念，并不真实存在。它涵盖了缓存，写缓冲区，寄存器以及其他的硬件和编译器优化。Java 内存模型的抽象示意图如下：</p>
`,r:{minutes:.51,words:152},t:"内存模型",y:"a"}}],["/test/GRE/VERBAL/Reading/dual-line/2.%20%E9%95%BF%E9%9A%BE%E5%8F%A5.html",{loader:()=>l(()=>import("./2. 长难句.html-8vt89w-H.js"),__vite__mapDeps([902,1])),meta:{d:1669446166e3,e:`
<p>常用于：长难句分析，阅读第一句话、题目题干</p>
<p>拆解句子成分（长句打短），先理解每个小成分的语义</p>
<p>利用各成分之间的关系，将各成分组合在一起进行整体理解</p>
<h2>句子成分</h2>
<p>主干、定语、状语、平行（并列）</p>
<h3>主干</h3>
<h4>谓语</h4>
<p>过去分词与谓语动词的区分</p>
<ol>
<li>v-ed 过去分词与谓语动词的区分</li>
<li>主句谓语动词与从句谓语动词的区分</li>
<li>动词形容词化</li>
</ol>
<h3>定语</h3>
<p>分词</p>
<p>定语从句-介词提前</p>
<h3>状语</h3>`,r:{minutes:.96,words:287},t:"句子成分拆解",y:"a"}}],["/test/GRE/VERBAL/Reading/dual-line/3.%20%E5%8D%95%E5%8F%A5%E5%8A%9F%E8%83%BD%E5%88%A4%E6%96%AD%E6%96%B9%E6%B3%95%E8%AE%BA.html",{loader:()=>l(()=>import("./3. 单句功能判断方法论.html-Ct8LiwJK.js"),__vite__mapDeps([903,1])),meta:{d:1669446166e3,e:`
<h2>单句功能：视角</h2>
<p>“视角”重要性</p>
<ul>
<li>信息题的切入点</li>
<li>主旨题的考点</li>
<li>预判后文</li>
</ul>
<p>视角</p>
<ul>
<li>引入观点（后文的靶子）</li>
<li>作者观点（后文的展开对象）</li>
<li>事实（背景/证明观点的证据）</li>
</ul>
<h3>视角标志词</h3>
<p>要区分开观点类和叙实类</p>
<h4>观点类动词</h4>
<p>believe, claim, assert, state, maintain, hold, argue, say, conclude, assume, allege, purport, posit, stress, suggest, speculate(推测), theorize(提出理论), hypothesize(提出理论), write, attribute/ascribe A to B ...(归因于)</p>`,r:{minutes:1.35,words:405},t:"单句功能判断",y:"a"}}],["/test/GRE/VERBAL/Reading/dual-line/4.%20%E5%8F%A5%E9%97%B4%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8F%A5%E5%AD%90%E5%8A%9F%E8%83%BD.html",{loader:()=>l(()=>import("./4. 句间关系与句子功能.html-DghmwkRc.js"),__vite__mapDeps([904,1])),meta:{d:1669446166e3,e:`
<p>灵魂，先功能后信息</p>
<p>展开，可以不关注具体的细节</p>
<p>opposing viewpoints 一组对立的引用观点</p>
<p>situate the debate over</p>
<p>信息题：整篇文章逻辑关系的把握</p>
<p>句子功能题和选句子题</p>
<h3>句子功能题</h3>
<p>The author mentioned sth. In order to ... / serve to / intend to / function / purpose / role</p>
<p>其实就是在考<strong>句间关系</strong>的，不能被<strong>细节</strong>干扰了</p>`,r:{minutes:4.14,words:1243},t:"句间关系与句子功能",y:"a"}}],["/test/GRE/VERBAL/Reading/dual-line/6.%20%E5%85%A8%E6%96%87%E7%BB%93%E6%9E%84%E4%B8%8E%E4%B8%BB%E6%97%A8%E9%A2%98.html",{loader:()=>l(()=>import("./6. 全文结构与主旨题.html-DSkg5EcA.js"),__vite__mapDeps([905,1])),meta:{d:1669446166e3,e:`
<p>得到全文主线</p>
<h3>主旨题</h3>
<p>筛选主线+选项分析</p>
<p>根据题干就可以排除</p>
<h3>step 1 主线筛选</h3>
<p>宏观功能</p>
<p>大原则：根据逻辑关系，判断句子功能，思考其重要性</p>
<p><strong>比较：双主体对比</strong></p>
<p><strong>转折：转向、质疑</strong></p>
<p>顺承：推论，不影响</p>
<p>让步：用不影响主线</p>
<p>找到主线的句子</p>
<h3>step 2 选项辨析</h3>
<p>选项构成：</p>
<ul>
<li>动词：难点</li>
<li>抽象名词：难点</li>
<li>具体名词：简单</li>
</ul>`,r:{minutes:1.33,words:400},t:"全文结构与主旨题",y:"a"}}],["/test/GRE/VERBAL/Reading/dual-line/7.%20%E5%8A%9F%E8%83%BD%E7%BA%BF%E7%BB%BC%E5%90%88%E7%BB%83%E4%B9%A0.html",{loader:()=>l(()=>import("./7. 功能线综合练习.html-Bi9878ZA.js"),__vite__mapDeps([906,1])),meta:{d:1669446166e3,e:`
`,r:{minutes:.02,words:7},t:"功能线综合练习",y:"a"}}],["/test/GRE/VERBAL/Reading/dual-line/8.%20%E9%AB%98%E6%95%88%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96%E4%B8%8E%E4%BF%A1%E6%81%AF%E9%A2%98.html",{loader:()=>l(()=>import("./8. 高效信息提取与信息题.html-DVULpEVE.js"),__vite__mapDeps([907,1])),meta:{d:1669446166e3,e:`
<p>信息 A + 逻辑词 X + 信息 B</p>
<p>（托福雅思考的是语言，考得是信息本身能不能读懂）</p>
<p>（gre 考得是逻辑）</p>
<p>当 AB 和 X 对不上的时候，默认是 X 对</p>
<p>总原则：</p>
<p>永远首先默认引，文章给定的逻辑关系必须是合理的。</p>
<p>有意识的<strong>挑选/修正/补充</strong>关键信息以使得该逻辑关系合理。</p>
<p>挑选：阅读效率</p>
<p>修正：根据逻辑词修正</p>
<p>补充：后面说的几种补充 logical gap</p>
<p>信息 A + 逻辑词 X + 信息 B</p>
<p>如果 X = 对比，则有三种处理情况</p>`,r:{minutes:2.14,words:643},t:"信息线",y:"a"}}],["/test/GRE/VERBAL/Reading/dual-line/9.%20%E5%8A%9F%E8%83%BD%E4%B8%8E%E4%BF%A1%E6%81%AF%E7%BA%BF%E7%BB%BC%E5%90%88.html",{loader:()=>l(()=>import("./9. 功能与信息线综合.html-Byvrgsw3.js"),__vite__mapDeps([908,1])),meta:{d:1669446166e3,e:`
`,r:{minutes:.03,words:9},t:"功能线与信息线综合",y:"a"}}],["/test/GRE/VERBAL/Reading/dual-line/",{loader:()=>l(()=>import("./index.html-SERtbYc7.js"),__vite__mapDeps([909,1])),meta:{d:1669446166e3,e:`
<p>一个 section20 题，填空阅读各 10 道</p>
<ul>
<li>4 篇 GRE 短阅读文章，所谓短阅读文章，也就是每篇文章字数在 150~180 左右。而每篇阅读题目数量也多为 3 道-2 道-2 道-2 道这种组合模式，总的题目数量为 9 道，此时逻辑题为 1 道。</li>
<li>3 篇 GRE 阅读文章，其中有 1 篇为长阅读文章，也就是字数长度约为 400~500 字，而这一片阅读的题目数为 4 道，另外 2 篇依旧是短阅读，短阅读的题目数分别为 1 道和 3 道，总共题目数为 8 道，此时逻辑题为 2 道。</li>
</ul>
<p><a href="https://zhuanlan.zhihu.com/p/382642079" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/382642079</a></p>`,r:{minutes:3.07,words:922},t:"双线阅读法",y:"a"}}],["/test/GRE/VERBAL/Reading/formula/1.%20%E4%BA%8B%E5%AE%9E%E4%BF%A1%E6%81%AF%E9%A2%98.html",{loader:()=>l(()=>import("./1. 事实信息题.html-D0R1Mo6k.js"),__vite__mapDeps([910,1])),meta:{d:1669446166e3,e:`
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-10-13 22.15.24.png" alt="截屏2022-10-13 22.15.24" loading="lazy"></p>
<h3>题干标志</h3>
<ul>
<li>
<p>According to the passage, …?</p>
</li>
<li>
<p>The passage mentions which of the following as ... ?</p>
<p>最好的描述</p>
</li>
<li>
<p>Based on the passage, … ?</p>
</li>
</ul>`,r:{minutes:.82,words:247},t:"事实信息题",y:"a"}}],["/test/GRE/VERBAL/Reading/formula/10.%20%E5%BD%92%E7%BA%B3%E4%B8%8E%E8%A7%A3%E9%87%8A.html",{loader:()=>l(()=>import("./10. 归纳与解释.html-BtEol7Ij.js"),__vite__mapDeps([911,1])),meta:{d:1669446166e3,e:`
<p>归纳</p>
<p>support</p>
`,r:{minutes:.03,words:8},t:"归纳与解释",y:"a"}}],["/test/GRE/VERBAL/Reading/formula/2.0%20%E4%B8%BB%E6%97%A8%E9%A2%98.html",{loader:()=>l(()=>import("./2.0 主旨题.html-bv16d7mL.js"),__vite__mapDeps([912,1])),meta:{d:1669446166e3,e:`
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-10-12 20.59.08.png" alt="截屏2022-10-12 20.59.08" loading="lazy"></p>
<p>考点：作者的写作目的</p>
<p>从选项区分</p>
<p>主旨内容题更简单，如果判定出是主旨内容题就不需要读懂文章结构，只需要找主旨句（简单所以考频低）</p>
<p>公式：5+3+4</p>
<h3>一段的短文章结构</h3>
<ul>
<li>
<p>现象解释</p>
</li>
<li>
<p>问题解决</p>
</li>
<li>
<p><strong>新旧观点</strong></p>
<p>只有 2 个观点，对立关系</p>
<p>出现了反驳，但是给了解决方法</p>
<p><strong>Correct a view</strong>或者 a view challenge a view 或者 a theory challenge a theory</p>
<p>Citing competing views</p>
</li>
<li>
<p><strong>观点点评</strong></p>
<p>观点只有 1 个，</p>
<ul>
<li>
<p>粉丝型，只做正向的点评</p>
</li>
<li>
<p><strong>键盘侠</strong>，做负向的点评，不提正确的新观点（即使存在可能别的，他文章不提就不行）</p>
<p>这个与新旧观点容易混淆</p>
<p>challenge a view</p>
</li>
</ul>
</li>
<li>
<p>说明文</p>
<p>无观点，</p>
<p>往往有时间维度，说明事件变化过程</p>
<p>难度很低，出的少</p>
<p>trace, chronicling</p>
</li>
</ul>`,r:{minutes:2.22,words:667},t:"主旨题",y:"a"}}],["/test/GRE/VERBAL/Reading/formula/2.1%20%E5%8F%A5%E5%AD%90%E4%BD%9C%E7%94%A8%E9%A2%98.html",{loader:()=>l(()=>import("./2.1 句子作用题.html-B4DoYPjM.js"),__vite__mapDeps([913,1])),meta:{d:1669446166e3,e:`
<p>考点：句间句内关系</p>
<p>句子作用题问法：</p>
<ul>
<li>Which of the following best describes the function of the highlighted sentence?</li>
<li>In the context of the passage, the highlighted sentence serves to…</li>
</ul>
<h3>句间句内关系</h3>
<ul>
<li>
<p>前句与其解释</p>
<p>In other words</p>
</li>
<li>
<p>前句与其例子</p>
<p>For example</p>
</li>
<li>
<p>前句与其类比</p>
<p>Similarly</p>
</li>
<li>
<p>前句与其比喻</p>
<p>Like</p>
</li>
<li>
<p>前句与其转折对立</p>
<p>In fact</p>
<p>However</p>
</li>
<li>
<p>前句与其强烈对比<br>
<strong>A departure from B</strong></p>
</li>
</ul>`,r:{minutes:1.14,words:343},t:"句子作用题",y:"a"}}],["/test/GRE/VERBAL/Reading/formula/2.2%20%E4%BF%A1%E6%81%AF%E7%9B%AE%E7%9A%84%E9%A2%98.html",{loader:()=>l(()=>import("./2.2 信息目的题.html-BJMm4Cw2.js"),__vite__mapDeps([914,1])),meta:{d:1669446166e3,e:`
<p>句间句内关系</p>
<p>Which of the following is not part of</p>
<p>elaborate 阐述</p>
<p>Take issue with 反对，提出异议</p>
<h3>无特殊关系标志时</h3>
<p>夹逼定理：看前后句</p>
<p>读三句话，本身、前句、后句</p>
<p>看本句和前句关系、本句和后句关系</p>
<h3>有特殊关系标志时</h3>
<p>句内关系</p>
<ul>
<li>“<strong>:</strong>”：解析、支持</li>
<li>since</li>
<li>due to</li>
</ul>
<p>句间关系</p>`,r:{minutes:.4,words:120},t:"信息目的题",y:"a"}}],["/test/GRE/VERBAL/Reading/formula/3.%20%E6%8E%A8%E6%96%AD%E9%A2%98.html",{loader:()=>l(()=>import("./3. 推断题.html-AhPhnT6x.js"),__vite__mapDeps([915,1])),meta:{d:1669446166e3,e:`
<p>占比大、考点多、难度大、耗时多</p>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-10-16 15.12.22.png" alt="截屏2022-10-16 15.12.22" loading="lazy"></p>
<p>题干标志：<strong>infer</strong> <strong>or suggest or indicate or imply</strong></p>
<p>考点：定位+（7 种）推理逻辑</p>
<p>推理逻辑：正向推断 or 反向推断（取反）</p>`,r:{minutes:.86,words:259},t:"推断题",y:"a"}}],["/test/GRE/VERBAL/Reading/formula/4.%20%E5%8F%AF%E5%A4%9A%E9%80%89%E9%A2%98.html",{loader:()=>l(()=>import("./4. 可多选题.html-kASk3j6P.js"),__vite__mapDeps([916,1])),meta:{d:1669446166e3,e:`
<p>GRE 阅读中优先级最低的题</p>
<p>Consider each of the choices separately and select all that apply.</p>
<p>需要与<strong>其它题型</strong>搭配。</p>
<p>需要<strong>单独</strong>考虑每一个选项。</p>
<p>答案有可能会<strong>跨区</strong>。</p>
<p><strong>双定位</strong></p>
<p>题干+选项</p>
<ol>
<li>题干定位词过于笼统，涵盖全文。</li>
<li>利用选项定位，便于用“无中生有”排除。</li>
</ol>`,r:{minutes:.3,words:91},t:"可多选题",y:"a"}}],["/test/GRE/VERBAL/Reading/formula/5.%20%E6%80%81%E5%BA%A6%E9%A2%98.html",{loader:()=>l(()=>import("./5. 态度题.html-DYFNFUBA.js"),__vite__mapDeps([917,1])),meta:{d:1669446166e3,e:`
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-10-16 15.26.21.png" alt="截屏2022-10-16 15.26.21" loading="lazy"></p>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-10-16 15.26.38.png" alt="截屏2022-10-16 15.26.38" loading="lazy"></p>`,r:{minutes:.52,words:155},t:"态度题",y:"a"}}],["/test/GRE/VERBAL/Reading/formula/7.%20%E7%B1%BB%E6%AF%94%E9%A2%98.html",{loader:()=>l(()=>import("./7. 类比题.html-BrxBP2ga.js"),__vite__mapDeps([918,1])),meta:{d:1669446166e3,e:`
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-10-16 16.20.42.png" alt="截屏2022-10-16 16.20.42" loading="lazy"></p>
<p>变化趋势</p>
`,r:{minutes:.09,words:27},t:"类比题",y:"a"}}],["/test/GRE/VERBAL/Reading/formula/8.%20%E5%90%A6%E5%AE%9A%E4%BA%8B%E5%AE%9E%E4%BF%A1%E6%81%AF%E9%A2%98.html",{loader:()=>l(()=>import("./8. 否定事实信息题.html-cjnUvYH8.js"),__vite__mapDeps([919,1])),meta:{d:1669446166e3,e:`
`,r:{minutes:.02,words:7},t:"否定事实信息题",y:"a"}}],["/test/GRE/VERBAL/Reading/formula/9.%20%E8%AF%8D%E6%B1%87%E9%A2%98.html",{loader:()=>l(()=>import("./9. 词汇题.html-DgyjADbO.js"),__vite__mapDeps([920,1])),meta:{d:1669446166e3,e:`
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-10-16 16.22.21.png" alt="截屏2022-10-16 16.22.21" loading="lazy"></p>
`,r:{minutes:.08,words:23},t:"词汇题",y:"a"}}],["/test/GRE/VERBAL/Reading/formula/",{loader:()=>l(()=>import("./index.html--8OQRmAT.js"),__vite__mapDeps([921,1])),meta:{d:1669446166e3,e:`
<p>读一题做一题</p>
<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-10-12 15.33.51.png" alt="截屏2022-10-12 15.33.51" loading="lazy"></p>
<p>高效提分</p>
<ol>
<li>
<p>题型为导向 →<strong>死背公式</strong></p>
</li>
<li>
<p>高频反复考 → 分析高频</p>
<p>只需要 350 高频机经，不用做模考题浪费时间</p>
<p>拿来验证做题思路，不是只对答案</p>
</li>
<li>
<p>遗忘速度快 → 反复复习</p>
</li>
</ol>`,r:{minutes:2.41,words:723},t:"公式法",y:"a"}}],["/test/TOEFL/LISTENING/BEAT/%E5%AF%B9%E8%AF%9D/",{loader:()=>l(()=>import("./index.html-CjKFrWSG.js"),__vite__mapDeps([922,1])),meta:{d:1696218053e3,e:`
<p>考点：对比、因果、问题解决方案、<mark>结尾 15s</mark></p>
<p>对话有 4-6 个问题诊断（Layer），每个诊断关注 4 点：</p>
<ol>
<li>问题是什么</li>
<li>解决方法是什么</li>
<li>不能解决的原因是什么</li>
<li>有没有附加的变通解决方案</li>
</ol>
<p>★ 重点关注出题逻辑信号：对比、因果</p>
<p>来意</p>
<ol>
<li>
<p>开头背景铺垫后</p>
</li>
<li>
<p>结尾</p>
</li>
<li>
<p>自己总结</p>
</li>
<li>
<p>对比</p>
<ul>
<li>比较级</li>
<li>转折，A ..., but <strong>B ...</strong></li>
</ul>
</li>
<li>
<p>因果关系</p>
</li>
</ol>`,r:{minutes:.63,words:188},t:"对话",y:"a"}}],["/test/TOEFL/LISTENING/BEAT/%E5%AF%B9%E8%AF%9D/%E7%BB%83%E4%B9%A0.html",{loader:()=>l(()=>import("./练习.html-CtOPg-AX.js"),__vite__mapDeps([923,1])),meta:{d:1696218053e3,e:`
<h2>志愿</h2>
<p>Layer 1</p>
<p>志愿活动</p>
<p>Layer 2</p>
<p>吸引原因</p>
<p>Layer 3</p>
<p>照亮原因</p>
<blockquote>
<p>对比因果</p>
</blockquote>
<p>Layer4</p>
<p>论文选题</p>
<h2>EP22C1 Returning Books</h2>
<blockquote>
<p>估价、退款</p>
</blockquote>
<p>L1 导入退书 ∵</p>
<p>return book</p>
<p>L2 课程情况</p>
<blockquote>
<p>老师问题引出</p>
</blockquote>`,r:{minutes:.45,words:136},t:"练习",y:"a"}}],["/test/TOEFL/LISTENING/BEAT/%E8%AE%B2%E5%BA%A7/",{loader:()=>l(()=>import("./index.html-C9fqLgaP.js"),__vite__mapDeps([924,1])),meta:{d:1696218053e3,e:`
<p>特别专业的词汇、背景知识，不用担心</p>
<p>抓住逻辑、段落层次即可</p>
<h3>段落分层信号</h3>
<ul>
<li>
<p>教授独白：</p>
<ul>
<li>
<p>信号词</p>
<p>now, well, ok, another, and</p>
</li>
<li>
<p>自问自答</p>
</li>
</ul>
</li>
<li>
<p>师生对话：师生问答</p>
</li>
</ul>
<p>（导入）、主题</p>
<p>讲座有 4-6 个段落层次，每个层次关注 4 点：</p>
<ol>
<li>讨论主题是什么</li>
<li>对比强调了什么</li>
<li>因果总结了什么</li>
<li>举例目的是什么</li>
</ol>`,r:{minutes:.77,words:231},t:"讲座",y:"a"}}],["/test/TOEFL/LISTENING/BEAT/%E8%AE%B2%E5%BA%A7/%E7%BB%83%E4%B9%A0.html",{loader:()=>l(()=>import("./练习.html-C95x0gGH.js"),__vite__mapDeps([925,1])),meta:{d:1696218053e3,e:`
<h2>26L3 Comets</h2>
<p>L1 导入周期轨道彗星</p>
<p>L2 哈雷周期轨道特点</p>
<p>L3 哈雷近快远慢分解</p>
<p>L4 哈雷周期轨道变轨</p>
<p>L5 开口抛物线轨道彗星</p>
<p>L6 行星引力导致彗星变轨</p>
<h2>27L1 Coral Reefs</h2>
<p>L1 导入</p>
<p>vs.</p>
<p>techs reef +</p>
<hr>
<p>L2 coral reef ∵ &amp; monitor</p>
<blockquote>
<p>Now</p>
</blockquote>
<p>temp ^</p>`,r:{minutes:1.3,words:389},t:"练习",y:"a"}}],["/algo/summary/optimise/decrease-conquer/2ptr/opposite/",{loader:()=>l(()=>import("./index.html-CI_qFI7d.js"),__vite__mapDeps([926,1])),meta:{d:1732244737e3,e:`
`,r:{minutes:.02,words:5},t:"相向双指针",y:"a"}}],["/algo/summary/optimise/decrease-conquer/2ptr/parallel/",{loader:()=>l(()=>import("./index.html-OHdePKRq.js"),__vite__mapDeps([927,1])),meta:{d:1732244737e3,e:`
`,r:{minutes:.02,words:5},t:"平行双指针",y:"a"}}],["/algo/summary/optimise/decrease-conquer/2ptr/window/",{loader:()=>l(()=>import("./index.html-DoxkJaEB.js"),__vite__mapDeps([928,1])),meta:{d:1732244737e3,e:`
<p>核心：维护窗口内部的一个性质，使该窗口符合给定的条件</p>
<p>如窗口内元素的和小于x</p>
<p>约束分类</p>
<ul>
<li>频次</li>
<li>种类</li>
<li>累积
<ul>
<li>和</li>
<li>积</li>
</ul>
</li>
<li>端点
<ul>
<li>长度</li>
</ul>
</li>
</ul>
<p>窗口分类</p>
<ul>
<li>
<p>定长窗口</p>
<ul>
<li><code>while</code>内更新答案</li>
</ul>
</li>
<li>
<p>变长窗口</p>
<ul>
<li>最大窗口
<ul>
<li><code>while</code>后更新答案</li>
</ul>
</li>
<li>最小窗口
<ul>
<li><code>while</code>内更新答案</li>
</ul>
</li>
</ul>
</li>
</ul>`,r:{minutes:3.05,words:916},t:"滑窗双指针",y:"a"}}],["/algo/summary/optimise/decrease-conquer/binary/lifting/",{loader:()=>l(()=>import("./index.html-BPJ2o8zl.js"),__vite__mapDeps([929,1])),meta:{d:1732244737e3,e:`
<p>快速幂/快速乘</p>
<p>ST</p>
<p>LCA</p>
<p>SA（Suffix Array，后缀数组）</p>
`,r:{minutes:.07,words:21},t:"Binary Lifting 倍增法",y:"a"}}],["/algo/summary/optimise/decrease-conquer/binary/search/",{loader:()=>l(()=>import("./index.html-DdukaIVn.js"),__vite__mapDeps([930,1])),meta:{d:1732244737e3,e:`
<p>核心：两段性，即针对目标函数，两边结果一定相反，一边为True，一边为False</p>
<p><strong>二值性</strong></p>
<h3>使用条件</h3>
<ul>
<li>
<p>连续的解空间</p>
<p>通常是连续的非负整数区间，通常表示：</p>
<ul>
<li>坐标或者索引，如数组中查找一个元素、隔板插入的空隙</li>
<li>资源或者能力，如最小或最大的花费、最大可重复的子数组长度</li>
</ul>
</li>
<li>
<p>某一函数/性质，在该解空间上，呈现两段，一边都为True，一边都为False</p>
<p>二分搜索就是找到这两段临界的那两个节点，故分类为</p>
<ul>
<li>寻找符合条件的最左侧</li>
<li>寻找符合条件的最右侧</li>
</ul>
</li>
</ul>`,r:{minutes:3.87,words:1162},t:"二分搜索",y:"a"}}],["/algo/summary/optimise/decrease-conquer/binary/search/%E6%B5%AE%E7%82%B9%E6%95%B0.html",{loader:()=>l(()=>import("./浮点数.html-DHabfvHK.js"),__vite__mapDeps([931,1])),meta:{d:1732244737e3,e:`
`,r:{minutes:.01,words:3},t:"浮点数",y:"a"}}],["/algo/summary/optimise/decrease-conquer/binary/search/%E7%AD%94%E6%A1%88%E9%9B%86.html",{loader:()=>l(()=>import("./答案集.html-jhELWWcn.js"),__vite__mapDeps([932,1])),meta:{d:1732244737e3,e:`
<p>往往是求符合一定条件的最大值或最小值，问题具有两段性（一侧可以实现、一侧不可以）</p>
<p>最典型的二段性问题：minmax/maxmin</p>
<p>「使……最大值尽可能小」是二分答案题目常见的问法。</p>
<ul>
<li>minmax 最大值最小</li>
<li>maxmin 最小值最大</li>
</ul>
<p>则重点考察 check 函数的写法，常见有二分答案与以下几种的组合：</p>
<ul>
<li><strong>循环不变量</strong>（loop invariant），是一组在循环体内、每次迭代均保持为真的某种性质，通常被用来证明程序或算法的正确性。</li>
<li>贪心策略/线性扫描</li>
<li>双指针法
<ul>
<li>逆向指针</li>
<li>同向指针</li>
<li>滑动窗口</li>
<li>Z型遍历</li>
</ul>
</li>
<li>广度优先</li>
<li>动态规划</li>
</ul>`,r:{minutes:1.21,words:362},t:"答案集",y:"a"}}],["/algo/summary/optimise/decrease-conquer/binary/search/%E8%BE%93%E5%85%A5%E9%9B%86.html",{loader:()=>l(()=>import("./输入集.html-B54DaQQv.js"),__vite__mapDeps([933,1])),meta:{d:1732244737e3,e:`
<ul>
<li>排序数组</li>
<li>山脉排序</li>
<li>旋转排序</li>
</ul>
<h2>排序数组</h2>
<p>以下题目均默认在非严格递增的数组上搜索，可以涵盖严格递增数组的情况。</p>
<p>（如果在非严格递减的数组上搜索，仅需把大于小于号取反，如&gt;=变为&lt;=，&lt;=变为&gt;=）</p>
<p>问题列表见右侧TOC目录：</p>
<h3>在排序数组中查找数字</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// in: nums[], target</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> pos </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> searchMin</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (mid) </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[mid] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> target)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[pos] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> target</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> pos</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:10.16,words:3048},t:"输入集",y:"a"}}],["/algo/summary/search/DFS/enumerate/combination/",{loader:()=>l(()=>import("./index.html-NhN6_qLj.js"),__vite__mapDeps([934,1])),meta:{d:1732244737e3,e:`
`,r:{minutes:.01,words:2},t:"组合",y:"a"}}],["/algo/summary/search/DFS/enumerate/combination/%E5%88%86%E5%89%B2.html",{loader:()=>l(()=>import("./分割.html-xHeWCvfV.js"),__vite__mapDeps([935,1])),meta:{d:1732244737e3,e:`
<p>划分成k个部分，等价于：先划分成1一个部分，再划分k-1个部分</p>
<p>本质上来说还是枚举了k-1个断点，还是组合问题，写法也一致。</p>
<p>（这样一步一步拆分可以dfs，参考石子合并的最小代价lc1000）</p>
`,r:{minutes:.26,words:78},t:"分割",y:"a"}}],["/algo/summary/search/DFS/enumerate/combination/%E9%80%89%E6%8B%A9.html",{loader:()=>l(()=>import("./选择.html-Cql78rLh.js"),__vite__mapDeps([936,1])),meta:{d:1732244737e3,e:`
`,r:{minutes:.01,words:2},t:"选择",y:"a"}}],["/algo/summary/structure/linear/array/sort/",{loader:()=>l(()=>import("./index.html-tW3TCSjY.js"),__vite__mapDeps([937,1])),meta:{d:1732244737e3,e:`
<p>排序</p>
<p>快速排序、归并排序</p>
<h2>分类</h2>
<p>按时间复杂度分类</p>
<ul>
<li>
<p>O(n)</p>
<p>如，基数排序、桶排序、计数排序</p>
</li>
<li>
<p>O(nlogn)</p>
<p>如，快速排序、归并排序、堆排序</p>
</li>
<li>
<p>O(n2)</p>
<p>如，插入排序、简单选择排序、简单希尔排序</p>
</li>
<li>
<p>其他</p>
<p>优化希尔排序可以达到O(n^7/6)但是仍然没有Onlogn优秀，故一般不采纳</p>
</li>
</ul>
<p>按排序方式分类</p>
<ul>
<li>
<p>基于交换类</p>
<p>效率的上限就是Onlogn</p>
</li>
<li>
<p>非交换类</p>
<p>效率的上限可以是On</p>
</li>
</ul>`,r:{minutes:1,words:300},t:"Sort",y:"a"}}],["/algo/summary/structure/linear/array/string/",{loader:()=>l(()=>import("./index.html-CNhISv_q.js"),__vite__mapDeps([938,1])),meta:{d:1732244737e3,e:`
<ul>
<li>前缀树/字典树</li>
<li>后缀树</li>
<li>后缀数组</li>
</ul>
<h2>前缀树</h2>
<p>字典树</p>
<h2>后缀数组</h2>
<p>在字符串处理中，后缀树和后缀数组（Suffix Array）都是非常有力的工具。</p>
<p>后缀数组是后缀树的一个非常精巧的替代品，比后缀树容易实现，可以实现后缀树的很多功能，时间复杂度也不逊色，比后缀树所占用的空间也小很多。在算法竞赛中，后缀数组比后缀树更为实用。</p>
<h3>概念</h3>
<p>① 后缀。</p>
<p>后缀指从某个位置开始到字符串末尾的一个特殊子串。字符串s 从第i 个字符开始的后缀被表示为Suffix(i)，也可以称之为下标为i 的后缀。字符串s =“aabaaaab”，其所有后缀如下：</p>`,r:{minutes:1.76,words:529},t:"字符串",y:"a"}}],["/algo/summary/structure/linear/ext/queue/queue.html",{loader:()=>l(()=>import("./queue.html-Dl-0Lf0z.js"),__vite__mapDeps([939,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/algo/summary/structure/linear/ext/stack/",{loader:()=>l(()=>import("./index.html-SB96NPvO.js"),__vite__mapDeps([940,1])),meta:{d:173238775e4,e:`
<ul>
<li>单调栈</li>
<li>双栈</li>
</ul>
`,r:{minutes:.02,words:6},t:"Stack",y:"a"}}],["/algo/summary/structure/linear/ext/stack/monotonic.html",{loader:()=>l(()=>import("./monotonic.html-jrm0oChI.js"),__vite__mapDeps([941,1])),meta:{d:1734054342e3,e:`
<p><a href="https://leetcode.cn/problems/create-maximum-number/solutions/297892/yi-zhao-chi-bian-li-kou-si-dao-ti-ma-ma-zai-ye-b-7/" target="_blank" rel="noopener noreferrer">移除问题</a></p>
`,r:{minutes:.08,words:24},t:"Monotonic Stack",y:"a"}}],["/algo/summary/structure/linear/linked/2ptr/",{loader:()=>l(()=>import("./index.html-B4KUd4CX.js"),__vite__mapDeps([942,1])),meta:{d:1732244737e3,e:`
`,r:{minutes:.01,words:3},t:"双指针",y:"a"}}],["/se/lang/java/JUC/sync/lock/",{loader:()=>l(()=>import("./index.html-BxS6JAuN.js"),__vite__mapDeps([943,1])),meta:{d:1675410392e3,e:`
<p>分类的角度很多</p>
<ul>
<li>乐观锁/悲观锁</li>
<li>共享锁/独占锁</li>
<li>可重入锁/不可重入锁</li>
</ul>
<h2>乐观锁 vs 悲观锁</h2>
<p>悲观锁：每次操作前都加锁</p>
<p>乐观锁：CAS 或版本号机制</p>
<p>一般来说，MySQL 中的行锁、表锁中，行锁会发生死锁，表锁不会</p>
<p><strong>悲观锁通常用于多写场景，避免频繁失败和重试影响性能。</strong></p>
<p><strong>乐观锁通常用于多读场景，避免频繁加锁影响性能，大大提升了系统的吞吐量。</strong></p>
<h2>Lock vs sychronized</h2>`,r:{minutes:2.81,words:842},t:"锁",y:"a"}}],["/se/lang/java/JUC/sync/lock/%E4%B9%90%E8%A7%82%E9%94%81.html",{loader:()=>l(()=>import("./乐观锁.html-DSS2mC3w.js"),__vite__mapDeps([944,1])),meta:{d:1715153702e3,e:`
<p>代表：AtomicInteger，使用 cas（Unsafe）来保证原子性</p>
<ul>
<li>核心是：无需加锁，每次只有一个线程能够成功修改共享变量，其他失败的线程不需要停止，不断重复直至成功</li>
<li>由于线程一直运行，不需要阻塞，因此不涉及线程上下文切换</li>
<li>它需要多核 cpu 支持，且核心数不应超过 cpu 核数</li>
</ul>
<hr>
<ol>
<li>乐观锁：假定没有冲突，在更新数据时比较发现不一致时，则读取新值修改后重试更新。（自旋锁就是一种乐观锁）</li>
<li>自旋锁：循环使用 cpu 时间，尝试 cas 操作直至成功返回 true，不然一直循环。（比较内存值与线程旧值是否一致，一致则更新，不然则循环）</li>
</ol>`,r:{minutes:7.35,words:2204},t:"乐观锁",y:"a"}}],["/se/lang/java/JUC/sync/lock/%E6%82%B2%E8%A7%82%E9%94%81.html",{loader:()=>l(()=>import("./悲观锁.html-BTtiJLk2.js"),__vite__mapDeps([945,1])),meta:{d:1684318252e3,e:`
<p>代表：synchronized 和 Lock</p>
<ul>
<li>核心是：线程占有了锁，才能去操作共享变量，每次只有一个线程占锁成功，获取锁失败的线程，都得停下来等待</li>
<li>线程从运行到阻塞，再从阻塞到唤醒，涉及线程上下文切换，如果频繁发生，影响性能</li>
<li>实际上，线程在获取 synchronized 和 Lock 锁时，如果锁已被占用，都会做几次重试操作，减少阻塞的机会</li>
</ul>
<h2>synchronized</h2>
<blockquote>
<p>是可重入锁。</p>
</blockquote>
<p><code>synchronized</code> 是 Java 中的一个关键字，翻译成中文是同步的意思，主要解决的是多个线程之间访问资源的同步性，可以保证被它修饰的方法或者代码块在任意时刻只能有一个线程执行。</p>`,r:{minutes:15,words:4499},t:"悲观锁",y:"a"}}],["/se/lang/java/framework/di/guice/",{loader:()=>l(()=>import("./index.html-mSvOcVgs.js"),__vite__mapDeps([946,1])),meta:{d:1725612282e3,e:`
<p>Guice，发音为“juice”，是由Google赞助并开源的一款轻量级的依赖注入（Dependency Injection，简称DI）框架。依赖注入是一种设计模式，它允许我们解耦代码，提高组件的可测试性和可维护性。Guice是针对Java平台的，它要求至少使用Java 6进行开发。Guice通过提供一种声明式的方式来管理对象的生命周期和它们之间的依赖关系，从而简化了复杂应用的构建。</p>
<p>在Guice中，我们创建一个名为<code>Module</code>的类来定义依赖关系。在这个模块中，我们可以使用<code>@Provides</code>注解的方法来指定如何创建或获取一个依赖。这些方法通常会利用其他已经注入的依赖来构建对象。例如：</p>`,r:{minutes:2.42,words:726},t:"Guice",y:"a"}}],["/se/lang/java/framework/distributed/seata/",{loader:()=>l(()=>import("./index.html-CrwDZZ07.js"),__vite__mapDeps([947,1])),meta:{d:1715153702e3,e:`
<blockquote>
<p><a href="https://juejin.cn/post/7304984457525706790?utm_source=gold_browser_extension" target="_blank" rel="noopener noreferrer">教程</a></p>
</blockquote>
<ul>
<li>本地事务：同一数据库和服务器，称为本地事务。 在计算机系统中，更多的是通过关系型数据库来控制事务，这是利用数据库本身的事务特性来实现的，因此叫数据库事务，由于应用主要靠关系数据库来控制事务，而数据库通常和应用在同一个服务器，所以基于关系型数据库的事务又被称为本地事务。</li>
<li>分布式事务： 分布式事务指事务的参与者、支持事务的服务器、资源服务器以及事务管理器分别位于<strong>不同的分布式系统</strong>的不同节点之上，且属于不同的应用，分布式事务需要保证这些操作要么全部成功，要么全部失败。本质上来说，分布式事务就是为了保证不同数据库的数据一致性。</li>
</ul>`,r:{minutes:8.27,words:2481},t:"Seata",y:"a"}}],["/se/lang/java/framework/distributed/spring-cloud/",{loader:()=>l(()=>import("./index.html-DOJ-SzZW.js"),__vite__mapDeps([948,1])),meta:{d:1672663528e3,e:`
`,r:{minutes:.01,words:2},t:"Spring Cloud",y:"a"}}],["/se/lang/java/framework/orm/mybatis/%E5%8F%82%E6%95%B0.html",{loader:()=>l(()=>import("./参数.html-8-Dt02y8.js"),__vite__mapDeps([949,1])),meta:{d:1669446166e3,e:`
<h2>占位符</h2>
<ul>
<li>
<p><code>\${}</code>是 Properties 文件中的变量占位符，它可以用于标签属性值和 sql 内部，属于<strong>静态文本替换</strong>，比如\${driver}会被静态替换为<code>com.mysql.jdbc. Driver</code>。</p>
<p>字符串拼接</p>
</li>
<li>
<p><code>#{}</code>是 sql 的参数占位符，MyBatis 会将 sql 中的<code>#{}</code>替换为? 号，在 sql 执行前会使用 PreparedStatement 的参数设置方法，按序给 sql 的? 号占位符设置参数值，比如 ps.setInt(0, parameterValue)，<code>#{item.name}</code> 的取值方式为使用反射从参数对象中获取 item 对象的 name 属性值，相当于 <code>param.getItem().getName()</code>。</p>
</li>
</ul>`,r:{minutes:1.56,words:469},t:"参数",y:"a"}}],["/se/lang/java/framework/orm/mybatis/%E6%9F%A5%E8%AF%A2.html",{loader:()=>l(()=>import("./查询.html-DFjFIgb0.js"),__vite__mapDeps([950,1])),meta:{d:1669446166e3,e:`
`,r:{minutes:.01,words:2},t:"查询",y:"a"}}],["/se/lang/java/framework/orm/mybatis/%E6%A0%87%E7%AD%BE.html",{loader:()=>l(()=>import("./标签.html-Be6_qYok.js"),__vite__mapDeps([951,1])),meta:{d:1672229303e3,e:`
<h3>foreach</h3>
<p><a href="https://www.cnblogs.com/fnlingnzb-learner/p/10566452.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/fnlingnzb-learner/p/10566452.html</a></p>
<p>常用来批量 insert，可以显著提高性能（大约十倍）</p>
<blockquote>
<p>三种方式性能对比：<a href="https://www.jb51.net/article/224857.htm" target="_blank" rel="noopener noreferrer">https://www.jb51.net/article/224857.htm</a></p>
</blockquote>`,r:{minutes:.18,words:54},t:"标签",y:"a"}}],["/se/lang/java/framework/spring/boot/",{loader:()=>l(()=>import("./index.html-Dl1eh1MB.js"),__vite__mapDeps([952,1])),meta:{d:1684318252e3,e:`
<h3>SpringBootApplication</h3>
<p>可以看出大概可以把 @SpringBootApplication 看作是 @Configuration、@EnableAutoConfiguration、@ComponentScan 注解的集合。根据 SpringBoot 官网，这三个注解的作用分别是：</p>
<ul>
<li>@EnableAutoConfiguration：启用 SpringBoot 的自动配置机制</li>
<li>@ComponentScan： 扫描被@Component (@Service,@Controller)注解的 bean，注解默认会扫描该类所在的包下所有的类。</li>
<li>@Configuration：允许在上下文中注册额外的 bean 或导入其他配置类</li>
</ul>`,r:{minutes:7.58,words:2273},t:"Spring Boot",y:"a"}}],["/se/lang/java/framework/spring/boot/config.html",{loader:()=>l(()=>import("./config.html-Bdcb2oAr.js"),__vite__mapDeps([953,1])),meta:{d:1694686552e3,e:`
<h3>配置优先级</h3>
<p>命令行参数（Command-line arguments）：通过命令行传递给应用程序的参数具有最高的优先级。可以使用--前缀指定参数，例如：java -jar myapp.jar --myapp.property=value。</p>
<p>系统属性（System properties）：可以通过在启动应用程序时设置 Java 系统属性来传递配置值。例如：java -jar -Dmyapp.property=value myapp.jar。</p>
<p>环境变量（Environment variables）：可以通过设置操作系统的环境变量来传递配置值。Spring Boot 会自动将环境变量转换为相应的配置属性。例如，将 MYAPP_PROPERTY=value 设置为环境变量。</p>`,r:{minutes:1.33,words:400},t:"配置文件",y:"a"}}],["/se/lang/java/framework/spring/boot/devtool.html",{loader:()=>l(()=>import("./devtool.html-DhujIsmc.js"),__vite__mapDeps([954,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/se/lang/java/framework/spring/security/",{loader:()=>l(()=>import("./index.html-BS8avbvz.js"),__vite__mapDeps([955,1])),meta:{d:1715153702e3,e:`
<p>Spring Security + OAuth2</p>
`,r:{minutes:.02,words:5},t:"Spring Security",y:"a"}}],["/se/lang/java/framework/web/flux/",{loader:()=>l(()=>import("./index.html-BXtDw43e.js"),__vite__mapDeps([956,1])),meta:{d:1719451307e3,e:`
<p>传统的Spring MVC是基于Servlet API的框架。<br>
Spring WebFlux是一套全新的Reactive Web技术栈，<br>
实现完全非阻塞，<br>
支持Reactive Streams背压等特性，<br>
并且运行环境不限于Servlet容器（Tomcat、Jetty、Undertow），如Netty等。</p>
`,r:{minutes:.2,words:61},t:"WebFlux",y:"a"}}],["/se/lang/java/framework/web/mvc/",{loader:()=>l(()=>import("./index.html-CYQVYfpH.js"),__vite__mapDeps([957,1])),meta:{d:1684318252e3,e:`
<h3>Spring MVC 的核心组件有哪些？</h3>
<p>记住了下面这些组件，也就记住了 SpringMVC 的工作原理。</p>
<ul>
<li><strong><code>DispatcherServlet</code></strong> ：<strong>核心的中央处理器</strong>，负责接收请求、分发，并给予客户端响应。</li>
<li><strong><code>HandlerMapping</code></strong> ：<strong>处理器映射器</strong>，根据 uri 去匹配查找能处理的 <code>Handler</code> ，并会将请求涉及到的拦截器和 <code>Handler</code> 一起封装。</li>
<li><strong><code>HandlerAdapter</code></strong> ：<strong>处理器适配器</strong>，根据 <code>HandlerMapping</code> 找到的 <code>Handler</code> ，适配执行对应的 <code>Handler</code>；</li>
<li><strong><code>Handler</code></strong> ：<strong>请求处理器</strong>，处理实际请求的处理器。</li>
<li><strong><code>ViewResolver</code></strong> ：<strong>视图解析器</strong>，根据 <code>Handler</code> 返回的逻辑视图 / 视图，解析并渲染真正的视图，并传递给 <code>DispatcherServlet</code> 响应客户端</li>
</ul>`,r:{minutes:6.49,words:1947},t:"Spring MVC",y:"a"}}],["/se/lang/java/framework/web/mvc/interceptor.html",{loader:()=>l(()=>import("./interceptor.html-BVxV74kR.js"),__vite__mapDeps([958,1])),meta:{d:1715153702e3,e:`
<p>过滤器（Filter）和拦截器（Interceptor）是在Java Web应用中用于处理HTTP请求和响应的两种常见机制。它们都可以在请求到达目标资源之前进行预处理，以及在响应返回客户端之前进行后处理。但它们的实现方式和应用场景略有不同。</p>
<h3>过滤器（Filter）：</h3>
<ol>
<li>
<p><strong>工作原理</strong>：</p>
<ul>
<li>在Servlet规范中，过滤器是javax.servlet.Filter接口的实现类，它可以拦截HTTP请求和响应，对其进行处理，然后将请求传递给目标资源或将响应返回给客户端。</li>
<li>过滤器在Web应用启动时被初始化，并在容器启动时被调用，可以拦截多个URL或请求。</li>
</ul>
</li>
<li>
<p><strong>应用场景</strong>：</p>
<ul>
<li>过滤器常用于处理HTTP请求和响应的一些通用任务，比如日志记录、编码转换、权限控制、安全性过滤等。</li>
</ul>
</li>
<li>
<p><strong>示例</strong>：</p>
<ul>
<li>日志记录：记录请求信息、响应时间等。</li>
<li>字符编码转换：确保请求和响应中的字符编码一致。</li>
<li>权限控制：验证用户的身份和权限等。</li>
</ul>
</li>
</ol>`,r:{minutes:3.11,words:932},t:"Interceptor 拦截器",y:"a"}}],["/se/lang/java/framework/web/mvc/servlet.html",{loader:()=>l(()=>import("./servlet.html-URyh6rMm.js"),__vite__mapDeps([959,1])),meta:{d:1684318252e3,e:`
<p>在 Java Web 程序中，<strong>Servlet</strong>主要负责接收用户请求 <code>HttpServletRequest</code>,在<code>doGet()</code>,<code>doPost()</code>中做相应的处理，并将回应<code>HttpServletResponse</code>反馈给用户。<strong>Servlet</strong> 可以设置初始化参数，供 Servlet 内部使用。一个 Servlet 类只会有一个实例，在它初始化时调用<code>init()</code>方法，销毁时调用<code>destroy()</code>方法**。**Servlet 需要在 web.xml 中配置（MyEclipse 中创建 Servlet 会自动配置），<strong>一个 Servlet 可以设置多个 URL 访问</strong>。<strong>Servlet 不是线程安全</strong>，因此要谨慎使用类变量。</p>`,r:{minutes:4.48,words:1345},t:"Servlet",y:"a"}}],["/se/lang/java/framework/web/netty/",{loader:()=>l(()=>import("./index.html-BHNN35db.js"),__vite__mapDeps([960,1])),meta:{d:1715153702e3,e:`
<p>Netty基于NIO(NIO是一种同步非阻塞的I/O模型，在Java1.4中引入了NIO),使用Netty可以极大地简化TCP和UDP套接字服务器等网络编程，并且性能以及安全性等很多方面都非常优秀。</p>
<p>大部分框架底层涉及到网络通信的部分都是基于Netty来做的，比如说Spring Cloud生态系统中的网关Spring Cloud Gateway。我们平常经常接触的Dubbo、RocketMQ、Elasticsearch、gRPC、Spark等等热门开源项目都用到了Netty。</p>
<h3>Bytebuf</h3>
<p>字节容器</p>
<p>网络通信最终都是通过字节流进行传输的。ByteBuf就是Netty提供的一个字节容器，其内部是一个字节数组。当我们通过Netty传输数据的时候，就是通过ByteBuf进行的。我们可以将ByteBuf看作是Netty对Java NIO提供了ByteBuffer字节容器的封装和抽象。</p>`,r:{minutes:3.64,words:1093},t:"Netty",y:"a"}}],["/se/lang/java/framework/web/netty/Untitled.html",{loader:()=>l(()=>import("./Untitled.html-DwMG6Xze.js"),__vite__mapDeps([961,1])),meta:{d:1719451307e3,e:`<blockquote>
<p>JDK追求的是通用性，而Netty则专注于高并发和网络通信。</p>
</blockquote>
<p>我们可以通过几个具体的例子来看看它们在实现上的区别。</p>
<h3>1. ThreadLocal )实现</h3>
<p>JDK的ThreadLocal采用的是<a href="https://www.zhihu.com/search?q=%E9%9D%9E%E6%B3%A2%E6%8B%89%E5%A5%91%E6%95%A3%E5%88%97%E6%B3%95&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3508007258%7D" target="_blank" rel="noopener noreferrer">非波拉契散列法</a>和开放寻址。这种设计可以保证在大多数情况下，数据在内存中的分布更均匀，减少了碰撞的可能性。但在高并发场景下，这种实现还是有点力不从心。</p>`,r:{minutes:6.51,words:1954},t:"",y:"a"}}],["/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F/%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F.html",{loader:()=>l(()=>import("./内存区域.html-Dq5E_LTS.js"),__vite__mapDeps([962,1])),meta:{d:1680090419e3,e:`
<p><img src="https://oss.javaguide.cn/github/javaguide/java/jvm/java-runtime-data-areas-jdk1.8.png" alt="Java 运行时数据区域（JDK1.8 ）" loading="lazy"></p>
<h2>线程私有</h2>
<h3>程序计数器 PCR</h3>
<p>程序计数器(Program Counter Register)是一块较小的内存空间，它可以看作是当前线程所执行的<strong>字节码的行号指示器</strong>。在 Java 虚拟机的概念模型里，字节码解释器工作时就是通过改变这个计数器的值来选取下一条需要执行的字节码指令，它是程序控制流的指示器，分支、循环、跳转、异常处理、线程恢复等基础功能都需要依赖这个计数器来完成。</p>`,r:{minutes:6.8,words:2039},t:"内存区域",y:"a"}}],["/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F.html",{loader:()=>l(()=>import("./内存泄漏.html-CEtAc1dL.js"),__vite__mapDeps([963,1])),meta:{d:1684318252e3,e:`
<p>Java 中的内存泄漏是指程序中已经不再使用的对象仍然占用着内存，导致内存无法被回收，最终导致内存溢出的问题。常见的内存泄漏情况包括以下几种：</p>
<ol>
<li>
<p>静态集合类引起的内存泄漏：如果在静态集合类中存储了大量的对象，并且没有及时清理，就会导致内存泄漏。</p>
</li>
<li>
<p>对象生命周期管理不当引起（未释放）的内存泄漏：如果程序中的对象生命周期管理不当，比如没有及时关闭数据库连接、文件流等资源，就会导致内存泄漏。</p>
</li>
<li>
<p>匿名内部类引起的内存泄漏：如果在匿名内部类中引用了外部类的对象，并且没有及时释放，就会导致内存泄漏。</p>
</li>
</ol>`,r:{minutes:7.78,words:2333},t:"内存泄漏",y:"a"}}],["/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F/%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AD%98.html",{loader:()=>l(()=>import("./对象内存.html-DYR5anKF.js"),__vite__mapDeps([964,1])),meta:{d:1719451307e3,e:`
<p>在Java堆中对象分配、布局和访问的全过程</p>
<p>对象创建</p>
<h3>内存布局</h3>
<p>在 Hotspot 虚拟机中，对象在内存中的布局可以分为 3 块区域：<strong>对象头（Header）、实例数据（Instance Data）和对齐填充（Padding）。</strong></p>
<p>对象头包括两部分信息：</p>
<ol>
<li>标记字段（Mark Word）：用于存储对象自身的运行时数据， 如哈希码（HashCode）、GC 分代年龄、锁状态标志、线程持有的锁、偏向线程 ID、偏向时间戳等等。</li>
<li>类型指针（Klass Word）：对象指向它的类元数据的指针，虚拟机通过这个指针来确定这个对象是哪个类的实例。</li>
</ol>`,r:{minutes:2.08,words:625},t:"对象内存",y:"a"}}],["/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/%E5%88%86%E4%BB%A3%E6%94%B6%E9%9B%86%E7%90%86%E8%AE%BA.html",{loader:()=>l(()=>import("./分代收集理论.html-Cw4kwhZw.js"),__vite__mapDeps([965,1])),meta:{d:1715153702e3,e:`
<ol>
<li>弱分代假说(Weak Generational Hypothesis)：绝大多数对象都是朝生夕灭的。</li>
<li>强分代假说(Strong Generational Hypothesis)：熬过越多次垃圾收集过程的对象就越难以消亡。</li>
<li>跨代引用假说(Intergenerational Reference Hypothesis)：跨代引用相对于同代引用来说仅占极少数。</li>
</ol>
<p>前两个分代假说共同奠定了多款常用的垃圾收集器的一致的设计原则：收集器应该将 Java 堆划分出不同的区域，然后将回收对象依据其年龄(年龄即对象熬过垃圾收集过程的次数)分配到不同的区域之中存储。显而易见，如果一个区域中大多数对象都是朝生夕灭，难以熬过垃圾收集过程的话，那么把它们集中放在一起，每次回收时只关注如何保留少量存活而不是去标记那些大量将要被回收的对象，就能以较低代价回收到大量的空间；如果剩下的都是难以消亡的对象，那把它们集中放在一块，虚拟机便可以使用较低的频率来回收这个区域，这就同时兼顾了垃圾收集的时间开销和内存的空间有效利用。</p>`,r:{minutes:13.01,words:3903},t:"分代收集理论",y:"a"}}],["/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95.html",{loader:()=>l(()=>import("./垃圾回收算法.html-CawzQgo8.js"),__vite__mapDeps([966,1])),meta:{d:1680090419e3,e:`
<h2>标记-清除 Mark-Sweep</h2>
<p>算法分为“标记”和“清除”两个阶段：</p>
<p>首先标记出所有需要回收的对象，在标记完成后，统一回收掉所有被标记的对象，也可以反过来，标记存活的对象，统一回收所有未被标记的对象。标记过程就是对象是否属于垃圾的判定过程，这在前一节讲述垃圾对象标记判定算法时其实已经介绍过了。</p>
<p>缺点：</p>
<ul>
<li>第一个是执行效率不稳定，如果 Java 堆中包含大量对象，而且其中大部分是需要被回收的，这时必须进行大量标记和清除的动作，导致标记和清除两个过程的执行效率都随对象数量增长而降低；</li>
<li>第二个是内存空间的<strong>碎片化</strong>问题，标记、清除之后会产生大量不连续的内存碎片，空间碎片太多可能会导致当以后在程序运行过程中需要分配较大对象时无法找到足够的连续内存而不得不提前触发另一次垃圾收集动作。</li>
</ul>`,r:{minutes:6.83,words:2048},t:"垃圾回收算法",y:"a"}}],["/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8.html",{loader:()=>l(()=>import("./垃圾收集器.html-DAfLsPN0.js"),__vite__mapDeps([967,1])),meta:{d:1680090419e3,e:`
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-03-31 18.47.04.png" alt="截屏2023-03-31 18.47.04" loading="lazy"></p>
<h2>Young Generation</h2>
<h3>Serial 收集器</h3>
<p>Serial（串行）收集器是最基本、历史最悠久的垃圾收集器了。大家看名字就知道这个收集器是一个单线程收集器了。它的 <strong>“单线程”</strong> 的意义不仅仅意味着它只会使用一条垃圾收集线程去完成垃圾收集工作，更重要的是它在进行垃圾收集工作的时候必须暂停其他所有的工作线程（ <strong>"Stop The World"</strong> ），直到它收集结束。</p>`,r:{minutes:11.06,words:3318},t:"垃圾收集器",y:"a"}}],["/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/%E5%AF%B9%E8%B1%A1%E6%AD%BB%E4%BA%A1%E5%88%A4%E5%AE%9A.html",{loader:()=>l(()=>import("./对象死亡判定.html-CNsGMQv3.js"),__vite__mapDeps([968,1])),meta:{d:1684318252e3,e:`
<h2>引用计数</h2>
<p>优点：</p>
<ul>
<li>原理简单，判定效率也很高，在大多数情况下它都是一个不错的算法。</li>
</ul>
<p>缺点：</p>
<ul>
<li>占用了一些额外的内存空间来进行计数</li>
<li>难以解决循环引用的问题；它们因为互相引用着对方，导致它们的引用计数都不为零，引用计数算法也 就无法回收它们。</li>
</ul>
<h2>可达性分析</h2>
<p>这个算法的基本思路就是通过 一系列称为“GC Roots”的根对象作为起始节点集，从这些节点开始，根据引用关系向下搜索，搜索过 程所走过的路径称为“引用链”(Reference Chain)，如果某个对象到 GC Roots 间没有任何引用链相连， 或者用图论的话来说就是从 GC Roots 到这个对象不可达时，则证明此对象是不可能再被使用的。</p>`,r:{minutes:6.13,words:1838},t:"对象死亡判定",y:"a"}}],["/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B.html",{loader:()=>l(()=>import("./引用类型.html-CB0Y4Y49.js"),__vite__mapDeps([969,1])),meta:{d:1681208623e3,e:`
<h2>强引用</h2>
<p>普通变量赋值即为强引用，如</p>
<p><code>A a = new A();</code></p>
<h3>回收特点</h3>
<p>当内存空间不足，Java 虚拟机宁愿抛出 OutOfMemoryError 错误，使程序异常终止，也不会靠回收具有强引用的对象，来解决内存不足的问题。通过 GC Root 的引用链，如果强引用不到该对象，该对象才能被回收。</p>
<p>如果想中断或者回收强引用对象可以显式地将引用赋值为 null(a=null)，这样的话 JVM 就会在合适的时间，进行垃圾回收。</p>
<h2>软引用</h2>
<p>引用和对象通过<code>SoftReference</code>建立关联</p>`,r:{minutes:2.89,words:868},t:"引用类型",y:"a"}}],["/se/lang/java/jvm/%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F/%E7%B1%BB%E5%8A%A0%E8%BD%BD/",{loader:()=>l(()=>import("./index.html-BmBSy9AQ.js"),__vite__mapDeps([970,1])),meta:{d:1680090419e3,e:`
<h2>类的生命周期</h2>
<p>类从被加载到虚拟机内存中开始到卸载出内存为止，它的整个生命周期可以简单概括为 7 个阶段：</p>
<ul>
<li>加载（Loading）</li>
<li>连接（Linking）
<ul>
<li>验证（Verification）</li>
<li>准备（Preparation）</li>
<li>解析（Resolution）</li>
</ul>
</li>
<li>初始化（Initialization）</li>
<li>使用（Using）</li>
<li>卸载（Unloading）</li>
</ul>
<p>加载、验证、准备、初始化和卸载这五个阶段的顺序是确定的，类型的加载过程必须按照这种顺序按部就班地开始，而解析阶段则不一定：它在某些情况下可以在初始化阶段之后再开始， 这是为了支持 Java 语言的运行时绑定特性(也称为动态绑定或晚期绑定)。</p>`,r:{minutes:2.8,words:840},t:"类加载",y:"a"}}],["/se/lang/java/jvm/%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F/%E7%B1%BB%E5%8A%A0%E8%BD%BD/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8.html",{loader:()=>l(()=>import("./类加载器.html-9vGzbGPi.js"),__vite__mapDeps([971,1])),meta:{d:1680090419e3,e:`
<p>从上面的介绍可以看出:</p>
<ul>
<li>类加载器是一个负责加载类的对象，用于实现类加载过程中加载这步。</li>
<li>每个 Java 类都有一个引用指向加载它的 <code>ClassLoader</code>。</li>
<li>数组类不是通过 <code>ClassLoader</code> 创建的（数组类没有对应的二进制字节流），是由 JVM 直接生成的。</li>
</ul>
<p>类加载器虽然只用于实现类的加载动作，但它在 Java 程序中起到的作用却远超类加载阶段。对于任意一个类，都必须由加载它的类加载器和这个类本身一起共同确立其在 Java 虚拟机中的唯一性，每一个类加载器，都拥有一个独立的类名称空间。这句话可以表达得更通俗一些：比较两个类是否“相等”，只有在这两个类是由同一个类加载器加载的前提下才有意义，否则，即使这两个类来源于同一个 Class 文件，被同一个 Java 虚拟机加载，只要加载它们的类加载器不同，那这两个类就必定不相等。</p>`,r:{minutes:14.21,words:4263},t:"类加载器",y:"a"}}],["/se/lang/java/jvm/%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F/%E7%B1%BB%E5%8A%A0%E8%BD%BD/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B.html",{loader:()=>l(()=>import("./类加载过程.html-BMbkkCHs.js"),__vite__mapDeps([972,1])),meta:{d:1680090419e3,e:`
<ul>
<li>加载（Loading）</li>
<li>连接（Linking）
<ul>
<li>验证（Verification）</li>
<li>准备（Preparation）</li>
<li>解析（Resolution）</li>
</ul>
</li>
<li>初始化（Initialization）</li>
<li>使用（Using）</li>
<li>卸载（Unloading）</li>
</ul>
<h2>加载</h2>
<p>“加载”(Loading)阶段是整个“类加载”(ClassLoading)过程中的一个阶段，在加载阶段，Java 虚拟机需要完成以下三件事情：</p>`,r:{minutes:7.59,words:2276},t:"类加载过程",y:"a"}}],["/se/lang/java/jvm/%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F/%E7%B1%BB%E6%96%87%E4%BB%B6/%E7%BB%93%E6%9E%84.html",{loader:()=>l(()=>import("./结构.html-DRWV6RsD.js"),__vite__mapDeps([973,1])),meta:{d:1719451307e3,e:`
`,r:{minutes:.02,words:5},t:"类文件结构",y:"a"}}],["/algo/summary/structure/linear/array/sort/n/bucket.html",{loader:()=>l(()=>import("./bucket.html-DXU4gzm6.js"),__vite__mapDeps([974,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/algo/summary/structure/linear/array/sort/n/counting.html",{loader:()=>l(()=>import("./counting.html-CRBVGaIW.js"),__vite__mapDeps([975,1])),meta:{d:1675410392e3,t:"",y:"a"}}],["/algo/summary/structure/linear/array/sort/n/radix.html",{loader:()=>l(()=>import("./radix.html-DBvrEvRd.js"),__vite__mapDeps([976,1])),meta:{d:1732244737e3,e:`
<p>基数排序</p>
<p>基数排序法是属于稳定性的排序，其时间复杂度为O (nlog(r)m)，其中r为所采取的基数，而m为堆数，可以认为是线性复杂度，在某些时候，基数排序法的效率高于其它的稳定性排序法。</p>
<p>将所有待比较数值（正整数）统一为同样的数位长度，数位较短的数前面补零。然后，从最低位开始，依次进行一次排序。这样从最低位排序一直到最高位排序完成以后，数列就变成一个有序序列。</p>
<ul>
<li>
<p>最低位优先(Least Significant Digit first) LSD：先从kd开始排序，再对kd-1进行排序，依次重复，直到对k1排序后便得到一个有序序列。</p>
</li>
<li>
<p>最高位优先(Most Significant Digit first) MSD：先按k1排序分组，同一组中记录，关键码k1相等，再对各组按k2排序分成子组，之后，对后面的关键码继续这样的排序分组，直到按最次位关键码kd对各子组排序后。再将各组连接起来，便得到一个有序序列。</p>
</li>
</ul>`,r:{minutes:2.4,words:720},t:"Radix Sort",y:"a"}}],["/algo/summary/structure/linear/array/sort/nlogn/merge.html",{loader:()=>l(()=>import("./merge.html-DhbkDG_R.js"),__vite__mapDeps([977,1])),meta:{d:1732244737e3,e:`
<p>后序遍历</p>
<p>稳定排序</p>
<p>Onlogn, On</p>
<p>应用</p>
<ol>
<li>merge</li>
<li>逆序对</li>
</ol>
`,r:{minutes:.07,words:22},t:"归并排序",y:"a"}}],["/algo/summary/structure/linear/array/sort/nlogn/partition.html",{loader:()=>l(()=>import("./partition.html-BLS8buHo.js"),__vite__mapDeps([978,1])),meta:{d:1732244737e3,e:`
<p>先序遍历</p>
<p>应用</p>
<ol>
<li>partition</li>
<li>quick select</li>
</ol>
<h2>Partition</h2>
<ul>
<li>
<p>划分型</p>
<p>单纯把数组划分成两段：一半大于等于，一半小于等于 pivot</p>
</li>
<li>
<p>寻找型</p>
<p>在划分数组的同时，找到pivot元素最终位置</p>
</li>
</ul>
<p>优化：</p>
<ul>
<li>
<p>三路划分</p>
<p>将数组划分成：<code>&lt;, =, &gt;</code> pivot三段，并找到pivot段的两个端点</p>
<p>优势：在重复元素较多时，可以更快的排序完毕，一次可以同时处理掉很多位置</p>
</li>
<li>
<p>多枢划分</p>
<p>如，Java快排源码，使用了两个Pivot进行划分</p>
</li>
</ul>`,r:{minutes:2.11,words:634},t:"快速排序",y:"a"}}],["/se/lang/java/framework/distributed/spring-cloud/nacos/",{loader:()=>l(()=>import("./index.html-oNkWzz2X.js"),__vite__mapDeps([979,1])),meta:{d:1686210114e3,e:`
<p>注册中心、配置中心</p>
<p>namespace：区分环境，比如开发、测试、生产环境</p>
<p>group：区别项目，比如 tracenote 和 juejin</p>
<h2>配置中心</h2>
<p>搭建完成 Nacos 服务发现中心，下边搭建 Nacos 为配置中心，其目的就是通过 Nacos 去管理项目的所有配置。</p>
<p>先将项目中的配置文件分分类：</p>
<p>1、每个项目特有的配置</p>
<p>是指该配置只在有些项目中需要配置，或者该配置在每个项目中配置的值不同。</p>
<p>比如：<a href="http://spring.application.name" target="_blank" rel="noopener noreferrer">spring.application.name</a> 每个项目都需要配置但值不一样，以及有些项目需要连接数据库而有些项目不需要，有些项目需要配置消息队列而有些项目不需要。</p>`,r:{minutes:1.66,words:497},t:"Nacos",y:"a"}}],["/se/lang/java/framework/orm/mybatis/plus/%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2.html",{loader:()=>l(()=>import("./条件查询.html-Bqs2SCcS.js"),__vite__mapDeps([980,1])),meta:{d:1672229303e3,e:`
<h2>Wrapper 传统写法</h2>
<p>示例：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">QueryWrapper</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">User</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> qw </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> QueryWrapper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">qw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"age"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">User</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> userList </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> userDao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">selectList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(qw);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.63,words:190},t:"条件查询",y:"a"}}],["/se/lang/java/framework/orm/mybatis/plus/%E6%9F%A5%E8%AF%A2%E6%8A%95%E5%BD%B1.html",{loader:()=>l(()=>import("./查询投影.html-ChvlDUic.js"),__vite__mapDeps([981,1])),meta:{d:1672229303e3,e:'\n<h2>select</h2>\n<h2>groupBy</h2>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">INSERT INTO</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> `knownact`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`post`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`id`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`user_id`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`title`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`content`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`brief`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`cover_image`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`likes`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`dislike`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`favorite`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`review_status`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`create_time`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`update_time`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`is_deleted`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'\\"Hello\\"\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'https://neusurvey-1309929060.cos.ap-beijing.myqcloud.com/bb/1958ce9f5f21488bbb888934f4423942aa.md\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">INSERT INTO</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> `knownact`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`post`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`id`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`user_id`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`title`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`content`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`brief`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`cover_image`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`likes`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`dislike`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`favorite`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`review_status`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`create_time`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`update_time`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`is_deleted`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'我的 React 最佳实践\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'\\"Hi\\"\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'React 目前开发以函数组件为主，辅以 hooks 实现大部分的页面逻辑。目前数栈的 react 版本是 16.13.1，该版本是支持 hooks 的，故以下实践是 hooks 相关的最佳实践。\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">INSERT INTO</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> `knownact`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`post`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`id`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`user_id`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`title`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`content`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`brief`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`cover_image`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`likes`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`dislike`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`favorite`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`review_status`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`create_time`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`update_time`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`is_deleted`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'疫情这么严重下的初级前端年终总结\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'\\"Hi\\"\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'「回顾2022，展望2023，我正在参与2022年终总结征文大赛活动」 前言 不知不觉干这行业也几年了，期间少不了的酸甜苦辣，有熬夜通宵发版的辛苦，也有团队开心聚餐的喜悦，总得来说有苦亦有甜，人生嘛！\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/01d8e08090d5499e912ffd7f5bf37d3b~tplv-k3u1fbpfcp-watermark.image?\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">INSERT INTO</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> `knownact`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`post`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`id`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`user_id`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`title`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`content`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`brief`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`cover_image`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`likes`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`dislike`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`favorite`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`review_status`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`create_time`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`update_time`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`is_deleted`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'【中级/高级前端】为什么我建议你一定要读一读 Tapable 源码？\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'https://neusurvey-1309929060.cos.ap-beijing.myqcloud.com/bb/d516f7e786ab49759092ba2a4ae22b9daa.md\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'所有人都知道 Webpack 很复杂，但 Webpack 的源码却很优雅，是一个典型的可插拔架构，不仅逻辑清晰，而且灵活好扩展。近几年出来的一些构建工具，大多也都参考了 Webpack 的这种架构方式\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8b43847957944e2da5dac558d04d06d2~tplv-k3u1fbpfcp-watermark.image?\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.34,words:403},t:"查询投影",y:"a"}}],["/se/lang/java/framework/spring/core/aop/",{loader:()=>l(()=>import("./index.html-DcWay6fc.js"),__vite__mapDeps([982,1])),meta:{d:1684318252e3,e:`
<h3>什么是 AOP</h3>
<p>AOP：Aspect oriented programming 面向切面编程，AOP 是 OOP（面向对象编程）的一种延续。</p>
<p>下面我们先看一个 OOP 的例子。</p>
<p>OOP 编程思想可以解决大部分的代码重复问题。但是有一些问题是处理不了的。比如在父类 Animal 中的多个方法的相同位置出现了重复的代码，OOP 就解决不了。</p>
<h3>AOP 解决了什么问题</h3>
<p>通过上面的分析可以发现，AOP 主要用来解决：在不改变原有业务逻辑的情况下，增强横切逻辑代码，根本上解耦合，避免横切逻辑代码重复。</p>
<h3>AOP 为什么叫面向切面编程</h3>`,r:{minutes:3.03,words:909},t:"AOP",y:"a"}}],["/se/lang/java/framework/spring/core/aop/%E5%8E%9F%E7%90%86.html",{loader:()=>l(()=>import("./原理.html-25rFbwZc.js"),__vite__mapDeps([983,1])),meta:{d:1715153702e3,e:`
<p>Spring AOP（面向切面编程）是 Spring 框架提供的一个功能，用于在运行时动态地将通用的横切关注点（如日志记录、性能监控、事务管理等）插入到应用程序的代码中。</p>
<p>它可以将与业务无关的功能（例如日志、安全、事务等）从业务代码中分离出来，从而提高代码的可重用性和可维护性。</p>
<p>Spring AOP通过为目标对象生成一个代理对象，实现对目标对象的方法调用进行拦截和增强。</p>
<p>Spring AOP 的实现原理是基于动态代理和字节码操作的。</p>
<ol>
<li>
<p>在编译时，Spring 会使用 <strong>AspectJ</strong> 编译器将切面代码编译成字节码文件。</p>
</li>
<li>
<p>在运行时，Spring 会根据切面配置使用<strong>JDK动态代理</strong>或<strong>CGLIB代理</strong>生成代理类，这些代理类会在目标对象方法执行前后插入切面代码，从而实现 AOP 的功能。</p>
</li>
</ol>`,r:{minutes:2.95,words:885},t:"原理",y:"a"}}],["/se/lang/java/framework/spring/core/aop/%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF.html",{loader:()=>l(()=>import("./应用场景.html-D6HyRYLW.js"),__vite__mapDeps([984,1])),meta:{d:1684318252e3,e:`
<p>aop 称为是面向切面编程，而他的 aop 原理呢就是：在执行某些代码之前执行另外的代码，是程序变的灵活，扩展性更灵活，可以随意的删除和添加某些功能！</p>
<p>一，性能统计／计数</p>
<p>将与业务无关的代码，使用 AOP 拦截他们。</p>
<p>二，事务处理</p>
<p>调用方法前开启事务， 调用方法后提交关闭事务</p>
<p>三，缓存处理</p>
<p>简单的＂方法缓存＂可以把＂方法名－参数＂作为 Key，拦截器拦截方法根据＂方法名－参数＂去缓存系统查询，如果存在就直接返回，不需要执行方法真正的逻辑～</p>
<p>四，日志打印</p>
<p>五，数据加加密/签名／验签名等场景</p>`,r:{minutes:1.36,words:408},t:"应用场景",y:"a"}}],["/se/lang/java/framework/spring/core/aop/%E7%94%A8%E6%B3%95.html",{loader:()=>l(()=>import("./用法.html-BEQ1Pv6R.js"),__vite__mapDeps([985,1])),meta:{d:1680492546e3,e:`
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(方法表达式)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> cn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">sunpiaoliang</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">))</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">cn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">sunpiaoliang</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">service</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> 这个路径下的包或子包所有方法和所有类型的参数 返回值为任何类型</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Pointcut</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"execution(void com.itheima.dao.BookDao.update())"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.22,words:365},t:"用法",y:"a"}}],["/se/lang/java/framework/spring/core/beans/%E5%90%8E%E5%A4%84%E7%90%86%E5%99%A8.html",{loader:()=>l(()=>import("./后处理器.html-CenzSq0T.js"),__vite__mapDeps([986,1])),meta:{d:1680752829e3,e:`
<p>Spring 的后处理器是 Spring 对外开发的重要扩展点，允许我们介入到 Bean 的整个实例化流程中来，以达到动态注册 BeanDefinition,动态修改 BeanDefinition,以及动态修改 Bean 的作用。Spring 主要有两种后处理器：</p>
<ul>
<li>BeanFactoryPostProcessor：Bean 工厂后处理器，在 BeanDefinitionMap 填充完毕，Bean 实例化之前执行：</li>
<li>BeanPostProcessor：Bean 后处理器，一般在 Bean 实例化之后，填充到单例池 singletonObjects 之前执行。</li>
</ul>`,r:{minutes:.77,words:230},t:"后处理器",y:"a"}}],["/se/lang/java/framework/spring/core/beans/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html",{loader:()=>l(()=>import("./基本概念.html-D92IggNG.js"),__vite__mapDeps([987,1])),meta:{d:1680492546e3,e:`
<h2>生命周期</h2>
<ul>
<li>Bean 容器找到配置文件中 Spring Bean 的定义。（加载 BeanDefination）</li>
<li>Bean 容器利用 Java Reflection API 创建一个 Bean 的实例。</li>
<li>如果涉及到一些属性值 利用 <code>set()</code>方法设置一些属性值。</li>
<li>如果 Bean 实现了 <code>BeanNameAware</code> 接口，调用 <code>setBeanName()</code>方法，传入 Bean 的名字。</li>
<li>如果 Bean 实现了 <code>BeanClassLoaderAware</code> 接口，调用 <code>setBeanClassLoader()</code>方法，传入 <code>ClassLoader</code>对象的实例。</li>
<li>如果 Bean 实现了 <code>BeanFactoryAware</code> 接口，调用 <code>setBeanFactory()</code>方法，传入 <code>BeanFactory</code>对象的实例。</li>
<li>与上面的类似，如果实现了其他 <code>*.Aware</code>接口，就调用相应的方法。</li>
<li>如果有和加载这个 Bean 的 Spring 容器相关的 <code>BeanPostProcessor</code> 对象，执行<code>postProcessBeforeInitialization()</code> 方法</li>
<li>如果 Bean 实现了<code>InitializingBean</code>接口，执行<code>afterPropertiesSet()</code>方法。</li>
<li>如果 Bean 在配置文件中的定义包含 init-method 属性，执行指定的方法。</li>
<li>如果有和加载这个 Bean 的 Spring 容器相关的 <code>BeanPostProcessor</code> 对象，执行<code>postProcessAfterInitialization()</code> 方法</li>
<li>当要销毁 Bean 的时候，如果 Bean 实现了 <code>DisposableBean</code> 接口，执行 <code>destroy()</code> 方法。</li>
<li>当要销毁 Bean 的时候，如果 Bean 在配置文件中的定义包含 destroy-method 属性，执行指定的方法。</li>
</ul>`,r:{minutes:1.65,words:495},t:"Bean",y:"a"}}],["/se/lang/java/framework/spring/core/beans/%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96.html",{loader:()=>l(()=>import("./循环依赖.html-HsSMTDrz.js"),__vite__mapDeps([988,1])),meta:{d:1678024743e3,e:`<h2>循环依赖</h2>
<p>Spring 通过三级缓存解决循环依赖问题，具体过程如下：</p>
<ol>
<li>
<p>创建对象：当 Spring 容器创建一个对象时，会将该对象放入一级缓存中。</p>
</li>
<li>
<p>属性注入：当 Spring 容器对该对象进行属性注入时，如果发现该对象依赖于另一个对象，会先创建另一个对象并放入一级缓存中，然后将该对象放入二级缓存中。</p>
</li>
<li>
<p>循环依赖：如果发现另一个对象也依赖于该对象，会从二级缓存中获取该对象并注入到另一个对象中，然后将另一个对象放入二级缓存中。</p>
</li>
<li>
<p>初始化：当所有对象的属性都注入完成后，会按照依赖关系依次初始化对象，并将对象放入三级缓存中。</p>
</li>
<li>
<p>返回对象：当所有对象都初始化完成后，会从三级缓存中获取需要返回的对象，并将三级缓存清空。</p>
</li>
</ol>`,r:{minutes:4.05,words:1215},t:"",y:"a"}}],["/se/lang/java/framework/spring/core/beans/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",{loader:()=>l(()=>import("./生命周期.html-CqgtLUPh.js"),__vite__mapDeps([989,1])),meta:{d:1680752829e3,e:`
<h2>三个阶段</h2>
<p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-04-05 22.11.05.png" alt="截屏2023-04-05 22.11.05" loading="lazy"></p>
<p>Spring Bean 的生命周期是从 Bean 实例化之后，即通过反射创建出对象之后，到 Bean 成为一个完整对象，最终存储到单例池中，这个过程被称为 Spring Bean 的生命周期。Spring Bean 的生命周期大体上分为三个阶段：</p>
<ul>
<li>Bean 的实例化阶段：Spring 框架会取出 BeanDefinition 的信息进行判断当前 Bean 的范围是否是 singleton 的是否不是延迟加载的，是否不是 FactoryBean 等，最终将一个普通的 singleton 的 Bean 通过反射进行实例化：</li>
<li><strong>Bean 的初始化阶段</strong>：Bean 创建之后还仅仅是个"半成品"，还需要对 Bean 实例的属性进行填充、执行一些 Aware 接口方法、执行 BeanPostProcessor,方法、执行 InitializingBean 接口的初始化方法、执行自定义初始化 init 方法等。该阶段是 Spring 最具技术含量和复杂度的阶段，Aop 增强功能，后面要学习的 Springl 的注解功能等、spring 高频面试题 Bean 的循环引用问题都是在这个阶段体现的：</li>
<li>Bean 的完成阶段：经过初始化阶段，Bean 就成为了一个完整的 Spring Bean,被存储到单例池 singletonObjects 中去了，即完成了 Spring Bean 的整个生命周期。</li>
<li>销毁阶段</li>
</ul>`,r:{minutes:7.04,words:2113},t:"生命周期",y:"a"}}],["/se/lang/java/framework/spring/core/ioc/ioc.html",{loader:()=>l(()=>import("./ioc.html-C6qniR4m.js"),__vite__mapDeps([990,1])),meta:{d:1678024743e3,e:`
<h2>IoC 思想</h2>
<h3>Spring IoC 的了解</h3>
<p><strong>IoC（Inversion of Control:控制反转）</strong> 是一种设计思想，而不是一个具体的技术实现。IoC 的思想就是将原本在程序中手动创建对象的控制权，交由 Spring 框架来管理。不过， IoC 并非 Spring 特有，在其他语言中也有应用。<strong>IoC 容器是 Spring 用来实现 IoC 的载体， IoC 容器实际上就是个 Map（key，value）,Map 中存放的是各种对象。</strong></p>
<p>IoC 最常见以及最合理的实现方式叫做依赖注入（Dependency Injection，简称 DI）。</p>`,r:{minutes:7.02,words:2105},t:"IoC",y:"a"}}],["/se/lang/java/framework/spring/core/tx/%E4%BA%8B%E5%8A%A1.html",{loader:()=>l(()=>import("./事务.html-CVdJjW4a.js"),__vite__mapDeps([991,1])),meta:{d:1684318252e3,e:`
<h2>事务传播</h2>
<p>Spring事务传播机制是指在多个事务方法相互调用时，如何处理事务的传播和隔离。Spring提供了多种事务传播机制，包括REQUIRED、SUPPORTS、MANDATORY、REQUIRES_NEW、NOT_SUPPORTED、NEVER和NESTED等。以下是各种事务传播机制的具体实现：</p>
<ol>
<li>
<p>REQUIRED：如果当前存在事务，则加入该事务；如果当前不存在事务，则创建一个新的事务。</p>
</li>
<li>
<p>SUPPORTS：如果当前存在事务，则加入该事务；如果当前不存在事务，则以非事务方式执行。</p>
</li>
<li>
<p>MANDATORY：如果当前存在事务，则加入该事务；如果当前不存在事务，则抛出异常。</p>
</li>
<li>
<p>REQUIRES_NEW：创建一个新的事务，并挂起当前事务（如果存在）。</p>
</li>
<li>
<p>NOT_SUPPORTED：以非事务方式执行，并挂起当前事务（如果存在）。</p>
</li>
<li>
<p>NEVER：以非事务方式执行，并抛出异常（如果当前存在事务）。</p>
</li>
<li>
<p>NESTED：如果当前存在事务，则在该事务中嵌套一个新的事务；如果当前不存在事务，则创建一个新的事务。</p>
</li>
</ol>`,r:{minutes:1.53,words:458},t:"事务",y:"a"}}],["/404.html",{loader:()=>l(()=>import("./404.html-BKp-glv1.js"),__vite__mapDeps([992,1])),meta:{t:""}}],["/cs/",{loader:()=>l(()=>import("./index.html-C_PWTHu6.js"),__vite__mapDeps([993,1])),meta:{t:"Cs"}}],["/education/",{loader:()=>l(()=>import("./index.html-T01bpzz-.js"),__vite__mapDeps([994,1])),meta:{t:"Education"}}],["/hobby/device/",{loader:()=>l(()=>import("./index.html-CsO4iMlM.js"),__vite__mapDeps([995,1])),meta:{t:"Device"}}],["/hobby/",{loader:()=>l(()=>import("./index.html-d0JBExve.js"),__vite__mapDeps([996,1])),meta:{t:"Hobby"}}],["/hobby/palworld/",{loader:()=>l(()=>import("./index.html-Fqh5Cf1E.js"),__vite__mapDeps([997,1])),meta:{t:"Palworld"}}],["/se/test/",{loader:()=>l(()=>import("./index.html-MHBH4N5k.js"),__vite__mapDeps([998,1])),meta:{t:"Test"}}],["/test/basics/",{loader:()=>l(()=>import("./index.html-CynXjjh1.js"),__vite__mapDeps([999,1])),meta:{t:"Basics"}}],["/zh/posts/",{loader:()=>l(()=>import("./index.html-LTRJyXFG.js"),__vite__mapDeps([1000,1])),meta:{t:"Posts"}}],["/algo/course/",{loader:()=>l(()=>import("./index.html-DkYY_T2H.js"),__vite__mapDeps([1001,1])),meta:{t:"Course"}}],["/cs/basic/",{loader:()=>l(()=>import("./index.html-a0Xd6ang.js"),__vite__mapDeps([1002,1])),meta:{t:"Basic"}}],["/cs/middleware/",{loader:()=>l(()=>import("./index.html-JFXSgD-p.js"),__vite__mapDeps([1003,1])),meta:{t:"Middleware"}}],["/education/ms/basics/",{loader:()=>l(()=>import("./index.html-DIHu3Wue.js"),__vite__mapDeps([1004,1])),meta:{t:"Basics"}}],["/se/devops/",{loader:()=>l(()=>import("./index.html-CGilUIWL.js"),__vite__mapDeps([1005,1])),meta:{t:"Devops"}}],["/se/lang/golang/",{loader:()=>l(()=>import("./index.html-CPzmBzyk.js"),__vite__mapDeps([1006,1])),meta:{t:"Golang"}}],["/se/lang/kotlin/",{loader:()=>l(()=>import("./index.html-DU5J2fqU.js"),__vite__mapDeps([1007,1])),meta:{t:"Kotlin"}}],["/se/tools/others/",{loader:()=>l(()=>import("./index.html-mAg8E1W1.js"),__vite__mapDeps([1008,1])),meta:{t:"Others"}}],["/se/tools/uml/",{loader:()=>l(()=>import("./index.html-Dfi5y1rj.js"),__vite__mapDeps([1009,1])),meta:{t:"Uml"}}],["/zh/posts/apple/",{loader:()=>l(()=>import("./index.html-Dy4WmBV-.js"),__vite__mapDeps([1010,1])),meta:{t:"Apple"}}],["/zh/posts/banana/",{loader:()=>l(()=>import("./index.html-Dek_aqha.js"),__vite__mapDeps([1011,1])),meta:{t:"Banana"}}],["/algo/course/jz/2ptr/",{loader:()=>l(()=>import("./index.html-BDvb_phY.js"),__vite__mapDeps([1012,1])),meta:{t:"2ptr"}}],["/algo/course/jz/bfs/",{loader:()=>l(()=>import("./index.html-CpXQ6u_D.js"),__vite__mapDeps([1013,1])),meta:{t:"Bfs"}}],["/algo/course/jz/bs/",{loader:()=>l(()=>import("./index.html-DD97lgXx.js"),__vite__mapDeps([1014,1])),meta:{t:"Bs"}}],["/algo/course/jz/dfs/",{loader:()=>l(()=>import("./index.html-DAeBQqCS.js"),__vite__mapDeps([1015,1])),meta:{t:"Dfs"}}],["/algo/course/jz/dp/",{loader:()=>l(()=>import("./index.html-DIurdJEv.js"),__vite__mapDeps([1016,1])),meta:{t:"Dp"}}],["/algo/course/jz/ds/",{loader:()=>l(()=>import("./index.html-yNMe-GVI.js"),__vite__mapDeps([1017,1])),meta:{t:"Ds"}}],["/cs/basic/network/application/",{loader:()=>l(()=>import("./index.html-BYGT1hyO.js"),__vite__mapDeps([1018,1])),meta:{t:"Application"}}],["/cs/basic/network/network/",{loader:()=>l(()=>import("./index.html-eKj3HlWl.js"),__vite__mapDeps([1019,1])),meta:{t:"Network"}}],["/cs/basic/network/transport/",{loader:()=>l(()=>import("./index.html-BQ1vKS7Q.js"),__vite__mapDeps([1020,1])),meta:{t:"Transport"}}],["/cs/basic/os/structure/",{loader:()=>l(()=>import("./index.html-sZaz6TuL.js"),__vite__mapDeps([1021,1])),meta:{t:"Structure"}}],["/cs/database/mysql/devops/",{loader:()=>l(()=>import("./index.html-BlY4lCih.js"),__vite__mapDeps([1022,1])),meta:{t:"Devops"}}],["/cs/database/mysql/engine/",{loader:()=>l(()=>import("./index.html-CANRqZSw.js"),__vite__mapDeps([1023,1])),meta:{t:"Engine"}}],["/cs/database/mysql/memory/",{loader:()=>l(()=>import("./index.html-NaUBBkac.js"),__vite__mapDeps([1024,1])),meta:{t:"Memory"}}],["/cs/database/redis/commands/",{loader:()=>l(()=>import("./index.html-CTcoYAeY.js"),__vite__mapDeps([1025,1])),meta:{t:"Commands"}}],["/cs/database/redis/feature/",{loader:()=>l(()=>import("./index.html-CkEiwB6O.js"),__vite__mapDeps([1026,1])),meta:{t:"Feature"}}],["/cs/database/sql/design/",{loader:()=>l(()=>import("./index.html-C9X5HToF.js"),__vite__mapDeps([1027,1])),meta:{t:"Design"}}],["/cs/middleware/rabbitmq/design/",{loader:()=>l(()=>import("./index.html-uk39BgCr.js"),__vite__mapDeps([1028,1])),meta:{t:"Design"}}],["/cs/middleware/rabbitmq/problem/",{loader:()=>l(()=>import("./index.html-7stcXN2Y.js"),__vite__mapDeps([1029,1])),meta:{t:"Problem"}}],["/education/bs/ai-intro/final/",{loader:()=>l(()=>import("./index.html-C0DUJom0.js"),__vite__mapDeps([1030,1])),meta:{t:"Final"}}],["/education/bs/ai-intro/mid/",{loader:()=>l(()=>import("./index.html-qig86Dcd.js"),__vite__mapDeps([1031,1])),meta:{t:"Mid"}}],["/education/bs/block-chain/lab/",{loader:()=>l(()=>import("./index.html-BlOcyKU-.js"),__vite__mapDeps([1032,1])),meta:{t:"Lab"}}],["/education/bs/block-chain/quiz/",{loader:()=>l(()=>import("./index.html-LgZShfvL.js"),__vite__mapDeps([1033,1])),meta:{t:"Quiz"}}],["/education/bs/deep-learning/final/",{loader:()=>l(()=>import("./index.html-DHv1DDWK.js"),__vite__mapDeps([1034,1])),meta:{t:"Final"}}],["/education/bs/xr-tech/hw/",{loader:()=>l(()=>import("./index.html-BSx-jOtg.js"),__vite__mapDeps([1035,1])),meta:{t:"Hw"}}],["/education/ms/5005/hw/",{loader:()=>l(()=>import("./index.html-CEdIsTS_.js"),__vite__mapDeps([1036,1])),meta:{t:"Hw"}}],["/education/ms/5005/maya/",{loader:()=>l(()=>import("./index.html-CaHgtG9J.js"),__vite__mapDeps([1037,1])),meta:{t:"Maya"}}],["/education/ms/5005/ref/",{loader:()=>l(()=>import("./index.html-h8FjrG6t.js"),__vite__mapDeps([1038,1])),meta:{t:"Ref"}}],["/education/ms/5450/hw/",{loader:()=>l(()=>import("./index.html-Dx_fIYc1.js"),__vite__mapDeps([1039,1])),meta:{t:"Hw"}}],["/education/ms/5600/cq/",{loader:()=>l(()=>import("./index.html-BE8DEt2e.js"),__vite__mapDeps([1040,1])),meta:{t:"Cq"}}],["/education/ms/5600/hw/",{loader:()=>l(()=>import("./index.html-BG5q131_.js"),__vite__mapDeps([1041,1])),meta:{t:"Hw"}}],["/education/ms/5600/quiz/",{loader:()=>l(()=>import("./index.html-2f50H4Ob.js"),__vite__mapDeps([1042,1])),meta:{t:"Quiz"}}],["/education/ms/5620/animation/",{loader:()=>l(()=>import("./index.html-D39FbO_l.js"),__vite__mapDeps([1043,1])),meta:{t:"Animation"}}],["/education/ms/5620/cq/",{loader:()=>l(()=>import("./index.html-XzTsWtMH.js"),__vite__mapDeps([1044,1])),meta:{t:"Cq"}}],["/education/ms/5620/exam/",{loader:()=>l(()=>import("./index.html-Czd7T7be.js"),__vite__mapDeps([1045,1])),meta:{t:"Exam"}}],["/education/ms/5620/hw/",{loader:()=>l(()=>import("./index.html-G5C4oUG-.js"),__vite__mapDeps([1046,1])),meta:{t:"Hw"}}],["/education/ms/5620/quiz/",{loader:()=>l(()=>import("./index.html-DtlGqGKb.js"),__vite__mapDeps([1047,1])),meta:{t:"Quiz"}}],["/se/design/pattern/creational/",{loader:()=>l(()=>import("./index.html-CBZDar2o.js"),__vite__mapDeps([1048,1])),meta:{t:"Creational"}}],["/se/design/pattern/structural/",{loader:()=>l(()=>import("./index.html-Dl5WJR4C.js"),__vite__mapDeps([1049,1])),meta:{t:"Structural"}}],["/se/design/system/distributed/",{loader:()=>l(()=>import("./index.html-U1tLqsvK.js"),__vite__mapDeps([1050,1])),meta:{t:"Distributed"}}],["/se/design/system/module/",{loader:()=>l(()=>import("./index.html-BiIR8xlV.js"),__vite__mapDeps([1051,1])),meta:{t:"Module"}}],["/se/design/system/projects/",{loader:()=>l(()=>import("./index.html-DyzQx3FB.js"),__vite__mapDeps([1052,1])),meta:{t:"Projects"}}],["/se/design/system/security/",{loader:()=>l(()=>import("./index.html-Ck3jfX1d.js"),__vite__mapDeps([1053,1])),meta:{t:"Security"}}],["/se/lang/cpp/framework/",{loader:()=>l(()=>import("./index.html-M1l8KL8Y.js"),__vite__mapDeps([1054,1])),meta:{t:"Framework"}}],["/se/lang/frontend/css/",{loader:()=>l(()=>import("./index.html-BjA8yy-9.js"),__vite__mapDeps([1055,1])),meta:{t:"Css"}}],["/se/lang/frontend/html/",{loader:()=>l(()=>import("./index.html-Cc9Xp6MD.js"),__vite__mapDeps([1056,1])),meta:{t:"Html"}}],["/se/lang/frontend/js/",{loader:()=>l(()=>import("./index.html-BwFTARME.js"),__vite__mapDeps([1057,1])),meta:{t:"Js"}}],["/se/lang/java/basic/",{loader:()=>l(()=>import("./index.html-BY_hqbr8.js"),__vite__mapDeps([1058,1])),meta:{t:"Basic"}}],["/test/TOEFL/LISTENING/%E5%9F%BA%E7%A1%80%E8%AF%BE/",{loader:()=>l(()=>import("./index.html-DN1DbDrH.js"),__vite__mapDeps([1059,1])),meta:{t:"基础课"}}],["/test/TOEFL/LISTENING/%E6%9D%B0%E5%93%A5%E8%AF%BE/",{loader:()=>l(()=>import("./index.html-7GN0vf72.js"),__vite__mapDeps([1060,1])),meta:{t:"杰哥课"}}],["/test/TOEFL/LISTENING/%E7%B2%BE%E5%90%AC%E8%90%A5/",{loader:()=>l(()=>import("./index.html-DjIQJUoW.js"),__vite__mapDeps([1061,1])),meta:{t:"精听营"}}],["/test/TOEFL/LISTENING/%E7%BB%83%E4%B9%A0/",{loader:()=>l(()=>import("./index.html-BmVYq75t.js"),__vite__mapDeps([1062,1])),meta:{t:"练习"}}],["/test/TOEFL/LISTENING/%E9%95%BF%E9%9A%BE%E5%8F%A5/",{loader:()=>l(()=>import("./index.html-CpTwXCep.js"),__vite__mapDeps([1063,1])),meta:{t:"长难句"}}],["/test/TOEFL/READING/%E7%BB%83%E4%B9%A0/",{loader:()=>l(()=>import("./index.html-D9nevkOl.js"),__vite__mapDeps([1064,1])),meta:{t:"练习"}}],["/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/",{loader:()=>l(()=>import("./index.html-5S3Wjrem.js"),__vite__mapDeps([1065,1])),meta:{t:"题型分类"}}],["/test/TOEFL/SPEAKING/%E7%BB%83%E4%B9%A0/",{loader:()=>l(()=>import("./index.html-BFSAF5b2.js"),__vite__mapDeps([1066,1])),meta:{t:"练习"}}],["/test/TOEFL/SPEAKING/%E9%A2%84%E6%B5%8B/",{loader:()=>l(()=>import("./index.html--s848iUB.js"),__vite__mapDeps([1067,1])),meta:{t:"预测"}}],["/test/TOEFL/WRITING/%E7%BB%83%E4%B9%A0/",{loader:()=>l(()=>import("./index.html-BXJkvnXv.js"),__vite__mapDeps([1068,1])),meta:{t:"练习"}}],["/algo/summary/optimise/decrease-conquer/delete/",{loader:()=>l(()=>import("./index.html-BjPi5-qD.js"),__vite__mapDeps([1069,1])),meta:{t:"Delete"}}],["/algo/summary/optimise/dynamic-programming/%E5%8C%BA%E9%97%B4/",{loader:()=>l(()=>import("./index.html-L3etfFaw.js"),__vite__mapDeps([1070,1])),meta:{t:"区间"}}],["/algo/summary/optimise/dynamic-programming/%E5%9D%90%E6%A0%87/",{loader:()=>l(()=>import("./index.html-CoVQWgD-.js"),__vite__mapDeps([1071,1])),meta:{t:"坐标"}}],["/algo/summary/optimise/dynamic-programming/%E5%BA%8F%E5%88%97/",{loader:()=>l(()=>import("./index.html-5VWQVnXC.js"),__vite__mapDeps([1072,1])),meta:{t:"序列"}}],["/algo/summary/optimise/dynamic-programming/%E6%95%B0%E4%BD%8D/",{loader:()=>l(()=>import("./index.html-qA-LYNiI.js"),__vite__mapDeps([1073,1])),meta:{t:"数位"}}],["/algo/summary/optimise/dynamic-programming/%E6%A0%91%E5%BD%A2/",{loader:()=>l(()=>import("./index.html-B3QZ1m25.js"),__vite__mapDeps([1074,1])),meta:{t:"树形"}}],["/algo/summary/optimise/dynamic-programming/%E7%8A%B6%E5%8E%8B/",{loader:()=>l(()=>import("./index.html-BcH07hxp.js"),__vite__mapDeps([1075,1])),meta:{t:"状压"}}],["/algo/summary/optimise/dynamic-programming/%E7%BA%A6%E6%9D%9F/",{loader:()=>l(()=>import("./index.html-yYWx9zCX.js"),__vite__mapDeps([1076,1])),meta:{t:"约束"}}],["/algo/summary/optimise/dynamic-programming/%E8%BF%9B%E9%98%B6/",{loader:()=>l(()=>import("./index.html-B_fZae4f.js"),__vite__mapDeps([1077,1])),meta:{t:"进阶"}}],["/algo/summary/structure/linear/",{loader:()=>l(()=>import("./index.html-DQF33Ag7.js"),__vite__mapDeps([1078,1])),meta:{t:"Linear"}}],["/algo/summary/structure/tree/",{loader:()=>l(()=>import("./index.html-CkL-d0qa.js"),__vite__mapDeps([1079,1])),meta:{t:"Tree"}}],["/cs/database/redis/practice/best/",{loader:()=>l(()=>import("./index.html-DpWJwhB1.js"),__vite__mapDeps([1080,1])),meta:{t:"Best"}}],["/cs/database/redis/practice/",{loader:()=>l(()=>import("./index.html-BaeulSBF.js"),__vite__mapDeps([1081,1])),meta:{t:"Practice"}}],["/cs/database/redis/practice/design/",{loader:()=>l(()=>import("./index.html-dEtcJIqp.js"),__vite__mapDeps([1082,1])),meta:{t:"Design"}}],["/cs/database/redis/practice/problem/",{loader:()=>l(()=>import("./index.html-DkdKGJvS.js"),__vite__mapDeps([1083,1])),meta:{t:"Problem"}}],["/cs/database/redis/principal/",{loader:()=>l(()=>import("./index.html-DEe8NWnH.js"),__vite__mapDeps([1084,1])),meta:{t:"Principal"}}],["/cs/database/redis/principal/memory-model/",{loader:()=>l(()=>import("./index.html-D0rAYfLL.js"),__vite__mapDeps([1085,1])),meta:{t:"Memory Model"}}],["/cs/database/redis/principal/thread-%20model/",{loader:()=>l(()=>import("./index.html-Bhfj6Jme.js"),__vite__mapDeps([1086,1])),meta:{t:"Thread Model"}}],["/se/lang/java/JUC/async/",{loader:()=>l(()=>import("./index.html-EL2gLr9B.js"),__vite__mapDeps([1087,1])),meta:{t:"Async"}}],["/se/lang/java/JUC/sync/",{loader:()=>l(()=>import("./index.html-CHymOKUj.js"),__vite__mapDeps([1088,1])),meta:{t:"Sync"}}],["/se/lang/java/basic/class/",{loader:()=>l(()=>import("./index.html-BXCicKci.js"),__vite__mapDeps([1089,1])),meta:{t:"Class"}}],["/se/lang/java/basic/type/",{loader:()=>l(()=>import("./index.html-x-Vv0064.js"),__vite__mapDeps([1090,1])),meta:{t:"Type"}}],["/se/lang/java/framework/api/",{loader:()=>l(()=>import("./index.html-DGv39_rn.js"),__vite__mapDeps([1091,1])),meta:{t:"Api"}}],["/se/lang/java/framework/",{loader:()=>l(()=>import("./index.html-DaCDD8fG.js"),__vite__mapDeps([1092,1])),meta:{t:"Framework"}}],["/se/lang/java/framework/oss/",{loader:()=>l(()=>import("./index.html-BMYe-5tx.js"),__vite__mapDeps([1093,1])),meta:{t:"Oss"}}],["/se/lang/java/jvm/%E5%B9%B6%E5%8F%91/",{loader:()=>l(()=>import("./index.html-CnWc0x1m.js"),__vite__mapDeps([1094,1])),meta:{t:"并发"}}],["/test/GRE/VERBAL/Reading/",{loader:()=>l(()=>import("./index.html-BCrzKzNx.js"),__vite__mapDeps([1095,1])),meta:{t:"Reading"}}],["/algo/summary/structure/linear/ext/queue/",{loader:()=>l(()=>import("./index.html-5oEsgWR6.js"),__vite__mapDeps([1096,1])),meta:{t:"Queue"}}],["/algo/summary/structure/linear/ext/",{loader:()=>l(()=>import("./index.html-CWDDXHbZ.js"),__vite__mapDeps([1097,1])),meta:{t:"Ext"}}],["/se/lang/java/framework/distributed/",{loader:()=>l(()=>import("./index.html-DIY4gbR8.js"),__vite__mapDeps([1098,1])),meta:{t:"Distributed"}}],["/se/lang/java/framework/orm/mybatis/",{loader:()=>l(()=>import("./index.html-CXDyxOlG.js"),__vite__mapDeps([1099,1])),meta:{t:"Mybatis"}}],["/se/lang/java/framework/web/",{loader:()=>l(()=>import("./index.html-CsawqEx8.js"),__vite__mapDeps([1100,1])),meta:{t:"Web"}}],["/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F/",{loader:()=>l(()=>import("./index.html-I-hSTCwT.js"),__vite__mapDeps([1101,1])),meta:{t:"内存区域"}}],["/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/",{loader:()=>l(()=>import("./index.html-Ce9ZIgSe.js"),__vite__mapDeps([1102,1])),meta:{t:"内存管理"}}],["/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/",{loader:()=>l(()=>import("./index.html-DxOi76NW.js"),__vite__mapDeps([1103,1])),meta:{t:"垃圾回收"}}],["/se/lang/java/jvm/%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F/",{loader:()=>l(()=>import("./index.html-BX6SKWn_.js"),__vite__mapDeps([1104,1])),meta:{t:"执行系统"}}],["/se/lang/java/jvm/%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F/%E7%B1%BB%E6%96%87%E4%BB%B6/",{loader:()=>l(()=>import("./index.html-DlhfcoAp.js"),__vite__mapDeps([1105,1])),meta:{t:"类文件"}}],["/algo/summary/structure/linear/array/sort/n/",{loader:()=>l(()=>import("./index.html-2Lc9acHO.js"),__vite__mapDeps([1106,1])),meta:{t:"N"}}],["/algo/summary/structure/linear/array/sort/nlogn/",{loader:()=>l(()=>import("./index.html-DpdVD25A.js"),__vite__mapDeps([1107,1])),meta:{t:"Nlogn"}}],["/se/lang/java/framework/orm/mybatis/plus/",{loader:()=>l(()=>import("./index.html-B5O6u6Kw.js"),__vite__mapDeps([1108,1])),meta:{t:"Plus"}}],["/se/lang/java/framework/spring/core/",{loader:()=>l(()=>import("./index.html-yI_rKyZs.js"),__vite__mapDeps([1109,1])),meta:{t:"Core"}}],["/se/lang/java/framework/spring/core/beans/",{loader:()=>l(()=>import("./index.html-B1uBf8Je.js"),__vite__mapDeps([1110,1])),meta:{t:"Beans"}}],["/se/lang/java/framework/spring/core/ioc/",{loader:()=>l(()=>import("./index.html-DEJIsm_V.js"),__vite__mapDeps([1111,1])),meta:{t:"Ioc"}}],["/se/lang/java/framework/spring/core/tx/",{loader:()=>l(()=>import("./index.html-CzLEerKa.js"),__vite__mapDeps([1112,1])),meta:{t:"Tx"}}],["/category/",{loader:()=>l(()=>import("./index.html-Czb112j3.js"),__vite__mapDeps([1113,1])),meta:{t:"Category",I:!1}}],["/zh/category/",{loader:()=>l(()=>import("./index.html-R7HGqRAe.js"),__vite__mapDeps([1114,1])),meta:{t:"分类",I:!1}}],["/zh/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>l(()=>import("./index.html-VQZFx5-g.js"),__vite__mapDeps([1115,1])),meta:{t:"使用指南 分类",I:!1}}],["/zh/category/%E6%A8%B1%E6%A1%83/",{loader:()=>l(()=>import("./index.html-bl993uQq.js"),__vite__mapDeps([1116,1])),meta:{t:"樱桃 分类",I:!1}}],["/zh/category/%E7%81%AB%E9%BE%99%E6%9E%9C/",{loader:()=>l(()=>import("./index.html-sCPCLzfh.js"),__vite__mapDeps([1117,1])),meta:{t:"火龙果 分类",I:!1}}],["/zh/category/%E6%B0%B4%E6%9E%9C/",{loader:()=>l(()=>import("./index.html-DsXL5wBw.js"),__vite__mapDeps([1118,1])),meta:{t:"水果 分类",I:!1}}],["/zh/category/%E8%8D%89%E8%8E%93/",{loader:()=>l(()=>import("./index.html-CjRlMuQY.js"),__vite__mapDeps([1119,1])),meta:{t:"草莓 分类",I:!1}}],["/zh/category/%E8%94%AC%E8%8F%9C/",{loader:()=>l(()=>import("./index.html-6nGlJG6s.js"),__vite__mapDeps([1120,1])),meta:{t:"蔬菜 分类",I:!1}}],["/zh/category/%E8%8B%B9%E6%9E%9C/",{loader:()=>l(()=>import("./index.html-Q2nnQ28r.js"),__vite__mapDeps([1121,1])),meta:{t:"苹果 分类",I:!1}}],["/zh/category/%E9%A6%99%E8%95%89/",{loader:()=>l(()=>import("./index.html-CjjkWVlG.js"),__vite__mapDeps([1122,1])),meta:{t:"香蕉 分类",I:!1}}],["/tag/",{loader:()=>l(()=>import("./index.html-BbNVHUx-.js"),__vite__mapDeps([1123,1])),meta:{t:"Tag",I:!1}}],["/zh/tag/",{loader:()=>l(()=>import("./index.html-C99Ii4_J.js"),__vite__mapDeps([1124,1])),meta:{t:"标签",I:!1}}],["/zh/tag/%E7%A6%81%E7%94%A8/",{loader:()=>l(()=>import("./index.html-CZunN5BL.js"),__vite__mapDeps([1125,1])),meta:{t:"标签: 禁用",I:!1}}],["/zh/tag/%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/",{loader:()=>l(()=>import("./index.html-CmtarDSG.js"),__vite__mapDeps([1126,1])),meta:{t:"标签: 文章加密",I:!1}}],["/zh/tag/markdown/",{loader:()=>l(()=>import("./index.html-B3_Qih_P.js"),__vite__mapDeps([1127,1])),meta:{t:"标签: Markdown",I:!1}}],["/zh/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/",{loader:()=>l(()=>import("./index.html-DA3GbElA.js"),__vite__mapDeps([1128,1])),meta:{t:"标签: 页面配置",I:!1}}],["/zh/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>l(()=>import("./index.html-Cfcheft2.js"),__vite__mapDeps([1129,1])),meta:{t:"标签: 使用指南",I:!1}}],["/zh/tag/%E7%BA%A2/",{loader:()=>l(()=>import("./index.html-C8Scpfws.js"),__vite__mapDeps([1130,1])),meta:{t:"标签: 红",I:!1}}],["/zh/tag/%E5%B0%8F/",{loader:()=>l(()=>import("./index.html-C8x7efyz.js"),__vite__mapDeps([1131,1])),meta:{t:"标签: 小",I:!1}}],["/zh/tag/%E5%9C%86/",{loader:()=>l(()=>import("./index.html-D4ujoP3f.js"),__vite__mapDeps([1132,1])),meta:{t:"标签: 圆",I:!1}}],["/zh/tag/%E5%A4%A7/",{loader:()=>l(()=>import("./index.html-B6bdk4Sv.js"),__vite__mapDeps([1133,1])),meta:{t:"标签: 大",I:!1}}],["/zh/tag/%E9%BB%84/",{loader:()=>l(()=>import("./index.html-BDd_5i8c.js"),__vite__mapDeps([1134,1])),meta:{t:"标签: 黄",I:!1}}],["/zh/tag/%E5%BC%AF%E6%9B%B2%E7%9A%84/",{loader:()=>l(()=>import("./index.html-CSSK1wxo.js"),__vite__mapDeps([1135,1])),meta:{t:"标签: 弯曲的",I:!1}}],["/zh/tag/%E9%95%BF/",{loader:()=>l(()=>import("./index.html-DvlpxdqF.js"),__vite__mapDeps([1136,1])),meta:{t:"标签: 长",I:!1}}],["/article/",{loader:()=>l(()=>import("./index.html-C5_-EUg7.js"),__vite__mapDeps([1137,1])),meta:{t:"Articles",I:!1}}],["/zh/article/",{loader:()=>l(()=>import("./index.html-Fp0jNquR.js"),__vite__mapDeps([1138,1])),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>l(()=>import("./index.html-C7JK82YE.js"),__vite__mapDeps([1139,1])),meta:{t:"Star",I:!1}}],["/zh/star/",{loader:()=>l(()=>import("./index.html-DWxAB2F6.js"),__vite__mapDeps([1140,1])),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>l(()=>import("./index.html-JHFpH_ev.js"),__vite__mapDeps([1141,1])),meta:{t:"Timeline",I:!1}}],["/zh/timeline/",{loader:()=>l(()=>import("./index.html-KNnEoNhn.js"),__vite__mapDeps([1142,1])),meta:{t:"时间轴",I:!1}}]]);function Uk(){return Oc().__VUE_DEVTOOLS_GLOBAL_HOOK__}function Oc(){return typeof navigator<"u"&&typeof window<"u"?window:typeof globalThis<"u"?globalThis:{}}const $k=typeof Proxy=="function",Kk="devtools-plugin:setup",Wk="plugin:settings:set";let Xi,Sl;function Qk(){var s;return Xi!==void 0||(typeof window<"u"&&window.performance?(Xi=!0,Sl=window.performance):typeof globalThis<"u"&&(!((s=globalThis.perf_hooks)===null||s===void 0)&&s.performance)?(Xi=!0,Sl=globalThis.perf_hooks.performance):Xi=!1),Xi}function Jk(){return Qk()?Sl.now():Date.now()}class Yk{constructor(e,i){this.target=null,this.targetQueue=[],this.onQueue=[],this.plugin=e,this.hook=i;const n={};if(e.settings)for(const r in e.settings){const p=e.settings[r];n[r]=p.defaultValue}const t=`__vue-devtools-plugin-settings__${e.id}`;let a=Object.assign({},n);try{const r=localStorage.getItem(t),p=JSON.parse(r);Object.assign(a,p)}catch{}this.fallbacks={getSettings(){return a},setSettings(r){try{localStorage.setItem(t,JSON.stringify(r))}catch{}a=r},now(){return Jk()}},i&&i.on(Wk,(r,p)=>{r===this.plugin.id&&this.fallbacks.setSettings(p)}),this.proxiedOn=new Proxy({},{get:(r,p)=>this.target?this.target.on[p]:(...o)=>{this.onQueue.push({method:p,args:o})}}),this.proxiedTarget=new Proxy({},{get:(r,p)=>this.target?this.target[p]:p==="on"?this.proxiedOn:Object.keys(this.fallbacks).includes(p)?(...o)=>(this.targetQueue.push({method:p,args:o,resolve:()=>{}}),this.fallbacks[p](...o)):(...o)=>new Promise(d=>{this.targetQueue.push({method:p,args:o,resolve:d})})})}async setRealTarget(e){this.target=e;for(const i of this.onQueue)this.target.on[i.method](...i.args);for(const i of this.targetQueue)i.resolve(await this.target[i.method](...i.args))}}function Xk(s,e){const i=s,n=Oc(),t=Uk(),a=$k&&i.enableEarlyProxy;if(t&&(n.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__||!a))t.emit(Kk,s,e);else{const r=a?new Yk(i,t):null;(n.__VUE_DEVTOOLS_PLUGINS__=n.__VUE_DEVTOOLS_PLUGINS__||[]).push({pluginDescriptor:i,setupFn:e,proxy:r}),r&&e(r.proxiedTarget)}}/*!
  * vue-router v4.4.5
  * (c) 2024 Eduardo San Martin Morote
  * @license MIT
  */const ii=typeof document<"u";function Pc(s){return typeof s=="object"||"displayName"in s||"props"in s||"__vccOpts"in s}function Zk(s){return s.__esModule||s[Symbol.toStringTag]==="Module"||s.default&&Pc(s.default)}const fs=Object.assign;function tl(s,e){const i={};for(const n in e){const t=e[n];i[n]=Ae(t)?t.map(s):s(t)}return i}const st=()=>{},Ae=Array.isArray,Rc=/#/g,s1=/&/g,e1=/\//g,i1=/=/g,n1=/\?/g,Sc=/\+/g,t1=/%5B/g,a1=/%5D/g,Vc=/%5E/g,l1=/%60/g,Nc=/%7B/g,r1=/%7C/g,zc=/%7D/g,p1=/%20/g;function Rr(s){return encodeURI(""+s).replace(r1,"|").replace(t1,"[").replace(a1,"]")}function o1(s){return Rr(s).replace(Nc,"{").replace(zc,"}").replace(Vc,"^")}function Vl(s){return Rr(s).replace(Sc,"%2B").replace(p1,"+").replace(Rc,"%23").replace(s1,"%26").replace(l1,"`").replace(Nc,"{").replace(zc,"}").replace(Vc,"^")}function h1(s){return Vl(s).replace(i1,"%3D")}function d1(s){return Rr(s).replace(Rc,"%23").replace(n1,"%3F")}function c1(s){return s==null?"":d1(s).replace(e1,"%2F")}function vn(s){try{return decodeURIComponent(""+s)}catch{}return""+s}const u1=/\/$/,m1=s=>s.replace(u1,"");function al(s,e,i="/"){let n,t={},a="",r="";const p=e.indexOf("#");let o=e.indexOf("?");return p<o&&p>=0&&(o=-1),o>-1&&(n=e.slice(0,o),a=e.slice(o+1,p>-1?p:e.length),t=s(a)),p>-1&&(n=n||e.slice(0,p),r=e.slice(p,e.length)),n=y1(n??e,i),{fullPath:n+(a&&"?")+a+r,path:n,query:t,hash:vn(r)}}function g1(s,e){const i=e.query?s(e.query):"";return e.path+(i&&"?")+i+(e.hash||"")}function ho(s,e){return!e||!s.toLowerCase().startsWith(e.toLowerCase())?s:s.slice(e.length)||"/"}function k1(s,e,i){const n=e.matched.length-1,t=i.matched.length-1;return n>-1&&n===t&&_i(e.matched[n],i.matched[t])&&jc(e.params,i.params)&&s(e.query)===s(i.query)&&e.hash===i.hash}function _i(s,e){return(s.aliasOf||s)===(e.aliasOf||e)}function jc(s,e){if(Object.keys(s).length!==Object.keys(e).length)return!1;for(const i in s)if(!E1(s[i],e[i]))return!1;return!0}function E1(s,e){return Ae(s)?co(s,e):Ae(e)?co(e,s):s===e}function co(s,e){return Ae(e)?s.length===e.length&&s.every((i,n)=>i===e[n]):s.length===1&&s[0]===e}function y1(s,e){if(s.startsWith("/"))return s;if(!s)return e;const i=e.split("/"),n=s.split("/"),t=n[n.length-1];(t===".."||t===".")&&n.push("");let a=i.length-1,r,p;for(r=0;r<n.length;r++)if(p=n[r],p!==".")if(p==="..")a>1&&a--;else break;return i.slice(0,a).join("/")+"/"+n.slice(r).join("/")}const si={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0};var ht;(function(s){s.pop="pop",s.push="push"})(ht||(ht={}));var et;(function(s){s.back="back",s.forward="forward",s.unknown=""})(et||(et={}));function A1(s){if(!s)if(ii){const e=document.querySelector("base");s=e&&e.getAttribute("href")||"/",s=s.replace(/^\w+:\/\/[^\/]+/,"")}else s="/";return s[0]!=="/"&&s[0]!=="#"&&(s="/"+s),m1(s)}const v1=/^[^#]+#/;function f1(s,e){return s.replace(v1,"#")+e}function _1(s,e){const i=document.documentElement.getBoundingClientRect(),n=s.getBoundingClientRect();return{behavior:e.behavior,left:n.left-i.left-(e.left||0),top:n.top-i.top-(e.top||0)}}const Fa=()=>({left:window.scrollX,top:window.scrollY});function B1(s){let e;if("el"in s){const i=s.el,n=typeof i=="string"&&i.startsWith("#"),t=typeof i=="string"?n?document.getElementById(i.slice(1)):document.querySelector(i):i;if(!t)return;e=_1(t,s)}else e=s;"scrollBehavior"in document.documentElement.style?window.scrollTo(e):window.scrollTo(e.left!=null?e.left:window.scrollX,e.top!=null?e.top:window.scrollY)}function uo(s,e){return(history.state?history.state.position-e:-1)+s}const Nl=new Map;function b1(s,e){Nl.set(s,e)}function w1(s){const e=Nl.get(s);return Nl.delete(s),e}let C1=()=>location.protocol+"//"+location.host;function Mc(s,e){const{pathname:i,search:n,hash:t}=e,a=s.indexOf("#");if(a>-1){let p=t.includes(s.slice(a))?s.slice(a).length:1,o=t.slice(p);return o[0]!=="/"&&(o="/"+o),ho(o,"")}return ho(i,s)+n+t}function D1(s,e,i,n){let t=[],a=[],r=null;const p=({state:m})=>{const g=Mc(s,location),k=i.value,A=e.value;let f=0;if(m){if(i.value=g,e.value=m,r&&r===k){r=null;return}f=A?m.position-A.position:0}else n(g);t.forEach(v=>{v(i.value,k,{delta:f,type:ht.pop,direction:f?f>0?et.forward:et.back:et.unknown})})};function o(){r=i.value}function d(m){t.push(m);const g=()=>{const k=t.indexOf(m);k>-1&&t.splice(k,1)};return a.push(g),g}function c(){const{history:m}=window;m.state&&m.replaceState(fs({},m.state,{scroll:Fa()}),"")}function u(){for(const m of a)m();a=[],window.removeEventListener("popstate",p),window.removeEventListener("beforeunload",c)}return window.addEventListener("popstate",p),window.addEventListener("beforeunload",c,{passive:!0}),{pauseListeners:o,listen:d,destroy:u}}function mo(s,e,i,n=!1,t=!1){return{back:s,current:e,forward:i,replaced:n,position:window.history.length,scroll:t?Fa():null}}function F1(s){const{history:e,location:i}=window,n={value:Mc(s,i)},t={value:e.state};t.value||a(n.value,{back:null,current:n.value,forward:null,position:e.length-1,replaced:!0,scroll:null},!0);function a(o,d,c){const u=s.indexOf("#"),m=u>-1?(i.host&&document.querySelector("base")?s:s.slice(u))+o:C1()+s+o;try{e[c?"replaceState":"pushState"](d,"",m),t.value=d}catch(g){console.error(g),i[c?"replace":"assign"](m)}}function r(o,d){const c=fs({},e.state,mo(t.value.back,o,t.value.forward,!0),d,{position:t.value.position});a(o,c,!0),n.value=o}function p(o,d){const c=fs({},t.value,e.state,{forward:o,scroll:Fa()});a(c.current,c,!0);const u=fs({},mo(n.value,o,null),{position:c.position+1},d);a(o,u,!1),n.value=o}return{location:n,state:t,push:p,replace:r}}function T1(s){s=A1(s);const e=F1(s),i=D1(s,e.state,e.location,e.replace);function n(a,r=!0){r||i.pauseListeners(),history.go(a)}const t=fs({location:"",base:s,go:n,createHref:f1.bind(null,s)},e,i);return Object.defineProperty(t,"location",{enumerable:!0,get:()=>e.location.value}),Object.defineProperty(t,"state",{enumerable:!0,get:()=>e.state.value}),t}function qc(s){return typeof s=="string"||s&&typeof s=="object"}function Gc(s){return typeof s=="string"||typeof s=="symbol"}const Hc=Symbol("");var go;(function(s){s[s.aborted=4]="aborted",s[s.cancelled=8]="cancelled",s[s.duplicated=16]="duplicated"})(go||(go={}));function fn(s,e){return fs(new Error,{type:s,[Hc]:!0},e)}function Ye(s,e){return s instanceof Error&&Hc in s&&(e==null||!!(s.type&e))}const ko="[^/]+?",I1={sensitive:!1,strict:!1,start:!0,end:!0},L1=/[.+*?^${}()[\]/\\]/g;function x1(s,e){const i=fs({},I1,e),n=[];let t=i.start?"^":"";const a=[];for(const d of s){const c=d.length?[]:[90];i.strict&&!d.length&&(t+="/");for(let u=0;u<d.length;u++){const m=d[u];let g=40+(i.sensitive?.25:0);if(m.type===0)u||(t+="/"),t+=m.value.replace(L1,"\\$&"),g+=40;else if(m.type===1){const{value:k,repeatable:A,optional:f,regexp:v}=m;a.push({name:k,repeatable:A,optional:f});const b=v||ko;if(b!==ko){g+=10;try{new RegExp(`(${b})`)}catch(w){throw new Error(`Invalid custom RegExp for param "${k}" (${b}): `+w.message)}}let E=A?`((?:${b})(?:/(?:${b}))*)`:`(${b})`;u||(E=f&&d.length<2?`(?:/${E})`:"/"+E),f&&(E+="?"),t+=E,g+=20,f&&(g+=-8),A&&(g+=-20),b===".*"&&(g+=-50)}c.push(g)}n.push(c)}if(i.strict&&i.end){const d=n.length-1;n[d][n[d].length-1]+=.7000000000000001}i.strict||(t+="/?"),i.end?t+="$":i.strict&&(t+="(?:/|$)");const r=new RegExp(t,i.sensitive?"":"i");function p(d){const c=d.match(r),u={};if(!c)return null;for(let m=1;m<c.length;m++){const g=c[m]||"",k=a[m-1];u[k.name]=g&&k.repeatable?g.split("/"):g}return u}function o(d){let c="",u=!1;for(const m of s){(!u||!c.endsWith("/"))&&(c+="/"),u=!1;for(const g of m)if(g.type===0)c+=g.value;else if(g.type===1){const{value:k,repeatable:A,optional:f}=g,v=k in d?d[k]:"";if(Ae(v)&&!A)throw new Error(`Provided param "${k}" is an array but it is not repeatable (* or + modifiers)`);const b=Ae(v)?v.join("/"):v;if(!b)if(f)m.length<2&&(c.endsWith("/")?c=c.slice(0,-1):u=!0);else throw new Error(`Missing required param "${k}"`);c+=b}}return c||"/"}return{re:r,score:n,keys:a,parse:p,stringify:o}}function O1(s,e){let i=0;for(;i<s.length&&i<e.length;){const n=e[i]-s[i];if(n)return n;i++}return s.length<e.length?s.length===1&&s[0]===80?-1:1:s.length>e.length?e.length===1&&e[0]===80?1:-1:0}function Uc(s,e){let i=0;const n=s.score,t=e.score;for(;i<n.length&&i<t.length;){const a=O1(n[i],t[i]);if(a)return a;i++}if(Math.abs(t.length-n.length)===1){if(Eo(n))return 1;if(Eo(t))return-1}return t.length-n.length}function Eo(s){const e=s[s.length-1];return s.length>0&&e[e.length-1]<0}const P1={type:0,value:""},R1=/[a-zA-Z0-9_]/;function S1(s){if(!s)return[[]];if(s==="/")return[[P1]];if(!s.startsWith("/"))throw new Error(`Invalid path "${s}"`);function e(g){throw new Error(`ERR (${i})/"${d}": ${g}`)}let i=0,n=i;const t=[];let a;function r(){a&&t.push(a),a=[]}let p=0,o,d="",c="";function u(){d&&(i===0?a.push({type:0,value:d}):i===1||i===2||i===3?(a.length>1&&(o==="*"||o==="+")&&e(`A repeatable param (${d}) must be alone in its segment. eg: '/:ids+.`),a.push({type:1,value:d,regexp:c,repeatable:o==="*"||o==="+",optional:o==="*"||o==="?"})):e("Invalid state to consume buffer"),d="")}function m(){d+=o}for(;p<s.length;){if(o=s[p++],o==="\\"&&i!==2){n=i,i=4;continue}switch(i){case 0:o==="/"?(d&&u(),r()):o===":"?(u(),i=1):m();break;case 4:m(),i=n;break;case 1:o==="("?i=2:R1.test(o)?m():(u(),i=0,o!=="*"&&o!=="?"&&o!=="+"&&p--);break;case 2:o===")"?c[c.length-1]=="\\"?c=c.slice(0,-1)+o:i=3:c+=o;break;case 3:u(),i=0,o!=="*"&&o!=="?"&&o!=="+"&&p--,c="";break;default:e("Unknown state");break}}return i===2&&e(`Unfinished custom RegExp for param "${d}"`),u(),r(),t}function V1(s,e,i){const n=x1(S1(s.path),i),t=fs(n,{record:s,parent:e,children:[],alias:[]});return e&&!t.record.aliasOf==!e.record.aliasOf&&e.children.push(t),t}function N1(s,e){const i=[],n=new Map;e=fo({strict:!1,end:!0,sensitive:!1},e);function t(u){return n.get(u)}function a(u,m,g){const k=!g,A=Ao(u);A.aliasOf=g&&g.record;const f=fo(e,u),v=[A];if("alias"in u){const w=typeof u.alias=="string"?[u.alias]:u.alias;for(const P of w)v.push(Ao(fs({},A,{components:g?g.record.components:A.components,path:P,aliasOf:g?g.record:A})))}let b,E;for(const w of v){const{path:P}=w;if(m&&P[0]!=="/"){const M=m.record.path,z=M[M.length-1]==="/"?"":"/";w.path=m.record.path+(P&&z+P)}if(b=V1(w,m,f),g?g.alias.push(b):(E=E||b,E!==b&&E.alias.push(b),k&&u.name&&!vo(b)&&r(u.name)),$c(b)&&o(b),A.children){const M=A.children;for(let z=0;z<M.length;z++)a(M[z],b,g&&g.children[z])}g=g||b}return E?()=>{r(E)}:st}function r(u){if(Gc(u)){const m=n.get(u);m&&(n.delete(u),i.splice(i.indexOf(m),1),m.children.forEach(r),m.alias.forEach(r))}else{const m=i.indexOf(u);m>-1&&(i.splice(m,1),u.record.name&&n.delete(u.record.name),u.children.forEach(r),u.alias.forEach(r))}}function p(){return i}function o(u){const m=M1(u,i);i.splice(m,0,u),u.record.name&&!vo(u)&&n.set(u.record.name,u)}function d(u,m){let g,k={},A,f;if("name"in u&&u.name){if(g=n.get(u.name),!g)throw fn(1,{location:u});f=g.record.name,k=fs(yo(m.params,g.keys.filter(E=>!E.optional).concat(g.parent?g.parent.keys.filter(E=>E.optional):[]).map(E=>E.name)),u.params&&yo(u.params,g.keys.map(E=>E.name))),A=g.stringify(k)}else if(u.path!=null)A=u.path,g=i.find(E=>E.re.test(A)),g&&(k=g.parse(A),f=g.record.name);else{if(g=m.name?n.get(m.name):i.find(E=>E.re.test(m.path)),!g)throw fn(1,{location:u,currentLocation:m});f=g.record.name,k=fs({},m.params,u.params),A=g.stringify(k)}const v=[];let b=g;for(;b;)v.unshift(b.record),b=b.parent;return{name:f,path:A,params:k,matched:v,meta:j1(v)}}s.forEach(u=>a(u));function c(){i.length=0,n.clear()}return{addRoute:a,resolve:d,removeRoute:r,clearRoutes:c,getRoutes:p,getRecordMatcher:t}}function yo(s,e){const i={};for(const n of e)n in s&&(i[n]=s[n]);return i}function Ao(s){const e={path:s.path,redirect:s.redirect,name:s.name,meta:s.meta||{},aliasOf:s.aliasOf,beforeEnter:s.beforeEnter,props:z1(s),children:s.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in s?s.components||null:s.component&&{default:s.component}};return Object.defineProperty(e,"mods",{value:{}}),e}function z1(s){const e={},i=s.props||!1;if("component"in s)e.default=i;else for(const n in s.components)e[n]=typeof i=="object"?i[n]:i;return e}function vo(s){for(;s;){if(s.record.aliasOf)return!0;s=s.parent}return!1}function j1(s){return s.reduce((e,i)=>fs(e,i.meta),{})}function fo(s,e){const i={};for(const n in s)i[n]=n in e?e[n]:s[n];return i}function M1(s,e){let i=0,n=e.length;for(;i!==n;){const a=i+n>>1;Uc(s,e[a])<0?n=a:i=a+1}const t=q1(s);return t&&(n=e.lastIndexOf(t,n-1)),n}function q1(s){let e=s;for(;e=e.parent;)if($c(e)&&Uc(s,e)===0)return e}function $c({record:s}){return!!(s.name||s.components&&Object.keys(s.components).length||s.redirect)}function G1(s){const e={};if(s===""||s==="?")return e;const n=(s[0]==="?"?s.slice(1):s).split("&");for(let t=0;t<n.length;++t){const a=n[t].replace(Sc," "),r=a.indexOf("="),p=vn(r<0?a:a.slice(0,r)),o=r<0?null:vn(a.slice(r+1));if(p in e){let d=e[p];Ae(d)||(d=e[p]=[d]),d.push(o)}else e[p]=o}return e}function _o(s){let e="";for(let i in s){const n=s[i];if(i=h1(i),n==null){n!==void 0&&(e+=(e.length?"&":"")+i);continue}(Ae(n)?n.map(a=>a&&Vl(a)):[n&&Vl(n)]).forEach(a=>{a!==void 0&&(e+=(e.length?"&":"")+i,a!=null&&(e+="="+a))})}return e}function H1(s){const e={};for(const i in s){const n=s[i];n!==void 0&&(e[i]=Ae(n)?n.map(t=>t==null?null:""+t):n==null?n:""+n)}return e}const U1=Symbol(""),Bo=Symbol(""),Ta=Symbol(""),Sr=Symbol(""),zl=Symbol("");function Mn(){let s=[];function e(n){return s.push(n),()=>{const t=s.indexOf(n);t>-1&&s.splice(t,1)}}function i(){s=[]}return{add:e,list:()=>s.slice(),reset:i}}function yi(s,e,i,n,t,a=r=>r()){const r=n&&(n.enterCallbacks[t]=n.enterCallbacks[t]||[]);return()=>new Promise((p,o)=>{const d=m=>{m===!1?o(fn(4,{from:i,to:e})):m instanceof Error?o(m):qc(m)?o(fn(2,{from:e,to:m})):(r&&n.enterCallbacks[t]===r&&typeof m=="function"&&r.push(m),p())},c=a(()=>s.call(n&&n.instances[t],e,i,d));let u=Promise.resolve(c);s.length<3&&(u=u.then(d)),u.catch(m=>o(m))})}function ll(s,e,i,n,t=a=>a()){const a=[];for(const r of s)for(const p in r.components){let o=r.components[p];if(!(e!=="beforeRouteEnter"&&!r.instances[p]))if(Pc(o)){const c=(o.__vccOpts||o)[e];c&&a.push(yi(c,i,n,r,p,t))}else{let d=o();a.push(()=>d.then(c=>{if(!c)throw new Error(`Couldn't resolve component "${p}" at "${r.path}"`);const u=Zk(c)?c.default:c;r.mods[p]=c,r.components[p]=u;const g=(u.__vccOpts||u)[e];return g&&yi(g,i,n,r,p,t)()}))}}return a}function bo(s){const e=bs(Ta),i=bs(Sr),n=B(()=>{const o=Ai(s.to);return e.resolve(o)}),t=B(()=>{const{matched:o}=n.value,{length:d}=o,c=o[d-1],u=i.matched;if(!c||!u.length)return-1;const m=u.findIndex(_i.bind(null,c));if(m>-1)return m;const g=wo(o[d-2]);return d>1&&wo(c)===g&&u[u.length-1].path!==g?u.findIndex(_i.bind(null,o[d-2])):m}),a=B(()=>t.value>-1&&Q1(i.params,n.value.params)),r=B(()=>t.value>-1&&t.value===i.matched.length-1&&jc(i.params,n.value.params));function p(o={}){return W1(o)?e[Ai(s.replace)?"replace":"push"](Ai(s.to)).catch(st):Promise.resolve()}if(ii){const o=bi();if(o){const d={route:n.value,isActive:a.value,isExactActive:r.value,error:null};o.__vrl_devtools=o.__vrl_devtools||[],o.__vrl_devtools.push(d),Lr(()=>{d.route=n.value,d.isActive=a.value,d.isExactActive=r.value,d.error=qc(Ai(s.to))?null:'Invalid "to" value'},{flush:"post"})}}return{route:n,href:B(()=>n.value.href),isActive:a,isExactActive:r,navigate:p}}const $1=S({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:bo,setup(s,{slots:e}){const i=_t(bo(s)),{options:n}=bs(Ta),t=B(()=>({[Co(s.activeClass,n.linkActiveClass,"router-link-active")]:i.isActive,[Co(s.exactActiveClass,n.linkExactActiveClass,"router-link-exact-active")]:i.isExactActive}));return()=>{const a=e.default&&e.default(i);return s.custom?a:h("a",{"aria-current":i.isExactActive?s.ariaCurrentValue:null,href:i.href,onClick:i.navigate,class:t.value},a)}}}),K1=$1;function W1(s){if(!(s.metaKey||s.altKey||s.ctrlKey||s.shiftKey)&&!s.defaultPrevented&&!(s.button!==void 0&&s.button!==0)){if(s.currentTarget&&s.currentTarget.getAttribute){const e=s.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return s.preventDefault&&s.preventDefault(),!0}}function Q1(s,e){for(const i in e){const n=e[i],t=s[i];if(typeof n=="string"){if(n!==t)return!1}else if(!Ae(t)||t.length!==n.length||n.some((a,r)=>a!==t[r]))return!1}return!0}function wo(s){return s?s.aliasOf?s.aliasOf.path:s.path:""}const Co=(s,e,i)=>s??e??i,J1=S({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(s,{attrs:e,slots:i}){const n=bs(zl),t=B(()=>s.route||n.value),a=bs(Bo,0),r=B(()=>{let d=Ai(a);const{matched:c}=t.value;let u;for(;(u=c[d])&&!u.components;)d++;return d}),p=B(()=>t.value.matched[r.value]);Ce(Bo,B(()=>r.value+1)),Ce(U1,p),Ce(zl,t);const o=Y();return ds(()=>[o.value,p.value,s.name],([d,c,u],[m,g,k])=>{c&&(c.instances[u]=d,g&&g!==c&&d&&d===m&&(c.leaveGuards.size||(c.leaveGuards=g.leaveGuards),c.updateGuards.size||(c.updateGuards=g.updateGuards))),d&&c&&(!g||!_i(c,g)||!m)&&(c.enterCallbacks[u]||[]).forEach(A=>A(d))},{flush:"post"}),()=>{const d=t.value,c=s.name,u=p.value,m=u&&u.components[c];if(!m)return Do(i.default,{Component:m,route:d});const g=u.props[c],k=g?g===!0?d.params:typeof g=="function"?g(d):g:null,f=h(m,fs({},k,e,{onVnodeUnmounted:v=>{v.component.isUnmounted&&(u.instances[c]=null)},ref:o}));if(ii&&f.ref){const v={depth:r.value,name:u.name,path:u.path,meta:u.meta};(Ae(f.ref)?f.ref.map(E=>E.i):[f.ref.i]).forEach(E=>{E.__vrv_devtools=v})}return Do(i.default,{Component:f,route:d})||f}}});function Do(s,e){if(!s)return null;const i=s(e);return i.length===1?i[0]:i}const Y1=J1;function qn(s,e){const i=fs({},s,{matched:s.matched.map(n=>p3(n,["instances","children","aliasOf"]))});return{_custom:{type:null,readOnly:!0,display:s.fullPath,tooltip:e,value:i}}}function Gt(s){return{_custom:{display:s}}}let X1=0;function Z1(s,e,i){if(e.__hasDevtools)return;e.__hasDevtools=!0;const n=X1++;Xk({id:"org.vuejs.router"+(n?"."+n:""),label:"Vue Router",packageName:"vue-router",homepage:"https://router.vuejs.org",logo:"https://router.vuejs.org/logo.png",componentStateTypes:["Routing"],app:s},t=>{typeof t.now!="function"&&console.warn("[Vue Router]: You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html."),t.on.inspectComponent((c,u)=>{c.instanceData&&c.instanceData.state.push({type:"Routing",key:"$route",editable:!1,value:qn(e.currentRoute.value,"Current Route")})}),t.on.visitComponentTree(({treeNode:c,componentInstance:u})=>{if(u.__vrv_devtools){const m=u.__vrv_devtools;c.tags.push({label:(m.name?`${m.name.toString()}: `:"")+m.path,textColor:0,tooltip:"This component is rendered by &lt;router-view&gt;",backgroundColor:Kc})}Ae(u.__vrl_devtools)&&(u.__devtoolsApi=t,u.__vrl_devtools.forEach(m=>{let g=m.route.path,k=Jc,A="",f=0;m.error?(g=m.error,k=t3,f=a3):m.isExactActive?(k=Qc,A="This is exactly active"):m.isActive&&(k=Wc,A="This link is active"),c.tags.push({label:g,textColor:f,tooltip:A,backgroundColor:k})}))}),ds(e.currentRoute,()=>{o(),t.notifyComponentUpdate(),t.sendInspectorTree(p),t.sendInspectorState(p)});const a="router:navigations:"+n;t.addTimelineLayer({id:a,label:`Router${n?" "+n:""} Navigations`,color:4237508}),e.onError((c,u)=>{t.addTimelineEvent({layerId:a,event:{title:"Error during Navigation",subtitle:u.fullPath,logType:"error",time:t.now(),data:{error:c},groupId:u.meta.__navigationId}})});let r=0;e.beforeEach((c,u)=>{const m={guard:Gt("beforeEach"),from:qn(u,"Current Location during this navigation"),to:qn(c,"Target location")};Object.defineProperty(c.meta,"__navigationId",{value:r++}),t.addTimelineEvent({layerId:a,event:{time:t.now(),title:"Start of navigation",subtitle:c.fullPath,data:m,groupId:c.meta.__navigationId}})}),e.afterEach((c,u,m)=>{const g={guard:Gt("afterEach")};m?(g.failure={_custom:{type:Error,readOnly:!0,display:m?m.message:"",tooltip:"Navigation Failure",value:m}},g.status=Gt("❌")):g.status=Gt("✅"),g.from=qn(u,"Current Location during this navigation"),g.to=qn(c,"Target location"),t.addTimelineEvent({layerId:a,event:{title:"End of navigation",subtitle:c.fullPath,time:t.now(),data:g,logType:m?"warning":"default",groupId:c.meta.__navigationId}})});const p="router-inspector:"+n;t.addInspector({id:p,label:"Routes"+(n?" "+n:""),icon:"book",treeFilterPlaceholder:"Search routes"});function o(){if(!d)return;const c=d;let u=i.getRoutes().filter(m=>!m.parent||!m.parent.record.components);u.forEach(Zc),c.filter&&(u=u.filter(m=>jl(m,c.filter.toLowerCase()))),u.forEach(m=>Xc(m,e.currentRoute.value)),c.rootNodes=u.map(Yc)}let d;t.on.getInspectorTree(c=>{d=c,c.app===s&&c.inspectorId===p&&o()}),t.on.getInspectorState(c=>{if(c.app===s&&c.inspectorId===p){const m=i.getRoutes().find(g=>g.record.__vd_id===c.nodeId);m&&(c.state={options:e3(m)})}}),t.sendInspectorTree(p),t.sendInspectorState(p)})}function s3(s){return s.optional?s.repeatable?"*":"?":s.repeatable?"+":""}function e3(s){const{record:e}=s,i=[{editable:!1,key:"path",value:e.path}];return e.name!=null&&i.push({editable:!1,key:"name",value:e.name}),i.push({editable:!1,key:"regexp",value:s.re}),s.keys.length&&i.push({editable:!1,key:"keys",value:{_custom:{type:null,readOnly:!0,display:s.keys.map(n=>`${n.name}${s3(n)}`).join(" "),tooltip:"Param keys",value:s.keys}}}),e.redirect!=null&&i.push({editable:!1,key:"redirect",value:e.redirect}),s.alias.length&&i.push({editable:!1,key:"aliases",value:s.alias.map(n=>n.record.path)}),Object.keys(s.record.meta).length&&i.push({editable:!1,key:"meta",value:s.record.meta}),i.push({key:"score",editable:!1,value:{_custom:{type:null,readOnly:!0,display:s.score.map(n=>n.join(", ")).join(" | "),tooltip:"Score used to sort routes",value:s.score}}}),i}const Kc=15485081,Wc=2450411,Qc=8702998,i3=2282478,Jc=16486972,n3=6710886,t3=16704226,a3=12131356;function Yc(s){const e=[],{record:i}=s;i.name!=null&&e.push({label:String(i.name),textColor:0,backgroundColor:i3}),i.aliasOf&&e.push({label:"alias",textColor:0,backgroundColor:Jc}),s.__vd_match&&e.push({label:"matches",textColor:0,backgroundColor:Kc}),s.__vd_exactActive&&e.push({label:"exact",textColor:0,backgroundColor:Qc}),s.__vd_active&&e.push({label:"active",textColor:0,backgroundColor:Wc}),i.redirect&&e.push({label:typeof i.redirect=="string"?`redirect: ${i.redirect}`:"redirects",textColor:16777215,backgroundColor:n3});let n=i.__vd_id;return n==null&&(n=String(l3++),i.__vd_id=n),{id:n,label:i.path,tags:e,children:s.children.map(Yc)}}let l3=0;const r3=/^\/(.*)\/([a-z]*)$/;function Xc(s,e){const i=e.matched.length&&_i(e.matched[e.matched.length-1],s.record);s.__vd_exactActive=s.__vd_active=i,i||(s.__vd_active=e.matched.some(n=>_i(n,s.record))),s.children.forEach(n=>Xc(n,e))}function Zc(s){s.__vd_match=!1,s.children.forEach(Zc)}function jl(s,e){const i=String(s.re).match(r3);if(s.__vd_match=!1,!i||i.length<3)return!1;if(new RegExp(i[1].replace(/\$$/,""),i[2]).test(e))return s.children.forEach(r=>jl(r,e)),s.record.path!=="/"||e==="/"?(s.__vd_match=s.re.test(e),!0):!1;const t=s.record.path.toLowerCase(),a=vn(t);return!e.startsWith("/")&&(a.includes(e)||t.includes(e))||a.startsWith(e)||t.startsWith(e)||s.record.name&&String(s.record.name).includes(e)?!0:s.children.some(r=>jl(r,e))}function p3(s,e){const i={};for(const n in s)e.includes(n)||(i[n]=s[n]);return i}function o3(s){const e=N1(s.routes,s),i=s.parseQuery||G1,n=s.stringifyQuery||_o,t=s.history,a=Mn(),r=Mn(),p=Mn(),o=ys(si);let d=si;ii&&s.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const c=tl.bind(null,D=>""+D),u=tl.bind(null,c1),m=tl.bind(null,vn);function g(D,K){let H,X;return Gc(D)?(H=e.getRecordMatcher(D),X=K):X=D,e.addRoute(X,H)}function k(D){const K=e.getRecordMatcher(D);K&&e.removeRoute(K)}function A(){return e.getRoutes().map(D=>D.record)}function f(D){return!!e.getRecordMatcher(D)}function v(D,K){if(K=fs({},K||o.value),typeof D=="string"){const _=al(i,D,K.path),C=e.resolve({path:_.path},K),L=t.createHref(_.fullPath);return fs(_,C,{params:m(C.params),hash:vn(_.hash),redirectedFrom:void 0,href:L})}let H;if(D.path!=null)H=fs({},D,{path:al(i,D.path,K.path).path});else{const _=fs({},D.params);for(const C in _)_[C]==null&&delete _[C];H=fs({},D,{params:u(_)}),K.params=u(K.params)}const X=e.resolve(H,K),ms=D.hash||"";X.params=c(m(X.params));const ws=g1(n,fs({},D,{hash:o1(ms),path:X.path})),y=t.createHref(ws);return fs({fullPath:ws,hash:ms,query:n===_o?H1(D.query):D.query||{}},X,{redirectedFrom:void 0,href:y})}function b(D){return typeof D=="string"?al(i,D,o.value.path):fs({},D)}function E(D,K){if(d!==D)return fn(8,{from:K,to:D})}function w(D){return z(D)}function P(D){return w(fs(b(D),{replace:!0}))}function M(D){const K=D.matched[D.matched.length-1];if(K&&K.redirect){const{redirect:H}=K;let X=typeof H=="function"?H(D):H;return typeof X=="string"&&(X=X.includes("?")||X.includes("#")?X=b(X):{path:X},X.params={}),fs({query:D.query,hash:D.hash,params:X.path!=null?{}:D.params},X)}}function z(D,K){const H=d=v(D),X=o.value,ms=D.state,ws=D.force,y=D.replace===!0,_=M(H);if(_)return z(fs(b(_),{state:typeof _=="object"?fs({},ms,_.state):ms,force:ws,replace:y}),K||H);const C=H;C.redirectedFrom=K;let L;return!ws&&k1(n,X,H)&&(L=fn(16,{to:C,from:X}),js(X,X,!0,!1)),(L?Promise.resolve(L):I(C,X)).catch(F=>Ye(F)?Ye(F,2)?F:zs(F):J(F,C,X)).then(F=>{if(F){if(Ye(F,2))return z(fs({replace:y},b(F.to),{state:typeof F.to=="object"?fs({},ms,F.to.state):ms,force:ws}),K||C)}else F=R(C,X,!0,y,ms);return G(C,X,F),F})}function Z(D,K){const H=E(D,K);return H?Promise.reject(H):Promise.resolve()}function V(D){const K=ve.values().next().value;return K&&typeof K.runWithContext=="function"?K.runWithContext(D):D()}function I(D,K){let H;const[X,ms,ws]=h3(D,K);H=ll(X.reverse(),"beforeRouteLeave",D,K);for(const _ of X)_.leaveGuards.forEach(C=>{H.push(yi(C,D,K))});const y=Z.bind(null,D,K);return H.push(y),Qs(H).then(()=>{H=[];for(const _ of a.list())H.push(yi(_,D,K));return H.push(y),Qs(H)}).then(()=>{H=ll(ms,"beforeRouteUpdate",D,K);for(const _ of ms)_.updateGuards.forEach(C=>{H.push(yi(C,D,K))});return H.push(y),Qs(H)}).then(()=>{H=[];for(const _ of ws)if(_.beforeEnter)if(Ae(_.beforeEnter))for(const C of _.beforeEnter)H.push(yi(C,D,K));else H.push(yi(_.beforeEnter,D,K));return H.push(y),Qs(H)}).then(()=>(D.matched.forEach(_=>_.enterCallbacks={}),H=ll(ws,"beforeRouteEnter",D,K,V),H.push(y),Qs(H))).then(()=>{H=[];for(const _ of r.list())H.push(yi(_,D,K));return H.push(y),Qs(H)}).catch(_=>Ye(_,8)?_:Promise.reject(_))}function G(D,K,H){p.list().forEach(X=>V(()=>X(D,K,H)))}function R(D,K,H,X,ms){const ws=E(D,K);if(ws)return ws;const y=K===si,_=ii?history.state:{};H&&(X||y?t.replace(D.fullPath,fs({scroll:y&&_&&_.scroll},ms)):t.push(D.fullPath,ms)),o.value=D,js(D,K,H,y),zs()}let ss;function rs(){ss||(ss=t.listen((D,K,H)=>{if(!re.listening)return;const X=v(D),ms=M(X);if(ms){z(fs(ms,{replace:!0}),X).catch(st);return}d=X;const ws=o.value;ii&&b1(uo(ws.fullPath,H.delta),Fa()),I(X,ws).catch(y=>Ye(y,12)?y:Ye(y,2)?(z(y.to,X).then(_=>{Ye(_,20)&&!H.delta&&H.type===ht.pop&&t.go(-1,!1)}).catch(st),Promise.reject()):(H.delta&&t.go(-H.delta,!1),J(y,X,ws))).then(y=>{y=y||R(X,ws,!1),y&&(H.delta&&!Ye(y,8)?t.go(-H.delta,!1):H.type===ht.pop&&Ye(y,20)&&t.go(-1,!1)),G(X,ws,y)}).catch(st)}))}let Es=Mn(),$=Mn(),j;function J(D,K,H){zs(D);const X=$.list();return X.length?X.forEach(ms=>ms(D,K,H)):console.error(D),Promise.reject(D)}function ls(){return j&&o.value!==si?Promise.resolve():new Promise((D,K)=>{Es.add([D,K])})}function zs(D){return j||(j=!D,rs(),Es.list().forEach(([K,H])=>D?H(D):K()),Es.reset()),D}function js(D,K,H,X){const{scrollBehavior:ms}=s;if(!ii||!ms)return Promise.resolve();const ws=!H&&w1(uo(D.fullPath,0))||(X||!H)&&history.state&&history.state.scroll||null;return Qe().then(()=>ms(D,K,ws)).then(y=>y&&B1(y)).catch(y=>J(y,D,K))}const vs=D=>t.go(D);let qs;const ve=new Set,re={currentRoute:o,listening:!0,addRoute:g,removeRoute:k,clearRoutes:e.clearRoutes,hasRoute:f,getRoutes:A,resolve:v,options:s,push:w,replace:P,go:vs,back:()=>vs(-1),forward:()=>vs(1),beforeEach:a.add,beforeResolve:r.add,afterEach:p.add,onError:$.add,isReady:ls,install(D){const K=this;D.component("RouterLink",K1),D.component("RouterView",Y1),D.config.globalProperties.$router=K,Object.defineProperty(D.config.globalProperties,"$route",{enumerable:!0,get:()=>Ai(o)}),ii&&!qs&&o.value===si&&(qs=!0,w(t.location).catch(ms=>{}));const H={};for(const ms in si)Object.defineProperty(H,ms,{get:()=>o.value[ms],enumerable:!0});D.provide(Ta,K),D.provide(Sr,wd(H)),D.provide(zl,o);const X=D.unmount;ve.add(D),D.unmount=function(){ve.delete(D),ve.size<1&&(d=si,ss&&ss(),ss=null,o.value=si,qs=!1,j=!1),X()},ii&&Z1(D,K,e)}};function Qs(D){return D.reduce((K,H)=>K.then(()=>V(H)),Promise.resolve())}return re}function h3(s,e){const i=[],n=[],t=[],a=Math.max(e.matched.length,s.matched.length);for(let r=0;r<a;r++){const p=e.matched[r];p&&(s.matched.find(d=>_i(d,p))?n.push(p):i.push(p));const o=s.matched[r];o&&(e.matched.find(d=>_i(d,o))||t.push(o))}return[i,n,t]}function wi(){return bs(Ta)}function Se(s){return bs(Sr)}var Vr=Symbol(""),Ve=()=>{const s=bs(Vr);if(!s)throw new Error("useClientData() is called without provider.");return s},d3=()=>Ve().pageComponent,Os=()=>Ve().pageData,As=()=>Ve().pageFrontmatter,c3=()=>Ve().pageHead,Ia=()=>Ve().pageLang,u3=()=>Ve().pageLayout,Ne=()=>Ve().routeLocale,su=()=>Ve().routePath,eu=()=>Ve().routes,Nr=()=>Ve().siteData,Ln=()=>Ve().siteLocaleData,m3=Symbol(""),Ml=ys(Gk),mn=ys(Hk),iu=(s,e)=>{const i=Pk(s,e);if(mn.value[i])return i;const n=encodeURI(i);if(mn.value[n])return n;const t=Ml.value[i]||Ml.value[n];return t||i},De=(s,e)=>{const{pathname:i,hashAndQueries:n}=Ic(s),t=iu(i,e),a=t+n;return mn.value[t]?{...mn.value[t],path:a,notFound:!1}:{...mn.value["/404.html"],path:a,notFound:!0}},g3=(s,e)=>{const{pathname:i,hashAndQueries:n}=Ic(s);return iu(i,e)+n},k3=s=>{if(!(s.metaKey||s.altKey||s.ctrlKey||s.shiftKey)&&!s.defaultPrevented&&!(s.button!==void 0&&s.button!==0)){if(s.currentTarget){const e=s.currentTarget.getAttribute("target");if(e!=null&&e.match(/\b_blank\b/i))return}return s.preventDefault(),!0}},Gs=S({name:"RouteLink",props:{to:{type:String,required:!0},active:Boolean,activeClass:{type:String,default:"route-link-active"}},slots:Object,setup(s,{slots:e}){const i=wi(),n=Se(),t=B(()=>s.to.startsWith("#")||s.to.startsWith("?")?s.to:`/blog/${g3(s.to,n.path).substring(1)}`);return()=>h("a",{class:["route-link",{[s.activeClass]:s.active}],href:t.value,onClick:(a={})=>{k3(a)&&i.push(s.to).catch()}},e.default())}}),E3=S({name:"AutoLink",props:{config:{type:Object,required:!0}},slots:Object,setup(s,{slots:e}){const i=Tn(s,"config"),n=Se(),t=Nr(),a=B(()=>Ct(i.value.link)),r=B(()=>i.value.target||(a.value?"_blank":void 0)),p=B(()=>r.value==="_blank"),o=B(()=>!a.value&&!p.value),d=B(()=>i.value.rel||(p.value?"noopener noreferrer":null)),c=B(()=>i.value.ariaLabel??i.value.text),u=B(()=>{if(i.value.exact)return!1;const g=Object.keys(t.value.locales);return g.length?g.every(k=>k!==i.value.link):i.value.link!=="/"}),m=B(()=>o.value?i.value.activeMatch?(i.value.activeMatch instanceof RegExp?i.value.activeMatch:new RegExp(i.value.activeMatch,"u")).test(n.path):u.value?n.path.startsWith(i.value.link):n.path===i.value.link:!1);return()=>{const{before:g,after:k,default:A}=e,f=(A==null?void 0:A(i.value))??[g==null?void 0:g(i.value),i.value.text,k==null?void 0:k(i.value)];return o.value?h(Gs,{class:"auto-link",to:i.value.link,active:m.value,"aria-label":c.value},()=>f):h("a",{class:"auto-link external-link",href:i.value.link,"aria-label":c.value,rel:d.value,target:r.value},f)}}}),nu=S({name:"ClientOnly",setup(s,e){const i=Y(!1);return us(()=>{i.value=!0}),()=>{var n,t;return i.value?(t=(n=e.slots).default)==null?void 0:t.call(n):null}}}),tu=S({name:"Content",props:{path:{type:String,required:!1,default:""}},setup(s){const e=d3(),i=B(()=>{if(!s.path)return e.value;const n=De(s.path);return X2(async()=>n.loader().then(({comp:t})=>t))});return()=>h(i.value)}}),y3="Layout",A3="en-US",Li=_t({resolveLayouts:s=>s.reduce((e,i)=>({...e,...i.layouts}),{}),resolvePageHead:(s,e,i)=>{const n=Ps(e.description)?e.description:i.description,t=[...Array.isArray(e.head)?e.head:[],...i.head,["title",{},s],["meta",{name:"description",content:n}]];return jk(t)},resolvePageHeadTitle:(s,e)=>[s.title,e.title].filter(i=>!!i).join(" | "),resolvePageLang:(s,e)=>s.lang||e.lang||A3,resolvePageLayout:(s,e)=>{const i=Ps(s.frontmatter.layout)?s.frontmatter.layout:y3;if(!e[i])throw new Error(`[vuepress] Cannot resolve layout: ${i}`);return e[i]},resolveRouteLocale:(s,e)=>Rk(s,decodeURI(e)),resolveSiteLocaleData:({base:s,locales:e,...i},n)=>{var t;return{...i,...e[n],head:[...((t=e[n])==null?void 0:t.head)??[],...i.head]}}}),ze=(s={})=>s,Cs=s=>Ui(s)?s:`/blog/${xc(s)}`;const v3=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),f3=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),$i=({size:s=48,stroke:e=4,wrapper:i=!0,height:n=2*s})=>{const t=h("svg",{xmlns:"http://www.w3.org/2000/svg",width:s,height:s,preserveAspectRatio:"xMidYMid",viewBox:"25 25 50 50"},[h("animateTransform",{attributeName:"transform",type:"rotate",dur:"2s",keyTimes:"0;1",repeatCount:"indefinite",values:"0;360"}),h("circle",{cx:"50",cy:"50",r:"20",fill:"none",stroke:"currentColor","stroke-width":e,"stroke-linecap":"round"},[h("animate",{attributeName:"stroke-dasharray",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"1,200;90,200;1,200"}),h("animate",{attributeName:"stroke-dashoffset",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"0;-35px;-125px"})])]);return i?h("div",{class:"loading-icon-wrapper",style:`display:flex;align-items:center;justify-content:center;height:${n}px`},t):t};$i.displayName="LoadingIcon";function Ki(s){return hd()?(X0(s),!0):!1}function se(s){return typeof s=="function"?s():Ai(s)}const Dt=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const _3=s=>s!=null,B3=Object.prototype.toString,b3=s=>B3.call(s)==="[object Object]",_n=()=>{},Fo=w3();function w3(){var s,e;return Dt&&((s=window==null?void 0:window.navigator)==null?void 0:s.userAgent)&&(/iP(?:ad|hone|od)/.test(window.navigator.userAgent)||((e=window==null?void 0:window.navigator)==null?void 0:e.maxTouchPoints)>2&&/iPad|Macintosh/.test(window==null?void 0:window.navigator.userAgent))}function zr(s,e){function i(...n){return new Promise((t,a)=>{Promise.resolve(s(()=>e.apply(this,n),{fn:e,thisArg:this,args:n})).then(t).catch(a)})}return i}const au=s=>s();function C3(s,e={}){let i,n,t=_n;const a=p=>{clearTimeout(p),t(),t=_n};return p=>{const o=se(s),d=se(e.maxWait);return i&&a(i),o<=0||d!==void 0&&d<=0?(n&&(a(n),n=null),Promise.resolve(p())):new Promise((c,u)=>{t=e.rejectOnCancel?u:c,d&&!n&&(n=setTimeout(()=>{i&&a(i),n=null,c(p())},d)),i=setTimeout(()=>{n&&a(n),n=null,c(p())},o)})}}function D3(...s){let e=0,i,n=!0,t=_n,a,r,p,o,d;!Ms(s[0])&&typeof s[0]=="object"?{delay:r,trailing:p=!0,leading:o=!0,rejectOnCancel:d=!1}=s[0]:[r,p=!0,o=!0,d=!1]=s;const c=()=>{i&&(clearTimeout(i),i=void 0,t(),t=_n)};return m=>{const g=se(r),k=Date.now()-e,A=()=>a=m();return c(),g<=0?(e=Date.now(),A()):(k>g&&(o||!n)?(e=Date.now(),A()):p&&(a=new Promise((f,v)=>{t=d?v:f,i=setTimeout(()=>{e=Date.now(),n=!0,f(A()),c()},Math.max(0,g-k))})),!o&&!i&&(i=setTimeout(()=>n=!0,g)),n=!1,a)}}function F3(s=au){const e=Y(!0);function i(){e.value=!1}function n(){e.value=!0}const t=(...a)=>{e.value&&s(...a)};return{isActive:Gi(e),pause:i,resume:n,eventFilter:t}}function T3(s){let e;function i(){return e||(e=s()),e}return i.reset=async()=>{const n=e;e=void 0,n&&await n},i}function I3(s){return bi()}function L3(...s){if(s.length!==1)return Tn(...s);const e=s[0];return typeof e=="function"?Gi(Br(()=>({get:e,set:_n}))):Y(e)}function jr(s,e=200,i={}){return zr(C3(e,i),s)}function x3(s,e=200,i=!1,n=!0,t=!1){return zr(D3(e,i,n,t),s)}function O3(s,e,i={}){const{eventFilter:n=au,...t}=i;return ds(s,zr(n,e),t)}function P3(s,e,i={}){const{eventFilter:n,...t}=i,{eventFilter:a,pause:r,resume:p,isActive:o}=F3(n);return{stop:O3(s,e,{...t,eventFilter:a}),pause:r,resume:p,isActive:o}}function Mr(s,e=!0,i){I3()?us(s,i):e?s():Qe(s)}function R3(s,e,i={}){const{immediate:n=!0}=i,t=Y(!1);let a=null;function r(){a&&(clearTimeout(a),a=null)}function p(){t.value=!1,r()}function o(...d){r(),t.value=!0,a=setTimeout(()=>{t.value=!1,a=null,s(...d)},se(e))}return n&&(t.value=!0,Dt&&o()),Ki(p),{isPending:Gi(t),start:o,stop:p}}function dt(s=!1,e={}){const{truthyValue:i=!0,falsyValue:n=!1}=e,t=Ms(s),a=Y(s);function r(p){if(arguments.length)return a.value=p,a.value;{const o=se(i);return a.value=a.value===o?se(n):o,a.value}}return t?r:[a,r]}const Fe=Dt?window:void 0,S3=Dt?window.document:void 0,lu=Dt?window.navigator:void 0;function $e(s){var e;const i=se(s);return(e=i==null?void 0:i.$el)!=null?e:i}function Ns(...s){let e,i,n,t;if(typeof s[0]=="string"||Array.isArray(s[0])?([i,n,t]=s,e=Fe):[e,i,n,t]=s,!e)return _n;Array.isArray(i)||(i=[i]),Array.isArray(n)||(n=[n]);const a=[],r=()=>{a.forEach(c=>c()),a.length=0},p=(c,u,m,g)=>(c.addEventListener(u,m,g),()=>c.removeEventListener(u,m,g)),o=ds(()=>[$e(e),se(t)],([c,u])=>{if(r(),!c)return;const m=b3(u)?{...u}:u;a.push(...i.flatMap(g=>n.map(k=>p(c,g,k,m))))},{immediate:!0,flush:"post"}),d=()=>{o(),r()};return Ki(d),d}function V3(){const s=Y(!1),e=bi();return e&&us(()=>{s.value=!0},e),s}function xn(s){const e=V3();return B(()=>(e.value,!!s()))}function N3(s,e,i={}){const{window:n=Fe,...t}=i;let a;const r=xn(()=>n&&"MutationObserver"in n),p=()=>{a&&(a.disconnect(),a=void 0)},o=B(()=>{const m=se(s),g=(Array.isArray(m)?m:[m]).map($e).filter(_3);return new Set(g)}),d=ds(()=>o.value,m=>{p(),r.value&&m.size&&(a=new MutationObserver(e),m.forEach(g=>a.observe(g,t)))},{immediate:!0,flush:"post"}),c=()=>a==null?void 0:a.takeRecords(),u=()=>{d(),p()};return Ki(u),{isSupported:r,stop:u,takeRecords:c}}function qr(s,e={}){const{window:i=Fe}=e,n=xn(()=>i&&"matchMedia"in i&&typeof i.matchMedia=="function");let t;const a=Y(!1),r=d=>{a.value=d.matches},p=()=>{t&&("removeEventListener"in t?t.removeEventListener("change",r):t.removeListener(r))},o=Lr(()=>{n.value&&(p(),t=i.matchMedia(se(s)),"addEventListener"in t?t.addEventListener("change",r):t.addListener(r),a.value=t.matches)});return Ki(()=>{o(),p(),t=void 0}),a}function To(s,e={}){const{controls:i=!1,navigator:n=lu}=e,t=xn(()=>n&&"permissions"in n),a=ys(),r=typeof s=="string"?{name:s}:s,p=ys(),o=()=>{var c,u;p.value=(u=(c=a.value)==null?void 0:c.state)!=null?u:"prompt"};Ns(a,"change",o);const d=T3(async()=>{if(t.value){if(!a.value)try{a.value=await n.permissions.query(r)}catch{a.value=void 0}finally{o()}if(i)return os(a.value)}});return d(),i?{state:p,isSupported:t,query:d}:p}function z3(s={}){const{navigator:e=lu,read:i=!1,source:n,copiedDuring:t=1500,legacy:a=!1}=s,r=xn(()=>e&&"clipboard"in e),p=To("clipboard-read"),o=To("clipboard-write"),d=B(()=>r.value||a),c=Y(""),u=Y(!1),m=R3(()=>u.value=!1,t);function g(){r.value&&v(p.value)?e.clipboard.readText().then(b=>{c.value=b}):c.value=f()}d.value&&i&&Ns(["copy","cut"],g);async function k(b=se(n)){d.value&&b!=null&&(r.value&&v(o.value)?await e.clipboard.writeText(b):A(b),c.value=b,u.value=!0,m.start())}function A(b){const E=document.createElement("textarea");E.value=b??"",E.style.position="absolute",E.style.opacity="0",document.body.appendChild(E),E.select(),document.execCommand("copy"),E.remove()}function f(){var b,E,w;return(w=(E=(b=document==null?void 0:document.getSelection)==null?void 0:b.call(document))==null?void 0:E.toString())!=null?w:""}function v(b){return b==="granted"||b==="prompt"}return{isSupported:d,text:c,copied:u,copy:k}}const Ht=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},Ut="__vueuse_ssr_handlers__",j3=M3();function M3(){return Ut in Ht||(Ht[Ut]=Ht[Ut]||{}),Ht[Ut]}function q3(s,e){return j3[s]||e}function G3(s){return qr("(prefers-color-scheme: dark)",s)}function H3(s){return s==null?"any":s instanceof Set?"set":s instanceof Map?"map":s instanceof Date?"date":typeof s=="boolean"?"boolean":typeof s=="string"?"string":typeof s=="object"?"object":Number.isNaN(s)?"any":"number"}const U3={boolean:{read:s=>s==="true",write:s=>String(s)},object:{read:s=>JSON.parse(s),write:s=>JSON.stringify(s)},number:{read:s=>Number.parseFloat(s),write:s=>String(s)},any:{read:s=>s,write:s=>String(s)},string:{read:s=>s,write:s=>String(s)},map:{read:s=>new Map(JSON.parse(s)),write:s=>JSON.stringify(Array.from(s.entries()))},set:{read:s=>new Set(JSON.parse(s)),write:s=>JSON.stringify(Array.from(s))},date:{read:s=>new Date(s),write:s=>s.toISOString()}},Io="vueuse-storage";function Wi(s,e,i,n={}){var t;const{flush:a="pre",deep:r=!0,listenToStorageChanges:p=!0,writeDefaults:o=!0,mergeDefaults:d=!1,shallow:c,window:u=Fe,eventFilter:m,onError:g=I=>{console.error(I)},initOnMounted:k}=n,A=(c?ys:Y)(typeof e=="function"?e():e);if(!i)try{i=q3("getDefaultStorage",()=>{var I;return(I=Fe)==null?void 0:I.localStorage})()}catch(I){g(I)}if(!i)return A;const f=se(e),v=H3(f),b=(t=n.serializer)!=null?t:U3[v],{pause:E,resume:w}=P3(A,()=>M(A.value),{flush:a,deep:r,eventFilter:m});u&&p&&Mr(()=>{i instanceof Storage?Ns(u,"storage",Z):Ns(u,Io,V),k&&Z()}),k||Z();function P(I,G){if(u){const R={key:s,oldValue:I,newValue:G,storageArea:i};u.dispatchEvent(i instanceof Storage?new StorageEvent("storage",R):new CustomEvent(Io,{detail:R}))}}function M(I){try{const G=i.getItem(s);if(I==null)P(G,null),i.removeItem(s);else{const R=b.write(I);G!==R&&(i.setItem(s,R),P(G,R))}}catch(G){g(G)}}function z(I){const G=I?I.newValue:i.getItem(s);if(G==null)return o&&f!=null&&i.setItem(s,b.write(f)),f;if(!I&&d){const R=b.read(G);return typeof d=="function"?d(R,f):v==="object"&&!Array.isArray(R)?{...f,...R}:R}else return typeof G!="string"?G:b.read(G)}function Z(I){if(!(I&&I.storageArea!==i)){if(I&&I.key==null){A.value=f;return}if(!(I&&I.key!==s)){E();try{(I==null?void 0:I.newValue)!==b.write(A.value)&&(A.value=z(I))}catch(G){g(G)}finally{I?Qe(w):w()}}}}function V(I){Z(I.detail)}return A}function $3(s,e,i={}){const{window:n=Fe,...t}=i;let a;const r=xn(()=>n&&"ResizeObserver"in n),p=()=>{a&&(a.disconnect(),a=void 0)},o=B(()=>{const u=se(s);return Array.isArray(u)?u.map(m=>$e(m)):[$e(u)]}),d=ds(o,u=>{if(p(),r.value&&n){a=new ResizeObserver(e);for(const m of u)m&&a.observe(m,t)}},{immediate:!0,flush:"post"}),c=()=>{p(),d()};return Ki(c),{isSupported:r,stop:c}}function K3(s,e={width:0,height:0},i={}){const{window:n=Fe,box:t="content-box"}=i,a=B(()=>{var u,m;return(m=(u=$e(s))==null?void 0:u.namespaceURI)==null?void 0:m.includes("svg")}),r=Y(e.width),p=Y(e.height),{stop:o}=$3(s,([u])=>{const m=t==="border-box"?u.borderBoxSize:t==="content-box"?u.contentBoxSize:u.devicePixelContentBoxSize;if(n&&a.value){const g=$e(s);if(g){const k=g.getBoundingClientRect();r.value=k.width,p.value=k.height}}else if(m){const g=Array.isArray(m)?m:[m];r.value=g.reduce((k,{inlineSize:A})=>k+A,0),p.value=g.reduce((k,{blockSize:A})=>k+A,0)}else r.value=u.contentRect.width,p.value=u.contentRect.height},i);Mr(()=>{const u=$e(s);u&&(r.value="offsetWidth"in u?u.offsetWidth:e.width,p.value="offsetHeight"in u?u.offsetHeight:e.height)});const d=ds(()=>$e(s),u=>{r.value=u?e.width:0,p.value=u?e.height:0});function c(){o(),d()}return{width:r,height:p,stop:c}}const Lo=["fullscreenchange","webkitfullscreenchange","webkitendfullscreen","mozfullscreenchange","MSFullscreenChange"];function La(s,e={}){const{document:i=S3,autoExit:n=!1}=e,t=B(()=>{var v;return(v=$e(s))!=null?v:i==null?void 0:i.querySelector("html")}),a=Y(!1),r=B(()=>["requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","webkitEnterFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen"].find(v=>i&&v in i||t.value&&v in t.value)),p=B(()=>["exitFullscreen","webkitExitFullscreen","webkitExitFullScreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen"].find(v=>i&&v in i||t.value&&v in t.value)),o=B(()=>["fullScreen","webkitIsFullScreen","webkitDisplayingFullscreen","mozFullScreen","msFullscreenElement"].find(v=>i&&v in i||t.value&&v in t.value)),d=["fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement"].find(v=>i&&v in i),c=xn(()=>t.value&&i&&r.value!==void 0&&p.value!==void 0&&o.value!==void 0),u=()=>d?(i==null?void 0:i[d])===t.value:!1,m=()=>{if(o.value){if(i&&i[o.value]!=null)return i[o.value];{const v=t.value;if((v==null?void 0:v[o.value])!=null)return!!v[o.value]}}return!1};async function g(){if(!(!c.value||!a.value)){if(p.value)if((i==null?void 0:i[p.value])!=null)await i[p.value]();else{const v=t.value;(v==null?void 0:v[p.value])!=null&&await v[p.value]()}a.value=!1}}async function k(){if(!c.value||a.value)return;m()&&await g();const v=t.value;r.value&&(v==null?void 0:v[r.value])!=null&&(await v[r.value](),a.value=!0)}async function A(){await(a.value?g():k())}const f=()=>{const v=m();(!v||v&&u())&&(a.value=v)};return Ns(i,Lo,f,!1),Ns(()=>$e(t),Lo,f,!1),n&&Ki(g),{isSupported:c,isFullscreen:a,enter:k,exit:g,toggle:A}}function rl(s){return typeof Window<"u"&&s instanceof Window?s.document.documentElement:typeof Document<"u"&&s instanceof Document?s.documentElement:s}function W3(s,e,i={}){const{window:n=Fe}=i;return Wi(s,e,n==null?void 0:n.localStorage,i)}function Q3(s={}){const{window:e=Fe}=s;if(!e)return Y(["en"]);const i=e.navigator,n=Y(i.languages);return Ns(e,"languagechange",()=>{n.value=i.languages}),n}function ru(s){const e=window.getComputedStyle(s);if(e.overflowX==="scroll"||e.overflowY==="scroll"||e.overflowX==="auto"&&s.clientWidth<s.scrollWidth||e.overflowY==="auto"&&s.clientHeight<s.scrollHeight)return!0;{const i=s.parentNode;return!i||i.tagName==="BODY"?!1:ru(i)}}function J3(s){const e=s||window.event,i=e.target;return ru(i)?!1:e.touches.length>1?!0:(e.preventDefault&&e.preventDefault(),!1)}const pl=new WeakMap;function Gr(s,e=!1){const i=Y(e);let n=null,t="";ds(L3(s),p=>{const o=rl(se(p));if(o){const d=o;if(pl.get(d)||pl.set(d,d.style.overflow),d.style.overflow!=="hidden"&&(t=d.style.overflow),d.style.overflow==="hidden")return i.value=!0;if(i.value)return d.style.overflow="hidden"}},{immediate:!0});const a=()=>{const p=rl(se(s));!p||i.value||(Fo&&(n=Ns(p,"touchmove",o=>{J3(o)},{passive:!1})),p.style.overflow="hidden",i.value=!0)},r=()=>{const p=rl(se(s));!p||!i.value||(Fo&&(n==null||n()),p.style.overflow=t,pl.delete(p),i.value=!1)};return Ki(r),B({get(){return i.value},set(p){p?a():r()}})}function Hr(s,e,i={}){const{window:n=Fe}=i;return Wi(s,e,n==null?void 0:n.sessionStorage,i)}function Y3(s={}){const{window:e=Fe,behavior:i="auto"}=s;if(!e)return{x:Y(0),y:Y(0)};const n=Y(e.scrollX),t=Y(e.scrollY),a=B({get(){return n.value},set(p){scrollTo({left:p,behavior:i})}}),r=B({get(){return t.value},set(p){scrollTo({top:p,behavior:i})}});return Ns(e,"scroll",()=>{n.value=e.scrollX,t.value=e.scrollY},{capture:!1,passive:!0}),{x:a,y:r}}function X3(s={}){const{window:e=Fe,initialWidth:i=Number.POSITIVE_INFINITY,initialHeight:n=Number.POSITIVE_INFINITY,listenOrientation:t=!0,includeScrollbar:a=!0,type:r="inner"}=s,p=Y(i),o=Y(n),d=()=>{e&&(r==="outer"?(p.value=e.outerWidth,o.value=e.outerHeight):a?(p.value=e.innerWidth,o.value=e.innerHeight):(p.value=e.document.documentElement.clientWidth,o.value=e.document.documentElement.clientHeight))};if(d(),Mr(d),Ns("resize",d,{passive:!0}),t){const c=qr("(orientation: portrait)");ds(c,()=>d())}return{width:p,height:o}}var ke=Uint8Array,an=Uint16Array,Z3=Int32Array,pu=new ke([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),ou=new ke([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),s6=new ke([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),hu=function(s,e){for(var i=new an(31),n=0;n<31;++n)i[n]=e+=1<<s[n-1];for(var t=new Z3(i[30]),n=1;n<30;++n)for(var a=i[n];a<i[n+1];++a)t[a]=a-i[n]<<5|n;return{b:i,r:t}},du=hu(pu,2),cu=du.b,e6=du.r;cu[28]=258,e6[258]=28;var i6=hu(ou,0),n6=i6.b,ql=new an(32768);for(var Ls=0;Ls<32768;++Ls){var di=(Ls&43690)>>1|(Ls&21845)<<1;di=(di&52428)>>2|(di&13107)<<2,di=(di&61680)>>4|(di&3855)<<4,ql[Ls]=((di&65280)>>8|(di&255)<<8)>>1}var it=function(s,e,i){for(var n=s.length,t=0,a=new an(e);t<n;++t)s[t]&&++a[s[t]-1];var r=new an(e);for(t=1;t<e;++t)r[t]=r[t-1]+a[t-1]<<1;var p;if(i){p=new an(1<<e);var o=15-e;for(t=0;t<n;++t)if(s[t])for(var d=t<<4|s[t],c=e-s[t],u=r[s[t]-1]++<<c,m=u|(1<<c)-1;u<=m;++u)p[ql[u]>>o]=d}else for(p=new an(n),t=0;t<n;++t)s[t]&&(p[t]=ql[r[s[t]-1]++]>>15-s[t]);return p},Ft=new ke(288);for(var Ls=0;Ls<144;++Ls)Ft[Ls]=8;for(var Ls=144;Ls<256;++Ls)Ft[Ls]=9;for(var Ls=256;Ls<280;++Ls)Ft[Ls]=7;for(var Ls=280;Ls<288;++Ls)Ft[Ls]=8;var uu=new ke(32);for(var Ls=0;Ls<32;++Ls)uu[Ls]=5;var t6=it(Ft,9,1),a6=it(uu,5,1),ol=function(s){for(var e=s[0],i=1;i<s.length;++i)s[i]>e&&(e=s[i]);return e},Le=function(s,e,i){var n=e/8|0;return(s[n]|s[n+1]<<8)>>(e&7)&i},hl=function(s,e){var i=e/8|0;return(s[i]|s[i+1]<<8|s[i+2]<<16)>>(e&7)},l6=function(s){return(s+7)/8|0},mu=function(s,e,i){return(e==null||e<0)&&(e=0),(i==null||i>s.length)&&(i=s.length),new ke(s.subarray(e,i))},r6=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],Be=function(s,e,i){var n=new Error(e||r6[s]);if(n.code=s,Error.captureStackTrace&&Error.captureStackTrace(n,Be),!i)throw n;return n},p6=function(s,e,i,n){var t=s.length,a=0;if(!t||e.f&&!e.l)return i||new ke(0);var r=!i,p=r||e.i!=2,o=e.i;r&&(i=new ke(t*3));var d=function(ms){var ws=i.length;if(ms>ws){var y=new ke(Math.max(ws*2,ms));y.set(i),i=y}},c=e.f||0,u=e.p||0,m=e.b||0,g=e.l,k=e.d,A=e.m,f=e.n,v=t*8;do{if(!g){c=Le(s,u,1);var b=Le(s,u+1,3);if(u+=3,b)if(b==1)g=t6,k=a6,A=9,f=5;else if(b==2){var M=Le(s,u,31)+257,z=Le(s,u+10,15)+4,Z=M+Le(s,u+5,31)+1;u+=14;for(var V=new ke(Z),I=new ke(19),G=0;G<z;++G)I[s6[G]]=Le(s,u+G*3,7);u+=z*3;for(var R=ol(I),ss=(1<<R)-1,rs=it(I,R,1),G=0;G<Z;){var Es=rs[Le(s,u,ss)];u+=Es&15;var E=Es>>4;if(E<16)V[G++]=E;else{var $=0,j=0;for(E==16?(j=3+Le(s,u,3),u+=2,$=V[G-1]):E==17?(j=3+Le(s,u,7),u+=3):E==18&&(j=11+Le(s,u,127),u+=7);j--;)V[G++]=$}}var J=V.subarray(0,M),ls=V.subarray(M);A=ol(J),f=ol(ls),g=it(J,A,1),k=it(ls,f,1)}else Be(1);else{var E=l6(u)+4,w=s[E-4]|s[E-3]<<8,P=E+w;if(P>t){o&&Be(0);break}p&&d(m+w),i.set(s.subarray(E,P),m),e.b=m+=w,e.p=u=P*8,e.f=c;continue}if(u>v){o&&Be(0);break}}p&&d(m+131072);for(var zs=(1<<A)-1,js=(1<<f)-1,vs=u;;vs=u){var $=g[hl(s,u)&zs],qs=$>>4;if(u+=$&15,u>v){o&&Be(0);break}if($||Be(2),qs<256)i[m++]=qs;else if(qs==256){vs=u,g=null;break}else{var ve=qs-254;if(qs>264){var G=qs-257,re=pu[G];ve=Le(s,u,(1<<re)-1)+cu[G],u+=re}var Qs=k[hl(s,u)&js],D=Qs>>4;Qs||Be(3),u+=Qs&15;var ls=n6[D];if(D>3){var re=ou[D];ls+=hl(s,u)&(1<<re)-1,u+=re}if(u>v){o&&Be(0);break}p&&d(m+131072);var K=m+ve;if(m<ls){var H=a-ls,X=Math.min(ls,K);for(H+m<0&&Be(3);m<X;++m)i[m]=n[H+m]}for(;m<K;++m)i[m]=i[m-ls]}}e.l=g,e.p=vs,e.b=m,e.f=c,g&&(c=1,e.m=A,e.d=k,e.n=f)}while(!c);return m!=i.length&&r?mu(i,0,m):i.subarray(0,m)},o6=new ke(0),h6=function(s,e){return((s[0]&15)!=8||s[0]>>4>7||(s[0]<<8|s[1])%31)&&Be(6,"invalid zlib data"),(s[1]>>5&1)==+!e&&Be(6,"invalid zlib data: "+(s[1]&32?"need":"unexpected")+" dictionary"),(s[1]>>3&4)+2};function d6(s,e){return p6(s.subarray(h6(s,e),-4),{i:2},e,e)}var Gl=typeof TextDecoder<"u"&&new TextDecoder,c6=0;try{Gl.decode(o6,{stream:!0}),c6=1}catch{}var u6=function(s){for(var e="",i=0;;){var n=s[i++],t=(n>127)+(n>223)+(n>239);if(i+t>s.length)return{s:e,r:mu(s,i-1)};t?t==3?(n=((n&15)<<18|(s[i++]&63)<<12|(s[i++]&63)<<6|s[i++]&63)-65536,e+=String.fromCharCode(55296|n>>10,56320|n&1023)):t&1?e+=String.fromCharCode((n&31)<<6|s[i++]&63):e+=String.fromCharCode((n&15)<<12|(s[i++]&63)<<6|s[i++]&63):e+=String.fromCharCode(n)}};function m6(s,e){{for(var i=new ke(s.length),n=0;n<s.length;++n)i[n]=s.charCodeAt(n);return i}for(var t=s.length,n=0;n<t;++n);}function g6(s,e){var i;if(Gl)return Gl.decode(s);var n=u6(s),t=n.s,i=n.r;return i.length&&Be(8),t}const Bn=s=>{const e=atob(s);return g6(d6(m6(e)))},Re=(s,e)=>{var n;const i=(n=(e==null?void 0:e._instance)??bi())==null?void 0:n.appContext.components;return i?s in i||ae(s)in i||ft(ae(s))in i:!1},On=s=>new Promise(e=>{setTimeout(e,s)}),Pn=s=>{const e=Ne();return B(()=>s[e.value]??{})},k6=()=>{const s=eu();return B(()=>Object.keys(s.value))},Ur=s=>typeof s<"u",dl=s=>typeof s=="number",{isArray:ua}=Array,ct=(s,e)=>Ps(s)&&s.startsWith(e),E6=(s,e)=>Ps(s)&&s.endsWith(e),{entries:Ci}=Object,{keys:Te}=Object,Hl=(s,...e)=>{if(e.length===0)return s;const i=e.shift();return i&&Ci(i).forEach(([n,t])=>{n==="__proto__"||n==="constructor"||(ai(s[n])&&ai(t)?Hl(s[n],t):ua(t)?s[n]=[...t]:ai(t)?s[n]={...t}:s[n]=i[n])}),Hl(s,...e)},$r=s=>{if(s){if(typeof s=="number")return new Date(s);const e=Date.parse(s.toString());if(!Number.isNaN(e))return new Date(e)}return null},xa=s=>ct(s,"/"),gu=({type:s="info",text:e="",vertical:i,color:n,bgColor:t},{slots:a})=>{var r;return h("span",{class:["vp-badge",s,{diy:n||t}],style:{verticalAlign:i??!1,backgroundColor:t??!1,color:n??!1}},((r=a.default)==null?void 0:r.call(a))??e)};gu.displayName="Badge";var y6=S({name:"FontIcon",props:{icon:{type:String,default:""},color:{type:String,default:""},size:{type:[String,Number],default:""}},setup(s){const e=B(()=>{const n=["font-icon icon"],t=`${s.icon}`;return n.push(t),n}),i=B(()=>{const n={};return s.color&&(n.color=s.color),s.size&&(n["font-size"]=Number.isNaN(Number(s.size))?s.size:`${s.size}px`),Te(n).length?n:null});return()=>s.icon?h("span",{key:s.icon,class:e.value,style:i.value}):null}});const A6={enhance:({app:s})=>{Re("Badge")||s.component("Badge",gu),Re("FontIcon")||s.component("FontIcon",y6)},setup:()=>{},rootComponents:[]},v6=Object.freeze(Object.defineProperty({__proto__:null,default:A6},Symbol.toStringTag,{value:"Module"})),xo=async(s,e)=>{const{path:i,query:n}=s.currentRoute.value,{scrollBehavior:t}=s.options;s.options.scrollBehavior=void 0,await s.replace({path:i,query:n,hash:e}),s.options.scrollBehavior=t},f6=({headerLinkSelector:s,headerAnchorSelector:e,delay:i,offset:n=5})=>{const t=wi();Ns("scroll",jr(()=>{var k,A;const r=Math.max(window.scrollY,document.documentElement.scrollTop,document.body.scrollTop);if(Math.abs(r-0)<n){xo(t,"");return}const o=window.innerHeight+r,d=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),c=Math.abs(d-o)<n,u=Array.from(document.querySelectorAll(s)),g=Array.from(document.querySelectorAll(e)).filter(f=>u.some(v=>v.hash===f.hash));for(let f=0;f<g.length;f++){const v=g[f],b=g[f+1],E=r>=(((k=v.parentElement)==null?void 0:k.offsetTop)??0)-n,w=!b||r<(((A=b.parentElement)==null?void 0:A.offsetTop)??0)-n;if(!(E&&w))continue;const M=decodeURIComponent(t.currentRoute.value.hash),z=decodeURIComponent(v.hash);if(M===z)return;if(c){for(let Z=f+1;Z<g.length;Z++)if(M===decodeURIComponent(g[Z].hash))return}xo(t,z);return}},i))},_6=".vp-sidebar-link, .vp-toc-link",B6=".header-anchor",b6=200,w6=5,C6=ze({setup(){f6({headerLinkSelector:_6,headerAnchorSelector:B6,delay:b6,offset:w6})}}),D6=Object.freeze(Object.defineProperty({__proto__:null,default:C6},Symbol.toStringTag,{value:"Module"}));let ku=s=>Ps(s.title)?{title:s.title}:null;const Eu=Symbol(""),F6=s=>{ku=s},T6=()=>bs(Eu),I6=s=>{s.provide(Eu,ku)};var L6={"/zh/":{title:"目录",empty:"暂无目录"},"/":{title:"Catalog",empty:"No catalog"}},x6=S({name:"Catalog",props:{base:{type:String,default:""},level:{type:Number,default:3},index:Boolean,hideHeading:Boolean},setup(s){const e=T6(),i=Pn(L6),n=Os(),t=eu(),a=Nr(),r=ys(Ci(t.value).map(([o,{meta:d}])=>{const c=e(d);if(!c)return null;const u=o.split("/").length;return{level:E6(o,"/")?u-2:u-1,base:o.replace(/\/[^/]+\/?$/,"/"),path:o,...c}}).filter(o=>ai(o)&&Ps(o.title))),p=B(()=>{const o=s.base?Mk(Lc(s.base)):n.value.path.replace(/\/[^/]+$/,"/"),d=o.split("/").length-2,c=[];return r.value.filter(({level:u,path:m})=>{if(!ct(m,o)||m===o)return!1;if(o==="/"){const g=Te(a.value.locales).filter(k=>k!=="/");if(m==="/404.html"||g.some(k=>ct(m,k)))return!1}return u-d<=s.level}).sort(({title:u,level:m,order:g},{title:k,level:A,order:f})=>m-A||(dl(g)?dl(f)?g>0?f>0?g-f:-1:f<0?g-f:1:g:dl(f)?f:u.localeCompare(k))).forEach(u=>{var k;const{base:m,level:g}=u;switch(g-d){case 1:{c.push(u);break}case 2:{const A=c.find(f=>f.path===m);A&&(A.children??(A.children=[])).push(u);break}default:{const A=c.find(f=>f.path===m.replace(/\/[^/]+\/$/,"/"));if(A){const f=(k=A.children)==null?void 0:k.find(v=>v.path===m);f&&(f.children??(f.children=[])).push(u)}}}}),c});return()=>{const o=p.value.some(d=>d.children);return h("div",{class:["vp-catalog",{index:s.index}]},[s.hideHeading?null:h("h2",{class:"vp-catalog-main-title"},i.value.title),p.value.length?h(s.index?"ol":"ul",{class:["vp-catalog-list",{deep:o}]},p.value.map(({children:d=[],title:c,path:u,content:m})=>{const g=h(Gs,{class:"vp-catalog-title",to:u},()=>m?h(m):c);return h("li",{class:"vp-catalog-item"},o?[h("h3",{id:c,class:["vp-catalog-child-title",{"has-children":d.length}]},[h("a",{href:`#${c}`,class:"vp-catalog-header-anchor","aria-hidden":!0},"#"),g]),d.length?h(s.index?"ol":"ul",{class:"vp-child-catalogs"},d.map(({children:k=[],content:A,path:f,title:v})=>h("li",{class:"vp-child-catalog"},[h("div",{class:["vp-catalog-sub-title",{"has-children":k.length}]},[h("a",{href:`#${v}`,class:"vp-catalog-header-anchor"},"#"),h(Gs,{class:"vp-catalog-title",to:f},()=>A?h(A):v)]),k.length?h(s.index?"ol":"div",{class:s.index?"vp-sub-catalogs":"vp-sub-catalogs-wrapper"},k.map(({content:b,path:E,title:w})=>s.index?h("li",{class:"vp-sub-catalog"},h(Gs,{to:E},()=>b?h(b):w)):h(Gs,{class:"vp-sub-catalog-link",to:E},()=>b?h(b):w))):null]))):null]:h("div",{class:"vp-catalog-child-title"},g))})):h("p",{class:"vp-empty-catalog"},i.value.empty)])}}}),O6=ze({enhance:({app:s})=>{I6(s),Re("Catalog",s)||s.component("Catalog",x6)}});const P6=Object.freeze(Object.defineProperty({__proto__:null,default:O6},Symbol.toStringTag,{value:"Module"}));var R6={"/zh/":{backToTop:"返回顶部"},"/":{backToTop:"Back to top"}};const S6=S({name:"BackToTop",setup(){const s=As(),e=Pn(R6),i=ys(),{height:n}=K3(i),{height:t}=X3(),{y:a}=Y3(),r=B(()=>s.value.backToTop!==!1&&a.value>100),p=B(()=>a.value/(n.value-t.value)*100);return us(()=>{i.value=document.body}),()=>h(Mi,{name:"back-to-top"},()=>r.value?h("button",{type:"button",class:"vp-back-to-top-button","aria-label":e.value.backToTop,onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},[h("span",{class:"vp-scroll-progress",role:"progressbar","aria-labelledby":"loadinglabel","aria-valuenow":p.value},h("svg",h("circle",{cx:"26",cy:"26",r:"24",fill:"none",stroke:"currentColor","stroke-width":"4","stroke-dasharray":`${Math.PI*p.value*.48} ${Math.PI*(100-p.value)*.48}`}))),h("div",{class:"back-to-top-icon"})]):null)}}),V6=ze({rootComponents:[S6]}),N6=Object.freeze(Object.defineProperty({__proto__:null,default:V6},Symbol.toStringTag,{value:"Module"}));/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */const Oo=(s,e)=>{s.classList.add(e)},Po=(s,e)=>{s.classList.remove(e)},z6=s=>{var e;(e=s==null?void 0:s.parentNode)==null||e.removeChild(s)},cl=(s,e,i)=>s<e?e:s>i?i:s,Ro=s=>(-1+s)*100,j6=(()=>{const s=[],e=()=>{const i=s.shift();i&&i(e)};return i=>{s.push(i),s.length===1&&e()}})(),M6=s=>s.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(e,i)=>i.toUpperCase()),$t=(()=>{const s=["Webkit","O","Moz","ms"],e={},i=a=>{const{style:r}=document.body;if(a in r)return a;const p=a.charAt(0).toUpperCase()+a.slice(1);let o=s.length;for(;o--;){const d=`${s[o]}${p}`;if(d in r)return d}return a},n=a=>{const r=M6(a);return e[r]??(e[r]=i(r))},t=(a,r,p)=>{a.style[n(r)]=p};return(a,r)=>{for(const p in r){const o=r[p];Object.hasOwn(r,p)&&Ur(o)&&t(a,p,o)}}})(),Xe={minimum:.08,easing:"ease",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,barSelector:'[role="bar"]',parent:"body",template:'<div class="bar" role="bar"></div>'},Rs={percent:null,isRendered:()=>!!document.getElementById("nprogress"),set:s=>{const{speed:e,easing:i}=Xe,n=Rs.isStarted(),t=cl(s,Xe.minimum,1);Rs.percent=t===1?null:t;const a=Rs.render(!n),r=a.querySelector(Xe.barSelector);return a.offsetWidth,j6(p=>{$t(r,{transform:`translate3d(${Ro(t)}%,0,0)`,transition:`all ${e}ms ${i}`}),t===1?($t(a,{transition:"none",opacity:"1"}),a.offsetWidth,setTimeout(()=>{$t(a,{transition:`all ${e}ms linear`,opacity:"0"}),setTimeout(()=>{Rs.remove(),p()},e)},e)):setTimeout(()=>{p()},e)}),Rs},isStarted:()=>typeof Rs.percent=="number",start:()=>{Rs.percent||Rs.set(0);const s=()=>{setTimeout(()=>{Rs.percent&&(Rs.trickle(),s())},Xe.trickleSpeed)};return s(),Rs},done:s=>!s&&!Rs.percent?Rs:Rs.increase(.3+.5*Math.random()).set(1),increase:s=>{let{percent:e}=Rs;return e?(e=cl(e+(typeof s=="number"?s:(1-e)*cl(Math.random()*e,.1,.95)),0,.994),Rs.set(e)):Rs.start()},trickle:()=>Rs.increase(Math.random()*Xe.trickleRate),render:s=>{if(Rs.isRendered())return document.getElementById("nprogress");Oo(document.documentElement,"nprogress-busy");const e=document.createElement("div");e.id="nprogress",e.innerHTML=Xe.template;const i=e.querySelector(Xe.barSelector),n=document.querySelector(Xe.parent),t=s?"-100":Ro(Rs.percent??0);return $t(i,{transition:"all 0 linear",transform:`translate3d(${t}%,0,0)`}),n&&(n!==document.body&&Oo(n,"nprogress-custom-parent"),n.appendChild(e)),e},remove:()=>{Po(document.documentElement,"nprogress-busy"),Po(document.querySelector(Xe.parent),"nprogress-custom-parent"),z6(document.getElementById("nprogress"))}},q6=()=>{us(()=>{const s=wi(),e=new Set;e.add(s.currentRoute.value.path),s.beforeEach(i=>{e.has(i.path)||Rs.start()}),s.afterEach(i=>{e.add(i.path),Rs.done()})})},G6=ze({setup(){q6()}}),H6=Object.freeze(Object.defineProperty({__proto__:null,default:G6},Symbol.toStringTag,{value:"Module"}));var U6=Object.create,yu=Object.defineProperty,$6=Object.getOwnPropertyDescriptor,Kr=Object.getOwnPropertyNames,K6=Object.getPrototypeOf,W6=Object.prototype.hasOwnProperty,Q6=(s,e)=>function(){return s&&(e=(0,s[Kr(s)[0]])(s=0)),e},J6=(s,e)=>function(){return e||(0,s[Kr(s)[0]])((e={exports:{}}).exports,e),e.exports},Y6=(s,e,i,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of Kr(e))!W6.call(s,t)&&t!==i&&yu(s,t,{get:()=>e[t],enumerable:!(n=$6(e,t))||n.enumerable});return s},X6=(s,e,i)=>(i=s!=null?U6(K6(s)):{},Y6(yu(i,"default",{value:s,enumerable:!0}),s)),Tt=Q6({"../../node_modules/.pnpm/tsup@8.3.5_@microsoft+api-extractor@7.43.0_@types+node@22.9.0__@swc+core@1.5.29_jiti@2.0.0_po_lnt5yfvawfblpk67opvcdwbq7u/node_modules/tsup/assets/esm_shims.js"(){}}),Z6=J6({"../../node_modules/.pnpm/rfdc@1.4.1/node_modules/rfdc/index.js"(s,e){Tt(),e.exports=n;function i(a){return a instanceof Buffer?Buffer.from(a):new a.constructor(a.buffer.slice(),a.byteOffset,a.length)}function n(a){if(a=a||{},a.circles)return t(a);const r=new Map;if(r.set(Date,u=>new Date(u)),r.set(Map,(u,m)=>new Map(o(Array.from(u),m))),r.set(Set,(u,m)=>new Set(o(Array.from(u),m))),a.constructorHandlers)for(const u of a.constructorHandlers)r.set(u[0],u[1]);let p=null;return a.proto?c:d;function o(u,m){const g=Object.keys(u),k=new Array(g.length);for(let A=0;A<g.length;A++){const f=g[A],v=u[f];typeof v!="object"||v===null?k[f]=v:v.constructor!==Object&&(p=r.get(v.constructor))?k[f]=p(v,m):ArrayBuffer.isView(v)?k[f]=i(v):k[f]=m(v)}return k}function d(u){if(typeof u!="object"||u===null)return u;if(Array.isArray(u))return o(u,d);if(u.constructor!==Object&&(p=r.get(u.constructor)))return p(u,d);const m={};for(const g in u){if(Object.hasOwnProperty.call(u,g)===!1)continue;const k=u[g];typeof k!="object"||k===null?m[g]=k:k.constructor!==Object&&(p=r.get(k.constructor))?m[g]=p(k,d):ArrayBuffer.isView(k)?m[g]=i(k):m[g]=d(k)}return m}function c(u){if(typeof u!="object"||u===null)return u;if(Array.isArray(u))return o(u,c);if(u.constructor!==Object&&(p=r.get(u.constructor)))return p(u,c);const m={};for(const g in u){const k=u[g];typeof k!="object"||k===null?m[g]=k:k.constructor!==Object&&(p=r.get(k.constructor))?m[g]=p(k,c):ArrayBuffer.isView(k)?m[g]=i(k):m[g]=c(k)}return m}}function t(a){const r=[],p=[],o=new Map;if(o.set(Date,g=>new Date(g)),o.set(Map,(g,k)=>new Map(c(Array.from(g),k))),o.set(Set,(g,k)=>new Set(c(Array.from(g),k))),a.constructorHandlers)for(const g of a.constructorHandlers)o.set(g[0],g[1]);let d=null;return a.proto?m:u;function c(g,k){const A=Object.keys(g),f=new Array(A.length);for(let v=0;v<A.length;v++){const b=A[v],E=g[b];if(typeof E!="object"||E===null)f[b]=E;else if(E.constructor!==Object&&(d=o.get(E.constructor)))f[b]=d(E,k);else if(ArrayBuffer.isView(E))f[b]=i(E);else{const w=r.indexOf(E);w!==-1?f[b]=p[w]:f[b]=k(E)}}return f}function u(g){if(typeof g!="object"||g===null)return g;if(Array.isArray(g))return c(g,u);if(g.constructor!==Object&&(d=o.get(g.constructor)))return d(g,u);const k={};r.push(g),p.push(k);for(const A in g){if(Object.hasOwnProperty.call(g,A)===!1)continue;const f=g[A];if(typeof f!="object"||f===null)k[A]=f;else if(f.constructor!==Object&&(d=o.get(f.constructor)))k[A]=d(f,u);else if(ArrayBuffer.isView(f))k[A]=i(f);else{const v=r.indexOf(f);v!==-1?k[A]=p[v]:k[A]=u(f)}}return r.pop(),p.pop(),k}function m(g){if(typeof g!="object"||g===null)return g;if(Array.isArray(g))return c(g,m);if(g.constructor!==Object&&(d=o.get(g.constructor)))return d(g,m);const k={};r.push(g),p.push(k);for(const A in g){const f=g[A];if(typeof f!="object"||f===null)k[A]=f;else if(f.constructor!==Object&&(d=o.get(f.constructor)))k[A]=d(f,m);else if(ArrayBuffer.isView(f))k[A]=i(f);else{const v=r.indexOf(f);v!==-1?k[A]=p[v]:k[A]=m(f)}}return r.pop(),p.pop(),k}}}});Tt();Tt();Tt();var Au=typeof navigator<"u",Q=typeof window<"u"?window:typeof globalThis<"u"?globalThis:typeof global<"u"?global:{};typeof Q.chrome<"u"&&Q.chrome.devtools;Au&&(Q.self,Q.top);var So;typeof navigator<"u"&&((So=navigator.userAgent)==null||So.toLowerCase().includes("electron"));Tt();var s4=X6(Z6()),e4=/(?:^|[-_/])(\w)/g;function i4(s,e){return e?e.toUpperCase():""}function n4(s){return s&&`${s}`.replace(e4,i4)}function t4(s,e){let i=s.replace(/^[a-z]:/i,"").replace(/\\/g,"/");i.endsWith(`index${e}`)&&(i=i.replace(`/index${e}`,e));const n=i.lastIndexOf("/"),t=i.substring(n+1);{const a=t.lastIndexOf(e);return t.substring(0,a)}}var Vo=(0,s4.default)({circles:!0});const a4={trailing:!0};function bn(s,e=25,i={}){if(i={...a4,...i},!Number.isFinite(e))throw new TypeError("Expected `wait` to be a finite number");let n,t,a=[],r,p;const o=(d,c)=>(r=l4(s,d,c),r.finally(()=>{if(r=null,i.trailing&&p&&!t){const u=o(d,p);return p=null,u}}),r);return function(...d){return r?(i.trailing&&(p=d),r):new Promise(c=>{const u=!t&&i.leading;clearTimeout(t),t=setTimeout(()=>{t=null;const m=i.leading?n:o(this,d);for(const g of a)g(m);a=[]},e),u?(n=o(this,d),c(n)):a.push(c)})}}async function l4(s,e,i){return await s.apply(e,i)}function Ul(s,e={},i){for(const n in s){const t=s[n],a=i?`${i}:${n}`:n;typeof t=="object"&&t!==null?Ul(t,e,a):typeof t=="function"&&(e[a]=t)}return e}const r4={run:s=>s()},p4=()=>r4,vu=typeof console.createTask<"u"?console.createTask:p4;function o4(s,e){const i=e.shift(),n=vu(i);return s.reduce((t,a)=>t.then(()=>n.run(()=>a(...e))),Promise.resolve())}function h4(s,e){const i=e.shift(),n=vu(i);return Promise.all(s.map(t=>n.run(()=>t(...e))))}function ul(s,e){for(const i of[...s])i(e)}class d4{constructor(){this._hooks={},this._before=void 0,this._after=void 0,this._deprecatedMessages=void 0,this._deprecatedHooks={},this.hook=this.hook.bind(this),this.callHook=this.callHook.bind(this),this.callHookWith=this.callHookWith.bind(this)}hook(e,i,n={}){if(!e||typeof i!="function")return()=>{};const t=e;let a;for(;this._deprecatedHooks[e];)a=this._deprecatedHooks[e],e=a.to;if(a&&!n.allowDeprecated){let r=a.message;r||(r=`${t} hook has been deprecated`+(a.to?`, please use ${a.to}`:"")),this._deprecatedMessages||(this._deprecatedMessages=new Set),this._deprecatedMessages.has(r)||(console.warn(r),this._deprecatedMessages.add(r))}if(!i.name)try{Object.defineProperty(i,"name",{get:()=>"_"+e.replace(/\W+/g,"_")+"_hook_cb",configurable:!0})}catch{}return this._hooks[e]=this._hooks[e]||[],this._hooks[e].push(i),()=>{i&&(this.removeHook(e,i),i=void 0)}}hookOnce(e,i){let n,t=(...a)=>(typeof n=="function"&&n(),n=void 0,t=void 0,i(...a));return n=this.hook(e,t),n}removeHook(e,i){if(this._hooks[e]){const n=this._hooks[e].indexOf(i);n!==-1&&this._hooks[e].splice(n,1),this._hooks[e].length===0&&delete this._hooks[e]}}deprecateHook(e,i){this._deprecatedHooks[e]=typeof i=="string"?{to:i}:i;const n=this._hooks[e]||[];delete this._hooks[e];for(const t of n)this.hook(e,t)}deprecateHooks(e){Object.assign(this._deprecatedHooks,e);for(const i in e)this.deprecateHook(i,e[i])}addHooks(e){const i=Ul(e),n=Object.keys(i).map(t=>this.hook(t,i[t]));return()=>{for(const t of n.splice(0,n.length))t()}}removeHooks(e){const i=Ul(e);for(const n in i)this.removeHook(n,i[n])}removeAllHooks(){for(const e in this._hooks)delete this._hooks[e]}callHook(e,...i){return i.unshift(e),this.callHookWith(o4,e,...i)}callHookParallel(e,...i){return i.unshift(e),this.callHookWith(h4,e,...i)}callHookWith(e,i,...n){const t=this._before||this._after?{name:i,args:n,context:{}}:void 0;this._before&&ul(this._before,t);const a=e(i in this._hooks?[...this._hooks[i]]:[],n);return a instanceof Promise?a.finally(()=>{this._after&&t&&ul(this._after,t)}):(this._after&&t&&ul(this._after,t),a)}beforeEach(e){return this._before=this._before||[],this._before.push(e),()=>{if(this._before!==void 0){const i=this._before.indexOf(e);i!==-1&&this._before.splice(i,1)}}}afterEach(e){return this._after=this._after||[],this._after.push(e),()=>{if(this._after!==void 0){const i=this._after.indexOf(e);i!==-1&&this._after.splice(i,1)}}}}function fu(){return new d4}var c4=Object.create,_u=Object.defineProperty,u4=Object.getOwnPropertyDescriptor,Wr=Object.getOwnPropertyNames,m4=Object.getPrototypeOf,g4=Object.prototype.hasOwnProperty,k4=(s,e)=>function(){return s&&(e=(0,s[Wr(s)[0]])(s=0)),e},Bu=(s,e)=>function(){return e||(0,s[Wr(s)[0]])((e={exports:{}}).exports,e),e.exports},E4=(s,e,i,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of Wr(e))!g4.call(s,t)&&t!==i&&_u(s,t,{get:()=>e[t],enumerable:!(n=u4(e,t))||n.enumerable});return s},y4=(s,e,i)=>(i=s!=null?c4(m4(s)):{},E4(_u(i,"default",{value:s,enumerable:!0}),s)),T=k4({"../../node_modules/.pnpm/tsup@8.3.5_@microsoft+api-extractor@7.43.0_@types+node@22.9.0__@swc+core@1.5.29_jiti@2.0.0_po_lnt5yfvawfblpk67opvcdwbq7u/node_modules/tsup/assets/esm_shims.js"(){}}),A4=Bu({"../../node_modules/.pnpm/speakingurl@14.0.1/node_modules/speakingurl/lib/speakingurl.js"(s,e){T(),function(i){var n={À:"A",Á:"A",Â:"A",Ã:"A",Ä:"Ae",Å:"A",Æ:"AE",Ç:"C",È:"E",É:"E",Ê:"E",Ë:"E",Ì:"I",Í:"I",Î:"I",Ï:"I",Ð:"D",Ñ:"N",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"Oe",Ő:"O",Ø:"O",Ù:"U",Ú:"U",Û:"U",Ü:"Ue",Ű:"U",Ý:"Y",Þ:"TH",ß:"ss",à:"a",á:"a",â:"a",ã:"a",ä:"ae",å:"a",æ:"ae",ç:"c",è:"e",é:"e",ê:"e",ë:"e",ì:"i",í:"i",î:"i",ï:"i",ð:"d",ñ:"n",ò:"o",ó:"o",ô:"o",õ:"o",ö:"oe",ő:"o",ø:"o",ù:"u",ú:"u",û:"u",ü:"ue",ű:"u",ý:"y",þ:"th",ÿ:"y","ẞ":"SS",ا:"a",أ:"a",إ:"i",آ:"aa",ؤ:"u",ئ:"e",ء:"a",ب:"b",ت:"t",ث:"th",ج:"j",ح:"h",خ:"kh",د:"d",ذ:"th",ر:"r",ز:"z",س:"s",ش:"sh",ص:"s",ض:"dh",ط:"t",ظ:"z",ع:"a",غ:"gh",ف:"f",ق:"q",ك:"k",ل:"l",م:"m",ن:"n",ه:"h",و:"w",ي:"y",ى:"a",ة:"h",ﻻ:"la",ﻷ:"laa",ﻹ:"lai",ﻵ:"laa",گ:"g",چ:"ch",پ:"p",ژ:"zh",ک:"k",ی:"y","َ":"a","ً":"an","ِ":"e","ٍ":"en","ُ":"u","ٌ":"on","ْ":"","٠":"0","١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","۰":"0","۱":"1","۲":"2","۳":"3","۴":"4","۵":"5","۶":"6","۷":"7","۸":"8","۹":"9",က:"k",ခ:"kh",ဂ:"g",ဃ:"ga",င:"ng",စ:"s",ဆ:"sa",ဇ:"z","စျ":"za",ည:"ny",ဋ:"t",ဌ:"ta",ဍ:"d",ဎ:"da",ဏ:"na",တ:"t",ထ:"ta",ဒ:"d",ဓ:"da",န:"n",ပ:"p",ဖ:"pa",ဗ:"b",ဘ:"ba",မ:"m",ယ:"y",ရ:"ya",လ:"l",ဝ:"w",သ:"th",ဟ:"h",ဠ:"la",အ:"a","ြ":"y","ျ":"ya","ွ":"w","ြွ":"yw","ျွ":"ywa","ှ":"h",ဧ:"e","၏":"-e",ဣ:"i",ဤ:"-i",ဉ:"u",ဦ:"-u",ဩ:"aw","သြော":"aw",ဪ:"aw","၀":"0","၁":"1","၂":"2","၃":"3","၄":"4","၅":"5","၆":"6","၇":"7","၈":"8","၉":"9","္":"","့":"","း":"",č:"c",ď:"d",ě:"e",ň:"n",ř:"r",š:"s",ť:"t",ů:"u",ž:"z",Č:"C",Ď:"D",Ě:"E",Ň:"N",Ř:"R",Š:"S",Ť:"T",Ů:"U",Ž:"Z",ހ:"h",ށ:"sh",ނ:"n",ރ:"r",ބ:"b",ޅ:"lh",ކ:"k",އ:"a",ވ:"v",މ:"m",ފ:"f",ދ:"dh",ތ:"th",ލ:"l",ގ:"g",ޏ:"gn",ސ:"s",ޑ:"d",ޒ:"z",ޓ:"t",ޔ:"y",ޕ:"p",ޖ:"j",ޗ:"ch",ޘ:"tt",ޙ:"hh",ޚ:"kh",ޛ:"th",ޜ:"z",ޝ:"sh",ޞ:"s",ޟ:"d",ޠ:"t",ޡ:"z",ޢ:"a",ޣ:"gh",ޤ:"q",ޥ:"w","ަ":"a","ާ":"aa","ި":"i","ީ":"ee","ު":"u","ޫ":"oo","ެ":"e","ޭ":"ey","ޮ":"o","ޯ":"oa","ް":"",ა:"a",ბ:"b",გ:"g",დ:"d",ე:"e",ვ:"v",ზ:"z",თ:"t",ი:"i",კ:"k",ლ:"l",მ:"m",ნ:"n",ო:"o",პ:"p",ჟ:"zh",რ:"r",ს:"s",ტ:"t",უ:"u",ფ:"p",ქ:"k",ღ:"gh",ყ:"q",შ:"sh",ჩ:"ch",ც:"ts",ძ:"dz",წ:"ts",ჭ:"ch",ხ:"kh",ჯ:"j",ჰ:"h",α:"a",β:"v",γ:"g",δ:"d",ε:"e",ζ:"z",η:"i",θ:"th",ι:"i",κ:"k",λ:"l",μ:"m",ν:"n",ξ:"ks",ο:"o",π:"p",ρ:"r",σ:"s",τ:"t",υ:"y",φ:"f",χ:"x",ψ:"ps",ω:"o",ά:"a",έ:"e",ί:"i",ό:"o",ύ:"y",ή:"i",ώ:"o",ς:"s",ϊ:"i",ΰ:"y",ϋ:"y",ΐ:"i",Α:"A",Β:"B",Γ:"G",Δ:"D",Ε:"E",Ζ:"Z",Η:"I",Θ:"TH",Ι:"I",Κ:"K",Λ:"L",Μ:"M",Ν:"N",Ξ:"KS",Ο:"O",Π:"P",Ρ:"R",Σ:"S",Τ:"T",Υ:"Y",Φ:"F",Χ:"X",Ψ:"PS",Ω:"O",Ά:"A",Έ:"E",Ί:"I",Ό:"O",Ύ:"Y",Ή:"I",Ώ:"O",Ϊ:"I",Ϋ:"Y",ā:"a",ē:"e",ģ:"g",ī:"i",ķ:"k",ļ:"l",ņ:"n",ū:"u",Ā:"A",Ē:"E",Ģ:"G",Ī:"I",Ķ:"k",Ļ:"L",Ņ:"N",Ū:"U",Ќ:"Kj",ќ:"kj",Љ:"Lj",љ:"lj",Њ:"Nj",њ:"nj",Тс:"Ts",тс:"ts",ą:"a",ć:"c",ę:"e",ł:"l",ń:"n",ś:"s",ź:"z",ż:"z",Ą:"A",Ć:"C",Ę:"E",Ł:"L",Ń:"N",Ś:"S",Ź:"Z",Ż:"Z",Є:"Ye",І:"I",Ї:"Yi",Ґ:"G",є:"ye",і:"i",ї:"yi",ґ:"g",ă:"a",Ă:"A",ș:"s",Ș:"S",ț:"t",Ț:"T",ţ:"t",Ţ:"T",а:"a",б:"b",в:"v",г:"g",д:"d",е:"e",ё:"yo",ж:"zh",з:"z",и:"i",й:"i",к:"k",л:"l",м:"m",н:"n",о:"o",п:"p",р:"r",с:"s",т:"t",у:"u",ф:"f",х:"kh",ц:"c",ч:"ch",ш:"sh",щ:"sh",ъ:"",ы:"y",ь:"",э:"e",ю:"yu",я:"ya",А:"A",Б:"B",В:"V",Г:"G",Д:"D",Е:"E",Ё:"Yo",Ж:"Zh",З:"Z",И:"I",Й:"I",К:"K",Л:"L",М:"M",Н:"N",О:"O",П:"P",Р:"R",С:"S",Т:"T",У:"U",Ф:"F",Х:"Kh",Ц:"C",Ч:"Ch",Ш:"Sh",Щ:"Sh",Ъ:"",Ы:"Y",Ь:"",Э:"E",Ю:"Yu",Я:"Ya",ђ:"dj",ј:"j",ћ:"c",џ:"dz",Ђ:"Dj",Ј:"j",Ћ:"C",Џ:"Dz",ľ:"l",ĺ:"l",ŕ:"r",Ľ:"L",Ĺ:"L",Ŕ:"R",ş:"s",Ş:"S",ı:"i",İ:"I",ğ:"g",Ğ:"G",ả:"a",Ả:"A",ẳ:"a",Ẳ:"A",ẩ:"a",Ẩ:"A",đ:"d",Đ:"D",ẹ:"e",Ẹ:"E",ẽ:"e",Ẽ:"E",ẻ:"e",Ẻ:"E",ế:"e",Ế:"E",ề:"e",Ề:"E",ệ:"e",Ệ:"E",ễ:"e",Ễ:"E",ể:"e",Ể:"E",ỏ:"o",ọ:"o",Ọ:"o",ố:"o",Ố:"O",ồ:"o",Ồ:"O",ổ:"o",Ổ:"O",ộ:"o",Ộ:"O",ỗ:"o",Ỗ:"O",ơ:"o",Ơ:"O",ớ:"o",Ớ:"O",ờ:"o",Ờ:"O",ợ:"o",Ợ:"O",ỡ:"o",Ỡ:"O",Ở:"o",ở:"o",ị:"i",Ị:"I",ĩ:"i",Ĩ:"I",ỉ:"i",Ỉ:"i",ủ:"u",Ủ:"U",ụ:"u",Ụ:"U",ũ:"u",Ũ:"U",ư:"u",Ư:"U",ứ:"u",Ứ:"U",ừ:"u",Ừ:"U",ự:"u",Ự:"U",ữ:"u",Ữ:"U",ử:"u",Ử:"ư",ỷ:"y",Ỷ:"y",ỳ:"y",Ỳ:"Y",ỵ:"y",Ỵ:"Y",ỹ:"y",Ỹ:"Y",ạ:"a",Ạ:"A",ấ:"a",Ấ:"A",ầ:"a",Ầ:"A",ậ:"a",Ậ:"A",ẫ:"a",Ẫ:"A",ắ:"a",Ắ:"A",ằ:"a",Ằ:"A",ặ:"a",Ặ:"A",ẵ:"a",Ẵ:"A","⓪":"0","①":"1","②":"2","③":"3","④":"4","⑤":"5","⑥":"6","⑦":"7","⑧":"8","⑨":"9","⑩":"10","⑪":"11","⑫":"12","⑬":"13","⑭":"14","⑮":"15","⑯":"16","⑰":"17","⑱":"18","⑲":"18","⑳":"18","⓵":"1","⓶":"2","⓷":"3","⓸":"4","⓹":"5","⓺":"6","⓻":"7","⓼":"8","⓽":"9","⓾":"10","⓿":"0","⓫":"11","⓬":"12","⓭":"13","⓮":"14","⓯":"15","⓰":"16","⓱":"17","⓲":"18","⓳":"19","⓴":"20","Ⓐ":"A","Ⓑ":"B","Ⓒ":"C","Ⓓ":"D","Ⓔ":"E","Ⓕ":"F","Ⓖ":"G","Ⓗ":"H","Ⓘ":"I","Ⓙ":"J","Ⓚ":"K","Ⓛ":"L","Ⓜ":"M","Ⓝ":"N","Ⓞ":"O","Ⓟ":"P","Ⓠ":"Q","Ⓡ":"R","Ⓢ":"S","Ⓣ":"T","Ⓤ":"U","Ⓥ":"V","Ⓦ":"W","Ⓧ":"X","Ⓨ":"Y","Ⓩ":"Z","ⓐ":"a","ⓑ":"b","ⓒ":"c","ⓓ":"d","ⓔ":"e","ⓕ":"f","ⓖ":"g","ⓗ":"h","ⓘ":"i","ⓙ":"j","ⓚ":"k","ⓛ":"l","ⓜ":"m","ⓝ":"n","ⓞ":"o","ⓟ":"p","ⓠ":"q","ⓡ":"r","ⓢ":"s","ⓣ":"t","ⓤ":"u","ⓦ":"v","ⓥ":"w","ⓧ":"x","ⓨ":"y","ⓩ":"z","“":'"',"”":'"',"‘":"'","’":"'","∂":"d",ƒ:"f","™":"(TM)","©":"(C)",œ:"oe",Œ:"OE","®":"(R)","†":"+","℠":"(SM)","…":"...","˚":"o",º:"o",ª:"a","•":"*","၊":",","။":".",$:"USD","€":"EUR","₢":"BRN","₣":"FRF","£":"GBP","₤":"ITL","₦":"NGN","₧":"ESP","₩":"KRW","₪":"ILS","₫":"VND","₭":"LAK","₮":"MNT","₯":"GRD","₱":"ARS","₲":"PYG","₳":"ARA","₴":"UAH","₵":"GHS","¢":"cent","¥":"CNY",元:"CNY",円:"YEN","﷼":"IRR","₠":"EWE","฿":"THB","₨":"INR","₹":"INR","₰":"PF","₺":"TRY","؋":"AFN","₼":"AZN",лв:"BGN","៛":"KHR","₡":"CRC","₸":"KZT",ден:"MKD",zł:"PLN","₽":"RUB","₾":"GEL"},t=["်","ް"],a={"ာ":"a","ါ":"a","ေ":"e","ဲ":"e","ိ":"i","ီ":"i","ို":"o","ု":"u","ူ":"u","ေါင်":"aung","ော":"aw","ော်":"aw","ေါ":"aw","ေါ်":"aw","်":"်","က်":"et","ိုက်":"aik","ောက်":"auk","င်":"in","ိုင်":"aing","ောင်":"aung","စ်":"it","ည်":"i","တ်":"at","ိတ်":"eik","ုတ်":"ok","ွတ်":"ut","ေတ်":"it","ဒ်":"d","ိုဒ်":"ok","ုဒ်":"ait","န်":"an","ာန်":"an","ိန်":"ein","ုန်":"on","ွန်":"un","ပ်":"at","ိပ်":"eik","ုပ်":"ok","ွပ်":"ut","န်ုပ်":"nub","မ်":"an","ိမ်":"ein","ုမ်":"on","ွမ်":"un","ယ်":"e","ိုလ်":"ol","ဉ်":"in","ံ":"an","ိံ":"ein","ုံ":"on","ައް":"ah","ަށް":"ah"},r={en:{},az:{ç:"c",ə:"e",ğ:"g",ı:"i",ö:"o",ş:"s",ü:"u",Ç:"C",Ə:"E",Ğ:"G",İ:"I",Ö:"O",Ş:"S",Ü:"U"},cs:{č:"c",ď:"d",ě:"e",ň:"n",ř:"r",š:"s",ť:"t",ů:"u",ž:"z",Č:"C",Ď:"D",Ě:"E",Ň:"N",Ř:"R",Š:"S",Ť:"T",Ů:"U",Ž:"Z"},fi:{ä:"a",Ä:"A",ö:"o",Ö:"O"},hu:{ä:"a",Ä:"A",ö:"o",Ö:"O",ü:"u",Ü:"U",ű:"u",Ű:"U"},lt:{ą:"a",č:"c",ę:"e",ė:"e",į:"i",š:"s",ų:"u",ū:"u",ž:"z",Ą:"A",Č:"C",Ę:"E",Ė:"E",Į:"I",Š:"S",Ų:"U",Ū:"U"},lv:{ā:"a",č:"c",ē:"e",ģ:"g",ī:"i",ķ:"k",ļ:"l",ņ:"n",š:"s",ū:"u",ž:"z",Ā:"A",Č:"C",Ē:"E",Ģ:"G",Ī:"i",Ķ:"k",Ļ:"L",Ņ:"N",Š:"S",Ū:"u",Ž:"Z"},pl:{ą:"a",ć:"c",ę:"e",ł:"l",ń:"n",ó:"o",ś:"s",ź:"z",ż:"z",Ą:"A",Ć:"C",Ę:"e",Ł:"L",Ń:"N",Ó:"O",Ś:"S",Ź:"Z",Ż:"Z"},sv:{ä:"a",Ä:"A",ö:"o",Ö:"O"},sk:{ä:"a",Ä:"A"},sr:{љ:"lj",њ:"nj",Љ:"Lj",Њ:"Nj",đ:"dj",Đ:"Dj"},tr:{Ü:"U",Ö:"O",ü:"u",ö:"o"}},p={ar:{"∆":"delta","∞":"la-nihaya","♥":"hob","&":"wa","|":"aw","<":"aqal-men",">":"akbar-men","∑":"majmou","¤":"omla"},az:{},ca:{"∆":"delta","∞":"infinit","♥":"amor","&":"i","|":"o","<":"menys que",">":"mes que","∑":"suma dels","¤":"moneda"},cs:{"∆":"delta","∞":"nekonecno","♥":"laska","&":"a","|":"nebo","<":"mensi nez",">":"vetsi nez","∑":"soucet","¤":"mena"},de:{"∆":"delta","∞":"unendlich","♥":"Liebe","&":"und","|":"oder","<":"kleiner als",">":"groesser als","∑":"Summe von","¤":"Waehrung"},dv:{"∆":"delta","∞":"kolunulaa","♥":"loabi","&":"aai","|":"noonee","<":"ah vure kuda",">":"ah vure bodu","∑":"jumula","¤":"faisaa"},en:{"∆":"delta","∞":"infinity","♥":"love","&":"and","|":"or","<":"less than",">":"greater than","∑":"sum","¤":"currency"},es:{"∆":"delta","∞":"infinito","♥":"amor","&":"y","|":"u","<":"menos que",">":"mas que","∑":"suma de los","¤":"moneda"},fa:{"∆":"delta","∞":"bi-nahayat","♥":"eshgh","&":"va","|":"ya","<":"kamtar-az",">":"bishtar-az","∑":"majmooe","¤":"vahed"},fi:{"∆":"delta","∞":"aarettomyys","♥":"rakkaus","&":"ja","|":"tai","<":"pienempi kuin",">":"suurempi kuin","∑":"summa","¤":"valuutta"},fr:{"∆":"delta","∞":"infiniment","♥":"Amour","&":"et","|":"ou","<":"moins que",">":"superieure a","∑":"somme des","¤":"monnaie"},ge:{"∆":"delta","∞":"usasruloba","♥":"siqvaruli","&":"da","|":"an","<":"naklebi",">":"meti","∑":"jami","¤":"valuta"},gr:{},hu:{"∆":"delta","∞":"vegtelen","♥":"szerelem","&":"es","|":"vagy","<":"kisebb mint",">":"nagyobb mint","∑":"szumma","¤":"penznem"},it:{"∆":"delta","∞":"infinito","♥":"amore","&":"e","|":"o","<":"minore di",">":"maggiore di","∑":"somma","¤":"moneta"},lt:{"∆":"delta","∞":"begalybe","♥":"meile","&":"ir","|":"ar","<":"maziau nei",">":"daugiau nei","∑":"suma","¤":"valiuta"},lv:{"∆":"delta","∞":"bezgaliba","♥":"milestiba","&":"un","|":"vai","<":"mazak neka",">":"lielaks neka","∑":"summa","¤":"valuta"},my:{"∆":"kwahkhyaet","∞":"asaonasme","♥":"akhyait","&":"nhin","|":"tho","<":"ngethaw",">":"kyithaw","∑":"paungld","¤":"ngwekye"},mk:{},nl:{"∆":"delta","∞":"oneindig","♥":"liefde","&":"en","|":"of","<":"kleiner dan",">":"groter dan","∑":"som","¤":"valuta"},pl:{"∆":"delta","∞":"nieskonczonosc","♥":"milosc","&":"i","|":"lub","<":"mniejsze niz",">":"wieksze niz","∑":"suma","¤":"waluta"},pt:{"∆":"delta","∞":"infinito","♥":"amor","&":"e","|":"ou","<":"menor que",">":"maior que","∑":"soma","¤":"moeda"},ro:{"∆":"delta","∞":"infinit","♥":"dragoste","&":"si","|":"sau","<":"mai mic ca",">":"mai mare ca","∑":"suma","¤":"valuta"},ru:{"∆":"delta","∞":"beskonechno","♥":"lubov","&":"i","|":"ili","<":"menshe",">":"bolshe","∑":"summa","¤":"valjuta"},sk:{"∆":"delta","∞":"nekonecno","♥":"laska","&":"a","|":"alebo","<":"menej ako",">":"viac ako","∑":"sucet","¤":"mena"},sr:{},tr:{"∆":"delta","∞":"sonsuzluk","♥":"ask","&":"ve","|":"veya","<":"kucuktur",">":"buyuktur","∑":"toplam","¤":"para birimi"},uk:{"∆":"delta","∞":"bezkinechnist","♥":"lubov","&":"i","|":"abo","<":"menshe",">":"bilshe","∑":"suma","¤":"valjuta"},vn:{"∆":"delta","∞":"vo cuc","♥":"yeu","&":"va","|":"hoac","<":"nho hon",">":"lon hon","∑":"tong","¤":"tien te"}},o=[";","?",":","@","&","=","+","$",",","/"].join(""),d=[";","?",":","@","&","=","+","$",","].join(""),c=[".","!","~","*","'","(",")"].join(""),u=function(f,v){var b="-",E="",w="",P=!0,M={},z,Z,V,I,G,R,ss,rs,Es,$,j,J,ls,zs,js="";if(typeof f!="string")return"";if(typeof v=="string"&&(b=v),ss=p.en,rs=r.en,typeof v=="object"){z=v.maintainCase||!1,M=v.custom&&typeof v.custom=="object"?v.custom:M,V=+v.truncate>1&&v.truncate||!1,I=v.uric||!1,G=v.uricNoSlash||!1,R=v.mark||!1,P=!(v.symbols===!1||v.lang===!1),b=v.separator||b,I&&(js+=o),G&&(js+=d),R&&(js+=c),ss=v.lang&&p[v.lang]&&P?p[v.lang]:P?p.en:{},rs=v.lang&&r[v.lang]?r[v.lang]:v.lang===!1||v.lang===!0?{}:r.en,v.titleCase&&typeof v.titleCase.length=="number"&&Array.prototype.toString.call(v.titleCase)?(v.titleCase.forEach(function(vs){M[vs+""]=vs+""}),Z=!0):Z=!!v.titleCase,v.custom&&typeof v.custom.length=="number"&&Array.prototype.toString.call(v.custom)&&v.custom.forEach(function(vs){M[vs+""]=vs+""}),Object.keys(M).forEach(function(vs){var qs;vs.length>1?qs=new RegExp("\\b"+g(vs)+"\\b","gi"):qs=new RegExp(g(vs),"gi"),f=f.replace(qs,M[vs])});for(j in M)js+=j}for(js+=b,js=g(js),f=f.replace(/(^\s+|\s+$)/g,""),ls=!1,zs=!1,$=0,J=f.length;$<J;$++)j=f[$],k(j,M)?ls=!1:rs[j]?(j=ls&&rs[j].match(/[A-Za-z0-9]/)?" "+rs[j]:rs[j],ls=!1):j in n?($+1<J&&t.indexOf(f[$+1])>=0?(w+=j,j=""):zs===!0?(j=a[w]+n[j],w=""):j=ls&&n[j].match(/[A-Za-z0-9]/)?" "+n[j]:n[j],ls=!1,zs=!1):j in a?(w+=j,j="",$===J-1&&(j=a[w]),zs=!0):ss[j]&&!(I&&o.indexOf(j)!==-1)&&!(G&&d.indexOf(j)!==-1)?(j=ls||E.substr(-1).match(/[A-Za-z0-9]/)?b+ss[j]:ss[j],j+=f[$+1]!==void 0&&f[$+1].match(/[A-Za-z0-9]/)?b:"",ls=!0):(zs===!0?(j=a[w]+j,w="",zs=!1):ls&&(/[A-Za-z0-9]/.test(j)||E.substr(-1).match(/A-Za-z0-9]/))&&(j=" "+j),ls=!1),E+=j.replace(new RegExp("[^\\w\\s"+js+"_-]","g"),b);return Z&&(E=E.replace(/(\w)(\S*)/g,function(vs,qs,ve){var re=qs.toUpperCase()+(ve!==null?ve:"");return Object.keys(M).indexOf(re.toLowerCase())<0?re:re.toLowerCase()})),E=E.replace(/\s+/g,b).replace(new RegExp("\\"+b+"+","g"),b).replace(new RegExp("(^\\"+b+"+|\\"+b+"+$)","g"),""),V&&E.length>V&&(Es=E.charAt(V)===b,E=E.slice(0,V),Es||(E=E.slice(0,E.lastIndexOf(b)))),!z&&!Z&&(E=E.toLowerCase()),E},m=function(f){return function(b){return u(b,f)}},g=function(f){return f.replace(/[-\\^$*+?.()|[\]{}\/]/g,"\\$&")},k=function(A,f){for(var v in f)if(f[v]===A)return!0};if(typeof e<"u"&&e.exports)e.exports=u,e.exports.createSlug=m;else if(typeof define<"u"&&define.amd)define([],function(){return u});else try{if(i.getSlug||i.createSlug)throw"speakingurl: globals exists /(getSlug|createSlug)/";i.getSlug=u,i.createSlug=m}catch{}}(s)}}),v4=Bu({"../../node_modules/.pnpm/speakingurl@14.0.1/node_modules/speakingurl/index.js"(s,e){T(),e.exports=A4()}});T();T();T();T();T();T();T();function f4(s){return!!(s&&s.__v_isReadonly)}function bu(s){return f4(s)?bu(s.__v_raw):!!(s&&s.__v_isReactive)}function ml(s){return!!(s&&s.__v_isRef===!0)}function Kn(s){const e=s&&s.__v_raw;return e?Kn(e):s}T();function _4(s){var e;const i=s.name||s._componentTag||s.__VUE_DEVTOOLS_COMPONENT_GUSSED_NAME__||s.__name;return i==="index"&&((e=s.__file)!=null&&e.endsWith("index.vue"))?"":i}function B4(s){const e=s.__file;if(e)return n4(t4(e,".vue"))}function No(s,e){return s.type.__VUE_DEVTOOLS_COMPONENT_GUSSED_NAME__=e,e}function Oa(s){if(s.__VUE_DEVTOOLS_NEXT_APP_RECORD__)return s.__VUE_DEVTOOLS_NEXT_APP_RECORD__;if(s.root)return s.appContext.app.__VUE_DEVTOOLS_NEXT_APP_RECORD__}async function b4(s){const{app:e,uid:i,instance:n}=s;try{if(n.__VUE_DEVTOOLS_NEXT_UID__)return n.__VUE_DEVTOOLS_NEXT_UID__;const t=await Oa(e);if(!t)return null;const a=t.rootInstance===n;return`${t.id}:${a?"root":i}`}catch{}}function wu(s){var e,i;const n=(e=s.subTree)==null?void 0:e.type,t=Oa(s);return t?((i=t==null?void 0:t.types)==null?void 0:i.Fragment)===n:!1}function Pa(s){var e,i,n;const t=_4((s==null?void 0:s.type)||{});if(t)return t;if((s==null?void 0:s.root)===s)return"Root";for(const r in(i=(e=s.parent)==null?void 0:e.type)==null?void 0:i.components)if(s.parent.type.components[r]===(s==null?void 0:s.type))return No(s,r);for(const r in(n=s.appContext)==null?void 0:n.components)if(s.appContext.components[r]===(s==null?void 0:s.type))return No(s,r);const a=B4((s==null?void 0:s.type)||{});return a||"Anonymous Component"}function $l(s,e){return e=e||`${s.id}:root`,s.instanceMap.get(e)||s.instanceMap.get(":root")}var w4=class{constructor(){this.refEditor=new C4}set(s,e,i,n){const t=Array.isArray(e)?e:e.split(".");for(;t.length>1;){const p=t.shift();s instanceof Map&&(s=s.get(p)),s instanceof Set?s=Array.from(s.values())[p]:s=s[p],this.refEditor.isRef(s)&&(s=this.refEditor.get(s))}const a=t[0],r=this.refEditor.get(s)[a];n?n(s,a,i):this.refEditor.isRef(r)?this.refEditor.set(r,i):s[a]=i}get(s,e){const i=Array.isArray(e)?e:e.split(".");for(let n=0;n<i.length;n++)if(s instanceof Map?s=s.get(i[n]):s=s[i[n]],this.refEditor.isRef(s)&&(s=this.refEditor.get(s)),!s)return;return s}has(s,e,i=!1){if(typeof s>"u")return!1;const n=Array.isArray(e)?e.slice():e.split("."),t=i?2:1;for(;s&&n.length>t;){const a=n.shift();s=s[a],this.refEditor.isRef(s)&&(s=this.refEditor.get(s))}return s!=null&&Object.prototype.hasOwnProperty.call(s,n[0])}createDefaultSetCallback(s){return(e,i,n)=>{if((s.remove||s.newKey)&&(Array.isArray(e)?e.splice(i,1):Kn(e)instanceof Map?e.delete(i):Kn(e)instanceof Set?e.delete(Array.from(e.values())[i]):Reflect.deleteProperty(e,i)),!s.remove){const t=e[s.newKey||i];this.refEditor.isRef(t)?this.refEditor.set(t,n):Kn(e)instanceof Map?e.set(s.newKey||i,n):Kn(e)instanceof Set?e.add(n):e[s.newKey||i]=n}}}},C4=class{set(s,e){if(ml(s))s.value=e;else{if(s instanceof Set&&Array.isArray(e)){s.clear(),e.forEach(t=>s.add(t));return}const i=Object.keys(e);if(s instanceof Map){const t=new Set(s.keys());i.forEach(a=>{s.set(a,Reflect.get(e,a)),t.delete(a)}),t.forEach(a=>s.delete(a));return}const n=new Set(Object.keys(s));i.forEach(t=>{Reflect.set(s,t,Reflect.get(e,t)),n.delete(t)}),n.forEach(t=>Reflect.deleteProperty(s,t))}}get(s){return ml(s)?s.value:s}isRef(s){return ml(s)||bu(s)}};T();function Qr(s){return wu(s)?D4(s.subTree):s.subTree?[s.subTree.el]:[]}function D4(s){if(!s.children)return[];const e=[];return s.children.forEach(i=>{i.component?e.push(...Qr(i.component)):i!=null&&i.el&&e.push(i.el)}),e}T();T();function F4(){const s={top:0,bottom:0,left:0,right:0,get width(){return s.right-s.left},get height(){return s.bottom-s.top}};return s}var Kt;function T4(s){return Kt||(Kt=document.createRange()),Kt.selectNode(s),Kt.getBoundingClientRect()}function I4(s){const e=F4();if(!s.children)return e;for(let i=0,n=s.children.length;i<n;i++){const t=s.children[i];let a;if(t.component)a=qi(t.component);else if(t.el){const r=t.el;r.nodeType===1||r.getBoundingClientRect?a=r.getBoundingClientRect():r.nodeType===3&&r.data.trim()&&(a=T4(r))}a&&L4(e,a)}return e}function L4(s,e){return(!s.top||e.top<s.top)&&(s.top=e.top),(!s.bottom||e.bottom>s.bottom)&&(s.bottom=e.bottom),(!s.left||e.left<s.left)&&(s.left=e.left),(!s.right||e.right>s.right)&&(s.right=e.right),s}var zo={top:0,left:0,right:0,bottom:0,width:0,height:0};function qi(s){const e=s.subTree.el;return typeof window>"u"?zo:wu(s)?I4(s.subTree):(e==null?void 0:e.nodeType)===1?e==null?void 0:e.getBoundingClientRect():s.subTree.component?qi(s.subTree.component):zo}var Cu="__vue-devtools-component-inspector__",Du="__vue-devtools-component-inspector__card__",Fu="__vue-devtools-component-inspector__name__",Tu="__vue-devtools-component-inspector__indicator__",Iu={display:"block",zIndex:2147483640,position:"fixed",backgroundColor:"#42b88325",border:"1px solid #42b88350",borderRadius:"5px",transition:"all 0.1s ease-in",pointerEvents:"none"},x4={fontFamily:"Arial, Helvetica, sans-serif",padding:"5px 8px",borderRadius:"4px",textAlign:"left",position:"absolute",left:0,color:"#e9e9e9",fontSize:"14px",fontWeight:600,lineHeight:"24px",backgroundColor:"#42b883",boxShadow:"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1)"},O4={display:"inline-block",fontWeight:400,fontStyle:"normal",fontSize:"12px",opacity:.7};function Rn(){return document.getElementById(Cu)}function P4(){return document.getElementById(Du)}function R4(){return document.getElementById(Tu)}function S4(){return document.getElementById(Fu)}function Jr(s){return{left:`${Math.round(s.left*100)/100}px`,top:`${Math.round(s.top*100)/100}px`,width:`${Math.round(s.width*100)/100}px`,height:`${Math.round(s.height*100)/100}px`}}function Yr(s){var e;const i=document.createElement("div");i.id=(e=s.elementId)!=null?e:Cu,Object.assign(i.style,{...Iu,...Jr(s.bounds),...s.style});const n=document.createElement("span");n.id=Du,Object.assign(n.style,{...x4,top:s.bounds.top<35?0:"-35px"});const t=document.createElement("span");t.id=Fu,t.innerHTML=`&lt;${s.name}&gt;&nbsp;&nbsp;`;const a=document.createElement("i");return a.id=Tu,a.innerHTML=`${Math.round(s.bounds.width*100)/100} x ${Math.round(s.bounds.height*100)/100}`,Object.assign(a.style,O4),n.appendChild(t),n.appendChild(a),i.appendChild(n),document.body.appendChild(i),i}function Xr(s){const e=Rn(),i=P4(),n=S4(),t=R4();e&&(Object.assign(e.style,{...Iu,...Jr(s.bounds)}),Object.assign(i.style,{top:s.bounds.top<35?0:"-35px"}),n.innerHTML=`&lt;${s.name}&gt;&nbsp;&nbsp;`,t.innerHTML=`${Math.round(s.bounds.width*100)/100} x ${Math.round(s.bounds.height*100)/100}`)}function V4(s){const e=qi(s);if(!e.width&&!e.height)return;const i=Pa(s);Rn()?Xr({bounds:e,name:i}):Yr({bounds:e,name:i})}function Lu(){const s=Rn();s&&(s.style.display="none")}var Kl=null;function Wl(s){const e=s.target;if(e){const i=e.__vueParentComponent;if(i&&(Kl=i,i.vnode.el)){const t=qi(i),a=Pa(i);Rn()?Xr({bounds:t,name:a}):Yr({bounds:t,name:a})}}}function N4(s,e){var i;if(s.preventDefault(),s.stopPropagation(),Kl){const n=(i=oe.value)==null?void 0:i.app;b4({app:n,uid:n.uid,instance:Kl}).then(t=>{e(t)})}}var ma=null;function z4(){Lu(),window.removeEventListener("mouseover",Wl),window.removeEventListener("click",ma,!0),ma=null}function j4(){return window.addEventListener("mouseover",Wl),new Promise(s=>{function e(i){i.preventDefault(),i.stopPropagation(),N4(i,n=>{window.removeEventListener("click",e,!0),ma=null,window.removeEventListener("mouseover",Wl);const t=Rn();t&&(t.style.display="none"),s(JSON.stringify({id:n}))})}ma=e,window.addEventListener("click",e,!0)})}function M4(s){const e=$l(oe.value,s.id);if(e){const[i]=Qr(e);if(typeof i.scrollIntoView=="function")i.scrollIntoView({behavior:"smooth"});else{const n=qi(e),t=document.createElement("div"),a={...Jr(n),position:"absolute"};Object.assign(t.style,a),document.body.appendChild(t),t.scrollIntoView({behavior:"smooth"}),setTimeout(()=>{document.body.removeChild(t)},2e3)}setTimeout(()=>{const n=qi(e);if(n.width||n.height){const t=Pa(e),a=Rn();a?Xr({...s,name:t,bounds:n}):Yr({...s,name:t,bounds:n}),setTimeout(()=>{a&&(a.style.display="none")},1500)}},1200)}}T();var jo,Mo;(Mo=(jo=Q).__VUE_DEVTOOLS_COMPONENT_INSPECTOR_ENABLED__)!=null||(jo.__VUE_DEVTOOLS_COMPONENT_INSPECTOR_ENABLED__=!0);function q4(s){let e=0;const i=setInterval(()=>{Q.__VUE_INSPECTOR__&&(clearInterval(i),e+=30,s()),e>=5e3&&clearInterval(i)},30)}function G4(){const s=Q.__VUE_INSPECTOR__,e=s.openInEditor;s.openInEditor=async(...i)=>{s.disable(),e(...i)}}function H4(){return new Promise(s=>{function e(){G4(),s(Q.__VUE_INSPECTOR__)}Q.__VUE_INSPECTOR__?e():q4(()=>{e()})})}T();T();T();var U4="__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS_STATE__";function $4(){if(!Au||typeof localStorage>"u"||localStorage===null)return{recordingState:!1,mouseEventEnabled:!1,keyboardEventEnabled:!1,componentEventEnabled:!1,performanceEventEnabled:!1,selected:""};const s=localStorage.getItem(U4);return s?JSON.parse(s):{recordingState:!1,mouseEventEnabled:!1,keyboardEventEnabled:!1,componentEventEnabled:!1,performanceEventEnabled:!1,selected:""}}T();T();T();var qo,Go;(Go=(qo=Q).__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS)!=null||(qo.__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS=[]);var K4=new Proxy(Q.__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS,{get(s,e,i){return Reflect.get(s,e,i)}});function W4(s,e){ye.timelineLayersState[e.id]=!1,K4.push({...s,descriptorId:e.id,appRecord:Oa(e.app)})}var Ho,Uo;(Uo=(Ho=Q).__VUE_DEVTOOLS_KIT_INSPECTOR__)!=null||(Ho.__VUE_DEVTOOLS_KIT_INSPECTOR__=[]);var Zr=new Proxy(Q.__VUE_DEVTOOLS_KIT_INSPECTOR__,{get(s,e,i){return Reflect.get(s,e,i)}}),xu=bn(()=>{Sn.hooks.callHook("sendInspectorToClient",Ou())});function Q4(s,e){var i,n;Zr.push({options:s,descriptor:e,treeFilterPlaceholder:(i=s.treeFilterPlaceholder)!=null?i:"Search tree...",stateFilterPlaceholder:(n=s.stateFilterPlaceholder)!=null?n:"Search state...",treeFilter:"",selectedNodeId:"",appRecord:Oa(e.app)}),xu()}function Ou(){return Zr.filter(s=>s.descriptor.app===oe.value.app).filter(s=>s.descriptor.id!=="components").map(s=>{var e;const i=s.descriptor,n=s.options;return{id:n.id,label:n.label,logo:i.logo,icon:`custom-ic-baseline-${(e=n==null?void 0:n.icon)==null?void 0:e.replace(/_/g,"-")}`,packageName:i.packageName,homepage:i.homepage,pluginId:i.id}})}function sa(s,e){return Zr.find(i=>i.options.id===s&&(e?i.descriptor.app===e:!0))}function J4(){const s=fu();s.hook("addInspector",({inspector:n,plugin:t})=>{Q4(n,t.descriptor)});const e=bn(async({inspectorId:n,plugin:t})=>{var a;if(!n||!((a=t==null?void 0:t.descriptor)!=null&&a.app)||ye.highPerfModeEnabled)return;const r=sa(n,t.descriptor.app),p={app:t.descriptor.app,inspectorId:n,filter:(r==null?void 0:r.treeFilter)||"",rootNodes:[]};await new Promise(o=>{s.callHookWith(async d=>{await Promise.all(d.map(c=>c(p))),o()},"getInspectorTree")}),s.callHookWith(async o=>{await Promise.all(o.map(d=>d({inspectorId:n,rootNodes:p.rootNodes})))},"sendInspectorTreeToClient")},120);s.hook("sendInspectorTree",e);const i=bn(async({inspectorId:n,plugin:t})=>{var a;if(!n||!((a=t==null?void 0:t.descriptor)!=null&&a.app)||ye.highPerfModeEnabled)return;const r=sa(n,t.descriptor.app),p={app:t.descriptor.app,inspectorId:n,nodeId:(r==null?void 0:r.selectedNodeId)||"",state:null},o={currentTab:`custom-inspector:${n}`};p.nodeId&&await new Promise(d=>{s.callHookWith(async c=>{await Promise.all(c.map(u=>u(p,o))),d()},"getInspectorState")}),s.callHookWith(async d=>{await Promise.all(d.map(c=>c({inspectorId:n,nodeId:p.nodeId,state:p.state})))},"sendInspectorStateToClient")},120);return s.hook("sendInspectorState",i),s.hook("customInspectorSelectNode",({inspectorId:n,nodeId:t,plugin:a})=>{const r=sa(n,a.descriptor.app);r&&(r.selectedNodeId=t)}),s.hook("timelineLayerAdded",({options:n,plugin:t})=>{W4(n,t.descriptor)}),s.hook("timelineEventAdded",({options:n,plugin:t})=>{var a;const r=["performance","component-event","keyboard","mouse"];ye.highPerfModeEnabled||!((a=ye.timelineLayersState)!=null&&a[t.descriptor.id])&&!r.includes(n.layerId)||s.callHookWith(async p=>{await Promise.all(p.map(o=>o(n)))},"sendTimelineEventToClient")}),s.hook("getComponentInstances",async({app:n})=>{const t=n.__VUE_DEVTOOLS_NEXT_APP_RECORD__;if(!t)return null;const a=t.id.toString();return[...t.instanceMap].filter(([p])=>p.split(":")[0]===a).map(([,p])=>p)}),s.hook("getComponentBounds",async({instance:n})=>qi(n)),s.hook("getComponentName",({instance:n})=>Pa(n)),s.hook("componentHighlight",({uid:n})=>{const t=oe.value.instanceMap.get(n);t&&V4(t)}),s.hook("componentUnhighlight",()=>{Lu()}),s}var $o,Ko;(Ko=($o=Q).__VUE_DEVTOOLS_KIT_APP_RECORDS__)!=null||($o.__VUE_DEVTOOLS_KIT_APP_RECORDS__=[]);var Wo,Qo;(Qo=(Wo=Q).__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__)!=null||(Wo.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__={});var Jo,Yo;(Yo=(Jo=Q).__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__)!=null||(Jo.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__="");var Xo,Zo;(Zo=(Xo=Q).__VUE_DEVTOOLS_KIT_CUSTOM_TABS__)!=null||(Xo.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__=[]);var sh,eh;(eh=(sh=Q).__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__)!=null||(sh.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__=[]);var Ri="__VUE_DEVTOOLS_KIT_GLOBAL_STATE__";function Y4(){return{connected:!1,clientConnected:!1,vitePluginDetected:!0,appRecords:[],activeAppRecordId:"",tabs:[],commands:[],highPerfModeEnabled:!0,devtoolsClientDetected:{},perfUniqueGroupId:0,timelineLayersState:$4()}}var ih,nh;(nh=(ih=Q)[Ri])!=null||(ih[Ri]=Y4());var X4=bn(s=>{Sn.hooks.callHook("devtoolsStateUpdated",{state:s})});bn((s,e)=>{Sn.hooks.callHook("devtoolsConnectedUpdated",{state:s,oldState:e})});var Ra=new Proxy(Q.__VUE_DEVTOOLS_KIT_APP_RECORDS__,{get(s,e,i){return e==="value"?Q.__VUE_DEVTOOLS_KIT_APP_RECORDS__:Q.__VUE_DEVTOOLS_KIT_APP_RECORDS__[e]}}),oe=new Proxy(Q.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__,{get(s,e,i){return e==="value"?Q.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__:e==="id"?Q.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__:Q.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__[e]}});function Pu(){X4({...Q[Ri],appRecords:Ra.value,activeAppRecordId:oe.id,tabs:Q.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__,commands:Q.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__})}function Z4(s){Q.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__=s,Pu()}function s8(s){Q.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__=s,Pu()}var ye=new Proxy(Q[Ri],{get(s,e){return e==="appRecords"?Ra:e==="activeAppRecordId"?oe.id:e==="tabs"?Q.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__:e==="commands"?Q.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__:Q[Ri][e]},deleteProperty(s,e){return delete s[e],!0},set(s,e,i){return{...Q[Ri]},s[e]=i,Q[Ri][e]=i,!0}});function e8(s={}){var e,i,n;const{file:t,host:a,baseUrl:r=window.location.origin,line:p=0,column:o=0}=s;if(t){if(a==="chrome-extension"){const d=t.replace(/\\/g,"\\\\"),c=(i=(e=window.VUE_DEVTOOLS_CONFIG)==null?void 0:e.openInEditorHost)!=null?i:"/";fetch(`${c}__open-in-editor?file=${encodeURI(t)}`).then(u=>{if(!u.ok){const m=`Opening component ${d} failed`;console.log(`%c${m}`,"color:red")}})}else if(ye.vitePluginDetected){const d=(n=Q.__VUE_DEVTOOLS_OPEN_IN_EDITOR_BASE_URL__)!=null?n:r;Q.__VUE_INSPECTOR__.openInEditor(d,t,p,o)}}}T();T();T();T();T();var th,ah;(ah=(th=Q).__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__)!=null||(th.__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__=[]);var sp=new Proxy(Q.__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__,{get(s,e,i){return Reflect.get(s,e,i)}});function Ql(s){const e={};return Object.keys(s).forEach(i=>{e[i]=s[i].defaultValue}),e}function ep(s){return`__VUE_DEVTOOLS_NEXT_PLUGIN_SETTINGS__${s}__`}function i8(s){var e,i,n;const t=(i=(e=sp.find(a=>{var r;return a[0].id===s&&!!((r=a[0])!=null&&r.settings)}))==null?void 0:e[0])!=null?i:null;return(n=t==null?void 0:t.settings)!=null?n:null}function Ru(s,e){var i,n,t;const a=ep(s);if(a){const r=localStorage.getItem(a);if(r)return JSON.parse(r)}if(s){const r=(n=(i=sp.find(p=>p[0].id===s))==null?void 0:i[0])!=null?n:null;return Ql((t=r==null?void 0:r.settings)!=null?t:{})}return Ql(e)}function n8(s,e){const i=ep(s);localStorage.getItem(i)||localStorage.setItem(i,JSON.stringify(Ql(e)))}function t8(s,e,i){const n=ep(s),t=localStorage.getItem(n),a=JSON.parse(t||"{}"),r={...a,[e]:i};localStorage.setItem(n,JSON.stringify(r)),Sn.hooks.callHookWith(p=>{p.forEach(o=>o({pluginId:s,key:e,oldValue:a[e],newValue:i,settings:r}))},"setPluginSettings")}T();T();T();T();T();T();T();T();T();T();T();var lh,rh,ge=(rh=(lh=Q).__VUE_DEVTOOLS_HOOK)!=null?rh:lh.__VUE_DEVTOOLS_HOOK=fu(),a8={vueAppInit(s){ge.hook("app:init",s)},vueAppUnmount(s){ge.hook("app:unmount",s)},vueAppConnected(s){ge.hook("app:connected",s)},componentAdded(s){return ge.hook("component:added",s)},componentEmit(s){return ge.hook("component:emit",s)},componentUpdated(s){return ge.hook("component:updated",s)},componentRemoved(s){return ge.hook("component:removed",s)},setupDevtoolsPlugin(s){ge.hook("devtools-plugin:setup",s)},perfStart(s){return ge.hook("perf:start",s)},perfEnd(s){return ge.hook("perf:end",s)}},Su={on:a8,setupDevToolsPlugin(s,e){return ge.callHook("devtools-plugin:setup",s,e)}},l8=class{constructor({plugin:s,ctx:e}){this.hooks=e.hooks,this.plugin=s}get on(){return{visitComponentTree:s=>{this.hooks.hook("visitComponentTree",s)},inspectComponent:s=>{this.hooks.hook("inspectComponent",s)},editComponentState:s=>{this.hooks.hook("editComponentState",s)},getInspectorTree:s=>{this.hooks.hook("getInspectorTree",s)},getInspectorState:s=>{this.hooks.hook("getInspectorState",s)},editInspectorState:s=>{this.hooks.hook("editInspectorState",s)},inspectTimelineEvent:s=>{this.hooks.hook("inspectTimelineEvent",s)},timelineCleared:s=>{this.hooks.hook("timelineCleared",s)},setPluginSettings:s=>{this.hooks.hook("setPluginSettings",s)}}}notifyComponentUpdate(s){var e;const i=Ou().find(n=>n.packageName===this.plugin.descriptor.packageName);if(i!=null&&i.id){if(s){const n=[s.appContext.app,s.uid,(e=s.parent)==null?void 0:e.uid,s];ge.callHook("component:updated",...n)}else ge.callHook("component:updated");this.hooks.callHook("sendInspectorState",{inspectorId:i.id,plugin:this.plugin})}}addInspector(s){this.hooks.callHook("addInspector",{inspector:s,plugin:this.plugin}),this.plugin.descriptor.settings&&n8(s.id,this.plugin.descriptor.settings)}sendInspectorTree(s){this.hooks.callHook("sendInspectorTree",{inspectorId:s,plugin:this.plugin})}sendInspectorState(s){this.hooks.callHook("sendInspectorState",{inspectorId:s,plugin:this.plugin})}selectInspectorNode(s,e){this.hooks.callHook("customInspectorSelectNode",{inspectorId:s,nodeId:e,plugin:this.plugin})}visitComponentTree(s){return this.hooks.callHook("visitComponentTree",s)}now(){return Date.now()}addTimelineLayer(s){this.hooks.callHook("timelineLayerAdded",{options:s,plugin:this.plugin})}addTimelineEvent(s){this.hooks.callHook("timelineEventAdded",{options:s,plugin:this.plugin})}getSettings(s){return Ru(s??this.plugin.descriptor.id,this.plugin.descriptor.settings)}getComponentInstances(s){return this.hooks.callHook("getComponentInstances",{app:s})}getComponentBounds(s){return this.hooks.callHook("getComponentBounds",{instance:s})}getComponentName(s){return this.hooks.callHook("getComponentName",{instance:s})}highlightElement(s){const e=s.__VUE_DEVTOOLS_NEXT_UID__;return this.hooks.callHook("componentHighlight",{uid:e})}unhighlightElement(){return this.hooks.callHook("componentUnhighlight")}},r8=l8;T();T();T();T();var p8="__vue_devtool_undefined__",o8="__vue_devtool_infinity__",h8="__vue_devtool_negative_infinity__",d8="__vue_devtool_nan__";T();T();var c8={[p8]:"undefined",[d8]:"NaN",[o8]:"Infinity",[h8]:"-Infinity"};Object.entries(c8).reduce((s,[e,i])=>(s[i]=e,s),{});T();T();T();T();T();var ph,oh;(oh=(ph=Q).__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__)!=null||(ph.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__=new Set);function u8(s,e){return Su.setupDevToolsPlugin(s,e)}function m8(s,e){const[i,n]=s;if(i.app!==e)return;const t=new r8({plugin:{setupFn:n,descriptor:i},ctx:Sn});i.packageName==="vuex"&&t.on.editInspectorState(a=>{t.sendInspectorState(a.inspectorId)}),n(t)}function g8(s){Q.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__.has(s)||(Q.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__.add(s),sp.forEach(e=>{m8(e,s)}))}T();T();var ut="__VUE_DEVTOOLS_ROUTER__",wn="__VUE_DEVTOOLS_ROUTER_INFO__",hh,dh;(dh=(hh=Q)[wn])!=null||(hh[wn]={currentRoute:null,routes:[]});var ch,uh;(uh=(ch=Q)[ut])!=null||(ch[ut]={});new Proxy(Q[wn],{get(s,e){return Q[wn][e]}});new Proxy(Q[ut],{get(s,e){if(e==="value")return Q[ut]}});function k8(s){const e=new Map;return((s==null?void 0:s.getRoutes())||[]).filter(i=>!e.has(i.path)&&e.set(i.path,1))}function ip(s){return s.map(e=>{let{path:i,name:n,children:t,meta:a}=e;return t!=null&&t.length&&(t=ip(t)),{path:i,name:n,children:t,meta:a}})}function E8(s){if(s){const{fullPath:e,hash:i,href:n,path:t,name:a,matched:r,params:p,query:o}=s;return{fullPath:e,hash:i,href:n,path:t,name:a,params:p,query:o,matched:ip(r)}}return s}function y8(s,e){function i(){var n;const t=(n=s.app)==null?void 0:n.config.globalProperties.$router,a=E8(t==null?void 0:t.currentRoute.value),r=ip(k8(t)),p=console.warn;console.warn=()=>{},Q[wn]={currentRoute:a?Vo(a):{},routes:Vo(r)},Q[ut]=t,console.warn=p}i(),Su.on.componentUpdated(bn(()=>{var n;((n=e.value)==null?void 0:n.app)===s.app&&(i(),!ye.highPerfModeEnabled&&Sn.hooks.callHook("routerInfoUpdated",{state:Q[wn]}))},200))}function A8(s){return{async getInspectorTree(e){const i={...e,app:oe.value.app,rootNodes:[]};return await new Promise(n=>{s.callHookWith(async t=>{await Promise.all(t.map(a=>a(i))),n()},"getInspectorTree")}),i.rootNodes},async getInspectorState(e){const i={...e,app:oe.value.app,state:null},n={currentTab:`custom-inspector:${e.inspectorId}`};return await new Promise(t=>{s.callHookWith(async a=>{await Promise.all(a.map(r=>r(i,n))),t()},"getInspectorState")}),i.state},editInspectorState(e){const i=new w4,n={...e,app:oe.value.app,set:(t,a=e.path,r=e.state.value,p)=>{i.set(t,a,r,p||i.createDefaultSetCallback(e.state))}};s.callHookWith(t=>{t.forEach(a=>a(n))},"editInspectorState")},sendInspectorState(e){const i=sa(e);s.callHook("sendInspectorState",{inspectorId:e,plugin:{descriptor:i.descriptor,setupFn:()=>({})}})},inspectComponentInspector(){return j4()},cancelInspectComponentInspector(){return z4()},getComponentRenderCode(e){const i=$l(oe.value,e);if(i)return(i==null?void 0:i.type)instanceof Function?i.type.toString():i.render.toString()},scrollToComponent(e){return M4({id:e})},openInEditor:e8,getVueInspector:H4,toggleApp(e){const i=Ra.value.find(n=>n.id===e);i&&(s8(e),Z4(i),y8(i,oe),xu(),g8(i.app))},inspectDOM(e){const i=$l(oe.value,e);if(i){const[n]=Qr(i);n&&(Q.__VUE_DEVTOOLS_INSPECT_DOM_TARGET__=n)}},updatePluginSettings(e,i,n){t8(e,i,n)},getPluginSettings(e){return{options:i8(e),values:Ru(e)}}}}T();var mh,gh;(gh=(mh=Q).__VUE_DEVTOOLS_ENV__)!=null||(mh.__VUE_DEVTOOLS_ENV__={vitePluginDetected:!1});var kh=J4(),Eh,yh;(yh=(Eh=Q).__VUE_DEVTOOLS_KIT_CONTEXT__)!=null||(Eh.__VUE_DEVTOOLS_KIT_CONTEXT__={hooks:kh,get state(){return{...ye,activeAppRecordId:oe.id,activeAppRecord:oe.value,appRecords:Ra.value}},api:A8(kh)});var Sn=Q.__VUE_DEVTOOLS_KIT_CONTEXT__;T();y4(v4());var Ah,vh;(vh=(Ah=Q).__VUE_DEVTOOLS_NEXT_APP_RECORD_INFO__)!=null||(Ah.__VUE_DEVTOOLS_NEXT_APP_RECORD_INFO__={id:0,appIds:new Set});T();function v8(s){ye.highPerfModeEnabled=s??!ye.highPerfModeEnabled}T();T();T();function f8(s){ye.devtoolsClientDetected={...ye.devtoolsClientDetected,...s};const e=Object.values(ye.devtoolsClientDetected).some(Boolean);v8(!e)}var fh,_h;(_h=(fh=Q).__VUE_DEVTOOLS_UPDATE_CLIENT_DETECTED__)!=null||(fh.__VUE_DEVTOOLS_UPDATE_CLIENT_DETECTED__=f8);T();T();T();T();T();T();T();var _8=class{constructor(){this.keyToValue=new Map,this.valueToKey=new Map}set(s,e){this.keyToValue.set(s,e),this.valueToKey.set(e,s)}getByKey(s){return this.keyToValue.get(s)}getByValue(s){return this.valueToKey.get(s)}clear(){this.keyToValue.clear(),this.valueToKey.clear()}},Vu=class{constructor(s){this.generateIdentifier=s,this.kv=new _8}register(s,e){this.kv.getByValue(s)||(e||(e=this.generateIdentifier(s)),this.kv.set(e,s))}clear(){this.kv.clear()}getIdentifier(s){return this.kv.getByValue(s)}getValue(s){return this.kv.getByKey(s)}},B8=class extends Vu{constructor(){super(s=>s.name),this.classToAllowedProps=new Map}register(s,e){typeof e=="object"?(e.allowProps&&this.classToAllowedProps.set(s,e.allowProps),super.register(s,e.identifier)):super.register(s,e)}getAllowedProps(s){return this.classToAllowedProps.get(s)}};T();T();function b8(s){if("values"in Object)return Object.values(s);const e=[];for(const i in s)s.hasOwnProperty(i)&&e.push(s[i]);return e}function w8(s,e){const i=b8(s);if("find"in i)return i.find(e);const n=i;for(let t=0;t<n.length;t++){const a=n[t];if(e(a))return a}}function Cn(s,e){Object.entries(s).forEach(([i,n])=>e(n,i))}function ea(s,e){return s.indexOf(e)!==-1}function Bh(s,e){for(let i=0;i<s.length;i++){const n=s[i];if(e(n))return n}}var C8=class{constructor(){this.transfomers={}}register(s){this.transfomers[s.name]=s}findApplicable(s){return w8(this.transfomers,e=>e.isApplicable(s))}findByName(s){return this.transfomers[s]}};T();T();var D8=s=>Object.prototype.toString.call(s).slice(8,-1),Nu=s=>typeof s>"u",F8=s=>s===null,mt=s=>typeof s!="object"||s===null||s===Object.prototype?!1:Object.getPrototypeOf(s)===null?!0:Object.getPrototypeOf(s)===Object.prototype,Jl=s=>mt(s)&&Object.keys(s).length===0,Bi=s=>Array.isArray(s),T8=s=>typeof s=="string",I8=s=>typeof s=="number"&&!isNaN(s),L8=s=>typeof s=="boolean",x8=s=>s instanceof RegExp,gt=s=>s instanceof Map,kt=s=>s instanceof Set,zu=s=>D8(s)==="Symbol",O8=s=>s instanceof Date&&!isNaN(s.valueOf()),P8=s=>s instanceof Error,bh=s=>typeof s=="number"&&isNaN(s),R8=s=>L8(s)||F8(s)||Nu(s)||I8(s)||T8(s)||zu(s),S8=s=>typeof s=="bigint",V8=s=>s===1/0||s===-1/0,N8=s=>ArrayBuffer.isView(s)&&!(s instanceof DataView),z8=s=>s instanceof URL;T();var ju=s=>s.replace(/\./g,"\\."),gl=s=>s.map(String).map(ju).join("."),nt=s=>{const e=[];let i="";for(let t=0;t<s.length;t++){let a=s.charAt(t);if(a==="\\"&&s.charAt(t+1)==="."){i+=".",t++;continue}if(a==="."){e.push(i),i="";continue}i+=a}const n=i;return e.push(n),e};T();function qe(s,e,i,n){return{isApplicable:s,annotation:e,transform:i,untransform:n}}var Mu=[qe(Nu,"undefined",()=>null,()=>{}),qe(S8,"bigint",s=>s.toString(),s=>typeof BigInt<"u"?BigInt(s):(console.error("Please add a BigInt polyfill."),s)),qe(O8,"Date",s=>s.toISOString(),s=>new Date(s)),qe(P8,"Error",(s,e)=>{const i={name:s.name,message:s.message};return e.allowedErrorProps.forEach(n=>{i[n]=s[n]}),i},(s,e)=>{const i=new Error(s.message);return i.name=s.name,i.stack=s.stack,e.allowedErrorProps.forEach(n=>{i[n]=s[n]}),i}),qe(x8,"regexp",s=>""+s,s=>{const e=s.slice(1,s.lastIndexOf("/")),i=s.slice(s.lastIndexOf("/")+1);return new RegExp(e,i)}),qe(kt,"set",s=>[...s.values()],s=>new Set(s)),qe(gt,"map",s=>[...s.entries()],s=>new Map(s)),qe(s=>bh(s)||V8(s),"number",s=>bh(s)?"NaN":s>0?"Infinity":"-Infinity",Number),qe(s=>s===0&&1/s===-1/0,"number",()=>"-0",Number),qe(z8,"URL",s=>s.toString(),s=>new URL(s))];function Sa(s,e,i,n){return{isApplicable:s,annotation:e,transform:i,untransform:n}}var qu=Sa((s,e)=>zu(s)?!!e.symbolRegistry.getIdentifier(s):!1,(s,e)=>["symbol",e.symbolRegistry.getIdentifier(s)],s=>s.description,(s,e,i)=>{const n=i.symbolRegistry.getValue(e[1]);if(!n)throw new Error("Trying to deserialize unknown symbol");return n}),j8=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,Uint8ClampedArray].reduce((s,e)=>(s[e.name]=e,s),{}),Gu=Sa(N8,s=>["typed-array",s.constructor.name],s=>[...s],(s,e)=>{const i=j8[e[1]];if(!i)throw new Error("Trying to deserialize unknown typed array");return new i(s)});function Hu(s,e){return s!=null&&s.constructor?!!e.classRegistry.getIdentifier(s.constructor):!1}var Uu=Sa(Hu,(s,e)=>["class",e.classRegistry.getIdentifier(s.constructor)],(s,e)=>{const i=e.classRegistry.getAllowedProps(s.constructor);if(!i)return{...s};const n={};return i.forEach(t=>{n[t]=s[t]}),n},(s,e,i)=>{const n=i.classRegistry.getValue(e[1]);if(!n)throw new Error("Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564");return Object.assign(Object.create(n.prototype),s)}),$u=Sa((s,e)=>!!e.customTransformerRegistry.findApplicable(s),(s,e)=>["custom",e.customTransformerRegistry.findApplicable(s).name],(s,e)=>e.customTransformerRegistry.findApplicable(s).serialize(s),(s,e,i)=>{const n=i.customTransformerRegistry.findByName(e[1]);if(!n)throw new Error("Trying to deserialize unknown custom value");return n.deserialize(s)}),M8=[Uu,qu,$u,Gu],wh=(s,e)=>{const i=Bh(M8,t=>t.isApplicable(s,e));if(i)return{value:i.transform(s,e),type:i.annotation(s,e)};const n=Bh(Mu,t=>t.isApplicable(s,e));if(n)return{value:n.transform(s,e),type:n.annotation}},Ku={};Mu.forEach(s=>{Ku[s.annotation]=s});var q8=(s,e,i)=>{if(Bi(e))switch(e[0]){case"symbol":return qu.untransform(s,e,i);case"class":return Uu.untransform(s,e,i);case"custom":return $u.untransform(s,e,i);case"typed-array":return Gu.untransform(s,e,i);default:throw new Error("Unknown transformation: "+e)}else{const n=Ku[e];if(!n)throw new Error("Unknown transformation: "+e);return n.untransform(s,i)}};T();var ln=(s,e)=>{const i=s.keys();for(;e>0;)i.next(),e--;return i.next().value};function Wu(s){if(ea(s,"__proto__"))throw new Error("__proto__ is not allowed as a property");if(ea(s,"prototype"))throw new Error("prototype is not allowed as a property");if(ea(s,"constructor"))throw new Error("constructor is not allowed as a property")}var G8=(s,e)=>{Wu(e);for(let i=0;i<e.length;i++){const n=e[i];if(kt(s))s=ln(s,+n);else if(gt(s)){const t=+n,a=+e[++i]==0?"key":"value",r=ln(s,t);switch(a){case"key":s=r;break;case"value":s=s.get(r);break}}else s=s[n]}return s},Yl=(s,e,i)=>{if(Wu(e),e.length===0)return i(s);let n=s;for(let a=0;a<e.length-1;a++){const r=e[a];if(Bi(n)){const p=+r;n=n[p]}else if(mt(n))n=n[r];else if(kt(n)){const p=+r;n=ln(n,p)}else if(gt(n)){if(a===e.length-2)break;const o=+r,d=+e[++a]==0?"key":"value",c=ln(n,o);switch(d){case"key":n=c;break;case"value":n=n.get(c);break}}}const t=e[e.length-1];if(Bi(n)?n[+t]=i(n[+t]):mt(n)&&(n[t]=i(n[t])),kt(n)){const a=ln(n,+t),r=i(a);a!==r&&(n.delete(a),n.add(r))}if(gt(n)){const a=+e[e.length-2],r=ln(n,a);switch(+t==0?"key":"value"){case"key":{const o=i(r);n.set(o,n.get(r)),o!==r&&n.delete(r);break}case"value":{n.set(r,i(n.get(r)));break}}}return s};function Xl(s,e,i=[]){if(!s)return;if(!Bi(s)){Cn(s,(a,r)=>Xl(a,e,[...i,...nt(r)]));return}const[n,t]=s;t&&Cn(t,(a,r)=>{Xl(a,e,[...i,...nt(r)])}),e(n,i)}function H8(s,e,i){return Xl(e,(n,t)=>{s=Yl(s,t,a=>q8(a,n,i))}),s}function U8(s,e){function i(n,t){const a=G8(s,nt(t));n.map(nt).forEach(r=>{s=Yl(s,r,()=>a)})}if(Bi(e)){const[n,t]=e;n.forEach(a=>{s=Yl(s,nt(a),()=>s)}),t&&Cn(t,i)}else Cn(e,i);return s}var $8=(s,e)=>mt(s)||Bi(s)||gt(s)||kt(s)||Hu(s,e);function K8(s,e,i){const n=i.get(s);n?n.push(e):i.set(s,[e])}function W8(s,e){const i={};let n;return s.forEach(t=>{if(t.length<=1)return;e||(t=t.map(p=>p.map(String)).sort((p,o)=>p.length-o.length));const[a,...r]=t;a.length===0?n=r.map(gl):i[gl(a)]=r.map(gl)}),n?Jl(i)?[n]:[n,i]:Jl(i)?void 0:i}var Qu=(s,e,i,n,t=[],a=[],r=new Map)=>{var p;const o=R8(s);if(!o){K8(s,t,e);const k=r.get(s);if(k)return n?{transformedValue:null}:k}if(!$8(s,i)){const k=wh(s,i),A=k?{transformedValue:k.value,annotations:[k.type]}:{transformedValue:s};return o||r.set(s,A),A}if(ea(a,s))return{transformedValue:null};const d=wh(s,i),c=(p=d==null?void 0:d.value)!=null?p:s,u=Bi(c)?[]:{},m={};Cn(c,(k,A)=>{if(A==="__proto__"||A==="constructor"||A==="prototype")throw new Error(`Detected property ${A}. This is a prototype pollution risk, please remove it from your object.`);const f=Qu(k,e,i,n,[...t,A],[...a,s],r);u[A]=f.transformedValue,Bi(f.annotations)?m[A]=f.annotations:mt(f.annotations)&&Cn(f.annotations,(v,b)=>{m[ju(A)+"."+b]=v})});const g=Jl(m)?{transformedValue:u,annotations:d?[d.type]:void 0}:{transformedValue:u,annotations:d?[d.type,m]:m};return o||r.set(s,g),g};T();T();function Ju(s){return Object.prototype.toString.call(s).slice(8,-1)}function Ch(s){return Ju(s)==="Array"}function Q8(s){if(Ju(s)!=="Object")return!1;const e=Object.getPrototypeOf(s);return!!e&&e.constructor===Object&&e===Object.prototype}function J8(s,e,i,n,t){const a={}.propertyIsEnumerable.call(n,e)?"enumerable":"nonenumerable";a==="enumerable"&&(s[e]=i),t&&a==="nonenumerable"&&Object.defineProperty(s,e,{value:i,enumerable:!1,writable:!0,configurable:!0})}function Zl(s,e={}){if(Ch(s))return s.map(t=>Zl(t,e));if(!Q8(s))return s;const i=Object.getOwnPropertyNames(s),n=Object.getOwnPropertySymbols(s);return[...i,...n].reduce((t,a)=>{if(Ch(e.props)&&!e.props.includes(a))return t;const r=s[a],p=Zl(r,e);return J8(t,a,p,s,e.nonenumerable),t},{})}var Ts=class{constructor({dedupe:s=!1}={}){this.classRegistry=new B8,this.symbolRegistry=new Vu(e=>{var i;return(i=e.description)!=null?i:""}),this.customTransformerRegistry=new C8,this.allowedErrorProps=[],this.dedupe=s}serialize(s){const e=new Map,i=Qu(s,e,this,this.dedupe),n={json:i.transformedValue};i.annotations&&(n.meta={...n.meta,values:i.annotations});const t=W8(e,this.dedupe);return t&&(n.meta={...n.meta,referentialEqualities:t}),n}deserialize(s){const{json:e,meta:i}=s;let n=Zl(e);return i!=null&&i.values&&(n=H8(n,i.values,this)),i!=null&&i.referentialEqualities&&(n=U8(n,i.referentialEqualities)),n}stringify(s){return JSON.stringify(this.serialize(s))}parse(s){return this.deserialize(JSON.parse(s))}registerClass(s,e){this.classRegistry.register(s,e)}registerSymbol(s,e){this.symbolRegistry.register(s,e)}registerCustom(s,e){this.customTransformerRegistry.register({name:e,...s})}allowErrorProps(...s){this.allowedErrorProps.push(...s)}};Ts.defaultInstance=new Ts;Ts.serialize=Ts.defaultInstance.serialize.bind(Ts.defaultInstance);Ts.deserialize=Ts.defaultInstance.deserialize.bind(Ts.defaultInstance);Ts.stringify=Ts.defaultInstance.stringify.bind(Ts.defaultInstance);Ts.parse=Ts.defaultInstance.parse.bind(Ts.defaultInstance);Ts.registerClass=Ts.defaultInstance.registerClass.bind(Ts.defaultInstance);Ts.registerSymbol=Ts.defaultInstance.registerSymbol.bind(Ts.defaultInstance);Ts.registerCustom=Ts.defaultInstance.registerCustom.bind(Ts.defaultInstance);Ts.allowErrorProps=Ts.defaultInstance.allowErrorProps.bind(Ts.defaultInstance);T();T();T();T();T();T();T();T();T();T();T();T();T();T();T();T();T();T();T();T();T();T();T();var Dh,Fh;(Fh=(Dh=Q).__VUE_DEVTOOLS_KIT_MESSAGE_CHANNELS__)!=null||(Dh.__VUE_DEVTOOLS_KIT_MESSAGE_CHANNELS__=[]);var Th,Ih;(Ih=(Th=Q).__VUE_DEVTOOLS_KIT_RPC_CLIENT__)!=null||(Th.__VUE_DEVTOOLS_KIT_RPC_CLIENT__=null);var Lh,xh;(xh=(Lh=Q).__VUE_DEVTOOLS_KIT_RPC_SERVER__)!=null||(Lh.__VUE_DEVTOOLS_KIT_RPC_SERVER__=null);var Oh,Ph;(Ph=(Oh=Q).__VUE_DEVTOOLS_KIT_VITE_RPC_CLIENT__)!=null||(Oh.__VUE_DEVTOOLS_KIT_VITE_RPC_CLIENT__=null);var Rh,Sh;(Sh=(Rh=Q).__VUE_DEVTOOLS_KIT_VITE_RPC_SERVER__)!=null||(Rh.__VUE_DEVTOOLS_KIT_VITE_RPC_SERVER__=null);var Vh,Nh;(Nh=(Vh=Q).__VUE_DEVTOOLS_KIT_BROADCAST_RPC_SERVER__)!=null||(Vh.__VUE_DEVTOOLS_KIT_BROADCAST_RPC_SERVER__=null);T();T();T();T();T();T();T();const Y8=JSON.parse(`{"encrypt":{"config":{"/apply/program":["$2a$10$JUwh3tVJkZzOZhswQtl0punYWsKfefs23hHq5/XvvEDr4b/xX5/Y6"],"/demo/encrypt.html":["$2a$10$BAnSp.Ou.SOorO7ycfxvJOslX7RebVRpp0ctv2gPthk8Qdii5Z0rC"],"/zh/demo/encrypt.html":["$2a$10$5P4nkGI3j0.ZlqeZ5kgPaOSeY4zOnLPFYk0XELEn4SVWGgji/1fy."]}},"author":{"name":"David Liu","url":"https://github.com/davidliuk"},"logo":"/favicon.ico","repo":"davidliuk/blog","docsDir":"docs","pageInfo":["Author","Original","Date","Category","Tag","ReadingTime"],"blog":{"medias":{"GitHub":"https://github.com/davidliuk","Linkedin":"https://www.linkedin.com/in/davidliuk/","Email":"david.liu.penn@outlook.com"}},"locales":{"/zh/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家"},"navbar":["/zh/",{"text":"演示","icon":"discover","link":"/zh/demo/"},{"text":"博文","icon":"edit","prefix":"/zh/posts/","children":[{"text":"苹果","icon":"edit","prefix":"apple/","children":[{"text":"苹果1","icon":"edit","link":"1"},{"text":"苹果2","icon":"edit","link":"2"},"3","4"]},{"text":"香蕉","icon":"edit","prefix":"banana/","children":[{"text":"香蕉 1","icon":"edit","link":"1"},{"text":"香蕉 2","icon":"edit","link":"2"},"3","4"]},{"text":"樱桃","icon":"edit","link":"cherry"},{"text":"火龙果","icon":"edit","link":"dragonfruit"},"tomato","strawberry"]},{"text":"V2 文档","icon":"note","link":"https://vuepress-theme-hope.github.io/v2/zh/"}],"sidebar":{"/zh/":["",{"text":"如何使用","icon":"creative","prefix":"guide/","link":"guide/","children":"structure"},{"text":"文章","icon":"note","prefix":"posts/","children":"structure"},"intro","slides"]},"footer":" David's Blog","displayFooter":true,"blog":{"description":"CS@UPenn 26', SDE Intern@TikTok, Amazon, JD.com","intro":"/zh/intro.html"}},"/":{"lang":"en-US","navbarLocales":{"langName":"English","selectLangAriaLabel":"Select language"},"metaLocales":{"author":"Author","date":"Writing Date","origin":"Original","views":"Page views","category":"Category","tag":"Tag","readingTime":"Reading Time","words":"Words","toc":"On This Page","prev":"Prev","next":"Next","lastUpdated":"Last update","contributors":"Contributors","editLink":"Edit this page on GitHub","print":"Print"},"blogLocales":{"article":"Articles","articleList":"Article List","category":"Category","tag":"Tag","timeline":"Timeline","timelineTitle":"Yesterday Once More!","all":"All","intro":"Personal Intro","star":"Star","empty":"No $text"},"paginationLocales":{"prev":"Prev","next":"Next","navigate":"Jump to","action":"Go","errorText":"Please enter a number between 1 and $page !"},"outlookLocales":{"themeColor":"Theme Color","darkmode":"Theme Mode","fullscreen":"Full Screen"},"encryptLocales":{"iconLabel":"Page Encrypted","placeholder":"Enter password","remember":"Remember password","errorHint":"Please enter the correct password!"},"routeLocales":{"skipToContent":"Skip to main content","notFoundTitle":"Page not found","notFoundMsg":["There’s nothing here.","How did we get here?","That’s a Four-Oh-Four.","Looks like we've got some broken links."],"back":"Go back","home":"Take me home"},"navbar":["/",{"text":"Algorithm","icon":"edit","prefix":"/algo","children":[{"text":"Framework","icon":"edit","link":"framework/"},{"text":"Summary","icon":"edit","link":"summary/"},{"text":"FAQ","icon":"edit","link":"faq/"}]},{"text":"Computer Science","icon":"edit","prefix":"/cs/","children":[{"text":"Basic","icon":"edit","prefix":"basic/","children":[{"text":"Network","icon":"edit","link":"network/"},{"text":"Operating System","icon":"edit","link":"os/"}]},{"text":"Database","icon":"edit","prefix":"database/","children":[{"text":"MySQL","icon":"edit","link":"mysql/"},{"text":"Redis","icon":"edit","link":"redis/"}]}]},{"text":"Software Engineer","icon":"edit","prefix":"/se/","children":[{"text":"Lang","icon":"note","prefix":"lang/","children":[{"text":"Java","icon":"edit","link":"java/"}]},{"text":"DevOps","icon":"note","prefix":"devops/","children":[{"text":"Unix","icon":"edit","link":"unix/"},"docker/","k8s/"]},{"text":"Design","icon":"note","prefix":"design/","children":[{"text":"Design Pattern","icon":"edit","link":"pattern/"},{"text":"Object-Oriented Design","icon":"edit","link":"ood/"},{"text":"System Design","icon":"edit","link":"system/"}]},"tools/"]},{"text":"Tests","icon":"edit","prefix":"/test/","children":[{"text":"GRE","icon":"edit","prefix":"GRE/","children":[{"text":"QUANTITATIVE","icon":"edit","link":"QUANTITATIVE/"},{"text":"VERBAL","icon":"edit","link":"VERBAL/"}]},{"text":"TOEFL","icon":"edit","prefix":"TOEFL/","children":[{"text":"LISTENING","icon":"edit","link":"LISTENING/"},{"text":"READING","icon":"edit","link":"READING/"},{"text":"SPEAKING","icon":"edit","link":"SPEAKING/"},{"text":"WRITING","icon":"edit","link":"WRITING/"}]}]},{"text":"About Me","icon":"edit","link":"/me"}],"sidebar":{"/algo/":["",{"text":"框架","icon":"note","prefix":"framework/","children":"structure"},{"text":"总结","icon":"note","prefix":"summary/","children":"structure"},{"text":"高频题","icon":"note","prefix":"faq/","children":"structure"}],"/cs/basic/":"structure","/cs/database/redis/":"structure","/cs/database/mysql/":["",{"text":"事务","icon":"note","prefix":"transaction/","children":"structure"},{"text":"索引","icon":"note","prefix":"index/","children":"structure"},{"text":"引擎","icon":"note","prefix":"engine/","children":"structure"},{"text":"锁","icon":"note","prefix":"lock/","children":"structure"},{"text":"日志","icon":"note","prefix":"log/","children":"structure"}],"/se/lang/java/":"structure","/se/framework/":"structure","/se/devops/":"structure","/se/design/":"structure","/se/tools/":"structure","/se/devops/unix/":["",{"text":"UNIX 基础","icon":"note","prefix":"basic/","children":"structure"},{"text":"Availability 可用性","icon":"note","prefix":"availability/","children":"structure"}],"/test/":["",{"text":"GRE","icon":"note","prefix":"GRE/","link":"GRE/","children":"structure"},{"text":"TOEFL","icon":"note","prefix":"TOEFL/","link":"TOEFL/","children":"structure"}]},"footer":"David's Blog","displayFooter":true,"blog":{"description":"CS@UPenn 26', SDE Intern@TikTok, Amazon, JD.com","intro":"/me"}}}}`),X8=Y(Y8),Yu=()=>X8,Xu=Symbol(""),Z8=()=>{const s=bs(Xu);if(!s)throw new Error("useThemeLocaleData() is called without provider.");return s},sE=(s,e)=>{const{locales:i,...n}=s;return{...n,...i==null?void 0:i[e]}},eE=ze({enhance({app:s}){const e=Yu(),i=s._context.provides[Vr],n=B(()=>sE(e.value,i.routeLocale.value));s.provide(Xu,n),Object.defineProperties(s.config.globalProperties,{$theme:{get(){return e.value}},$themeLocale:{get(){return n.value}}}),u8({app:s,id:"org.vuejs.vuepress.plugin-theme-data",label:"VuePress Theme Data Plugin",packageName:"@vuepress/plugin-theme-data",homepage:"https://v2.vuepress.vuejs.org",logo:"https://v2.vuepress.vuejs.org/images/hero.png",componentStateTypes:["VuePress"]},t=>{t.on.inspectComponent(a=>{a.instanceData.state.push({type:"VuePress",key:"themeData",editable:!1,value:e.value},{type:"VuePress",key:"themeLocaleData",editable:!1,value:n.value})})})}}),iE=Object.freeze(Object.defineProperty({__proto__:null,default:eE},Symbol.toStringTag,{value:"Module"}));var nE={provider:"Giscus",lightTheme:"https://unpkg.com/vuepress-theme-hope@2.0.0-rc.59/templates/giscus/light.css",darkTheme:"https://unpkg.com/vuepress-theme-hope@2.0.0-rc.59/templates/giscus/dark.css",repo:"davidliuk/blog",repoId:"R_kgDOIgJd8g",category:"Announcements",categoryId:"DIC_kwDOIgJd8s4CY4CF"};const tE=nE,aE=Y(tE),Zu=Symbol(""),sm=()=>bs(Zu),lE=sm,rE=s=>{s.provide(Zu,aE)},zh=["ar","ca","da","de","en","eo","es","fa","fr","he","id","it","ja","ko","nl","pl","pt","ro","ru","th","tr","uk","uz","vi","zh-CN","zh-TW"];var pE=S({name:"GiscusComment",props:{identifier:{type:String,required:!0},darkmode:Boolean},setup(s){const e=lE(),i=Ia(),n=B(()=>!!(e.value.repo&&e.value.repoId&&e.value.category&&e.value.categoryId)),t=Y(!1),a=B(()=>{if(zh.includes(i.value))return i.value;const p=i.value.split("-")[0];return zh.includes(p)?p:"en"}),r=B(()=>({repo:e.value.repo,repoId:e.value.repoId,category:e.value.category,categoryId:e.value.categoryId,lang:a.value,theme:s.darkmode?e.value.darkTheme||"dark":e.value.lightTheme||"light",mapping:e.value.mapping||"pathname",term:s.identifier,inputPosition:e.value.inputPosition||"top",reactionsEnabled:e.value.reactionsEnabled===!1?"0":"1",strict:e.value.strict===!1?"0":"1",loading:e.value.lazyLoading===!1?"eager":"lazy",emitMetadata:"0"}));return us(async()=>{await l(()=>import("./giscus-BZxmVUME.js"),[]),t.value=!0}),()=>n.value?h("div",{id:"comment",class:["giscus-wrapper",{"input-top":e.value.inputPosition!=="bottom"}]},t.value?h("giscus-widget",r.value):h($i)):null}}),oE=S({name:"CommentService",props:{darkmode:Boolean},setup(s){const e=sm(),i=Os(),n=As(),t=B(()=>n.value.comment??e.value.comment!==!1);return()=>h(pE,{class:"vp-comment","vp-comment":"",identifier:n.value.commentID??i.value.path,darkmode:s.darkmode,style:{display:t.value?"block":"none"}})}}),hE=ze({enhance:({app:s})=>{rE(s),s.component("CommentService",oE)}});const dE=Object.freeze(Object.defineProperty({__proto__:null,default:hE},Symbol.toStringTag,{value:"Module"})),cE=/language-(shellscript|shell|bash|sh|zsh)/,uE=({delay:s=500,duration:e=2e3,locales:i,selector:n,showInMobile:t,ignoreSelector:a=[],transform:r})=>{const p=qr("(max-width: 419px)"),o=B(()=>!p.value||t),d=Pn(i),c=Os(),u=f=>{var b;if(f.hasAttribute("copy-code"))return;const v=document.createElement("button");v.type="button",v.classList.add("vp-copy-code-button"),v.setAttribute("aria-label",d.value.copy),v.setAttribute("data-copied",d.value.copied),(b=f.parentElement)==null||b.insertBefore(v,f),f.setAttribute("copy-code","")};ds(()=>[c.value.path,o.value],async()=>{document.body.classList.toggle("no-copy-code",!o.value),o.value&&(await Qe(),await On(s),document.querySelectorAll(n.join(",")).forEach(u))},{immediate:!0});const{copy:g}=z3({legacy:!0}),k=new WeakMap,A=async(f,v,b)=>{const E=v.cloneNode(!0);a.length&&E.querySelectorAll(a.join(",")).forEach(M=>{M.remove()}),r&&r(E);let w=E.textContent||"";if(cE.test(f.className)&&(w=w.replace(/^ *(\$|>) /gm,"")),await g(w),e<=0)return;b.classList.add("copied"),clearTimeout(k.get(b));const P=setTimeout(()=>{b.classList.remove("copied"),b.blur(),k.delete(b)},e);k.set(b,P)};Ns("click",f=>{const v=f.target;if(o.value&&v.matches('div[class*="language-"] > button.vp-copy-code-button')){const b=v.parentElement,E=v.nextElementSibling;if(!b||!E)return;A(b,E,v)}})};var mE=[],gE={"/zh/":{copy:"复制代码",copied:"已复制"},"/":{copy:"Copy code",copied:"Copied"}},kE=['[vp-content] div[class*="language-"] pre'];const EE=ze({setup:()=>{uE({selector:kE,ignoreSelector:mE,locales:gE,duration:2e3,delay:500,showInMobile:!1})}}),yE=Object.freeze(Object.defineProperty({__proto__:null,default:EE},Symbol.toStringTag,{value:"Module"})),AE=ze({setup(){Ns("beforeprint",()=>{document.querySelectorAll("details").forEach(s=>{s.open=!0})})}}),vE=Object.freeze(Object.defineProperty({__proto__:null,default:AE},Symbol.toStringTag,{value:"Module"})),fE=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),_E=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),BE="VUEPRESS_CODE_TAB_STORE",Wt=Wi(BE,{}),bE=S({name:"CodeTabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},slots:Object,setup(s,{slots:e}){const i=Y(s.active),n=ys([]),t=()=>{s.tabId&&(Wt.value[s.tabId]=s.data[i.value].id)},a=(d=i.value)=>{i.value=d<n.value.length-1?d+1:0,n.value[i.value].focus()},r=(d=i.value)=>{i.value=d>0?d-1:n.value.length-1,n.value[i.value].focus()},p=(d,c)=>{d.key===" "||d.key==="Enter"?(d.preventDefault(),i.value=c):d.key==="ArrowRight"?(d.preventDefault(),a()):d.key==="ArrowLeft"&&(d.preventDefault(),r()),s.tabId&&(Wt.value[s.tabId]=s.data[i.value].id)},o=()=>{if(s.tabId){const d=s.data.findIndex(({id:c})=>Wt.value[s.tabId]===c);if(d!==-1)return d}return s.active};return us(()=>{i.value=o(),ds(()=>Wt.value[s.tabId],(d,c)=>{if(s.tabId&&d!==c){const u=s.data.findIndex(({id:m})=>m===d);u!==-1&&(i.value=u)}})}),()=>s.data.length?h("div",{class:"vp-code-tabs"},[h("div",{class:"vp-code-tabs-nav",role:"tablist"},s.data.map(({id:d},c)=>{const u=c===i.value;return h("button",{type:"button",ref:m=>{m&&(n.value[c]=m)},class:["vp-code-tab-nav",{active:u}],role:"tab","aria-controls":`codetab-${s.id}-${c}`,"aria-selected":u,onClick:()=>{i.value=c,t()},onKeydown:m=>{p(m,c)}},e[`title${c}`]({value:d,isActive:u}))})),s.data.map(({id:d},c)=>{const u=c===i.value;return h("div",{class:["vp-code-tab",{active:u}],id:`codetab-${s.id}-${c}`,role:"tabpanel","aria-expanded":u},[h("div",{class:"vp-code-tab-title"},e[`title${c}`]({value:d,isActive:u})),e[`tab${c}`]({value:d,isActive:u})])})]):null}}),wE="VUEPRESS_TAB_STORE",kl=Wi(wE,{}),CE=S({name:"Tabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},slots:Object,setup(s,{slots:e}){const i=Y(s.active),n=ys([]),t=()=>{s.tabId&&(kl.value[s.tabId]=s.data[i.value].id)},a=(d=i.value)=>{i.value=d<n.value.length-1?d+1:0,n.value[i.value].focus()},r=(d=i.value)=>{i.value=d>0?d-1:n.value.length-1,n.value[i.value].focus()},p=(d,c)=>{d.key===" "||d.key==="Enter"?(d.preventDefault(),i.value=c):d.key==="ArrowRight"?(d.preventDefault(),a()):d.key==="ArrowLeft"&&(d.preventDefault(),r()),t()},o=()=>{if(s.tabId){const d=s.data.findIndex(({id:c})=>kl.value[s.tabId]===c);if(d!==-1)return d}return s.active};return us(()=>{i.value=o(),ds(()=>kl.value[s.tabId],(d,c)=>{if(s.tabId&&d!==c){const u=s.data.findIndex(({id:m})=>m===d);u!==-1&&(i.value=u)}})}),()=>s.data.length?h("div",{class:"vp-tabs"},[h("div",{class:"vp-tabs-nav",role:"tablist"},s.data.map(({id:d},c)=>{const u=c===i.value;return h("button",{type:"button",ref:m=>{m&&(n.value[c]=m)},class:["vp-tab-nav",{active:u}],role:"tab","aria-controls":`tab-${s.id}-${c}`,"aria-selected":u,onClick:()=>{i.value=c,t()},onKeydown:m=>{p(m,c)}},e[`title${c}`]({value:d,isActive:u}))})),s.data.map(({id:d},c)=>{const u=c===i.value;return h("div",{class:["vp-tab",{active:u}],id:`tab-${s.id}-${c}`,role:"tabpanel","aria-expanded":u},[h("div",{class:"vp-tab-title"},e[`title${c}`]({value:d,isActive:u})),e[`tab${c}`]({value:d,isActive:u})])})]):null}}),DE={enhance:({app:s})=>{s.component("CodeTabs",bE),s.component("Tabs",CE)}},FE=Object.freeze(Object.defineProperty({__proto__:null,default:DE},Symbol.toStringTag,{value:"Module"})),TE='<svg class="codepen-icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M123.429 668L468 897.714V692.571L277.143 565.143zM88 585.714L198.286 512 88 438.286v147.428zm468 312L900.571 668 746.857 565.143 556 692.57v205.143zM512 616l155.429-104L512 408 356.571 512zM277.143 458.857L468 331.43V126.286L123.429 356zM825.714 512L936 585.714V438.286zm-78.857-53.143L900.571 356 556 126.286v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312Q524.571 1024 512 1024t-24.571-7.429l-468-312Q0 691.43 0 668V356q0-23.429 19.429-36.571l468-312Q499.429 0 512 0t24.571 7.429l468 312Q1024 332.57 1024 356z"/></svg>',IE='<svg class="jsfiddle-icon" viewBox="0 0 1170 1024" xmlns="http://www.w3.org/2000/svg"><path d="M1028.571 441.143q63.429 26.286 102.572 83.143t39.143 126.571q0 93.714-67.429 160.286T940 877.714q-2.286 0-6.571-.285t-6-.286H232q-97.143-5.714-164.571-71.714T0 645.143q0-62.857 31.429-116t84-84q-6.858-22.286-6.858-46.857 0-65.715 46.858-112T269.143 240q54.286 0 98.286 33.143 42.857-88 127.142-141.714t186.572-53.715q94.857 0 174.857 46t126.571 124.857 46.572 172q0 3.429-.286 10.286t-.286 10.286zm-761.142 152q0 69.714 48 110.286T434.286 744q78.285 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.715T436 525.143q25.143 0 48.286 12T526 568.57t37.143 42.858 39.428 46.857 44 42.857T702 732.57t69.429 12q69.142 0 116.857-40.857T936 594.857q0-69.143-48-109.714T769.714 444.57Q688 444.571 632 500l53.143 61.714q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286T766.857 664q-24.571 0-47.143-12t-41.143-31.429-37.428-42.857-39.714-46.857T557.143 488 502 456.571t-67.714-12q-69.715 0-118.286 40.286t-48.571 108.286z"/></svg>',LE='<svg class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M512 74.667C270.933 74.667 74.667 270.933 74.667 512S270.933 949.333 512 949.333 949.333 753.067 949.333 512 753.067 74.667 512 74.667zm0 810.666C307.2 885.333 138.667 716.8 138.667 512S307.2 138.667 512 138.667 885.333 307.2 885.333 512 716.8 885.333 512 885.333z"/><path d="M708.267 465.067 473.6 330.667c-8.533-4.267-17.067-6.4-25.6-6.4-29.867 0-53.333 23.466-53.333 53.333v268.8c0 8.533 2.133 19.2 6.4 25.6 10.666 17.067 27.733 27.733 46.933 27.733 8.533 0 17.067-2.133 25.6-6.4l234.667-134.4c8.533-4.266 14.933-10.666 19.2-19.2 6.4-12.8 8.533-27.733 4.266-40.533-2.133-14.933-10.666-25.6-23.466-34.133zM458.667 627.2V396.8L661.333 512 458.667 627.2z"/></svg>';var xE={useBabel:!1,jsLib:[],cssLib:[],codepenLayout:"left",codepenEditors:"101",babel:"https://unpkg.com/@babel/standalone/babel.min.js",vue:"https://unpkg.com/vue/dist/vue.global.prod.js",react:"https://unpkg.com/react/umd/react.production.min.js",reactDOM:"https://unpkg.com/react-dom/umd/react-dom.production.min.js"};const El=xE,jh={html:{types:["html","slim","haml","md","markdown","vue"],map:{html:"none",vue:"none",md:"markdown"}},js:{types:["js","javascript","coffee","coffeescript","ts","typescript","ls","livescript"],map:{js:"none",javascript:"none",coffee:"coffeescript",ls:"livescript",ts:"typescript"}},css:{types:["css","less","sass","scss","stylus","styl"],map:{css:"none",styl:"stylus"}}},OE=(s,e,i)=>{const n=document.createElement(s);return ai(e)&&Te(e).forEach(t=>{if(t.indexOf("data"))n[t]=e[t];else{const a=t.replace("data","");n.dataset[a]=e[t]}}),n},np=s=>({...El,...s,jsLib:Array.from(new Set([El.jsLib??[],s.jsLib??[]].flat())),cssLib:Array.from(new Set([El.cssLib??[],s.cssLib??[]].flat()))}),gn=(s,e)=>{if(Ur(s[e]))return s[e];const i=new Promise(n=>{var a;const t=document.createElement("script");t.src=e,(a=document.querySelector("body"))==null||a.appendChild(t),t.onload=()=>{n()}});return s[e]=i,i},PE=(s,e)=>{if(e.css&&Array.from(s.childNodes).every(i=>i.nodeName!=="STYLE")){const i=OE("style",{innerHTML:e.css});s.appendChild(i)}},RE=(s,e,i)=>{const n=i.getScript();if(n&&Array.from(e.childNodes).every(t=>t.nodeName!=="SCRIPT")){const t=document.createElement("script");t.appendChild(document.createTextNode(`{const document=window.document.querySelector('#${s} .vp-code-demo-display').shadowRoot;
${n}}`)),e.appendChild(t)}},SE=["html","js","css"],VE=s=>{const e=Te(s),i={html:[],js:[],css:[],isLegal:!1};return SE.forEach(n=>{const t=e.filter(a=>jh[n].types.includes(a));if(t.length){const a=t[0];i[n]=[s[a].replace(/^\n|\n$/g,""),jh[n].map[a]??a]}}),i.isLegal=(!i.html.length||i.html[1]==="none")&&(!i.js.length||i.js[1]==="none")&&(!i.css.length||i.css[1]==="none"),i},em=s=>s.replace(/<br \/>/g,"<br>").replace(/<((\S+)[^<]*?)\s+\/>/g,"<$1></$2>"),im=s=>`<div id="app">
${em(s)}
</div>`,NE=s=>`${s.replace("export default ","const $reactApp = ").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,"")};
ReactDOM.createRoot(document.getElementById("app")).render(React.createElement($reactApp))`,zE=s=>s.replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u,"Vue.createApp({$1}).mount('#app')").replace(/export\s+default\s*define(Async)?Component\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u,"Vue.createApp({$1}).mount('#app')").trim(),nm=s=>`(function(exports){var module={};module.exports=exports;${s};return module.exports.__esModule?exports.default:module.exports;})({})`,jE=(s,e)=>{const i=np(e),n=s.js[0]??"";return{...i,html:em(s.html[0]??""),js:n,css:s.css[0]??"",isLegal:s.isLegal,getScript:()=>{var t;return i.useBabel?((t=window.Babel.transform(n,{presets:["es2015"]}))==null?void 0:t.code)??"":n}}},ME=/<template>([\s\S]+)<\/template>/u,qE=/<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u,GE=/<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u,HE=(s,e)=>{const i=np(e),n=s.html[0]??"",t=ME.exec(n),a=qE.exec(n),r=GE.exec(n),p=(t==null?void 0:t[1].replace(/^\n|\n$/g,""))??"",[o="",d=""]=a?[a[4].replace(/^\n|\n$/g,""),a[3]]:[],[c="",u=""]=r?[r[4].replace(/^\n|\n$/g,""),r[3]]:[],m=d===""&&(u===""||u==="css");return{...i,html:im(p),js:zE(o),css:c,isLegal:m,jsLib:[i.vue,...i.jsLib],getScript:()=>{var k,A;const g=e.useBabel?((A=(k=window.Babel)==null?void 0:k.transform(o,{presets:["es2015"]}))==null?void 0:A.code)??"":o.replace(/export\s+default/u,"return");return`const app=window.document.createElement('div');document.firstElementChild.appendChild(app);const appOptions=${nm(g)};appOptions.template=\`${p.replace("`",'\\`"')}\`;window.Vue.createApp(appOptions).mount(app);`}}},UE=(s,e)=>{var t;const i=np(e),n=s.js[0]??"";return{...i,html:im(""),js:NE(n),css:s.css[0]??((t=s.js[0])==null?void 0:t.replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/,"$1").trim())??"",isLegal:s.isLegal,jsLib:[i.react,i.reactDOM,...i.jsLib],jsx:!0,getScript:()=>{var r,p;const a=((p=(r=window.Babel)==null?void 0:r.transform(n,{presets:["es2015","react"]}))==null?void 0:p.code)??"";return`window.ReactDOM.createRoot(document.firstElementChild).render(window.React.createElement(${nm(a)}))`}}},kn={},$E=s=>Promise.all([gn(kn,s.babel),gn(kn,s.react),gn(kn,s.reactDOM)]),KE=s=>{const e=[gn(kn,s.vue)];return s.useBabel&&e.push(gn(kn,s.babel)),Promise.all(e)},WE=s=>s.useBabel?gn(kn,s.babel):Promise.resolve();var QE=S({name:"CodeDemo",props:{id:{type:String,required:!0},type:{type:String,default:"normal"},title:{type:String,default:""},config:{type:String,default:""},code:{type:String,required:!0}},slots:Object,setup(s,{slots:e}){const[i,n]=dt(!1),t=ys(),a=ys(),r=Y("0"),p=Y(!1),o=B(()=>JSON.parse(s.config?Bn(s.config):"{}")),d=B(()=>{const k=JSON.parse(Bn(s.code));return VE(k)}),c=B(()=>s.type==="react"?UE(d.value,o.value):s.type==="vue"?HE(d.value,o.value):jE(d.value,o.value)),u=B(()=>c.value.isLegal),m=(k=!1)=>{const A=t.value.attachShadow({mode:"open"}),f=document.createElement("div");f.classList.add("code-demo-app"),A.appendChild(f),u.value?(k&&(f.innerHTML=c.value.html),PE(A,c.value),RE(s.id,A,c.value),r.value="0"):r.value="auto",p.value=!0},g=()=>{switch(s.type){case"react":return $E(c.value).then(()=>m());case"vue":return KE(c.value).then(()=>m());default:return WE(c.value).then(()=>m(!0))}};return Ns("beforeprint",()=>{n(!0)}),us(async()=>{await On(800),await g()}),()=>{var k;return h("div",{class:"vp-container vp-code-demo",id:s.id},[h("div",{class:"vp-container-header"},[c.value.isLegal?h("button",{type:"button",title:"toggle","aria-hidden":!0,class:["vp-code-demo-toggle-button",i.value?"down":"end"],onClick:()=>{r.value=i.value?"0":`${a.value.clientHeight+13.8}px`,n()}}):null,s.title?h("span",{class:"vp-container-title"},decodeURIComponent(s.title)):null,c.value.isLegal&&c.value.jsfiddle!==!1?h("form",{class:"code-demo-jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[h("input",{type:"hidden",name:"html",value:c.value.html}),h("input",{type:"hidden",name:"js",value:c.value.js}),h("input",{type:"hidden",name:"css",value:c.value.css}),h("input",{type:"hidden",name:"wrap",value:"1"}),h("input",{type:"hidden",name:"panel_js",value:"3"}),h("input",{type:"hidden",name:"resources",value:[...c.value.cssLib,...c.value.jsLib].join(",")}),h("button",{type:"submit",class:"jsfiddle-button",innerHTML:IE,"aria-label":"JSFiddle","data-balloon-pos":"down"})]):null,!c.value.isLegal||c.value.codepen!==!1?h("form",{class:"code-demo-codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[h("input",{type:"hidden",name:"data",value:JSON.stringify({html:c.value.html,js:c.value.js,css:c.value.css,js_external:c.value.jsLib.join(";"),css_external:c.value.cssLib.join(";"),layout:c.value.codepenLayout,html_pre_processor:d.value?d.value.html[1]:"none",js_pre_processor:d.value?d.value.js[1]:c.value.jsx?"babel":"none",css_pre_processor:d.value?d.value.css[1]:"none",editors:c.value.codepenEditors})}),h("button",{type:"submit",innerHTML:TE,class:"codepen-button","aria-label":"Codepen","data-balloon-pos":"down"})]):null]),p.value?null:h($i,{class:"vp-code-demo-loading"}),h("div",{ref:t,class:"vp-code-demo-display",style:{display:u.value&&p.value?"block":"none"}}),h("div",{class:"vp-code-demo-code-wrapper",style:{height:r.value}},h("div",{ref:a,class:"vp-code-demo-codes"},(k=e.default)==null?void 0:k.call(e)))])}}}),JE=S({name:"MdDemo",props:{id:{type:String,required:!0},title:{type:String,default:""}},slots:Object,setup(s,{slots:e}){const[i,n]=dt(!1),t=ys(),a=Y("0");return Ns("beforeprint",()=>{n(!0)}),()=>{var r,p;return h("div",{class:"vp-container vp-md-demo",id:s.id},[h("div",{class:"vp-container-header"},[h("button",{type:"button",title:"toggle","aria-hidden":!0,class:["vp-md-demo-toggle-button",i.value?"down":"end"],onClick:()=>{a.value=i.value?"0":`${t.value.clientHeight+13.8}px`,n()}}),s.title?h("div",{class:"vp-container-title"},decodeURIComponent(s.title)):null]),h("div",{class:"vp-md-demo-display"},(r=e.default)==null?void 0:r.call(e)),h("div",{class:"vp-md-demo-code-wrapper",style:{height:a.value}},h("div",{ref:t,class:"vp-md-demo-codes"},(p=e.code)==null?void 0:p.call(e)))])}}});let YE={};const tm=Symbol(""),XE=()=>bs(tm),ZE=s=>{s.provide(tm,YE)},sy=(async()=>{}).constructor,ey=(s,e,i)=>e==="js"?sy("myChart",`let width,height,option,__echarts_config__;
{
${s}
__echarts_config__={width,height,option};
}
return __echarts_config__;
`)(i):Promise.resolve({option:JSON.parse(s)});var iy=S({name:"ECharts",props:{config:{type:String,required:!0},id:{type:String,required:!0},title:{type:String,default:""},type:{type:String,default:"json"}},setup(s){const e=XE(),i=Y(!0),n=ys();let t;return Ns("resize",jr(()=>t==null?void 0:t.resize(),100)),us(()=>{Promise.all([l(()=>import("./index-AN989yVn.js"),[]),On(800)]).then(async([a])=>{var o;await((o=e.setup)==null?void 0:o.call(e)),t=a.init(n.value);const{option:r,...p}=await ey(Bn(s.config),s.type,t);t.resize(p),t.setOption({...e.option,...r}),i.value=!1})}),Hi(()=>{t==null||t.dispose()}),()=>[s.title?h("div",{class:"echarts-title"},decodeURIComponent(s.title)):null,h("div",{class:"echarts-wrapper"},[h("div",{ref:n,class:"echarts-container",id:s.id}),i.value?h($i,{class:"echarts-loading",height:360}):null])]}});let ny={};const am=Symbol(""),ty=()=>bs(am),ay=s=>{s.provide(am,ny)},ly={autoResize:!0,showCompileOutput:!1,clearConsole:!1,layout:"horizontal",ssr:!1};let ry=ly;const lm=Symbol(""),py=()=>bs(lm),oy=s=>{s.provide(lm,ry)};var hy=S({name:"MarkMap",props:{id:{type:String,required:!0},content:{type:String,required:!0}},setup(s){const e=Y(!0),i=ys(),n=ys();let t=null;return Ns("resize",jr(()=>{t==null||t.fit()},100)),us(()=>{Promise.all([l(()=>import("./index-BYq9jyaM.js"),__vite__mapDeps([1143,1144])),l(()=>import("./index-DRWmbcXV.js"),[]),l(()=>import("./index-B9oRC6ej.js"),__vite__mapDeps([1145,1144])),On(800)]).then(async([{Transformer:a},{Toolbar:r},{Markmap:p,deriveOptions:o}])=>{const d=new a,{frontmatter:c,root:u}=d.transform(Bn(s.content));t=p.create(n.value,o({maxWidth:240,...c==null?void 0:c.markmap}));const{el:m}=r.create(t);t.setData(u),await t.fit(),m.style.position="absolute",m.style.bottom="0.5rem",m.style.right="0.5rem",i.value.append(m),e.value=!1})}),Hi(()=>{t==null||t.destroy()}),()=>h("div",{class:"markmap-wrapper",ref:i},[h("svg",{ref:n,class:"markmap-svg",id:s.id}),e.value?h($i,{class:"markmap-loading",height:360}):null])}});const Mh=()=>{const s=document.documentElement;return s.classList.contains("dark")||s.getAttribute("data-theme")==="dark"},Zi={useMaxWidth:!1},dy=s=>({dark:s,background:s?"#1e1e1e":"#fff",primaryColor:s?"#389d70":"#4abf8a",primaryBorderColor:s?"#389d70":"#4abf8a",primaryTextColor:s?"#fff":"#000",secondaryColor:"#ffb500",secondaryBorderColor:s?"#fff":"#000",secondaryTextColor:s?"#ddd":"#333",tertiaryColor:s?"#282828":"#efeef4",tertiaryBorderColor:s?"#bbb":"#242424",tertiaryTextColor:s?"#ddd":"#333",noteBkgColor:s?"#f6d365":"#fff5ad",noteTextColor:"#242424",noteBorderColor:s?"#f6d365":"#333",lineColor:s?"#d3d3d3":"#333",textColor:s?"#fff":"#242424",mainBkg:s?"#389d70":"#4abf8a",errorBkgColor:"#eb4d5d",errorTextColor:"#fff",nodeBorder:s?"#389d70":"#4abf8a",nodeTextColor:s?"#fff":"#242424",signalTextColor:s?"#9e9e9e":"#242424",classText:"#fff",labelColor:"#fff",attributeBackgroundColorEven:s?"#0d1117":"#fff",attributeBackgroundColorOdd:s?"#161b22":"#f8f8f8",fillType0:s?"#cf1322":"#f1636e",fillType1:"#f39c12",fillType2:"#2ecc71",fillType3:"#fa541c",fillType4:"#25a55b",fillType5:"#13c2c2",fillType6:"#096dd9",fillType7:"#aa6fe9"});var cy=S({name:"Mermaid",props:{id:{type:String,required:!0},code:{type:String,required:!0},title:{type:String,default:""}},setup(s){const{themeVariables:e,...i}=ty(),n=ys(),t=B(()=>Bn(s.code)),a=Y(""),r=Y(!1);let p=!1;const o=async()=>{const[{default:u}]=await Promise.all([l(()=>import("./mermaid.esm.min-CV-hAWR8.js").then(m=>m.bz),[]),p?Promise.resolve():(p=!0,On(800))]);u.initialize({theme:"base",themeVariables:{...dy(r.value),...qk(e)?e(r.value):e},flowchart:Zi,sequence:Zi,journey:Zi,gantt:Zi,er:Zi,pie:Zi,...i,startOnLoad:!1}),a.value=(await u.render(s.id,t.value)).svg},d=()=>{const{body:u}=document,m=document.createElement("div");m.classList.add("mermaid-preview"),m.innerHTML=a.value,u.appendChild(m),m.addEventListener("click",()=>{u.removeChild(m)})},c=()=>{const u=`data:image/svg+xml;charset=utf8,${a.value.replace(/<br>/g,"<br />").replace(/%/g,"%25").replace(/"/g,"%22").replace(/'/g,"%27").replace(/&/g,"%26").replace(/#/g,"%23").replace(/{/g,"%7B").replace(/}/g,"%7D").replace(/</g,"%3C").replace(/>/g,"%3E")}`,m=document.createElement("a");m.setAttribute("href",u),m.setAttribute("download",`${s.title?Bn(s.title):s.id}.svg`),m.click()};return us(()=>{r.value=Mh(),o(),N3(document.documentElement,()=>{r.value=Mh()},{attributeFilter:["class","data-theme"],attributes:!0}),ds(r,()=>o())}),()=>[h("div",{class:"mermaid-actions"},[h("button",{class:"preview-button",onClick:()=>d(),title:"preview",innerHTML:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1316 1024" fill="currentColor"><path d="M658.286 0C415.89 0 0 297.106 0 512c0 214.82 415.89 512 658.286 512 242.322 0 658.285-294.839 658.285-512S900.608 0 658.286 0zm0 877.714c-161.573 0-512-221.769-512-365.714 0-144.018 350.427-365.714 512-365.714 161.572 0 512 217.16 512 365.714s-350.428 365.714-512 365.714z"/><path d="M658.286 292.571a219.429 219.429 0 1 0 0 438.858 219.429 219.429 0 0 0 0-438.858zm0 292.572a73.143 73.143 0 1 1 0-146.286 73.143 73.143 0 0 1 0 146.286z"/></svg>'}),h("button",{class:"download-button",onClick:()=>c(),title:"download",innerHTML:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024" fill="currentColor"><path d="M828.976 894.125H190.189c-70.55 0-127.754-57.185-127.754-127.753V606.674c0-17.634 14.31-31.933 31.933-31.933h63.889c17.634 0 31.932 14.299 31.932 31.933v95.822c0 35.282 28.596 63.877 63.877 63.877h511.033c35.281 0 63.877-28.595 63.877-63.877v-95.822c0-17.634 14.298-31.933 31.943-31.933h63.878c17.635 0 31.933 14.299 31.933 31.933v159.7c0 70.566-57.191 127.751-127.754 127.751zM249.939 267.51c12.921-12.92 33.885-12.92 46.807 0l148.97 148.972V94.893c0-17.634 14.302-31.947 31.934-31.947h63.876c17.638 0 31.946 14.313 31.946 31.947v321.589l148.97-148.972c12.922-12.92 33.876-12.92 46.797 0l46.814 46.818c12.922 12.922 12.922 33.874 0 46.807L552.261 624.93c-1.14 1.138-21.664 13.684-42.315 13.693-20.877.01-41.88-12.542-43.021-13.693L203.122 361.135c-12.923-12.934-12.923-33.885 0-46.807l46.817-46.818z"/></svg>'})]),h("div",{ref:n,class:"mermaid-wrapper"},a.value?h("div",{class:"mermaid-content",innerHTML:a.value}):h($i,{class:"mermaid-loading",height:96}))]}});const rm=({title:s="",link:e})=>h("div",{class:"vp-container vp-playground"},[h("div",{class:"vp-container-header"},[s?h("div",{class:"vp-container-title"},decodeURIComponent(s)):null,h("div",{class:"vp-playground-actions"},[h("a",{class:"vp-playground-action no-external-link-icon",href:decodeURIComponent(e),target:"_blank",innerHTML:LE})])]),h("div",{class:"vp-playground-container"},h("iframe",{src:decodeURIComponent(e)}))]);rm.displayName="Playground";const uy=s=>JSON.parse(decodeURIComponent(s));var my=S({name:"VuePlayground",props:{title:{type:String,default:""},files:{type:String,required:!0},settings:{type:String,default:"{}"}},setup(s){const{vueVersion:e=Pl,vueRuntimeDevUrl:i=`https://unpkg.com/@vue/runtime-dom@${e}/dist/runtime-dom.esm-browser.js`,vueRuntimeProdUrl:n=`https://unpkg.com/@vue/runtime-dom@${e}/dist/runtime-dom.esm-browser.prod.js`,vueServerRendererUrl:t=`https://unpkg.com/@vue/server-renderer@${e}/dist/server-renderer.esm-browser.js`,...a}=py(),r=Y(!0),p=ys(),o=ys(),d=ys(),c=B(()=>Hl({},a,uy(s.settings))),u=async()=>{const[{useStore:m,useVueImportMap:g,Repl:k},{default:A}]=await Promise.all([l(()=>import("./vue-repl-Cgu1dNxF.js"),__vite__mapDeps([1146,1147])),l(()=>import("./codemirror-editor-BaH0YJqt.js"),__vite__mapDeps([1148,1147]))]);p.value=k,d.value=A;const{importMap:f,vueVersion:v}=g({runtimeDev:i,runtimeProd:n,serverRenderer:t});o.value=m({builtinImportMap:f,vueVersion:v},decodeURIComponent(s.files))};return us(async()=>{await u(),r.value=!1}),()=>[h("div",{class:"vp-container vue-playground-wrapper"},[s.title?h("div",{class:"vp-container-header"},h("div",{class:"vp-container-title"},decodeURIComponent(s.title))):null,h("div",{class:"repl-container"},[r.value?h($i,{class:"vue-preview-loading",height:192}):null,p.value?h(p.value,{...c.value,editor:d.value,store:o.value}):null])])]}});const gy={enhance:({app:s})=>{s.component("CodeDemo",QE),s.component("MdDemo",JE),s.component("ECharts",iy),ZE(s),s.component("MarkMap",hy),ay(s),s.component("Mermaid",cy),s.component("Playground",rm),oy(s),s.component("VuePlayground",my)}},ky=Object.freeze(Object.defineProperty({__proto__:null,default:gy},Symbol.toStringTag,{value:"Module"})),Ey=Y({}),pm=Symbol(""),yy=()=>bs(pm),Ay=s=>{s.provide(pm,Ey)},vy='<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>',fy=s=>Ps(s)?Array.from(document.querySelectorAll(s)):s.map(e=>Array.from(document.querySelectorAll(e))).flat(),om=s=>new Promise((e,i)=>{s.complete?e({type:"image",element:s,src:s.src,width:s.naturalWidth,height:s.naturalHeight,alt:s.alt,msrc:s.src}):(s.onload=()=>{e(om(s))},s.onerror=()=>{i()})}),_y=(s,{download:e=!0,fullscreen:i=!0}={})=>{s.on("uiRegister",()=>{if(s.ui.registerElement({name:"bulletsIndicator",className:"photo-swipe-bullets-indicator",appendTo:"wrapper",onInit:n=>{const t=[];let a=-1;for(let r=0;r<s.getNumItems();r++){const p=document.createElement("div");p.className="photo-swipe-bullet",p.onclick=o=>{s.goTo(t.indexOf(o.target))},t.push(p),n.appendChild(p)}s.on("change",()=>{a>=0&&t[a].classList.remove("active"),t[s.currIndex].classList.add("active"),a=s.currIndex})}}),i){const{isSupported:n,toggle:t}=La();n.value&&s.ui.registerElement({name:"fullscreen",order:7,isButton:!0,html:'<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',onClick:()=>{t()}})}e&&s.ui.registerElement({name:"download",order:8,isButton:!0,tagName:"a",html:{isCustomSVG:!0,inner:'<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',outlineID:"pswp__icn-download"},onInit:n=>{n.setAttribute("download",""),n.setAttribute("target","_blank"),n.setAttribute("rel","noopener"),s.on("change",()=>{n.setAttribute("href",s.currSlide.data.src)})}})})},By=(s,{scrollToClose:e=!0,download:i=!0,fullscreen:n=!0,...t})=>l(async()=>{const{default:a}=await import("./photoswipe.esm-GXRgw7eJ.js");return{default:a}},[]).then(({default:a})=>{let r=null;const p=s.map(o=>({html:vy,element:o,msrc:o.src}));return s.forEach((o,d)=>{const c=()=>{r==null||r.destroy(),r=new a({preloaderDelay:0,showHideAnimationType:"zoom",...t,dataSource:p,index:d,...e?{closeOnVerticalDrag:!0,wheelToZoom:!1}:{}}),_y(r,{download:i,fullscreen:n}),r.addFilter("thumbEl",()=>o),r.addFilter("placeholderSrc",()=>o.src),r.init()};o.getAttribute("photo-swipe")||(o.style.cursor="zoom-in",o.addEventListener("click",()=>{c()}),o.addEventListener("keypress",({key:u})=>{u==="Enter"&&c()}),o.setAttribute("photo-swipe","")),om(o).then(u=>{p.splice(d,1,u),r==null||r.refreshSlideContent(d)})}),e?Ns("wheel",()=>{r==null||r.close()}):()=>{}}),by=({selector:s,locales:e,delay:i=500,download:n=!0,fullscreen:t=!0,scrollToClose:a=!0})=>{const r=yy(),p=Pn(e),o=Os(),d=As();let c=null;const u=()=>{const{photoSwipe:m}=d.value;m!==!1&&Qe().then(()=>On(i)).then(async()=>{const g=Ps(m)?m:s;c=await By(fy(g),{...r.value,...p.value,download:n,fullscreen:t,scrollToClose:a})})};us(()=>{u(),ds(()=>[o.value.path,r.value],()=>{c==null||c(),u()})}),Hi(()=>{c==null||c()})};var wy={"/zh/":{closeTitle:"关闭",downloadTitle:"下载图片",fullscreenTitle:"切换全屏",zoomTitle:"缩放",arrowPrevTitle:"上一个 (左箭头)",arrowNextTitle:"下一个 (右箭头)"},"/":{closeTitle:"Close",downloadTitle:"Download Image",fullscreenTitle:"Switch to fullscreen",zoomTitle:"Zoom in/out",arrowPrevTitle:"Prev (Arrow Left)",arrowNextTitle:"Next (Arrow Right)"}};const Cy="[vp-content] :not(a) > img:not([no-view])",Dy=wy,Fy=800,Ty=!0,Iy=!0,Ly=!0;var xy=ze({enhance:({app:s})=>{Ay(s)},setup:()=>{by({selector:Cy,delay:Fy,locales:Dy,download:Ty,fullscreen:Iy,scrollToClose:Ly})}});const Oy=Object.freeze(Object.defineProperty({__proto__:null,default:xy},Symbol.toStringTag,{value:"Module"}));function Py(s){return{all:s=s||new Map,on:function(e,i){var n=s.get(e);n?n.push(i):s.set(e,[i])},off:function(e,i){var n=s.get(e);n&&(i?n.splice(n.indexOf(i)>>>0,1):s.set(e,[]))},emit:function(e,i){var n=s.get(e);n&&n.slice().map(function(t){t(i)}),(n=s.get("*"))&&n.slice().map(function(t){t(e,i)})}}}const hm=Symbol(""),Ry=()=>{const s=bs(hm);if(!s)throw new Error("usePwaEvent() is called without provider.");return s},Sy=()=>{navigator.serviceWorker.getRegistration().then(s=>{s!=null&&s.active&&s.addEventListener("updatefound",()=>{window.location.reload(!0)})})},Vy=async(s,e={},i=!0)=>{const{register:n}=await l(async()=>{const{register:t}=await import("./index-DTEEl-sV.js");return{register:t}},[]);n(s,{ready(t){var a;i&&console.info("[Service Worker]: active"),(a=e.ready)==null||a.call(e,t)},registered(t){var a;i&&console.log("[Service Worker]: registered"),(a=e.registered)==null||a.call(e,t)},cached(t){var a;i&&console.log("[Service Worker]: cached"),(a=e.cached)==null||a.call(e,t)},async updatefound(t){var a;await navigator.serviceWorker.getRegistration()&&(i&&console.log("[Service Worker]: update found"),(a=e.updatefound)==null||a.call(e,t))},updated(t){var a;i&&console.log("[Service Worker]: updated"),(a=e.updated)==null||a.call(e,t)},offline(){var t;i&&console.log("[Service Worker]: offline"),(t=e.offline)==null||t.call(e)},error(t){var a;i&&console.error("[Service Worker]: ",t),(a=e.error)==null||a.call(e,t)}})},Ny=async(s,e)=>Vy(Cs(s),{ready(i){e.emit("ready",i)},registered(i){e.emit("registered",i)},cached(i){e.emit("cached",i)},updatefound(i){e.emit("updatefound",i)},updated(i){const n="service-worker-version",t=Number(localStorage.getItem(n)||0);localStorage.setItem(n,(t+1).toString()),localStorage.removeItem("manifest"),e.emit("updated",i)},offline(){e.emit("offline")},error(i){e.emit("error",i)}}),zy=(s,e=!1)=>{const i=Py();Ce(hm,i),us(async()=>{if(!("serviceWorker"in navigator))return;let n=!1;navigator.serviceWorker.controller&&navigator.serviceWorker.addEventListener("controllerchange",()=>{n||(n=!0,window.location.reload())}),e&&Sy(),await Ny(s,i)})},jy=()=>{us(()=>{if(window.matchMedia("(display-mode: standalone)").matches){const s=document.head.querySelector('meta[name="viewport"]');if(s){s.setAttribute("content","width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover");return}const e=document.createElement("meta");e.name="viewport",e.content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover",document.head.appendChild(e)}})},dm=({name:s="",color:e="currentColor"},{slots:i})=>h("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${s}-icon`],viewBox:"0 0 1024 1024",fill:e,"aria-label":`${s} icon`},i.default());dm.displayName="SVGWrapper";const cm=()=>h(dm,{name:"update"},()=>h("path",{d:"M949.949 146.25v255.826c0 21.981-13.989 35.97-35.97 35.97H658.154c-13.988 0-25.983-7.992-33.973-21.981-5.997-13.989-4-27.977 7.991-39.97l79.942-77.946c-55.954-51.973-121.918-77.955-199.863-77.955-37.975 0-75.95 8.002-113.924 21.99-37.975 15.985-67.948 37.976-91.934 63.957-25.982 23.987-47.973 53.96-63.957 91.934-29.983 73.955-29.983 153.895 0 227.85 15.984 37.976 37.975 67.947 63.957 91.934 23.986 25.982 53.959 47.973 91.934 63.956 37.974 13.989 75.95 21.991 113.924 21.991 45.967 0 87.942-9.998 127.913-29.982 41.976-17.99 75.951-45.967 101.931-83.943 7.993-4 11.994-5.995 13.989-5.995 5.997 0 9.998 1.994 13.988 5.995l77.958 77.946c3.989 4 5.986 7.993 5.986 11.994 0 1.994-1.996 5.995-3.99 11.994-43.973 51.962-93.941 91.934-151.9 117.914-53.958 25.983-115.92 39.972-185.874 39.972-61.961 0-119.921-11.984-169.89-33.973-57.96-25.985-105.923-57.963-139.896-93.943-35.98-33.972-67.958-81.936-93.94-139.897-45.967-101.93-45.967-237.846 0-339.777 25.982-57.96 57.96-105.923 93.94-139.896 33.973-35.98 81.936-67.958 139.896-93.94 49.968-21.99 107.928-33.974 169.89-33.974 55.963 0 109.923 9.988 161.885 29.973 53.97 21.99 101.933 51.963 139.908 89.938l73.954-73.944c9.987-9.998 23.987-13.988 39.971-8.002 13.988 8.002 21.98 19.995 21.98 33.984z"}));cm.displayName="UpdateIcon";const My=s=>{const e=s.waiting;if(!e)return;const i=new MessageChannel;e.postMessage({type:"SKIP_WAITING"},[i.port2])},qy=S({name:"PwaReadyPopup",props:{locales:{type:Object,required:!0}},slots:Object,setup(s,{slots:e}){const i=Pn(s.locales),n=ys(),t=B(()=>!!n.value),a=()=>{n.value&&(My(n.value),n.value=void 0)};return us(()=>{Ry().on("updated",r=>{n.value=r})}),()=>h(Mi,{name:"popup"},()=>{var r;return((r=e.default)==null?void 0:r.call(e,{isReady:t.value,reload:a}))??(t.value?h("button",{type:"button",class:"sw-update-popup",tabindex:0,onClick:()=>{a()}},[i.value.update,h("span",{class:"icon-wrapper"},h(cm))]):null)})}}),Gy={"/zh/":{install:"安装",iOSInstall:"点击分享按钮然后点击“添加到主屏幕”",cancel:"取消",close:"关闭",prevImage:"上一张图片",nextImage:"下一张图片",desc:"详情",feature:"主要特色",explain:"该应用可以安装在你的 PC 或移动设备上。这将使该 Web 应用程序外观和行为与其他应用程序相同。它将在出现在应用程序列表中，并可以固定到主屏幕，开始菜单或任务栏。此 Web 应用程序还将能够与其他应用程序和你的操作系统安全地进行交互。",hint:"发现新内容可用",update:"新内容已就绪"},"/":{install:"Install",iOSInstall:"Tap the share button and then 'Add to Home Screen'",cancel:"Cancel",close:"Close",prevImage:"Previous Image",nextImage:"Next Image",desc:"Description",feature:"Key Features",explain:"This app can be installed on your PC or mobile device.  This will allow this web app to look and behave like any other installed app.  You will find it in your app lists and be able to pin it to your home screen, start menus or task bars.  This installed web app will also be able to safely interact with other apps and your operating system. ",hint:"New content found.",update:"New content is available."}},Hy=ze({setup:()=>{zy("service-worker.js",!1),jy()},rootComponents:[()=>h(qy,{locales:Gy})]}),Uy=Object.freeze(Object.defineProperty({__proto__:null,default:Hy},Symbol.toStringTag,{value:"Module"})),um="VUEPRESS_REDIRECT_STATUS",qh=W3(um,{}),Gh=Hr(um,{}),$y=s=>{const e=Q3(),i=Ne(),n=Ci(s.config);return B(()=>{if(n.some(([t])=>i.value===t)){for(const t of e.value)for(const[a,r]of n)if(r.includes(t))return a===i.value?null:{lang:t,localePath:a}}return null})};var Ky=S({name:"RedirectModal",props:{config:{type:Object,required:!0},locales:{type:Object,required:!0}},setup(s){const e=wi(),i=su(),n=Ne(),t=$y(s.config),a=Y(),r=Gr(a),p=Y(!1),o=B(()=>{if(!t.value)return null;const{lang:c,localePath:u}=t.value,m=[s.locales[u],s.locales[n.value]];return{hint:m.map(({hint:g})=>g.replace("$1",c)),switch:m.map(({switch:g})=>g.replace("$1",c)).join(" / "),cancel:m.map(({cancel:g})=>g).join(" / "),remember:m.map(({remember:g})=>g).join(" / ")}}),d=()=>{Gh.value[n.value]=!0,p.value&&(qh.value[n.value]=!0),r.value=!1};return ds(i,()=>{r.value=!1}),us(async()=>{a.value=document.body,await Qe(),t.value&&!Gh.value[n.value]&&!qh.value[n.value]&&(r.value=!0)}),Fr(()=>{r.value=!1}),()=>h(Tc,{name:"redirect-modal-fade"},()=>{var c,u,m,g;return r.value?h("div",{key:"mask",class:"redirect-modal-mask"},h("div",{key:"popup",class:"redirect-modal-wrapper"},[h("div",{class:"redirect-modal-content"},(c=o.value)==null?void 0:c.hint.map(k=>h("p",k))),h("div",{class:"redirect-modal-hint"},[h("input",{id:"remember-redirect",type:"checkbox",value:p.value,onChange:()=>{p.value=!p.value}}),h("label",{for:"remember-redirect"},(u=o.value)==null?void 0:u.remember)]),h("button",{type:"button",class:"redirect-modal-action primary",onClick:()=>{d(),e.replace(i.value.replace(n.value,t.value.localePath))}},(m=o.value)==null?void 0:m.switch),h("button",{type:"button",class:"redirect-modal-action",onClick:()=>{d()}},(g=o.value)==null?void 0:g.cancel)])):null})}}),Wy={config:{"/":["en-US"],"/zh/":["zh-CN"]},autoLocale:!1,defaultLocale:"/zh/",localeFallback:!0,defaultBehavior:"defaultLocale"},Qy={"/zh/":{name:"简体中文",hint:"您的首选语言是 $1，是否切换到该语言？",switch:"切换到 $1",cancel:"取消",remember:"记住我的选择"},"/":{name:"English",hint:"Your primary language is $1, do you want to switch to it?",switch:"Switch to $1",cancel:"Cancel",remember:"Remember my choice"}};const mm=Wy;var Jy=ze({setup(){},rootComponents:[()=>h(Ky,{config:mm,locales:Qy})]});const Yy=Object.freeze(Object.defineProperty({__proto__:null,config:mm,default:Jy},Symbol.toStringTag,{value:"Module"})),ks=({name:s="",color:e="currentColor",ariaLabel:i},{attrs:n,slots:t})=>{var a;return h("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${s}-icon`],viewBox:"0 0 1024 1024",fill:e,"aria-label":i??`${s} icon`,...n},(a=t.default)==null?void 0:a.call(t))};ks.displayName="IconBase";const Va=(s,{slots:e})=>{var i;return(i=e.default)==null?void 0:i.call(e)},Xy=s=>Ui(s)?s:`https://github.com/${s}`,tp=(s="")=>!Ui(s)||s.includes("github.com")?"GitHub":s.includes("bitbucket.org")?"Bitbucket":s.includes("gitlab.com")?"GitLab":s.includes("gitee.com")?"Gitee":null,gm=()=>h(ks,{name:"github"},()=>h("path",{d:"M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z"}));gm.displayName="GitHubIcon";const km=()=>h(ks,{name:"gitee"},()=>h("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z"}));km.displayName="GiteeIcon";const Em=()=>h(ks,{name:"bitbucket"},()=>h("path",{d:"M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z"}));Em.displayName="BitbucketIcon";const ym=()=>h(ks,{name:"source"},()=>h("path",{d:"M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z"}));ym.displayName="SourceIcon";const Zy=({link:s,type:e=tp(s??"")})=>{if(!e)return null;const i=e.toLowerCase();return h(i==="bitbucket"?Em:i==="github"?gm:i==="gitlab"?"GitLab":i==="gitee"?km:ym)},s5=(s,e=0)=>{let i=3735928559^e,n=1103547991^e;for(let t=0,a;t<s.length;t++)a=s.charCodeAt(t),i=Math.imul(i^a,2654435761),n=Math.imul(n^a,1597334677);return i=Math.imul(i^i>>>16,2246822507),i^=Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(i^i>>>13,3266489909),4294967296*(2097151&n)+(i>>>0)},It=(s,e)=>s5(s)%e;let e5=class{constructor(){Ma(this,"containerElement");Ma(this,"messageElements",{});const e="message-container",i=document.getElementById(e);i?this.containerElement=i:(this.containerElement=document.createElement("div"),this.containerElement.id=e,document.body.appendChild(this.containerElement))}pop(e,i=2e3){const n=document.createElement("div"),t=Date.now();return n.className="message move-in",n.innerHTML=e,this.containerElement.appendChild(n),this.messageElements[t]=n,i>0&&setTimeout(()=>{this.close(t)},i),t}close(e){if(e){const i=this.messageElements[e];i.classList.remove("move-in"),i.classList.add("move-out"),i.addEventListener("animationend",()=>{i.remove(),delete this.messageElements[e]})}else Te(this.messageElements).forEach(i=>this.close(Number(i)))}destroy(){document.body.removeChild(this.containerElement)}};const Am=/#.*$/u,i5=s=>{const e=Am.exec(s);return e?e[0]:""},Hh=s=>decodeURI(s).replace(Am,"").replace(/\/index\.html$/iu,"/").replace(/\/(README|index)\.md$/iu,"/").replace(/\.(?:html|md)$/iu,""),vm=(s,e)=>{if(!Ur(e))return!1;const i=Hh(s.path),n=Hh(e),t=i5(e);return t?t===s.hash&&(!n||i===n):i===n};var n5=s=>Object.prototype.toString.call(s)==="[object Object]",Et=s=>typeof s=="string";const{isArray:fm}=Array,Uh=s=>n5(s)&&Et(s.name),yt=(s,e=!1)=>s?fm(s)?s.map(i=>Et(i)?{name:i}:Uh(i)?i:null).filter(i=>i!==null):Et(s)?[{name:s}]:Uh(s)?[s]:(console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${e?"":"| false"} | undefined\`, but got`,s),[]):[],_m=(s,e)=>{if(s){if(fm(s)&&s.every(Et))return s;if(Et(s))return[s];console.error(`Expect ${e} to be \`string[] | string | undefined\`, but got`,s)}return[]},Bm=s=>_m(s,"category"),bm=s=>_m(s,"tag");var $h={"/zh/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"},"/":{word:"About $word words",less1Minute:"Less than 1 minute",time:"About $time min"}};const wm=()=>{const s=Os();return B(()=>s.value.readingTime??null)},Cm=(s,e)=>{const{minutes:i,words:n}=s,{less1Minute:t,word:a,time:r}=e;return{time:i<1?t:r.replace("$time",Math.round(i).toString()),words:a.replace("$word",n.toString())}},Kh={words:"",time:""},sr=typeof $h>"u"?null:$h,Dm=()=>sr?Pn(sr):B(()=>null),t5=()=>{if(typeof sr>"u")return B(()=>Kh);const s=wm(),e=Dm();return B(()=>s.value&&e.value?Cm(s.value,e.value):Kh)},je=()=>Yu(),hs=()=>Z8(),le=()=>{const s=je();return B(()=>!!s.value.pure)},er=()=>null,a5="719px",l5="1440px",r5="false",p5="9",Qi={mobileBreakPoint:a5,pcBreakPoint:l5,enableThemeColor:r5,colorNumber:p5},ap={"/zh/guide/":[],"/zh/posts/":[{text:"Apple",prefix:"apple/",collapsible:!0,children:["1","2","3","4"]},{text:"Banana",prefix:"banana/",collapsible:!0,children:["1","2","3","4"]},"cherry","dragonfruit","tomato","strawberry"],"/algo/framework/":["",{text:"代码质量",prefix:"quality/",collapsible:!0,children:[""]},{text:"优化",prefix:"optimise/",collapsible:!0,children:["","减治优化","动态规划"]},{text:"传参",prefix:"parameter/",collapsible:!0,children:[""]},{text:"搜索",prefix:"search/",collapsible:!0,children:["","BFS","DFS","FOR"]},{text:"线索",prefix:"clues/",collapsible:!0,children:[""]},{text:"结构",prefix:"structure/",collapsible:!0,children:[""]},{text:"顺序",prefix:"order/",collapsible:!0,children:[""]}],"/algo/summary/":["",{text:"Data Structure",prefix:"structure/",collapsible:!0,children:["",{text:"Linear",prefix:"linear/",collapsible:!0,children:[{text:"Ext",prefix:"ext/",collapsible:!0,children:[{text:"Queue",prefix:"queue/",collapsible:!0,children:["queue"]},{text:"Stack",prefix:"stack/",collapsible:!0,children:["","monotonic"]}]},{text:"Linked List",prefix:"linked/",collapsible:!0,children:["",{text:"双指针",prefix:"2ptr/",collapsible:!0,children:[""]},"3. 反转链表","2. 基本技巧","1. 虚拟头节点","4. 链表中点","5. 链表求环"]},{text:"数组算法",prefix:"array/",collapsible:!0,children:["",{text:"Sort",prefix:"sort/",collapsible:!0,children:["",{text:"N",prefix:"n/",collapsible:!0,children:["bucket","counting","radix"]},{text:"Nlogn",prefix:"nlogn/",collapsible:!0,children:["merge","partition"]}]},{text:"字符串",prefix:"string/",collapsible:!0,children:[""]}]}]},{text:"Tree",prefix:"tree/",collapsible:!0,children:[{text:"二叉树",prefix:"bitree/",collapsible:!0,children:["","dfs","BST"]}]},{text:"图",prefix:"graph/",collapsible:!0,children:["","connectivity","net-flow","shortest-path","ufs","图的存储"]},{text:"集合",prefix:"set/",collapsible:!0,children:[""]}]},{text:"Math",prefix:"math/",collapsible:!0,children:["","进制","二进","余数","因数","概率","运算"]},{text:"Optimization",prefix:"optimise/",collapsible:!0,children:["",{text:"Decrease Conquer",prefix:"decrease-conquer/",collapsible:!0,children:["",{text:"Delete",prefix:"delete/",collapsible:!0,children:["monotic-stack","monotic"]},{text:"K Pointers",prefix:"kptr/",collapsible:!0,children:[""]},{text:"Two Pointers",prefix:"2ptr/",collapsible:!0,children:["",{text:"平行双指针",prefix:"parallel/",collapsible:!0,children:[""]},{text:"滑窗双指针",prefix:"window/",collapsible:!0,children:[""]},{text:"相向双指针",prefix:"opposite/",collapsible:!0,children:[""]}]},{text:"二值有序",prefix:"binary/",collapsible:!0,children:["",{text:"Binary Lifting 倍增法",prefix:"lifting/",collapsible:!0,children:[""]},{text:"二分搜索",prefix:"search/",collapsible:!0,children:["","浮点数","答案集","输入集"]}]},{text:"贪心有序",prefix:"greedy/",collapsible:!0,children:["","反悔","序列","中位数","区间","合并","背包"]}]},{text:"Dynamic Programming",prefix:"dynamic-programming/",collapsible:!0,children:["",{text:"区间",prefix:"区间/",collapsible:!0,children:["区间型"]},"博弈型",{text:"坐标",prefix:"坐标/",collapsible:!0,children:["2d","坐标型"]},{text:"序列",prefix:"序列/",collapsible:!0,children:["划分型","双序型","序列型","股票问题"]},{text:"数位",prefix:"数位/",collapsible:!0,children:["数位型"]},{text:"树形",prefix:"树形/",collapsible:!0,children:["树上型"]},"概率型",{text:"状压",prefix:"状压/",collapsible:!0,children:["状压型"]},{text:"约束",prefix:"约束/",collapsible:!0,children:["状态型","背包型"]},"组合型","计数型",{text:"进阶",prefix:"进阶/",collapsible:!0,children:["优化","具体方案","kth","难题","进阶"]}]},"middle"]},{text:"Search",prefix:"search/",collapsible:!0,children:["",{text:"BFS",prefix:"BFS/",collapsible:!0,children:["","01bfs","BeFS","optimization","shortest-path","solution","topo","BiBFS","时间模拟","连通块"]},{text:"DFS",prefix:"DFS/",collapsible:!0,children:["",{text:"枚举：宽树搜索",prefix:"enumerate/",collapsible:!0,children:["",{text:"组合",prefix:"combination/",collapsible:!0,children:["","分割","选择"]}]},{text:"递归",prefix:"recursion/",collapsible:!0,children:["","单向递归","双向递归","多向递归","非递归"]}]},{text:"FOR",prefix:"FOR/",collapsible:!0,children:[""]}]}],"/algo/faq/":["","big-integer","binary-tree","div-conq","island","minmax","quick","sort",{text:"String",prefix:"string/",collapsible:!0,children:["","parentheses"]},"substring","2ptr","greater",{text:"区间 Range",prefix:"range/",collapsible:!0,children:["","prefix","rmq","segment-tree","suffix"]},"monotonic-stack","trie",{text:"海量数据处理",prefix:"big-data/",collapsible:!0,children:["","bitmap","外排序","mapreduce","topk","分而治之","bloomfilter","概率类","相似检测","距离","面经"]}],"/cs/basic/":[{text:"Computer Network",prefix:"network/",collapsible:!0,children:["",{text:"Application",prefix:"application/",collapsible:!0,children:["quic","cdn","dns","dowload","http","http2","https","mail","nginx","proxy","rpc","ssh","websocket"]},{text:"Network",prefix:"network/",collapsible:!0,children:["IP","NAT"]},{text:"Transport",prefix:"transport/",collapsible:!0,children:["TCP","UDP"]}]},{text:"Operating System",prefix:"os/",collapsible:!0,children:["",{text:"I/O",prefix:"io/",collapsible:!0,children:["","device","patterns","dma"]},{text:"Kernel",prefix:"kernel/",collapsible:!0,children:[""]},{text:"Structure",prefix:"structure/",collapsible:!0,children:["cache","mode"]},{text:"内存管理",prefix:"memory/",collapsible:!0,children:[""]},{text:"文件管理",prefix:"file/",collapsible:!0,children:[""]},{text:"线程管理",prefix:"process/",collapsible:!0,children:["","ipc","itc","schedule"]}]}],"/cs/database/redis/":["",{text:"Availability",prefix:"availability/",collapsible:!0,children:["","cluster","replication","sentinel","multi-level"]},{text:"Commands",prefix:"commands/",collapsible:!0,children:["hash","list","set","sorted-set","string","generic"]},{text:"Feature",prefix:"feature/",collapsible:!0,children:["feature"]},{text:"Persistency",prefix:"persistency/",collapsible:!0,children:["","AOF","RDB"]},{text:"Practice",prefix:"practice/",collapsible:!0,children:[{text:"Best",prefix:"best/",collapsible:!0,children:["批处理优化","键值设计"]},{text:"Design",prefix:"design/",collapsible:!0,children:["uvpv","global-id","follow","distributed-lock","rate","seckill","sign","nearby"]},{text:"Problem",prefix:"problem/",collapsible:!0,children:["bigkey","hotkey","cache-preheat","atomic","consistency","cache-problem"]}]},{text:"Principal",prefix:"principal/",collapsible:!0,children:[{text:"Memory Model",prefix:"memory-model/",collapsible:!0,children:["内存淘汰策略","过期删除策略"]},{text:"Redis 数据结构",prefix:"data-structure/",collapsible:!0,children:["","基本类型","数据结构","特殊类型"]},{text:"Thread Model",prefix:"thread- model/",collapsible:!0,children:["线程模型"]}]},{text:"Redis Client",prefix:"clients/",collapsible:!0,children:["","jedis","spring-data-redis"]}],"/cs/database/mysql/transaction/":["","1. ACID","4. 传播机制","2. 并发问题","3. 隔离级别"],"/cs/database/mysql/index/":["","4. 使用规则","3. 性能分析","2. 索引分类","1. 索引结构"],"/cs/database/mysql/engine/":[{text:"InnoDB 原理",prefix:"innodb/",collapsible:!0,children:["","3. 事务原理","2. 引擎架构","1. 逻辑存储结构"]},"2. 存储引擎","1. 体系结构"],"/cs/database/mysql/lock/":["","1. 全局锁","3. 行级锁","2. 表级锁"],"/cs/database/mysql/log/":[""],"/se/lang/java/":["",{text:"Basic",prefix:"basic/",collapsible:!0,children:[{text:"Class",prefix:"class/",collapsible:!0,children:["面向对象","内部类","工具类","常见类"]},{text:"Type",prefix:"type/",collapsible:!0,children:["基本类型","数组","泛型","类型转换"]},"代码规范","关键字","异常","运算符"]},{text:"Feature",prefix:"feature/",collapsible:!0,children:["","java8","java11","java17","java21"]},{text:"Framework",prefix:"framework/",collapsible:!0,children:[{text:"Api",prefix:"api/",collapsible:!0,children:["knife4j","swagger"]},{text:"Dependency Injection",prefix:"di/",collapsible:!0,children:["",{text:"Guice",prefix:"guice/",collapsible:!0,children:[""]}]},{text:"Distributed",prefix:"distributed/",collapsible:!0,children:[{text:"Seata",prefix:"seata/",collapsible:!0,children:[""]},{text:"Spring Cloud",prefix:"spring-cloud/",collapsible:!0,children:["",{text:"Nacos",prefix:"nacos/",collapsible:!0,children:[""]}]}]},{text:"ORM",prefix:"orm/",collapsible:!0,children:["",{text:"Mybatis",prefix:"mybatis/",collapsible:!0,children:[{text:"Plus",prefix:"plus/",collapsible:!0,children:["条件查询","查询投影"]},"参数","查询","标签"]},"常见问题"]},{text:"Oss",prefix:"oss/",collapsible:!0,children:["oss"]},{text:"Spring",prefix:"spring/",collapsible:!0,children:["",{text:"Core",prefix:"core/",collapsible:!0,children:[{text:"AOP",prefix:"aop/",collapsible:!0,children:["","原理","应用场景","用法"]},{text:"Beans",prefix:"beans/",collapsible:!0,children:["循环依赖","基本概念","后处理器","生命周期"]},{text:"Ioc",prefix:"ioc/",collapsible:!0,children:["ioc"]},{text:"Tx",prefix:"tx/",collapsible:!0,children:["事务"]}]},{text:"Spring Boot",prefix:"boot/",collapsible:!0,children:["","devtool","config"]},{text:"Spring Security",prefix:"security/",collapsible:!0,children:[""]},"设计模式"]},{text:"Web",prefix:"web/",collapsible:!0,children:[{text:"Netty",prefix:"netty/",collapsible:!0,children:["","Untitled"]},{text:"Spring MVC",prefix:"mvc/",collapsible:!0,children:["","interceptor","servlet"]},{text:"WebFlux",prefix:"flux/",collapsible:!0,children:[""]}]}]},{text:"IO",prefix:"io/",collapsible:!0,children:["","nio"]},{text:"Java Virtual Machine",prefix:"jvm/",collapsible:!0,children:["",{text:"内存管理",prefix:"内存管理/",collapsible:!0,children:[{text:"内存区域",prefix:"内存区域/",collapsible:!0,children:["内存区域","内存泄漏","对象内存"]},{text:"垃圾回收",prefix:"垃圾回收/",collapsible:!0,children:["分代收集理论","垃圾回收算法","垃圾收集器","对象死亡判定","引用类型"]}]},"参数",{text:"并发",prefix:"并发/",collapsible:!0,children:["jmm"]},{text:"执行系统",prefix:"执行系统/",collapsible:!0,children:[{text:"类加载",prefix:"类加载/",collapsible:!0,children:["","类加载器","类加载过程"]},{text:"类文件",prefix:"类文件/",collapsible:!0,children:["结构"]}]},"问题排查"]},{text:"JUC",prefix:"JUC/",collapsible:!0,children:["",{text:"Async",prefix:"async/",collapsible:!0,children:["forkjoin","future"]},{text:"Sync",prefix:"sync/",collapsible:!0,children:["AQS","Condition","CountDownLatch","CyclicBarrier","Semaphore",{text:"锁",prefix:"lock/",collapsible:!0,children:["","乐观锁","悲观锁"]}]},{text:"线程",prefix:"thread/",collapsible:!0,children:["","local","virtual","pool","state"]},{text:"线程安全",prefix:"safe/",collapsible:!0,children:["","jmm","volatile"]}]},{text:"集合",prefix:"collections/",collapsible:!0,children:["","collection","map","Concurrent"]}],"/se/framework/":[],"/se/devops/":[{text:"CI/CD",prefix:"cicd/",collapsible:!0,children:["","cd","ci","makefile"]},{text:"Docker",prefix:"docker/",collapsible:!0,children:["","docker-file","persistence","network"]},{text:"Kubernetes",prefix:"k8s/",collapsible:!0,children:["","archetecture","installation"]},{text:"企业级服务器系统导论",prefix:"unix/",collapsible:!0,children:["",{text:"Availability 可用性",prefix:"availability/",collapsible:!0,children:["","DNS-DRBD-network","load-assessment-and-tuning","optimize-server-and-topology","redundancy-and-load-balancing"]},{text:"UNIX 基础",prefix:"basic/",collapsible:!0,children:["","1.1 basic-cmd","2. account-management","3. shell","4.1 booting","4.2 systemd","5. access-ctrl","6. process-ctrl","7. Filesystem","8. Storage","9. Disk Quota","10. scheduled-tasks","11. backups","12. software-management","network-management","network-services","security","rescue","1.2. vi","1.3 three musketeers"]}]}],"/se/design/":["",{text:"Design Pattern",prefix:"pattern/",collapsible:!0,children:["",{text:"Creational",prefix:"creational/",collapsible:!0,children:["pool","prototype","singleton"]},{text:"Structural",prefix:"structural/",collapsible:!0,children:["adapter"]}]},{text:"Object-Oriented Design",prefix:"ood/",collapsible:!0,children:["","实物类","游戏类","管理类","预定类"]},{text:"System Design",prefix:"system/",collapsible:!0,children:["","comet",{text:"Distributed",prefix:"distributed/",collapsible:!0,children:["dtp"]},"file",{text:"Domain Driven Design",prefix:"ddd/",collapsible:!0,children:[""]},{text:"High Availability",prefix:"availability/",collapsible:!0,children:["","cap","scaling","problems"]},"iq","lbs",{text:"Module",prefix:"module/",collapsible:!0,children:["monitor","feed","user","flash-sale","comment"]},{text:"Projects",prefix:"projects/",collapsible:!0,children:["常见","trace-note","twitter"]},{text:"Security",prefix:"security/",collapsible:!0,children:["encryption","authorization"]},"stack","cron","api","versioning","readlist"]}],"/se/tools/":["",{text:"Git",prefix:"git/",collapsible:!0,children:["","submodule"]},{text:"LaTeX",prefix:"latex/",collapsible:!0,children:["","block","operator"]},{text:"Others",prefix:"others/",collapsible:!0,children:["alist","xdm","pm"]},{text:"Uml",prefix:"uml/",collapsible:!0,children:["mermaid","plantUML"]},{text:"Vuepress",prefix:"vuepress/",collapsible:!0,children:["","it","bugfix"]}],"/se/devops/unix/basic/":["","1.1 basic-cmd","2. account-management","3. shell","4.1 booting","4.2 systemd","5. access-ctrl","6. process-ctrl","7. Filesystem","8. Storage","9. Disk Quota","10. scheduled-tasks","11. backups","12. software-management","network-management","network-services","security","rescue","1.2. vi","1.3 three musketeers"],"/se/devops/unix/availability/":["","DNS-DRBD-network","load-assessment-and-tuning","optimize-server-and-topology","redundancy-and-load-balancing"],"/test/GRE/":["",{text:"Analytical Writing",prefix:"aw/",collapsible:!0,children:[""]},{text:"Quantitative",prefix:"QUANTITATIVE/",collapsible:!0,children:["","代数","数分","几何","数论","答案","错题"]},{text:"Verbal",prefix:"VERBAL/",collapsible:!0,children:["",{text:"Blank",prefix:"Blank/",collapsible:!0,children:[""]},{text:"Reading",prefix:"Reading/",collapsible:!0,children:[{text:"公式法",prefix:"formula/",collapsible:!0,children:["","2.0 主旨题","1. 事实信息题","2.2 信息目的题","2.1 句子作用题","4. 可多选题","8. 否定事实信息题","10. 归纳与解释","5. 态度题","3. 推断题","7. 类比题","9. 词汇题"]},{text:"双线阅读法",prefix:"dual-line/",collapsible:!0,children:["","8. 高效信息提取与信息题","6. 全文结构与主旨题","9. 功能与信息线综合","7. 功能线综合练习","3. 单句功能判断方法论","2. 长难句","4. 句间关系与句子功能"]}]}]}],"/test/TOEFL/":["",{text:"Listening",prefix:"LISTENING/",collapsible:!0,children:["",{text:"基础课",prefix:"基础课/",collapsible:!0,children:["单词","句子","基础","段落"]},"4. 对话串联法",{text:"方法",prefix:"BEAT/",collapsible:!0,children:["","新方法",{text:"对话",prefix:"对话/",collapsible:!0,children:["","练习"]},{text:"讲座",prefix:"讲座/",collapsible:!0,children:["","练习"]}]},{text:"杰哥课",prefix:"杰哥课/",collapsible:!0,children:["1. 中心逻辑精听法","3. 笔记法","2. 题型"]},{text:"椅听方法论",prefix:"椅听/",collapsible:!0,children:["","对话","Untitled","方法"]},"真题营",{text:"精听营",prefix:"精听营/",collapsible:!0,children:["1. 中心逻辑","2. 出题思路","3. 笔记方法","4. 讲座总结","5. 对话串联","新方法","内容思路","讲座专题"]},{text:"练习",prefix:"练习/",collapsible:!0,children:["对话练习","讲座练习"]},"表达积累","学科积累","5. 讲座分层法",{text:"长难句",prefix:"长难句/",collapsible:!0,children:["1","3","2"]}]},{text:"Reading",prefix:"READING/",collapsible:!0,children:["",{text:"BEAT",prefix:"BEAT/",collapsible:!0,children:[""]},"3. 文章段落","5. 文章结构",{text:"练习",prefix:"练习/",collapsible:!0,children:["练习","BEAT"]},"4. 逻辑考点","2. 长难单句","1. 阅读方法论","6. 阅读笔记",{text:"题型分类",prefix:"题型分类/",collapsible:!0,children:["5. 插入题","4. 简化题","1.  总结题","3. 指代题","7. 排除题","8. 推断题","9. 目的题","6. 细节题","10. 表格题","2. 词汇题"]}]},{text:"Speaking",prefix:"SPEAKING/",collapsible:!0,children:["",{text:"BEAT",prefix:"BEAT/",collapsible:!0,children:["","BEAT","Untitled","综合口语","题目","发音雕刻","工作类","教育类","生活类","观点","高频真题"]},"task1","task2","task3","task4",{text:"刷题营",prefix:"exercise/",collapsible:!0,children:["","1","7. ","9. ","10.","12","14. ","15","16","17","18","19","20","21","23","24","25","26","27","28","29"]},{text:"发音",prefix:"发音/",collapsible:!0,children:[""]},{text:"独立题",prefix:"独立题/",collapsible:!0,children:["","1","2","3","4","5","6","7","8","9","10"]},{text:"练习",prefix:"练习/",collapsible:!0,children:["task2","task3","task4"]},{text:"语料",prefix:"🌟语料/",collapsible:!0,children:["","教育类","生活类"]},"读音",{text:"预测",prefix:"预测/",collapsible:!0,children:["X"]}]},{text:"Writing",prefix:"WRITING/",collapsible:!0,children:["",{text:"BEAT",prefix:"BEAT/",collapsible:!0,children:["","Untitled","题目","万能原因","模板","练习","综合写作","表达与句式","造句","高频话题"]},"2. 主体段","段落语料","练习",{text:"练习",prefix:"练习/",collapsible:!0,children:["新版练习","独立题","综合题","讨论板"]},"1. 结构","5. 综合写作","6. 讨论板","3. 语料1","4. 语料2"]}]},Ws=s=>{const{icon:e="",color:i,size:n}=s,t=i||n?{}:null;return i&&(t.color=i),n&&(t.height=Number.isNaN(Number(n))?n:`${n}px`),Ui(e)?h("img",{class:"icon",src:e,alt:"","no-view":"",style:t}):xa(e)?h("img",{class:"icon",src:Cs(e),alt:"","aria-hidden":"","no-view":"",style:t}):h(Pe("FontIcon"),s)};Ws.displayName="HopeIcon";const Fm=()=>{const s=hs();return B(()=>s.value.author)},o5="http://.",Ji=()=>{const s=wi(),e=Se();return i=>{if(i)if(xa(i))e.path!==i&&s.push(i);else if(Ct(i))window&&window.open(i);else{const n=e.path.slice(0,e.path.lastIndexOf("/"));s.push(new URL(`${n}/${encodeURI(i)}`,o5).pathname)}}},Tm=()=>{const s=As(),e=Fm();return B(()=>{const{author:i}=s.value;return i?yt(i):i===!1?[]:yt(e.value,!1)})},h5=()=>{const s=As(),e=bs(Symbol.for("categoryMap"));return B(()=>Bm(s.value.category??s.value.categories).map(i=>{var n;return{name:i,path:((n=e==null?void 0:e.value.map[i])==null?void 0:n.path)??""}}))},d5=()=>{const s=As(),e=bs(Symbol.for("tagMap"));return B(()=>bm(s.value.tag??s.value.tags).map(i=>{var n;return{name:i,path:((n=e==null?void 0:e.value.map[i])==null?void 0:n.path)??""}}))},c5=()=>{const s=As(),e=Os();return B(()=>{const i=$r(s.value.date);if(i)return i;const{createdTime:n}=e.value.git??{};return n?new Date(n):null})},u5=()=>{const s=hs(),e=Os(),i=As(),n=Tm(),t=h5(),a=d5(),r=c5(),p=wm(),o=t5(),d=B(()=>({author:n.value,category:t.value,date:r.value,localizedDate:e.value.localizedDate,tag:a.value,isOriginal:i.value.isOriginal??!1,readingTime:p.value,readingTimeLocale:o.value,pageview:i.value.pageview??!0})),c=B(()=>i.value.pageInfo??s.value.pageInfo??null);return{info:d,items:c}},lp=(s,e)=>"activeMatch"in e?new RegExp(e.activeMatch,"u").test(s.path):vm(s,e.link),rp=(s,e)=>"children"in e?!!e.prefix&&vm(s,e.prefix)||e.children.some(i=>rp(s,i)):lp(s,e),ir=s=>!Or(s)&&!Ct(s);var te=(s=>(s.title="t",s.shortTitle="s",s.icon="i",s.index="I",s.order="O",s.breadcrumbExclude="b",s))(te||{}),Zs=(s=>(s.type="y",s.author="a",s.date="d",s.localizedDate="l",s.category="c",s.tag="g",s.isEncrypted="n",s.isOriginal="o",s.readingTime="r",s.excerpt="e",s.sticky="u",s.cover="v",s))(Zs||{}),Im=(s=>(s.article="a",s.home="h",s.slide="s",s.page="p",s))(Im||{});const ga=(s,e=!1,i)=>{const{meta:n,path:t,notFound:a}=De(s,i);return a?{text:t,link:t}:{text:!e&&n[te.shortTitle]?n[te.shortTitle]:n[te.title]||t,link:t,...n[te.icon]?{icon:n[te.icon]}:{}}},Si=(s="",e="")=>xa(e)||Ct(e)?e:`${Lc(s)}${e}`,Lm=(s,e)=>{const i=Ps(s)?ga(Si(e,s)):s.link?{...s,link:ir(s.link)?De(Si(e,s.link)).path:s.link}:s;if("children"in i){const n=Si(e,i.prefix),t=i.children==="structure"?ap[n]:i.children;return{...i,prefix:n,children:t.map(a=>Lm(a,n))}}return{...i}},nr=({config:s,prefix:e=""})=>s.map(i=>Lm(i,e)),m5=({config:s,routePath:e,headerDepth:i})=>{const n=Te(s).sort((t,a)=>a.length-t.length);for(const t of n)if(ct(decodeURI(e),t)){const a=s[t];return nr({config:a==="structure"?ap[t]:a||[],headerDepth:i,prefix:t})}return console.warn(`${decodeURI(e)} is missing sidebar config.`),[]},g5=({config:s,headerDepth:e,routeLocale:i,routePath:n})=>s==="structure"?nr({config:ap[i],headerDepth:e,prefix:i}):ua(s)?nr({config:s,headerDepth:e}):ai(s)?m5({config:s,routePath:n,headerDepth:e}):[],xm=Symbol(""),k5=()=>{const s=As(),e=hs(),i=Ne(),n=su(),t=B(()=>s.value.home?!1:s.value.sidebar??e.value.sidebar??"structure"),a=B(()=>s.value.headerDepth??e.value.headerDepth??2),r=B(()=>g5({config:t.value,headerDepth:a.value,routeLocale:i.value,routePath:n.value}));Ce(xm,r)},pp=()=>{const s=bs(xm);if(!s)throw new Error("useSidebarItems() is called without provider.");return s},{mobileBreakPoint:E5,pcBreakPoint:y5}=Qi,Wh=s=>s.endsWith("px")?Number(s.slice(0,-2)):null,Lt=()=>{const s=Y(!1),e=Y(!1),i=()=>{s.value=window.innerWidth<=(Wh(E5)??719),e.value=window.innerWidth>=(Wh(y5)??1440)};return Ns("resize",i,!1),Ns("orientationchange",i,!1),us(()=>{i()}),{isMobile:s,isPC:e}},Om=Symbol(""),xt=()=>{const s=bs(Om);if(!s)throw new Error("useDarkmode() is called without provider.");return s},A5=s=>{const e=je(),i=G3(),n=B(()=>e.value.darkmode??"switch"),t=Wi("vuepress-theme-hope-scheme","auto"),a=B(()=>{const p=n.value;return p==="disable"?!1:p==="enable"?!0:p==="auto"?i.value:p==="toggle"?t.value==="dark":t.value==="dark"||t.value==="auto"&&i.value}),r=B(()=>{const p=n.value;return p==="switch"||p==="toggle"});s.provide(Om,{canToggle:r,config:n,isDarkmode:a,status:t}),Object.defineProperties(s.config.globalProperties,{$isDarkmode:{get:()=>a.value}})},v5=()=>{const{config:s,isDarkmode:e,status:i}=xt();Lr(()=>{s.value==="disable"?i.value="light":s.value==="enable"?i.value="dark":s.value==="toggle"&&i.value==="auto"&&(i.value="light")}),us(()=>{ds(e,n=>document.documentElement.setAttribute("data-theme",n?"dark":"light"),{immediate:!0})})};var f5=S({name:"PageFooter",setup(){const s=je(),e=hs(),i=As(),n=Tm(),t=B(()=>{const{copyright:d,footer:c}=i.value;return c!==!1&&!!(d||c||e.value.displayFooter)}),a=B(()=>{const{footer:d}=i.value;return d===!1?!1:Ps(d)?d:e.value.footer??""}),r=B(()=>n.value.map(({name:d})=>d).join(", ")),p=d=>`Copyright © ${new Date().getFullYear()} ${r.value} ${d?`${d} Licensed`:""}`,o=B(()=>{const{copyright:d,license:c=""}=i.value,{license:u}=s.value,{copyright:m}=e.value;return d??(c?p(c):m??(r.value||u?p(u):!1))});return()=>t.value?h("footer",{class:"vp-footer-wrapper","vp-footer":""},[a.value?h("div",{class:"vp-footer",innerHTML:a.value}):null,o.value?h("div",{class:"vp-copyright",innerHTML:o.value}):null]):null}}),he=S({name:"AutoLink",props:{config:{type:Object,required:!0}},emits:["focusout"],slots:Object,setup(s,{emit:e,slots:i}){return()=>{const{icon:n}=s.config;return h(E3,{...s,onFocusout:()=>e("focusout")},{default:i.default?()=>i.default():null,before:i.before?()=>i.before():n?()=>h(Ws,{icon:n}):null,after:i.after?()=>i.after():null})}}}),Pm=S({name:"NavbarDropdown",props:{config:{type:Object,required:!0}},slots:Object,setup(s,{slots:e}){const i=Os(),n=Tn(s,"config"),t=B(()=>n.value.ariaLabel??n.value.text),a=Y(!1);ds(()=>i.value.path,()=>{a.value=!1});const r=p=>{p.detail===0&&(a.value=!a.value)};return()=>{var p;return h("div",{class:["vp-dropdown-wrapper",{open:a.value}]},[h("button",{type:"button",class:"vp-dropdown-title","aria-label":t.value,onClick:r},[((p=e.title)==null?void 0:p.call(e))||[h(Ws,{icon:n.value.icon}),s.config.text],h("span",{class:"arrow"}),h("ul",{class:"vp-dropdown"},n.value.children.map((o,d)=>{const c=d===n.value.children.length-1;return h("li",{class:"vp-dropdown-item"},"children"in o?[h("h4",{class:"vp-dropdown-subtitle"},o.link?h(he,{config:o,onFocusout:()=>{o.children.length===0&&c&&(a.value=!1)}}):o.text),h("ul",{class:"vp-dropdown-subitems"},o.children.map((u,m)=>h("li",{class:"vp-dropdown-subitem"},h(he,{config:u,onFocusout:()=>{m===o.children.length-1&&c&&(a.value=!1)}}))))]:h(he,{config:o,onFocusout:()=>{c&&(a.value=!1)}}))}))])])}}});const Rm=()=>h(ks,{name:"i18n"},()=>[h("path",{d:"M379.392 460.8 494.08 575.488l-42.496 102.4L307.2 532.48 138.24 701.44l-71.68-72.704L234.496 460.8l-45.056-45.056c-27.136-27.136-51.2-66.56-66.56-108.544h112.64c7.68 14.336 16.896 27.136 26.112 35.84l45.568 46.08 45.056-45.056C382.976 312.32 409.6 247.808 409.6 204.8H0V102.4h256V0h102.4v102.4h256v102.4H512c0 70.144-37.888 161.28-87.04 210.944L378.88 460.8zM576 870.4 512 1024H409.6l256-614.4H768l256 614.4H921.6l-64-153.6H576zM618.496 768h196.608L716.8 532.48 618.496 768z"})]);Rm.displayName="I18nIcon";const Sm=(s,e="")=>Ps(s)?ga(Si(e,s)):"children"in s?{...s,...s.link&&ir(s.link)?{link:De(Si(e,s.link)).path}:{},children:s.children.map(i=>Sm(i,Si(e,s.prefix)))}:{...s,link:ir(s.link)?De(Si(e,s.link)).path:s.link},Vm=()=>{const s=hs();return B(()=>(s.value.navbar||[]).map(e=>Sm(e)))},_5=()=>{const s=k6(),e=Se(),i=Ne(),n=Nr(),t=Ln(),a=je(),r=hs();return B(()=>{const p=Te(n.value.locales),o=Ci(a.value.extraLocales??{});if(p.length<2&&!o.length)return null;const{path:d,fullPath:c}=e,{navbarLocales:u}=r.value;return{text:"",ariaLabel:u==null?void 0:u.selectLangAriaLabel,children:[...p.map(m=>{var b,E,w;const g=((b=n.value.locales)==null?void 0:b[m])??{},k=((E=a.value.locales)==null?void 0:E[m])??{},A=g.lang,f=((w=k.navbarLocales)==null?void 0:w.langName)??A;let v;if(A===t.value.lang)v=c;else{const P=d.replace(i.value,m);v=s.value.some(M=>M===P)?c.replace(d,P):k.home??m}return{text:f,link:v}}),...o.map(([m,g])=>({text:m,link:g.replace(":route",e.fullPath.replace(i.value,""))}))]}})},B5=()=>{const s=hs(),e=B(()=>s.value.repo),i=B(()=>e.value?Xy(e.value):null),n=B(()=>e.value?tp(e.value):null),t=B(()=>i.value?s.value.repoLabel??n.value??"Source":null);return B(()=>!i.value||!t.value||s.value.repoDisplay===!1?null:{type:n.value??"Source",label:t.value,link:i.value})};var b5=S({name:"LanguageDropdown",setup(){const s=_5();return()=>s.value?h("div",{class:"vp-nav-item"},h(Pm,{config:s.value},{title:()=>{var e;return h(Rm,{"aria-label":(e=s.value)==null?void 0:e.ariaLabel,style:{width:"1rem",height:"1rem",verticalAlign:"middle"}})}})):null}}),w5=S({name:"NavScreenMenu",props:{config:{type:Object,required:!0}},setup(s){const e=Os(),i=Tn(s,"config"),n=B(()=>i.value.ariaLabel??i.value.text),t=Y(!1);ds(()=>e.value.path,()=>{t.value=!1});const a=(r,p)=>p[p.length-1]===r;return()=>[h("button",{type:"button",class:["vp-nav-screen-menu-title",{active:t.value}],"aria-label":n.value,onClick:()=>{t.value=!t.value}},[h("span",{class:"text"},[h(Ws,{icon:i.value.icon}),s.config.text]),h("span",{class:["arrow",t.value?"down":"end"]})]),h("ul",{class:["vp-nav-screen-menu",{hide:!t.value}]},i.value.children.map(r=>h("li",{class:"vp-nav-screen-menu-item"},"children"in r?[h("h4",{class:"vp-nav-screen-menu-subtitle"},r.link?h(he,{config:r,onFocusout:()=>{a(r,i.value.children)&&r.children.length===0&&(t.value=!1)}}):r.text),h("ul",{class:"vp-nav-screen-menu-subitems"},r.children.map(p=>h("li",{class:"vp-nav-screen-menu-subitem"},h(he,{config:p,onFocusout:()=>{a(p,r.children)&&a(r,i.value.children)&&(t.value=!1)}}))))]:h(he,{config:r,onFocusout:()=>{a(r,i.value.children)&&(t.value=!1)}}))))]}}),C5=S({name:"NavScreenLinks",setup(){const s=Vm();return()=>s.value.length?h("nav",{class:"nav-screen-links"},s.value.map(e=>h("div",{class:"navbar-links-item"},"children"in e?h(w5,{config:e}):h(he,{config:e})))):null}});const Nm=()=>h(ks,{name:"dark"},()=>h("path",{d:"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"}));Nm.displayName="DarkIcon";const zm=()=>h(ks,{name:"light"},()=>h("path",{d:"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"}));zm.displayName="LightIcon";const jm=()=>h(ks,{name:"auto"},()=>h("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z"}));jm.displayName="AutoIcon";const Mm=()=>h(ks,{name:"enter-fullscreen"},()=>h("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));Mm.displayName="EnterFullScreenIcon";const qm=()=>h(ks,{name:"cancel-fullscreen"},()=>h("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));qm.displayName="CancelFullScreenIcon";const Gm=()=>h(ks,{name:"outlook"},()=>[h("path",{d:"M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z"})]);Gm.displayName="OutlookIcon";var Hm=S({name:"ColorModeSwitch",setup(){const{config:s,isDarkmode:e,status:i}=xt(),n=le(),t=()=>{s.value==="switch"?i.value={light:"dark",dark:"auto",auto:"light"}[i.value]:i.value=i.value==="light"?"dark":"light"},a=async r=>{if(!(document.startViewTransition&&!window.matchMedia("(prefers-reduced-motion: reduce)").matches&&!n.value)||!r){t();return}const p=r.clientX,o=r.clientY,d=Math.hypot(Math.max(p,innerWidth-p),Math.max(o,innerHeight-o)),c=e.value;await document.startViewTransition(async()=>{t(),await Qe()}).ready,e.value!==c&&document.documentElement.animate({clipPath:e.value?[`circle(${d}px at ${p}px ${o}px)`,`circle(0px at ${p}px ${o}px)`]:[`circle(0px at ${p}px ${o}px)`,`circle(${d}px at ${p}px ${o}px)`]},{duration:400,pseudoElement:e.value?"::view-transition-old(root)":"::view-transition-new(root)"})};return()=>h("button",{type:"button",class:"vp-color-mode-switch",id:"color-mode-switch",onClick:a},[h(jm,{style:{display:i.value==="auto"?"block":"none"}}),h(Nm,{style:{display:i.value==="dark"?"block":"none"}}),h(zm,{style:{display:i.value==="light"?"block":"none"}})])}}),D5=S({name:"ColorMode",setup(){const s=hs(),{canToggle:e}=xt(),i=B(()=>s.value.outlookLocales.darkmode);return()=>e.value?h("div",{class:"vp-color-mode"},[h("label",{class:"vp-color-mode-title",for:"color-mode-switch"},i.value),h(Hm)]):null}});const Qh=Qi.enableThemeColor==="true";var F5=S({name:"ToggleFullScreenButton",setup(){const{isSupported:s,isFullscreen:e,toggle:i}=La();return()=>s?h("button",{type:"button",id:"full-screen-switch",class:"full-screen",ariaPressed:e.value,onClick:()=>i()},e.value?h(qm):h(Mm)):null}}),Um=S({name:"ToggleFullScreenButton",setup(){const s=hs(),{isSupported:e}=La(),i=B(()=>s.value.outlookLocales.fullscreen);return()=>e?h("div",{class:"full-screen-wrapper"},[h("label",{class:"full-screen-title",for:"full-screen-switch"},i.value),h(F5)]):null}}),$m=S({name:"OutlookSettings",setup(){const s=je(),e=le(),i=B(()=>!e.value&&s.value.fullscreen);return()=>h(nu,()=>[null,h(D5),i.value?h(Um):null])}}),T5=S({name:"NavScreen",props:{show:Boolean},emits:["close"],slots:Object,setup(s,{emit:e,slots:i}){const n=Os(),{isMobile:t}=Lt(),a=ys(),r=Gr(a);return us(()=>{a.value=document.body,ds(t,p=>{!p&&s.show&&(r.value=!1,e("close"))}),ds(()=>n.value.path,()=>{r.value=!1,e("close")})}),Hi(()=>{r.value=!1}),()=>h(Mi,{name:"fade",onEnter:()=>{r.value=!0},onAfterLeave:()=>{r.value=!1}},()=>{var p,o;return s.show?h("div",{id:"nav-screen",class:"vp-nav-screen"},h("div",{class:"vp-nav-screen-container"},[(p=i.before)==null?void 0:p.call(i),h(C5),h("div",{class:"vp-outlook-wrapper"},h($m)),(o=i.after)==null?void 0:o.call(i)])):null})}}),I5=S({name:"NavbarBrand",setup(){const s=Ne(),e=Ln(),i=hs(),n=B(()=>i.value.home??s.value),t=B(()=>e.value.title),a=B(()=>i.value.navbarTitle??t.value),r=B(()=>i.value.logo?Cs(i.value.logo):null),p=B(()=>i.value.logoDark?Cs(i.value.logoDark):null);return()=>h(Gs,{to:n.value,class:"vp-brand","aria-label":i.value.routeLocales.home},()=>[r.value?h("img",{class:["vp-nav-logo",{light:!!p.value}],src:r.value,alt:""}):null,p.value?h("img",{class:["vp-nav-logo dark"],src:p.value,alt:""}):null,a.value?h("span",{class:["vp-site-name",{"hide-in-pad":r.value&&(i.value.hideSiteNameOnMobile??!0)}]},a.value):null])}}),L5=S({name:"NavbarLinks",setup(){const s=Vm();return()=>s.value.length?h("nav",{class:"vp-nav-links"},s.value.map(e=>h("div",{class:"vp-nav-item hide-in-mobile"},"children"in e?h(Pm,{config:e}):h(he,{config:e})))):null}}),x5=S({name:"RepoLink",setup(){const s=B5();return()=>s.value?h("div",{class:"vp-nav-item vp-action"},h("a",{class:"vp-action-link",href:s.value.link,target:"_blank",rel:"noopener noreferrer","aria-label":s.value.label},h(Zy,{type:s.value.type,style:{width:"1.25rem",height:"1.25rem",verticalAlign:"middle"}}))):null}});const Km=({active:s=!1},{emit:e})=>h("button",{type:"button",class:["vp-toggle-navbar-button",{"is-active":s}],"aria-label":"Toggle Navbar","aria-expanded":s,"aria-controls":"nav-screen",onClick:()=>e("toggle")},h("span",[h("span",{class:"vp-top"}),h("span",{class:"vp-middle"}),h("span",{class:"vp-bottom"})]));Km.displayName="ToggleNavbarButton";const tr=(s,{emit:e})=>h("button",{type:"button",class:"vp-toggle-sidebar-button",title:"Toggle Sidebar",onClick:()=>e("toggle")},h("span",{class:"icon"}));tr.displayName="ToggleSidebarButton",tr.emits=["toggle"];var O5=S({name:"OutlookButton",setup(){const s=je(),e=Os(),{canToggle:i}=xt(),{isSupported:n}=La(),t=le(),a=Y(!1),r=B(()=>!t.value&&s.value.fullscreen&&n),p=B(()=>i.value||r.value);return ds(()=>e.value.path,()=>{a.value=!1}),()=>p.value?h("div",{class:"vp-nav-item hide-in-mobile"},i.value&&!r.value&&!Qh?h(Hm):r.value&&!i.value&&!Qh?h(Um):h("button",{type:"button",class:["vp-outlook-button",{open:a.value}],tabindex:"-1","aria-hidden":!0},[h(Gm),h("div",{class:"vp-outlook-dropdown"},h($m))])):null}}),P5=S({name:"NavBar",emits:["toggleSidebar"],slots:Object,setup(s,{emit:e,slots:i}){const n=hs(),{isMobile:t}=Lt(),a=Y(!1),r=B(()=>{const{navbarAutoHide:c="mobile"}=n.value;return c!=="none"&&(c==="always"||t.value)}),p=B(()=>n.value.navbarLayout??{start:["Brand"],center:["Links"],end:["Language","Repo","Outlook","Search"]}),o={Brand:I5,Language:b5,Links:L5,Repo:x5,Outlook:O5,Search:Re("SearchBox")?Pe("SearchBox"):er},d=c=>o[c]??(Re(c)?Pe(c):er);return()=>{var c,u,m,g,k,A,f,v,b;return[h("header",{key:"navbar",id:"navbar",class:["vp-navbar",{"auto-hide":r.value}],"vp-navbar":""},[h("div",{class:"vp-navbar-start"},[h(tr,{onToggle:()=>{a.value&&(a.value=!1),e("toggleSidebar")}}),(c=i.startBefore)==null?void 0:c.call(i),(u=p.value.start)==null?void 0:u.map(E=>h(d(E))),(m=i.startAfter)==null?void 0:m.call(i)]),h("div",{class:"vp-navbar-center"},[(g=i.centerBefore)==null?void 0:g.call(i),(k=p.value.center)==null?void 0:k.map(E=>h(d(E))),(A=i.centerAfter)==null?void 0:A.call(i)]),h("div",{class:"vp-navbar-end"},[(f=i.endBefore)==null?void 0:f.call(i),(v=p.value.end)==null?void 0:v.map(E=>h(d(E))),(b=i.endAfter)==null?void 0:b.call(i),h(Km,{active:a.value,onToggle:()=>{a.value=!a.value}})])]),h(T5,{show:a.value,onClose:()=>{a.value=!1}},{before:i.screenTop?()=>i.screenTop():null,after:i.screenBottom?()=>i.screenBottom():null})]}}}),R5=S({name:"SidebarChild",props:{config:{type:Object,required:!0}},setup(s){const e=Se();return()=>Ps(s.config.link)?h(he,{class:["vp-sidebar-link",{active:lp(e,s.config)}],config:{...s.config,exact:!0}}):h("p",s,[h(Ws,{icon:s.config.icon}),s.config.text])}}),S5=S({name:"SidebarGroup",props:{config:{type:Object,required:!0},open:{type:Boolean,required:!0}},emits:["toggle"],setup(s,{emit:e}){const i=Se(),n=Y(!1),t=B(()=>rp(i,s.config)),a=B(()=>lp(i,s.config)),r=B(()=>s.open||s.config.expanded&&!n.value);return()=>{const{collapsible:p,children:o=[],icon:d,prefix:c,link:u,text:m}=s.config;return h("section",{class:"vp-sidebar-group"},[h(p?"button":"p",{class:["vp-sidebar-header",{clickable:p||u,exact:a.value,active:t.value}],...p?{type:"button",onClick:()=>{n.value=!0,e("toggle")}}:{}},[h(Ws,{icon:d}),u?h(he,{class:"vp-sidebar-title no-external-link-icon",config:{text:m,link:u}}):h("span",{class:"vp-sidebar-title"},m),p?h("span",{class:["vp-arrow",r.value?"down":"end"]}):null]),r.value||!p?h(Wm,{key:c,config:o}):null])}}}),Wm=S({name:"SidebarLinks",props:{config:{type:Array,required:!0}},setup(s){const e=Se(),i=Y(-1),n=t=>{i.value=t===i.value?-1:t};return ds(()=>e.path,()=>{const t=s.config.findIndex(a=>rp(e,a));i.value=t},{immediate:!0,flush:"post"}),()=>h("ul",{class:"vp-sidebar-links"},s.config.map((t,a)=>h("li","children"in t?h(S5,{config:t,open:a===i.value,onToggle:()=>n(a)}):h(R5,{config:t}))))}}),V5=S({name:"SideBar",slots:Object,setup(s,{slots:e}){const i=Se(),n=pp(),t=ys();return us(()=>{ds(()=>i.hash,a=>{const r=document.querySelector(`.vp-sidebar a.vp-sidebar-link[href="${i.path}${a}"]`);if(!r)return;const{top:p,height:o}=t.value.getBoundingClientRect(),{top:d,height:c}=r.getBoundingClientRect();d<p?r.scrollIntoView(!0):d+c>p+o&&r.scrollIntoView(!1)},{immediate:!0})}),()=>{var a,r,p;return h("aside",{ref:t,key:"sidebar",id:"sidebar",class:"vp-sidebar","vp-sidebar":""},[(a=e.top)==null?void 0:a.call(e),((r=e.default)==null?void 0:r.call(e))??h(Wm,{config:n.value}),(p=e.bottom)==null?void 0:p.call(e)])}}}),op=S({name:"CommonWrapper",props:{containerClass:{type:String,default:""},noNavbar:Boolean,noSidebar:Boolean,noToc:Boolean},slots:Object,setup(s,{slots:e}){const i=wi(),n=As(),t=je(),a=hs(),{isMobile:r,isPC:p}=Lt(),o=le(),[d,c]=dt(!1),[u,m]=dt(!1),g=pp(),k=Y(!1),A=B(()=>s.noNavbar||n.value.navbar===!1||a.value.navbar===!1?!1:!!(a.value.logo??a.value.repo??a.value.navbar)),f=B(()=>s.noSidebar?!1:n.value.sidebar!==!1&&g.value.length!==0&&!n.value.home),v=B(()=>n.value.externalLinkIcon??t.value.externalLinkIcon??!0),b=B(()=>!s.noToc&&!n.value.home&&(n.value.toc??a.value.toc??!0)),E={x:0,y:0},w=z=>{E.x=z.changedTouches[0].clientX,E.y=z.changedTouches[0].clientY},P=z=>{const Z=z.changedTouches[0].clientX-E.x,V=z.changedTouches[0].clientY-E.y;Math.abs(Z)>Math.abs(V)*1.5&&Math.abs(Z)>40&&(Z>0&&E.x<=80?c(!0):c(!1))};let M=0;return Ns("scroll",x3(()=>{const z=window.scrollY;z<=58||z<M?k.value=!1:M+200<z&&!d.value&&(k.value=!0),M=z},300,!0)),ds(r,z=>{z||c(!1)}),us(()=>{const z=Gr(document.body);ds(d,V=>{z.value=V});const Z=i.afterEach(()=>{c(!1)});Hi(()=>{z.value=!1,Z()})}),()=>h(Re("GlobalEncrypt")?Pe("GlobalEncrypt"):Va,()=>h("div",{class:["theme-container",{"hide-navbar":k.value,"no-navbar":!A.value,"sidebar-collapsed":!r.value&&!p.value&&u.value,"sidebar-open":r.value&&d.value,"no-sidebar":!f.value&&!e.sidebar&&!e.sidebarTop&&!e.sidebarBottom,"external-link-icon":v.value,pure:o.value,"has-toc":b.value},s.containerClass,n.value.containerClass??""],"vp-container":"",onTouchStart:w,onTouchEnd:P},[A.value?h(P5,{onToggleSidebar:()=>c()},{startBefore:e.navbarStartBefore?()=>e.navbarStartBefore():null,startAfter:e.navbarStartAfter?()=>e.navbarStartAfter():null,centerBefore:e.navbarCenterBefore?()=>e.navbarCenterBefore():null,centerAfter:e.navbarCenterAfter?()=>e.navbarCenterAfter():null,endBefore:e.navbarEndBefore?()=>e.navbarEndBefore():null,endAfter:e.navbarEndAfter?()=>e.navbarEndAfter():null,screenTop:e.navScreenTop?()=>e.navScreenTop():null,screenBottom:e.navScreenBottom?()=>e.navScreenBottom():null}):null,h(Mi,{name:"fade"},()=>d.value?h("div",{class:"vp-sidebar-mask",onClick:()=>c(!1)}):null),h(Mi,{name:"fade"},()=>r.value?null:h("div",{class:"toggle-sidebar-wrapper",onClick:()=>m()},h("span",{class:["arrow",u.value?"end":"start"]}))),h(V5,{},{default:e.sidebar?()=>e.sidebar():null,top:e.sidebarTop?()=>e.sidebarTop():null,bottom:e.sidebarBottom?()=>e.sidebarBottom():null}),e.default(),h(f5)]))}});const ps=S({name:"DropTransition",props:{type:{type:String,default:"single"},delay:{type:Number,default:0},duration:{type:Number,default:.25},appear:Boolean},slots:Object,setup(s,{slots:e}){const i=t=>{t.style.transition=`transform ${s.duration}s ease-in-out ${s.delay}s, opacity ${s.duration}s ease-in-out ${s.delay}s`,t.style.transform="translateY(-20px)",t.style.opacity="0"},n=t=>{t.style.transform="translateY(0)",t.style.opacity="1"};return()=>{const t={name:"drop",appear:s.appear,onAppear:i,onAfterAppear:n,onEnter:i,onAfterEnter:n,onBeforeLeave:i},a=()=>e.default();return s.type==="group"?h(Tc,t,a):h(Mi,t,a)}}}),Dn=({custom:s})=>h(tu,{class:["theme-hope-content",{custom:s}],"vp-content":""});Dn.displayName="MarkdownContent",Dn.props={custom:Boolean};const Qm=()=>h(ks,{name:"author"},()=>h("path",{d:"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z"}));Qm.displayName="AuthorIcon";const Jm=()=>h(ks,{name:"calendar"},()=>h("path",{d:"M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z"}));Jm.displayName="CalendarIcon";const Ym=()=>h(ks,{name:"category"},()=>h("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));Ym.displayName="CategoryIcon";const Xm=()=>h(ks,{name:"print"},()=>h("path",{d:"M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z"}));Xm.displayName="PrintIcon";const Zm=()=>h(ks,{name:"tag"},()=>h("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));Zm.displayName="TagIcon";const s0=()=>h(ks,{name:"timer"},()=>h("path",{d:"M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z"}));s0.displayName="TimerIcon";const e0=()=>h(ks,{name:"word"},()=>[h("path",{d:"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z"}),h("path",{d:"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z"})]);e0.displayName="WordIcon";const Di=()=>{const s=hs();return B(()=>s.value.metaLocales)};var N5=S({name:"AuthorInfo",inheritAttrs:!1,props:{author:{type:Array,required:!0}},setup(s){const e=Di(),i=le();return()=>s.author.length?h("span",{class:"page-author-info","aria-label":`${e.value.author}${i.value?"":"🖊"}`,...i.value?{}:{"data-balloon-pos":"up"}},[h(Qm),h("span",s.author.map(n=>n.url?h("a",{class:"page-author-item",href:n.url,target:"_blank",rel:"noopener noreferrer"},n.name):h("span",{class:"page-author-item"},n.name))),h("span",{property:"author",content:s.author.map(n=>n.name).join(", ")})]):null}}),z5=S({name:"CategoryInfo",inheritAttrs:!1,props:{category:{type:Array,required:!0}},setup(s){const e=Di(),i=Ji(),n=le();return()=>s.category.length?h("span",{class:"page-category-info","aria-label":`${e.value.category}${n.value?"":"🌈"}`,...n.value?{}:{"data-balloon-pos":"up"}},[h(Ym),s.category.map(({name:t,path:a})=>h("span",{class:["page-category-item",{[`color${It(t,Number(Qi.colorNumber))}`]:!n.value,clickable:a}],role:a?"navigation":"",onClick:()=>{a&&i(a)}},t)),h("meta",{property:"articleSection",content:s.category.map(({name:t})=>t).join(",")})]):null}}),j5=S({name:"DateInfo",inheritAttrs:!1,props:{date:{type:Object,default:null},localizedDate:{type:String,default:""}},setup(s){const e=Ia(),i=Di(),n=le();return()=>s.date?h("span",{class:"page-date-info","aria-label":`${i.value.date}${n.value?"":"📅"}`,...n.value?{}:{"data-balloon-pos":"up"}},[h(Jm),h("span",{"data-allow-mismatch":"text"},s.localizedDate||s.date.toLocaleDateString(e.value)),h("meta",{property:"datePublished",content:s.date.toISOString()||""})]):null}}),M5=S({name:"OriginalInfo",inheritAttrs:!1,props:{isOriginal:Boolean},setup(s){const e=Di();return()=>s.isOriginal?h("span",{class:"page-original-info"},e.value.origin):null}}),q5=S({name:"ReadingTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null}},setup(s){const e=Di(),i=le(),n=B(()=>{if(!s.readingTime)return null;const{minutes:t}=s.readingTime;return t<1?"PT1M":`PT${Math.round(t)}M`});return()=>{var t,a;return(t=s.readingTimeLocale)!=null&&t.time?h("span",{class:"page-reading-time-info","aria-label":`${e.value.readingTime}${i.value?"":"⌛"}`,...i.value?{}:{"data-balloon-pos":"up"}},[h(s0),h("span",(a=s.readingTimeLocale)==null?void 0:a.time),h("meta",{property:"timeRequired",content:n.value})]):null}}}),G5=S({name:"TagInfo",inheritAttrs:!1,props:{tag:{type:Array,default:()=>[]}},setup(s){const e=Di(),i=Ji(),n=le();return()=>s.tag.length?h("span",{class:"page-tag-info","aria-label":`${e.value.tag}${n.value?"":"🏷"}`,...n.value?{}:{"data-balloon-pos":"up"}},[h(Zm),s.tag.map(({name:t,path:a})=>h("span",{class:["page-tag-item",{[`color${It(t,Number(Qi.colorNumber))}`]:!n.value,clickable:a}],role:a?"navigation":"",onClick:()=>{a&&i(a)}},t)),h("meta",{property:"keywords",content:s.tag.map(({name:t})=>t).join(",")})]):null}}),H5=S({name:"ReadTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null}},setup(s){const e=Di(),i=le();return()=>{var n,t,a;return(n=s.readingTimeLocale)!=null&&n.words?h("span",{class:"page-word-info","aria-label":`${e.value.words}${i.value?"":"🔠"}`,...i.value?{}:{"data-balloon-pos":"up"}},[h(e0),h("span",(t=s.readingTimeLocale)==null?void 0:t.words),h("meta",{property:"wordCount",content:(a=s.readingTime)==null?void 0:a.words})]):null}}}),i0=S({name:"PageInfo",components:{AuthorInfo:N5,CategoryInfo:z5,DateInfo:j5,OriginalInfo:M5,PageViewInfo:er,ReadingTimeInfo:q5,TagInfo:G5,WordInfo:H5},props:{items:{type:[Array,Boolean],default:()=>["Author","Original","Date","PageView","ReadingTime","Category","Tag"]},info:{type:Object,required:!0}},setup(s){const e=le();return()=>s.items?h("div",{class:"page-info"},s.items.map(i=>h(Pe(`${i}Info`),{...s.info,isPure:e.value}))):null}}),U5=S({name:"PrintButton",setup(){const s=je(),e=hs();return()=>s.value.print===!1?null:h("button",{type:"button",class:"print-button",title:e.value.metaLocales.print,onClick:()=>{window.print()}},h(Xm))}}),n0=S({name:"TOC",props:{items:{type:Array,default:()=>[]},headerDepth:{type:Number,default:2}},slots:Object,setup(s,{slots:e}){const i=Se(),n=Os(),t=Di(),[a,r]=dt(),p=ys(),o=Y("-1.7rem"),d=u=>{var m;(m=p.value)==null||m.scrollTo({top:u,behavior:"smooth"})},c=()=>{if(p.value){const u=document.querySelector(".vp-toc-item.active");u?o.value=`${u.getBoundingClientRect().top-p.value.getBoundingClientRect().top+p.value.scrollTop}px`:o.value="-1.7rem"}else o.value="-1.7rem"};return us(()=>{ds(()=>i.hash,u=>{if(p.value){const m=document.querySelector(`#toc a.vp-toc-link[href$="${u}"]`);if(!m)return;const{top:g,height:k}=p.value.getBoundingClientRect(),{top:A,height:f}=m.getBoundingClientRect();A<g?d(p.value.scrollTop+A-g):A+f>g+k&&d(p.value.scrollTop+A+f-g-k)}}),ds(()=>i.fullPath,c,{flush:"post",immediate:!0})}),()=>{var k,A;const u=({title:f,level:v,slug:b})=>h(Gs,{to:`#${b}`,class:["vp-toc-link",`level${v}`],onClick:()=>{r()}},()=>f),m=(f,v)=>f.length&&v>0?h("ul",{class:"vp-toc-list"},f.map(b=>{const E=m(b.children,v-1);return[h("li",{class:["vp-toc-item",{active:i.hash===`#${b.slug}`}]},u(b)),E?h("li",E):null]})):null,g=s.items.length?m(s.items,s.headerDepth):n.value.headers?m(n.value.headers,s.headerDepth):null;return g?h("div",{class:"vp-toc-placeholder"},[h("aside",{id:"toc","vp-toc":""},[(k=e.before)==null?void 0:k.call(e),h("div",{class:"vp-toc-header",onClick:()=>{r()}},[t.value.toc,h(U5),h("div",{class:["arrow",a.value?"down":"end"]})]),h("div",{class:["vp-toc-wrapper",a.value?"open":""],ref:p},[g,h("div",{class:"vp-toc-marker",style:{top:o.value}})]),(A=e.after)==null?void 0:A.call(e)])]):null}}}),hp=S({name:"SkipLink",props:{content:{type:String,default:"main-content"}},setup(s){const e=Os(),i=hs(),n=ys(),t=({target:a})=>{const r=document.querySelector(a.hash);if(r){const p=()=>{r.removeAttribute("tabindex"),r.removeEventListener("blur",p)};r.setAttribute("tabindex","-1"),r.addEventListener("blur",p),r.focus(),window.scrollTo(0,0)}};return us(()=>{ds(()=>e.value.path,()=>n.value.focus())}),()=>[h("span",{ref:n,tabindex:"-1"}),h("a",{href:`#${s.content}`,class:"vp-skip-link sr-only",onClick:t},i.value.routeLocales.skipToContent)]}});let yl=null,Gn=null;const ar={wait:()=>yl,pending:()=>{yl=new Promise(s=>{Gn=s})},resolve:()=>{Gn==null||Gn(),yl=null,Gn=null}},dp=(s,{slots:e})=>h(Mi,{name:"fade-slide-y",mode:"out-in",onBeforeEnter:ar.resolve,onBeforeLeave:ar.pending},()=>e.default());dp.displayName="FadeSlideY";const $5=(s,e)=>{const i=s.replace(e,"/").split("/"),n=[];let t=Pr(e);return i.forEach((a,r)=>{r!==i.length-1?(t+=`${a}/`,n.push({link:t,name:a||"Home"})):a!==""&&(t+=a,n.push({link:t,name:a}))}),n},Jh=(s,e)=>s===!1?s:ai(s)?{...s,link:ga(s.link,!0,e).link}:Ps(s)?ga(s,!0,e):null,lr=(s,e,i)=>{const n=s.findIndex(a=>a.link===e);if(n!==-1){const a=s[n+i];return a?a.link?a:"prefix"in a&&!De(a.prefix).notFound?{...a,link:a.prefix}:null:null}for(const a of s)if("children"in a){const r=lr(a.children,e,i);if(r)return r}const t=s.findIndex(a=>"prefix"in a&&a.prefix===e);if(t!==-1){const a=s[t+i];return a?a.link?a:"prefix"in a&&!De(a.prefix).notFound?{...a,link:a.prefix}:null:null}return null},K5=()=>{const s=As(),e=hs(),i=pp(),n=Se(),t=B(()=>{const r=Jh(s.value.prev,n.path);return r===!1?null:r??(e.value.prevLink===!1?null:lr(i.value,n.path,-1))}),a=B(()=>{const r=Jh(s.value.next,n.path);return r===!1?null:r??(e.value.nextLink===!1?null:lr(i.value,n.path,1))});return{prevLink:t,nextLink:a}},rr=(s,{slots:e})=>{var u,m;const{bgImage:i,bgImageDark:n,bgImageStyle:t,color:a,description:r,image:p,imageDark:o,header:d,features:c=[]}=s;return h("div",{class:"vp-feature-wrapper"},[i?h("div",{class:["vp-feature-bg",{light:n}],style:[{"background-image":`url(${i})`},t]}):null,n?h("div",{class:"vp-feature-bg dark",style:[{"background-image":`url(${n})`},t]}):null,h("div",{class:"vp-feature",style:a?{color:a}:{}},[((u=e.image)==null?void 0:u.call(e,s))??[p?h("img",{class:["vp-feature-image",{light:o}],src:Cs(p),alt:""}):null,o?h("img",{class:"vp-feature-image dark",src:Cs(o),alt:""}):null],((m=e.info)==null?void 0:m.call(e,s))??[d?h("h2",{class:"vp-feature-header"},d):null,r?h("p",{class:"vp-feature-description",innerHTML:r}):null],c.length?h("div",{class:"vp-features"},c.map(({icon:g,title:k,details:A,link:f})=>{const v=[h("h3",{class:"vp-feature-title"},[h(Ws,{icon:g}),h("span",{innerHTML:k})]),h("p",{class:"vp-feature-details",innerHTML:A})];return f?Or(f)?h("a",{class:"vp-feature-item link",href:f,"aria-label":k,target:"_blank"},v):h(Gs,{class:"vp-feature-item link",to:f,"aria-label":k},()=>v):h("div",{class:"vp-feature-item"},v)})):null])])};rr.displayName="FeaturePanel";var W5=S({name:"HeroInfo",slots:Object,setup(s,{slots:e}){const i=As(),n=Ln(),t=B(()=>i.value.heroFullScreen??!1),a=B(()=>{const{heroText:d,tagline:c}=i.value;return{text:d??n.value.title??"Hello",tagline:c??n.value.description??"",isFullScreen:t.value}}),r=B(()=>{const{heroText:d,heroImage:c,heroImageDark:u,heroAlt:m,heroImageStyle:g}=i.value;return{image:c?Cs(c):null,imageDark:u?Cs(u):null,imageStyle:g,alt:m??d??"",isFullScreen:t.value}}),p=B(()=>{const{bgImage:d,bgImageDark:c,bgImageStyle:u}=i.value;return{image:Ps(d)?Cs(d):null,imageDark:Ps(c)?Cs(c):null,bgStyle:u,isFullScreen:t.value}}),o=B(()=>i.value.actions??[]);return()=>{var d,c,u;return h("header",{class:["vp-hero-info-wrapper",{fullscreen:t.value}]},[((d=e.bg)==null?void 0:d.call(e,p.value))??[p.value.image?h("div",{class:["vp-hero-mask",{light:p.value.imageDark}],style:[{"background-image":`url(${p.value.image})`},p.value.bgStyle]}):null,p.value.imageDark?h("div",{class:"vp-hero-mask dark",style:[{"background-image":`url(${p.value.imageDark})`},p.value.bgStyle]}):null],h("div",{class:"vp-hero-info"},[((c=e.logo)==null?void 0:c.call(e,r.value))??h(ps,{appear:!0,type:"group"},()=>{const{image:m,imageDark:g,imageStyle:k,alt:A}=r.value;return[m?h("img",{key:"light",class:["vp-hero-image",{light:g}],style:k,src:m,alt:A}):null,g?h("img",{key:"dark",class:"vp-hero-image dark",style:k,src:g,alt:A}):null]}),((u=e.info)==null?void 0:u.call(e,a.value))??h("div",{class:"vp-hero-infos"},[a.value.text?h(ps,{appear:!0,delay:.04},()=>h("h1",{id:"main-title",class:"vp-hero-title"},a.value.text)):null,a.value.tagline?h(ps,{appear:!0,delay:.08},()=>h("p",{id:"main-description",innerHTML:a.value.tagline})):null,o.value.length?h(ps,{appear:!0,delay:.12},()=>h("p",{class:"vp-hero-actions"},o.value.map(m=>h(he,{class:["vp-hero-action",m.type??"default","no-external-link-icon"],config:m},m.icon?{before:()=>h(Ws,{icon:m.icon})}:{})))):null])])])}}});const t0=(s,{slots:e})=>{var m,g,k;const{bgImage:i,bgImageDark:n,bgImageStyle:t,color:a,description:r,image:p,imageDark:o,header:d,highlights:c=[],type:u="un-order"}=s;return h("div",{class:"vp-highlight-wrapper",style:a?{color:a}:{}},[i?h("div",{class:["vp-highlight-bg",{light:n}],style:[{"background-image":`url(${i})`},t]}):null,n?h("div",{class:"vp-highlight-bg dark",style:[{"background-image":`url(${n})`},t]}):null,h("div",{class:"vp-highlight"},[((m=e.image)==null?void 0:m.call(e,s))??[p?h("img",{class:["vp-highlight-image",{light:o}],src:Cs(p),alt:""}):null,o?h("img",{class:"vp-highlight-image dark",src:Cs(o),alt:""}):null],((g=e.info)==null?void 0:g.call(e,s))??[h("div",{class:"vp-highlight-info-wrapper"},h("div",{class:"vp-highlight-info"},[d?h("h2",{class:"vp-highlight-header",innerHTML:d}):null,r?h("p",{class:"vp-highlight-description",innerHTML:r}):null,((k=e.highlights)==null?void 0:k.call(e,c))??h(u==="order"?"ol":u==="no-order"?"dl":"ul",{class:"vp-highlights"},c.map(({icon:A,title:f,details:v,link:b})=>{const E=[h(u==="no-order"?"dt":"h3",{class:"vp-highlight-title"},[A?h(Ws,{class:"vp-highlight-icon",icon:A}):null,h("span",{innerHTML:f})]),v?h(u==="no-order"?"dd":"p",{class:"vp-highlight-details",innerHTML:v}):null];return h(u==="no-order"?"div":"li",{class:["vp-highlight-item-wrapper",{link:b}]},b?Or(b)?h("a",{class:"vp-highlight-item link",href:b,"aria-label":f,target:"_blank"},E):h(Gs,{class:"vp-highlight-item link",to:b,"aria-label":f},()=>E):h("div",{class:"vp-highlight-item"},E))}))]))]])])};t0.displayName="HighlightPanel";var Q5=S({name:"HomePage",slots:Object,setup(s,{slots:e}){const i=As(),n=B(()=>{const{features:a}=i.value;return ua(a)?a:null}),t=B(()=>{const{highlights:a}=i.value;return ua(a)?a:null});return()=>{var a,r,p,o;return h("main",{id:"main-content",class:"vp-page vp-project-home","aria-labelledby":i.value.heroText===null?"":"main-title"},[(a=e.top)==null?void 0:a.call(e),h(W5),((r=t.value)==null?void 0:r.map(d=>"features"in d?h(rr,d):h(t0,d)))??(n.value?h(ps,{appear:!0,delay:.24},()=>h(rr,{features:n.value})):null),(p=e.center)==null?void 0:p.call(e),h(ps,{appear:!0,delay:.32},()=>h(Dn)),(o=e.bottom)==null?void 0:o.call(e)])}}}),J5=S({name:"BreadCrumb",setup(){const s=Os(),e=Ne(),i=As(),n=hs(),t=ys([]),a=B(()=>(i.value.breadcrumb??n.value.breadcrumb??!0)&&t.value.length>1),r=B(()=>i.value.breadcrumbIcon??n.value.breadcrumbIcon??!0),p=()=>{const o=$5(s.value.path,e.value).map(({link:d,name:c})=>{const{path:u,meta:m,notFound:g}=De(d);return g||m[te.breadcrumbExclude]?null:{title:m[te.shortTitle]||m[te.title]||c,icon:m[te.icon],path:u}}).filter(d=>d!==null);o.length>1&&(t.value=o)};return us(()=>{ds(()=>s.value.path,p,{immediate:!0})}),()=>h("nav",{class:["vp-breadcrumb",{disable:!a.value}]},a.value?h("ol",{vocab:"https://schema.org/",typeof:"BreadcrumbList"},t.value.map((o,d)=>h("li",{class:{"is-active":t.value.length-1===d},property:"itemListElement",typeof:"ListItem"},[h(Gs,{to:o.path,property:"item",typeof:"WebPage"},()=>[r.value?h(Ws,{icon:o.icon}):null,h("span",{property:"name"},o.title||"Unknown")]),h("meta",{property:"position",content:d+1})]))):[])}}),Y5=S({name:"PageNav",setup(){const s=hs(),e=Ji(),{prevLink:i,nextLink:n}=K5();return Ns("keydown",t=>{t.altKey&&(t.key==="ArrowRight"?n.value&&(e(n.value.link),t.preventDefault()):t.key==="ArrowLeft"&&i.value&&(e(i.value.link),t.preventDefault()))}),()=>i.value||n.value?h("nav",{class:"vp-page-nav"},[i.value?h(he,{class:"prev",config:i.value},()=>{var t,a;return[h("div",{class:"hint"},[h("span",{class:"arrow start"}),s.value.metaLocales.prev]),h("div",{class:"link"},[h(Ws,{icon:(t=i.value)==null?void 0:t.icon}),(a=i.value)==null?void 0:a.text])]}):null,n.value?h(he,{class:"next",config:n.value},()=>{var t,a;return[h("div",{class:"hint"},[s.value.metaLocales.next,h("span",{class:"arrow end"})]),h("div",{class:"link"},[(t=n.value)==null?void 0:t.text,h(Ws,{icon:(a=n.value)==null?void 0:a.icon})])]}):null]):null}});const X5=()=>{const s=hs(),e=Os(),i=As();return B(()=>{var n;return i.value.contributors??s.value.contributors??!0?((n=e.value.git)==null?void 0:n.contributors)??null:null})},Z5={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},s7=({docsRepo:s,docsBranch:e,docsDir:i,filePathRelative:n,editLinkPattern:t})=>{if(!n)return null;const a=tp(s);let r;return t?r=t:a!==null&&(r=Z5[a]),r?r.replace(/:repo/u,Ui(s)?s:`https://github.com/${s}`).replace(/:branch/u,e).replace(/:path/u,xc(`${Pr(i)}/${n}`)):null},e7=()=>{const s=hs(),e=Os(),i=As();return B(()=>{const{repo:n,docsRepo:t=n,docsBranch:a="main",docsDir:r="",editLink:p,editLinkPattern:o=""}=s.value;if(!(i.value.editLink??p??!0)||!t)return null;const d=s7({docsRepo:t,docsBranch:a,docsDir:r,editLinkPattern:o,filePathRelative:e.value.filePathRelative});return d?{text:s.value.metaLocales.editLink,link:d}:null})},i7=()=>{const s=Ln(),e=hs(),i=Os(),n=As();return B(()=>{var t,a;return!(n.value.lastUpdated??e.value.lastUpdated??!0)||!((t=i.value.git)!=null&&t.updatedTime)?null:new Date((a=i.value.git)==null?void 0:a.updatedTime).toLocaleString(s.value.lang)})};var n7=S({name:"PageTitle",setup(){const s=Os(),e=As(),i=hs(),{info:n,items:t}=u5();return()=>h("div",{class:"vp-page-title"},[h("h1",[i.value.titleIcon===!1?null:h(Ws,{icon:e.value.icon}),s.value.title]),h(i0,{info:n.value,...t.value===null?{}:{items:t.value}}),h("hr")])}});const a0=()=>h(ks,{name:"edit"},()=>[h("path",{d:"M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z"}),h("path",{d:"M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z"})]);a0.displayName="EditIcon";var t7=S({name:"PageMeta",setup(){const s=hs(),e=e7(),i=i7(),n=X5();return()=>{var a;const{metaLocales:t}=s.value;return h("footer",{class:"vp-page-meta"},[e.value?h("div",{class:"vp-meta-item edit-link"},h(he,{class:"vp-meta-label",config:e.value},{before:()=>h(a0)})):null,h("div",{class:"vp-meta-item git-info"},[i.value?h("div",{class:"update-time"},[h("span",{class:"vp-meta-label"},`${t.lastUpdated}: `),h("span",{class:"vp-meta-info","data-allow-mismatch":"text"},i.value)]):null,(a=n.value)!=null&&a.length?h("div",{class:"contributors"},[h("span",{class:"vp-meta-label"},`${t.contributors}: `),n.value.map(({email:r,name:p},o)=>[h("span",{class:"vp-meta-info",title:`email: ${r}`},p),o!==n.value.length-1?",":""])]):null])])}}}),a7=S({name:"NormalPage",slots:Object,setup(s,{slots:e}){const i=As(),{isDarkmode:n}=xt(),t=hs(),a=B(()=>i.value.toc??t.value.toc??!0),r=B(()=>i.value.headerDepth??t.value.headerDepth??2);return()=>h("main",{id:"main-content",class:"vp-page"},h(Re("LocalEncrypt")?Pe("LocalEncrypt"):Va,()=>{var p,o,d,c;return[(p=e.top)==null?void 0:p.call(e),i.value.cover?h("div",{class:"page-cover"},h("img",{src:Cs(i.value.cover),alt:"","no-view":""})):null,h(J5),h(n7),a.value?h(n0,{headerDepth:r.value},{before:e.tocBefore?()=>e.tocBefore():null,after:e.tocAfter?()=>e.tocAfter():null}):null,(o=e.contentBefore)==null?void 0:o.call(e),h(Dn),(d=e.contentAfter)==null?void 0:d.call(e),h(t7),h(Y5),Re("CommentService")?h(Pe("CommentService"),{darkmode:n.value}):null,(c=e.bottom)==null?void 0:c.call(e)]}))}}),l7=S({name:"PortfolioHero",slots:Object,setup(s,{slots:e}){const i=Fm(),n=As(),t=Y(0),a=B(()=>{var m;return((m=n.value.titles)==null?void 0:m[t.value])??""}),r=Y(""),p=B(()=>{const{name:m,avatar:g,avatarDark:k,avatarAlt:A,avatarStyle:f}=n.value;return{name:m??i.value.name,avatar:g?Cs(g):null,avatarDark:k?Cs(k):null,avatarStyle:f,alt:(A||m)??""}}),o=B(()=>{const{bgImage:m,bgImageDark:g,bgImageStyle:k}=n.value;return{image:Ps(m)?Cs(m):null,imageDark:Ps(g)?Cs(g):null,bgStyle:k}}),d=B(()=>{const{welcome:m,name:g,titles:k,medias:A}=n.value;return{name:g??i.value.name,welcome:m??"👋 Hi There, I'm",title:r.value,titles:k??[],medias:A??[]}}),c=()=>{r.value="";let m=0,g=!1;const k=async()=>{if(!g)if(r.value+=a.value[m],m+=1,await Qe(),m<a.value.length)setTimeout(()=>{k()},150);else{const A=d.value.titles.length;setTimeout(()=>{t.value=A<=1||t.value===d.value.titles.length-1?0:t.value+1},1e3)}};return k(),()=>{g=!0}};let u;return us(()=>{ds(a,()=>{u==null||u(),u=c()},{immediate:!0})}),()=>{var m,g,k;return h("section",{id:"portfolio",class:["vp-portfolio",{bg:o.value.image}]},[((m=e.bg)==null?void 0:m.call(e,o.value))??[o.value.image?h("div",{class:["vp-portfolio-mask",{light:o.value.imageDark}],style:[{background:`url(${o.value.image}) center/cover no-repeat`},o.value.bgStyle]}):null,o.value.imageDark?h("div",{class:"vp-portfolio-mask dark",style:[{background:`url(${o.value.imageDark}) center/cover no-repeat`},o.value.bgStyle]}):null],((g=e.avatar)==null?void 0:g.call(e,p.value))??h("div",{class:"vp-portfolio-avatar"},[h(ps,{delay:.04},()=>{const{avatarDark:A,name:f,alt:v,avatarStyle:b}=p.value;return[h("img",{key:"light",class:{light:A},src:p.value.avatar,title:f,alt:v,style:b}),A?h("img",{key:"dark",class:"dark",src:A,title:f,alt:v,style:b}):null]})]),h("div",{class:"vp-portfolio-container"},((k=e.info)==null?void 0:k.call(e,d.value))??h("div",{class:"vp-portfolio-info"},[h(ps,{appear:!0,delay:.08},()=>h("h6",{class:"vp-portfolio-welcome"},d.value.welcome)),h(ps,{appear:!0,delay:.12},()=>h("h1",{class:"vp-portfolio-name",id:"main-title"},d.value.name)),h(ps,{appear:!0,delay:.16},()=>h("h2",{class:"vp-portfolio-title"},r.value)),h(ps,{appear:!0,delay:.2},()=>d.value.medias.length?h("div",{class:"vp-portfolio-medias"},d.value.medias.map(({name:A,url:f,icon:v})=>h("a",{class:"vp-portfolio-media",href:f,rel:"noopener noreferrer",target:"_blank",title:A},h(Ws,{icon:v})))):Re("SocialMedias")?h(Pe("SocialMedias")):null)]))])}}}),r7=S({name:"PortfolioHome",setup(){const s=As(),e=B(()=>s.value.content??"portfolio");return()=>h("main",{id:"main-content",class:"vp-page vp-portfolio-home","aria-labelledby":"main-title"},[h(l7),e.value==="none"?null:h("div",{},h(ps,{appear:!0,delay:.24},()=>h(Dn,{class:{"vp-portfolio-content":e.value==="portfolio"}})))])}}),p7=S({name:"Layout",slots:Object,setup(s,{slots:e}){const i=je(),n=hs(),t=Os(),a=As(),r=le(),{isMobile:p}=Lt(),o=B(()=>{var d,c;return((d=n.value.blog)==null?void 0:d.sidebarDisplay)??((c=i.value.blog)==null?void 0:c.sidebarDisplay)??"mobile"});return()=>[h(hp),h(op,{},{default:()=>{var d;return((d=e.default)==null?void 0:d.call(e))??(a.value.portfolio?h(r7):a.value.home?h(Q5):h(r.value?Va:dp,()=>h(a7,{key:t.value.path},{top:e.top?()=>e.top():null,bottom:e.bottom?()=>e.bottom():null,contentBefore:e.contentBefore?()=>e.contentBefore():null,contentAfter:e.contentAfter?()=>e.contentAfter():null,tocBefore:e.tocBefore?()=>e.tocBefore():null,tocAfter:e.tocAfter?()=>e.tocAfter():null})))},navScreenBottom:o.value==="none"&&Re("BloggerInfo")?()=>h(Pe("BloggerInfo")):null,sidebar:!p.value&&o.value==="always"&&Re("BloggerInfo")?()=>h(Pe("BloggerInfo")):null})]}}),o7=S({name:"NotFoundHint",setup(){const s=hs(),e=()=>{const i=s.value.routeLocales.notFoundMsg;return i[Math.floor(Math.random()*i.length)]};return()=>h("div",{class:"not-found-hint"},[h("p",{class:"error-code"},"404"),h("h1",{class:"error-title"},s.value.routeLocales.notFoundTitle),h("p",{class:"error-hint"},e())])}}),h7=S({name:"NotFound",slots:Object,setup(s,{slots:e}){const i=wi(),n=Ne(),t=hs();return()=>[h(hp),h(op,{noSidebar:!0},()=>{var a;return h("main",{id:"main-content",class:"vp-page not-found"},((a=e.default)==null?void 0:a.call(e))??[h(o7),h("div",{class:"actions"},[h("button",{type:"button",class:"action-button",onClick:()=>{window.history.go(-1)}},t.value.routeLocales.back),h("button",{type:"button",class:"action-button",onClick:()=>{i.push(t.value.home??n.value)}},t.value.routeLocales.home)])])})]}});const d7={GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Linkedin:'<svg xmlns="http://www.w3.org/2000/svg" class="icon linkedin-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#4376B1"/><path fill="#F1F2F2" d="M838.301 555.94v225.157h-130.54V571.03c0-52.746-18.847-88.766-66.112-88.766-36.069 0-57.496 24.25-66.959 47.732-3.436 8.391-4.322 20.045-4.322 31.814v219.277h-130.55s1.752-355.784 0-392.613h130.56v55.637c-.263.438-.633.867-.867 1.285h.866v-1.285c17.349-26.694 48.287-64.856 117.651-64.856 85.884 0 150.273 56.114 150.273 176.685zm-535.05-356.72c-44.655 0-73.87 29.314-73.87 67.826 0 37.695 28.368 67.855 72.157 67.855h.847c45.532 0 73.842-30.16 73.842-67.855-.866-38.512-28.31-67.825-72.975-67.825zM237.14 781.098h130.5V388.474h-130.5v392.623z"/></svg>',Email:'<svg xmlns="http://www.w3.org/2000/svg" class="icon email-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1384FF"/><path fill="#fff" d="M270.077 286.233H751.99c32.933 0 59.86 24.855 60.274 55.51l-301.023 157L210.217 341.88c.207-30.723 26.927-55.717 59.86-55.717zm-59.929 115.714-.276 277.756c0 30.931 27.134 56.2 60.205 56.2H751.99c33.14 0 60.274-25.269 60.274-56.2V401.81L518.283 551.492a15.88 15.88 0 0 1-14.43 0L210.148 401.947z"/></svg>'},c7={category:{"/":{path:"/category/",map:{}},"/zh/":{path:"/zh/category/",map:{使用指南:{path:"/zh/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",indexes:[0,1,2,3,4]},樱桃:{path:"/zh/category/%E6%A8%B1%E6%A1%83/",indexes:[5]},火龙果:{path:"/zh/category/%E7%81%AB%E9%BE%99%E6%9E%9C/",indexes:[6]},水果:{path:"/zh/category/%E6%B0%B4%E6%9E%9C/",indexes:[7,6,8,9,10,11]},草莓:{path:"/zh/category/%E8%8D%89%E8%8E%93/",indexes:[7]},蔬菜:{path:"/zh/category/%E8%94%AC%E8%8F%9C/",indexes:[12]},苹果:{path:"/zh/category/%E8%8B%B9%E6%9E%9C/",indexes:[10,11,13,14]},香蕉:{path:"/zh/category/%E9%A6%99%E8%95%89/",indexes:[15,16,8,9]}}}},tag:{"/":{path:"/tag/",map:{}},"/zh/":{path:"/zh/tag/",map:{禁用:{path:"/zh/tag/%E7%A6%81%E7%94%A8/",indexes:[2]},文章加密:{path:"/zh/tag/%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/",indexes:[3]},Markdown:{path:"/zh/tag/markdown/",indexes:[4]},页面配置:{path:"/zh/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/",indexes:[0]},使用指南:{path:"/zh/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",indexes:[0]},红:{path:"/zh/tag/%E7%BA%A2/",indexes:[12,7,6,5,10,11,13,14]},小:{path:"/zh/tag/%E5%B0%8F/",indexes:[7,5]},圆:{path:"/zh/tag/%E5%9C%86/",indexes:[12,5,10,11,13,14]},大:{path:"/zh/tag/%E5%A4%A7/",indexes:[6,10,11,13,14]},黄:{path:"/zh/tag/%E9%BB%84/",indexes:[15,16,8,9]},弯曲的:{path:"/zh/tag/%E5%BC%AF%E6%9B%B2%E7%9A%84/",indexes:[15,16,8,9]},长:{path:"/zh/tag/%E9%95%BF/",indexes:[15,16,8,9]}}}}},l0=["/zh/demo/page.html","/zh/demo/","/zh/demo/disable.html","/zh/demo/encrypt.html","/zh/demo/markdown.html","/zh/posts/cherry.html","/zh/posts/dragonfruit.html","/zh/posts/strawberry.html","/zh/posts/banana/2.html","/zh/posts/banana/1.html","/zh/posts/apple/4.html","/zh/posts/apple/3.html","/zh/posts/tomato.html","/zh/posts/apple/2.html","/zh/posts/apple/1.html","/zh/posts/banana/4.html","/zh/posts/banana/3.html","/education/ms/5110/2.html","/education/ms/5110/3.html","/education/ms/5110/lang.html","/education/ms/5450/2.html","/education/ms/5450/","/ai/nn/techniques.html","/ai/rec/","/hobby/fitness/","/hobby/fitness/disease.html","/hobby/palworld/mod.html","/se/app/","/education/ms/basics/dcc.html","/se/lang/kotlin/basic.html","/education/ms/6600/","/education/ms/basics/shader.html","/algo/summary/optimise/decrease-conquer/2ptr/","/algo/summary/optimise/dynamic-programming/%E8%BF%9B%E9%98%B6/kth.html","/algo/summary/search/DFS/recursion/%E5%A4%9A%E5%90%91%E9%80%92%E5%BD%92.html","/algo/summary/search/DFS/recursion/%E9%9D%9E%E9%80%92%E5%BD%92.html","/algo/course/jz/39.%20%E5%A4%96%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E7%BB%84%E5%90%88%E5%B9%B6%E7%B1%BB.html","/algo/course/jz/4.%20%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%90%86%E8%AE%BA.html","/algo/course/jz/2ptr/28.%20%E5%8F%8C%E6%8C%87%E9%92%88.html","/algo/course/jz/2ptr/4.%20%E5%8F%8C%E6%8C%87%E9%92%88.html","/algo/course/jz/2ptr/8.%20%E5%8F%8C%E6%8C%87%E9%92%88.html","/algo/course/jz/bfs/11.%20BFS.html","/algo/course/jz/bfs/32.%20%E5%85%A8%E5%AD%90%E9%9B%86%E9%97%AE%E9%A2%98.html","/algo/course/jz/bfs/33.%20%E5%8F%8C%E5%90%91BFS.html","/algo/course/jz/bs/9.%20%E4%BA%8C%E5%88%86%E6%B3%95.html","/algo/course/jz/dfs/20.%20DFS.html","/algo/course/jz/dfs/26.%20%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2.html","/algo/course/jz/dp/40.%20%E5%8C%BA%E9%97%B4%E5%9E%8B.html","/algo/course/jz/dp/41.%20%E5%8C%B9%E9%85%8D%E5%9E%8B.html","/algo/course/jz/dp/42.%20%E5%88%92%E5%88%86%E5%9E%8B.html","/algo/course/jz/dp/43.%20%E6%8E%A5%E9%BE%99%E5%9E%8B.html","/education/ms/5620/optimization.html","/education/ms/5620/simulation.html","/education/ms/5620/cq/8.html","/education/ms/5620/exam/mid-sample.html","/algo/faq/div-conq.html","/algo/faq/greater.html","/algo/faq/island.html","/algo/summary/search/BFS/BeFS.html","/algo/summary/structure/graph/connectivity.html","/algo/summary/structure/linear/ext/stack/monotonic.html","/algo/summary/search/BFS/01bfs.html","/algo/summary/optimise/dynamic-programming/%E5%9D%90%E6%A0%87/2d.html","/education/ms/5620/behavioral.html","/education/ms/5620/facial.html","/education/ms/5620/hw/8.html","/algo/summary/math/%E8%BF%9B%E5%88%B6.html","/algo/summary/search/BFS/optimization.html","/algo/summary/structure/linear/ext/stack/","/algo/faq/range/suffix.html","/algo/faq/minmax.html","/algo/faq/sort.html","/education/ms/5620/feedback.html","/education/ms/basics/pattern.html","/education/ms/5600/final/ms2.html","/education/ms/5600/final/ms3.html","/education/ms/5600/final/sky.html","/education/ms/5620/animation/mocap.html","/education/ms/5620/cq/6.html","/education/ms/5620/cq/7.html","/education/ms/5620/quiz/6.html","/education/ms/5005/hw/3.html","/se/design/pattern/creational/pool.html","/se/design/pattern/creational/prototype.html","/se/design/system/comet.html","/se/design/system/security/encryption.html","/hobby/device/display.html","/hobby/device/input.html","/hobby/device/laptop.html","/cs/middleware/es/availability.html","/cs/middleware/es/optimization.html","/cs/middleware/es/pagination.html","/cs/basic/os/kernel/","/cs/basic/os/process/ipc.html","/cs/basic/os/process/itc.html","/cs/basic/os/process/schedule.html","/cs/database/sql/optimisation/pagination.html","/algo/faq/2ptr.html","/algo/faq/","/algo/faq/big-integer.html","/algo/faq/binary-tree.html","/algo/faq/monotonic-stack.html","/algo/faq/quick.html","/algo/faq/substring.html","/algo/faq/trie.html","/algo/framework/","/algo/summary/","/algo/course/jz/1.%20%E7%9C%9F%E5%AE%9E%E6%A1%88%E4%BE%8B.html","/algo/course/jz/2.%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2.html","/algo/course/jz/3.%20%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F.html","/algo/course/jz/31.%20%E4%BD%8E%E4%BA%8EOn%E7%9A%84%E7%AE%97%E6%B3%95.html","/algo/course/jz/5.%20%E6%8E%92%E5%BA%8F.html","/algo/course/jz/","/algo/faq/big-data/","/algo/faq/big-data/bitmap.html","/algo/faq/big-data/bloomfilter.html","/algo/faq/big-data/mapreduce.html","/algo/faq/big-data/topk.html","/algo/faq/big-data/%E5%88%86%E8%80%8C%E6%B2%BB%E4%B9%8B.html","/algo/faq/big-data/%E5%A4%96%E6%8E%92%E5%BA%8F.html","/algo/faq/big-data/%E6%A6%82%E7%8E%87%E7%B1%BB.html","/algo/faq/big-data/%E7%9B%B8%E4%BC%BC%E6%A3%80%E6%B5%8B.html","/algo/faq/big-data/%E8%B7%9D%E7%A6%BB.html","/algo/faq/big-data/%E9%9D%A2%E7%BB%8F.html","/algo/faq/range/","/algo/faq/range/prefix.html","/algo/faq/range/rmq.html","/algo/faq/range/segment-tree.html","/algo/faq/string/","/algo/faq/string/parentheses.html","/algo/framework/clues/","/algo/framework/optimise/","/algo/framework/optimise/%E5%87%8F%E6%B2%BB%E4%BC%98%E5%8C%96.html","/algo/framework/optimise/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92.html","/algo/framework/order/","/algo/framework/parameter/","/algo/framework/quality/","/algo/framework/search/BFS.html","/algo/framework/search/DFS.html","/algo/framework/search/FOR.html","/algo/framework/search/","/algo/framework/structure/","/algo/summary/math/%E4%BA%8C%E8%BF%9B.html","/algo/summary/math/%E4%BD%99%E6%95%B0.html","/algo/summary/math/%E5%9B%A0%E6%95%B0.html","/algo/summary/math/%E6%A6%82%E7%8E%87.html","/algo/summary/math/%E8%BF%90%E7%AE%97.html","/algo/summary/optimise/","/algo/summary/optimise/middle.html","/algo/summary/search/","/algo/summary/structure/","/algo/course/jz/2ptr/29.%20%E5%8F%8C%E6%8C%87%E9%92%88.html","/algo/course/jz/bfs/14.%20BFS.html","/algo/course/jz/bs/30.%20%E4%BA%8C%E5%88%86%E6%B3%95%E5%AE%9E%E6%88%98.html","/algo/course/jz/bs/7.%20%E4%BA%8C%E5%88%86%E6%B3%95.html","/algo/course/jz/dfs/12.%20%E9%80%92%E5%BD%92%E3%80%81%E9%81%8D%E5%8E%86%E3%80%81%E5%88%86%E6%B2%BB.html","/algo/course/jz/dfs/13.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E9%9D%9E%E9%80%92%E5%BD%92%E9%81%8D%E5%8E%86.html","/algo/course/jz/dfs/15.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E5%88%86%E6%B2%BB%E6%B3%95.html","/algo/course/jz/dfs/16.%20%E7%BB%84%E5%90%88%E7%B1%BBDFS.html","/algo/course/jz/dfs/17.%20%E6%8E%92%E5%88%97%E5%BC%8FDFS.html","/algo/course/jz/dfs/22.%20%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2.html","/algo/course/jz/dfs/37.%20DFS.html","/algo/course/jz/dfs/6.%20%E9%80%92%E5%BD%92.html","/algo/course/jz/dp/23.%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92.html","/algo/course/jz/dp/24.%20%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF.html","/algo/course/jz/dp/25.%20%E8%83%8C%E5%8C%85%E5%9E%8B.html","/algo/course/jz/dp/27.%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E4%BC%98%E5%8C%96.html","/algo/course/jz/ds/18.%20%E5%93%88%E5%B8%8C%E8%A1%A8.html","/algo/course/jz/ds/19.%20Heap.html","/algo/course/jz/ds/21.%20%E5%93%88%E5%B8%8C%E8%A1%A8%E5%92%8C%E5%A0%86.html","/algo/course/jz/ds/38.%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1.html","/algo/summary/optimise/decrease-conquer/","/algo/summary/optimise/dynamic-programming/","/algo/summary/optimise/dynamic-programming/%E5%8D%9A%E5%BC%88%E5%9E%8B.html","/algo/summary/optimise/dynamic-programming/%E6%A6%82%E7%8E%87%E5%9E%8B.html","/algo/summary/optimise/dynamic-programming/%E7%BB%84%E5%90%88%E5%9E%8B.html","/algo/summary/optimise/dynamic-programming/%E8%AE%A1%E6%95%B0%E5%9E%8B.html","/algo/summary/search/BFS/BiBFS.html","/algo/summary/search/BFS/","/algo/summary/search/BFS/shortest-path.html","/algo/summary/search/BFS/solution.html","/algo/summary/search/BFS/topo.html","/algo/summary/search/BFS/%E6%97%B6%E9%97%B4%E6%A8%A1%E6%8B%9F.html","/algo/summary/search/BFS/%E8%BF%9E%E9%80%9A%E5%9D%97.html","/algo/summary/search/DFS/","/algo/summary/search/FOR/","/algo/summary/structure/graph/","/algo/summary/structure/graph/net-flow.html","/algo/summary/structure/graph/shortest-path.html","/algo/summary/structure/graph/ufs.html","/algo/summary/structure/graph/%E5%9B%BE%E7%9A%84%E5%AD%98%E5%82%A8.html","/algo/summary/structure/set/","/algo/summary/optimise/decrease-conquer/binary/","/algo/summary/optimise/decrease-conquer/delete/monotic-stack.html","/algo/summary/optimise/decrease-conquer/delete/monotic.html","/algo/summary/optimise/decrease-conquer/greedy/","/algo/summary/optimise/decrease-conquer/greedy/%E4%B8%AD%E4%BD%8D%E6%95%B0.html","/algo/summary/optimise/decrease-conquer/greedy/%E5%8C%BA%E9%97%B4.html","/algo/summary/optimise/decrease-conquer/greedy/%E5%90%88%E5%B9%B6.html","/algo/summary/optimise/decrease-conquer/greedy/%E8%83%8C%E5%8C%85.html","/algo/summary/optimise/decrease-conquer/kptr/","/algo/summary/optimise/dynamic-programming/%E5%8C%BA%E9%97%B4/%E5%8C%BA%E9%97%B4%E5%9E%8B.html","/algo/summary/optimise/dynamic-programming/%E5%9D%90%E6%A0%87/%E5%9D%90%E6%A0%87%E5%9E%8B.html","/algo/summary/optimise/dynamic-programming/%E5%BA%8F%E5%88%97/%E5%88%92%E5%88%86%E5%9E%8B.html","/algo/summary/optimise/dynamic-programming/%E5%BA%8F%E5%88%97/%E5%8F%8C%E5%BA%8F%E5%9E%8B.html","/algo/summary/optimise/dynamic-programming/%E5%BA%8F%E5%88%97/%E5%BA%8F%E5%88%97%E5%9E%8B.html","/algo/summary/optimise/dynamic-programming/%E5%BA%8F%E5%88%97/%E8%82%A1%E7%A5%A8%E9%97%AE%E9%A2%98.html","/algo/summary/optimise/dynamic-programming/%E6%95%B0%E4%BD%8D/%E6%95%B0%E4%BD%8D%E5%9E%8B.html","/algo/summary/optimise/dynamic-programming/%E6%A0%91%E5%BD%A2/%E6%A0%91%E4%B8%8A%E5%9E%8B.html","/algo/summary/optimise/dynamic-programming/%E7%8A%B6%E5%8E%8B/%E7%8A%B6%E5%8E%8B%E5%9E%8B.html","/algo/summary/optimise/dynamic-programming/%E7%BA%A6%E6%9D%9F/%E7%8A%B6%E6%80%81%E5%9E%8B.html","/algo/summary/optimise/dynamic-programming/%E7%BA%A6%E6%9D%9F/%E8%83%8C%E5%8C%85%E5%9E%8B.html","/algo/summary/optimise/dynamic-programming/%E8%BF%9B%E9%98%B6/%E4%BC%98%E5%8C%96.html","/algo/summary/optimise/dynamic-programming/%E8%BF%9B%E9%98%B6/%E5%85%B7%E4%BD%93%E6%96%B9%E6%A1%88.html","/algo/summary/optimise/dynamic-programming/%E8%BF%9B%E9%98%B6/%E8%BF%9B%E9%98%B6.html","/algo/summary/optimise/dynamic-programming/%E8%BF%9B%E9%98%B6/%E9%9A%BE%E9%A2%98.html","/algo/summary/search/DFS/enumerate/","/algo/summary/search/DFS/recursion/","/algo/summary/search/DFS/recursion/%E5%8D%95%E5%90%91%E9%80%92%E5%BD%92.html","/algo/summary/search/DFS/recursion/%E5%8F%8C%E5%90%91%E9%80%92%E5%BD%92.html","/algo/summary/structure/linear/array/","/algo/summary/structure/linear/linked/1.%20%E8%99%9A%E6%8B%9F%E5%A4%B4%E8%8A%82%E7%82%B9.html","/algo/summary/structure/linear/linked/2.%20%E5%9F%BA%E6%9C%AC%E6%8A%80%E5%B7%A7.html","/algo/summary/structure/linear/linked/3.%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8.html","/algo/summary/structure/linear/linked/4.%20%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%82%B9.html","/algo/summary/structure/linear/linked/5.%20%E9%93%BE%E8%A1%A8%E6%B1%82%E7%8E%AF.html","/algo/summary/structure/linear/linked/","/algo/summary/structure/tree/bitree/BST.html","/algo/summary/structure/tree/bitree/","/algo/summary/structure/tree/bitree/dfs.html","/algo/summary/optimise/decrease-conquer/2ptr/opposite/","/algo/summary/optimise/decrease-conquer/2ptr/parallel/","/algo/summary/optimise/decrease-conquer/2ptr/window/","/algo/summary/optimise/decrease-conquer/binary/lifting/","/algo/summary/optimise/decrease-conquer/binary/search/","/algo/summary/optimise/decrease-conquer/binary/search/%E6%B5%AE%E7%82%B9%E6%95%B0.html","/algo/summary/optimise/decrease-conquer/binary/search/%E7%AD%94%E6%A1%88%E9%9B%86.html","/algo/summary/optimise/decrease-conquer/binary/search/%E8%BE%93%E5%85%A5%E9%9B%86.html","/algo/summary/search/DFS/enumerate/combination/","/algo/summary/search/DFS/enumerate/combination/%E5%88%86%E5%89%B2.html","/algo/summary/search/DFS/enumerate/combination/%E9%80%89%E6%8B%A9.html","/algo/summary/structure/linear/array/sort/","/algo/summary/structure/linear/array/string/","/algo/summary/structure/linear/linked/2ptr/","/algo/summary/structure/linear/array/sort/n/radix.html","/algo/summary/structure/linear/array/sort/nlogn/merge.html","/algo/summary/structure/linear/array/sort/nlogn/partition.html","/se/lang/","/se/lang/cpp/modules.html","/se/lang/python/","/se/lang/python/class.html","/se/lang/python/collections.html","/se/lang/python/decorators.html","/se/lang/python/function.html","/se/lang/python/gc.html","/se/lang/python/iterator.html","/se/lang/python/loop.html","/se/lang/python/memory.html","/se/lang/python/module.html","/se/lang/python/multithreading.html","/se/lang/python/patch.html","/se/lang/python/stl.html","/se/lang/cpp/framework/build.html","/se/lang/cpp/framework/cv.html","/se/lang/cpp/framework/pm.html","/se/lang/cpp/framework/gl.html","/se/lang/python/framework/","/se/lang/java/framework/oss/oss.html","/hobby/device/protocal.html","/education/ms/5110/","/education/ms/5600/game-paradigm.html","/education/ms/5600/l-sys.html","/education/ms/5620/dynamics.html","/education/ms/basics/engine.html","/education/ms/basics/multiplatform.html","/education/ms/5005/hw/4.html","/education/ms/5005/maya/10.html","/education/ms/5005/maya/4.html","/education/ms/5005/maya/5.html","/education/ms/5005/maya/6.html","/education/ms/5005/maya/7.html","/education/ms/5005/maya/8.html","/education/ms/5005/maya/9.html","/education/ms/5600/quiz/4.html","/education/ms/5600/quiz/5.html","/education/ms/5620/animation/blending.html","/education/ms/5620/animation/locomotion.html","/education/ms/5620/cq/5.html","/education/ms/5620/exam/final.html","/education/ms/5620/hw/4.html","/education/ms/5620/hw/5.html","/education/ms/5620/hw/6.html","/education/ms/5620/hw/7.html","/education/ms/5620/quiz/4.html","/education/ms/5620/quiz/5.html","/se/tools/git/submodule.html","/se/tools/latex/block.html","/se/tools/latex/operator.html","/education/ms/5600/subdivision.html","/education/ms/5600/final/","/education/ms/5600/final/ms1.html","/education/ms/5620/animation/binding.html","/education/ms/5620/exam/solution.html","/education/ms/5600/noise.html","/education/ms/5600/ray-tracing.html","/education/ms/5600/cq/6.html","/education/ms/5600/hw/5.html","/education/ms/5600/hw/6.html","/education/ms/5600/hw/7.html","/education/ms/5620/animation/animation.html","/education/ms/5620/cq/3.html","/education/ms/5620/exam/mid.html","/education/ms/5620/quiz/3.html","/education/ms/5620/cq/4.html","/education/ms/5620/hw/3.html","/education/ms/5600/mesh.html","/education/ms/5620/kinematics.html","/education/ms/5005/hw/2.1.html","/education/ms/5005/hw/2.html","/education/ms/5005/ref/Practice-Models.html","/education/ms/5600/cq/4.html","/education/ms/5600/cq/5.html","/education/ms/5600/quiz/3.html","/education/ms/5005/","/education/ms/5600/3D-Rendering.html","/education/ms/5600/color.html","/education/ms/5600/opengl.html","/education/ms/5600/rasterization.html","/education/ms/5600/scene-graph.html","/education/ms/5600/virtual-cameras.html","/education/ms/5620/interpolation.html","/education/ms/5005/hw/1.html","/education/ms/5005/maya/2.html","/education/ms/5005/maya/3.html","/education/ms/5600/cq/1.html","/education/ms/5600/cq/2.html","/education/ms/5600/cq/3.html","/education/ms/5600/hw/1.html","/education/ms/5600/hw/2.html","/education/ms/5600/hw/3.html","/education/ms/5600/hw/4.html","/education/ms/5620/cq/1.html","/education/ms/5620/cq/2.html","/education/ms/5620/hw/1.1.html","/education/ms/5620/hw/1.2.html","/education/ms/5620/hw/2.html","/education/ms/5620/quiz/1.html","/education/ms/5620/quiz/2.html","/education/ms/5005/reference.html","/education/ms/5600/","/education/ms/5600/cpp.html","/education/ms/5600/transformations.html","/education/ms/5620/","/education/ms/5620/coordinate-systems.html","/cs/basic/network/application/ssh.html","/education/ms/5005/hw/1.1.html","/education/ms/5005/ref/1.html","/se/lang/java/framework/di/","/se/lang/java/framework/di/guice/","/ai/gpt/gemini.html","/se/monitor/","/test/basics/grammar.html","/se/tools/others/pm.html","/cs/basic/os/io/patterns.html","/cs/middleware/rabbitmq/design/%E8%B6%85%E6%97%B6%E5%8F%96%E6%B6%88%E8%AE%A2%E5%8D%95.html","/cs/middleware/rabbitmq/problem/%E8%A1%A5%E5%81%BF%E6%9C%BA%E5%88%B6.html","/se/design/system/availability/problems.html","/se/design/system/availability/scaling.html","/se/design/system/module/comment.html","/se/design/system/module/feed.html","/se/design/system/module/monitor.html","/se/lang/java/jvm/","/se/lang/java/framework/web/flux/","/se/lang/java/framework/web/netty/Untitled.html","/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F/%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AD%98.html","/se/lang/java/jvm/%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F/%E7%B1%BB%E6%96%87%E4%BB%B6/%E7%BB%93%E6%9E%84.html","/ai/nn/","/education/ms/","/se/monitor/skywalking.html","/cs/database/hbase/","/cs/database/mongodb/","/cs/database/mongodb/aggregation.html","/cs/database/mongodb/engine.html","/cs/middleware/canal/","/cs/middleware/nginx/","/education/ms/basics/vulkan.html","/se/design/ood/%E5%AE%9E%E7%89%A9%E7%B1%BB.html","/se/design/ood/%E6%B8%B8%E6%88%8F%E7%B1%BB.html","/se/design/ood/%E7%AE%A1%E7%90%86%E7%B1%BB.html","/se/design/ood/%E9%A2%84%E5%AE%9A%E7%B1%BB.html","/se/design/system/","/se/design/system/api.html","/se/design/system/file.html","/se/design/system/iq.html","/se/design/system/lbs.html","/se/design/system/stack.html","/se/lang/cpp/","/se/lang/cpp/memory.html","/se/lang/cpp/oop.html","/se/lang/cpp/reference.html","/se/lang/frontend/","/cs/basic/network/application/http2.html","/cs/basic/network/application/mail.html","/cs/basic/network/application/rpc.html","/cs/basic/network/application/websocket.html","/cs/basic/network/network/IP.html","/cs/basic/network/network/NAT.html","/cs/basic/network/transport/TCP.html","/cs/basic/network/transport/UDP.html","/cs/basic/os/file/","/cs/basic/os/io/","/cs/basic/os/io/device.html","/cs/basic/os/io/dma.html","/cs/basic/os/memory/","/cs/basic/os/process/","/cs/database/mysql/availability/","/cs/database/redis/availability/multi-level.html","/cs/database/sql/basic/","/cs/database/sql/basic/branch.html","/cs/database/sql/basic/clause.html","/cs/database/sql/design/form.html","/cs/database/sql/optimisation/%E5%86%B7%E7%83%AD%E5%88%86%E7%A6%BB.html","/cs/middleware/rabbitmq/problem/%E6%B6%88%E6%81%AF%E7%A7%AF%E5%8E%8B.html","/se/design/system/availability/","/se/design/system/availability/cap.html","/se/design/system/ddd/","/se/design/system/distributed/dtp.html","/se/design/system/projects/twitter.html","/se/lang/cpp/framework/qt.html","/se/lang/frontend/js/design-pattern.html","/se/lang/java/io/nio.html","/se/lang/java/jvm/%E5%8F%82%E6%95%B0.html","/cs/database/redis/practice/problem/bigkey.html","/cs/database/redis/practice/problem/consistency.html","/cs/database/redis/practice/problem/hotkey.html","/se/lang/frontend/css/layout/","/se/lang/java/JUC/thread/local.html","/se/lang/java/JUC/sync/lock/%E4%B9%90%E8%A7%82%E9%94%81.html","/se/lang/java/framework/distributed/seata/","/se/lang/java/framework/spring/security/","/se/lang/java/framework/web/mvc/interceptor.html","/se/lang/java/framework/web/netty/","/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/%E5%88%86%E4%BB%A3%E6%94%B6%E9%9B%86%E7%90%86%E8%AE%BA.html","/se/lang/java/framework/spring/core/aop/%E5%8E%9F%E7%90%86.html","/ai/nn/gnn/","/se/design/pattern/structural/adapter.html","/se/design/system/projects/%E5%B8%B8%E8%A7%81.html","/se/design/system/security/authorization.html","/se/lang/java/basic/type/%E6%B3%9B%E5%9E%8B.html","/se/lang/java/basic/type/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.html","/se/","/ai/pytorch/","/ai/pytorch/classification.html","/ai/pytorch/graph.html","/ai/pytorch/tensor.html","/ai/pytorch/workflow.html","/ai/robo/","/hobby/minecraft/","/hobby/minecraft/brewing.html","/hobby/minecraft/commute.html","/hobby/minecraft/farm.html","/hobby/minecraft/mine.html","/hobby/minecraft/redstone.html","/hobby/minecraft/villager.html","/se/monitor/arthas.html","/se/monitor/prometheus.html","/education/bs/ai-tech/7.%20%E4%B8%93%E5%AE%B6%E7%B3%BB%E7%BB%9F%E5%92%8C%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0.html","/education/bs/ai-tech/8.%20BP.html","/education/bs/discrete-math/1.%20%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91.html","/education/bs/discrete-math/2.%20%E8%B0%93%E8%AF%8D%E9%80%BB%E8%BE%91.html","/education/bs/discrete-math/3.%20%E9%9B%86%E5%90%88%E8%AE%BA.html","/education/bs/discrete-math/4.%20%E4%BA%8C%E5%85%83%E5%85%B3%E7%B3%BB.html","/education/bs/discrete-math/5.%20%E5%87%BD%E6%95%B0.html","/education/bs/discrete-math/6.%20%E5%9B%BE%E8%AE%BA.html","/education/bs/discrete-math/","/education/bs/discrete-math/%E5%AE%9E%E9%AA%8C.html","/education/bs/discrete-math/%E6%80%BB%E5%A4%8D%E4%B9%A0.html","/test/GRE/QUANTITATIVE/%E7%AD%94%E6%A1%88.html","/se/lang/frontend/js/closure.html","/test/","/ai/aigc/","/ai/gpt/","/ai/gpt/actions.html","/ai/gpt/gpts.html","/ai/gpt/prompt.html","/test/GRE/","/test/basics/vocabulary.html","/education/bs/ai-intro/2.%20%E7%9F%A5%E8%AF%86%E8%A1%A8%E7%A4%BA%E4%B8%8E%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1.html","/education/bs/ai-intro/3.%20%E7%A1%AE%E5%AE%9A%E6%80%A7%E6%8E%A8%E7%90%86.html","/education/bs/ai-intro/4.%20%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E6%8E%A8%E7%90%86.html","/education/bs/ai-intro/5.%20%E6%90%9C%E7%B4%A2%E6%B1%82%E8%A7%A3%E7%AD%96%E7%95%A5.html","/education/bs/ai-intro/6.%20%E6%99%BA%E8%83%BD%E8%AE%A1%E7%AE%97%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8.html","/education/bs/ai-intro/7.%20%E4%B8%93%E5%AE%B6%E7%B3%BB%E7%BB%9F.html","/education/bs/ai-intro/8.%20%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.html","/education/bs/ai-intro/","/education/bs/ai-tech/1.%20%E6%A6%82%E8%AE%BA.html","/education/bs/ai-tech/3.%20%E6%8E%A8%E7%90%86.html","/education/bs/ai-tech/4.%20%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E6%8E%A8%E7%90%86%E6%96%B9%E6%B3%95.html","/education/bs/ai-tech/5.%20%E6%90%9C%E7%B4%A2%E7%AD%96%E7%95%A5.html","/education/bs/ai-tech/6.%20%E6%99%BA%E8%83%BD%E8%AE%A1%E7%AE%97.html","/education/bs/ai-tech/","/se/design/system/readlist.html","/se/tools/vuepress/it.html","/test/GRE/QUANTITATIVE/","/test/GRE/QUANTITATIVE/%E4%BB%A3%E6%95%B0.html","/test/GRE/QUANTITATIVE/%E5%87%A0%E4%BD%95.html","/test/GRE/QUANTITATIVE/%E6%95%B0%E5%88%86.html","/test/GRE/QUANTITATIVE/%E6%95%B0%E8%AE%BA.html","/test/GRE/QUANTITATIVE/%E9%94%99%E9%A2%98.html","/test/GRE/VERBAL/","/test/GRE/aw/","/cs/basic/network/application/cdn.html","/cs/basic/network/application/dowload.html","/cs/basic/network/application/proxy.html","/education/bs/ai-intro/final/%E6%9C%9F%E6%9C%AB.html","/education/bs/ai-intro/mid/%E6%9C%9F%E4%B8%AD%E8%80%83%E8%AF%95.html","/se/lang/frontend/js/promise.html","/se/lang/java/feature/","/se/lang/java/feature/java11.html","/se/lang/java/feature/java17.html","/se/lang/java/feature/java21.html","/se/lang/java/io/","/test/TOEFL/SPEAKING/BEAT/%E7%BB%BC%E5%90%88%E5%8F%A3%E8%AF%AD.html","/test/TOEFL/SPEAKING/BEAT/%E8%A7%82%E7%82%B9.html","/test/TOEFL/SPEAKING/BEAT/%E9%A2%98%E7%9B%AE.html","/test/TOEFL/SPEAKING/BEAT/%E9%AB%98%E9%A2%91%E7%9C%9F%E9%A2%98.html","/test/TOEFL/SPEAKING/%E7%BB%83%E4%B9%A0/task3.html","/test/TOEFL/SPEAKING/%E7%BB%83%E4%B9%A0/task4.html","/test/TOEFL/SPEAKING/%E9%A2%84%E6%B5%8B/X.html","/test/TOEFL/WRITING/BEAT/%E9%A2%98%E7%9B%AE.html","/test/TOEFL/WRITING/%E7%BB%83%E4%B9%A0/%E6%96%B0%E7%89%88%E7%BB%83%E4%B9%A0.html","/test/TOEFL/LISTENING/%E6%A4%85%E5%90%AC/%E5%AF%B9%E8%AF%9D.html","/test/TOEFL/LISTENING/%E6%A4%85%E5%90%AC/%E6%96%B9%E6%B3%95.html","/test/TOEFL/LISTENING/%E6%A4%85%E5%90%AC/","/test/TOEFL/SPEAKING/%F0%9F%8C%9F%E8%AF%AD%E6%96%99/","/test/TOEFL/SPEAKING/%F0%9F%8C%9F%E8%AF%AD%E6%96%99/%E6%95%99%E8%82%B2%E7%B1%BB.html","/test/TOEFL/READING/2.%20%E9%95%BF%E9%9A%BE%E5%8D%95%E5%8F%A5.html","/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/10.%20%E8%A1%A8%E6%A0%BC%E9%A2%98.html","/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/7.%20%E6%8E%92%E9%99%A4%E9%A2%98.html","/test/TOEFL/SPEAKING/BEAT/%E5%B7%A5%E4%BD%9C%E7%B1%BB.html","/test/TOEFL/WRITING/BEAT/%E6%A8%A1%E6%9D%BF.html","/test/TOEFL/WRITING/BEAT/%E7%BB%83%E4%B9%A0.html","/test/TOEFL/LISTENING/BEAT/","/test/TOEFL/READING/BEAT/","/test/TOEFL/READING/%E7%BB%83%E4%B9%A0/BEAT.html","/test/TOEFL/SPEAKING/BEAT/","/test/TOEFL/SPEAKING/BEAT/%E7%94%9F%E6%B4%BB%E7%B1%BB.html","/test/TOEFL/WRITING/BEAT/","/test/TOEFL/LISTENING/BEAT/%E5%AF%B9%E8%AF%9D/","/test/TOEFL/LISTENING/BEAT/%E5%AF%B9%E8%AF%9D/%E7%BB%83%E4%B9%A0.html","/test/TOEFL/LISTENING/BEAT/%E8%AE%B2%E5%BA%A7/","/test/TOEFL/LISTENING/BEAT/%E8%AE%B2%E5%BA%A7/%E7%BB%83%E4%B9%A0.html","/se/lang/python/package.html","/test/TOEFL/WRITING/BEAT/%E7%BB%BC%E5%90%88%E5%86%99%E4%BD%9C.html","/test/TOEFL/SPEAKING/BEAT/%E5%8F%91%E9%9F%B3%E9%9B%95%E5%88%BB.html","/test/TOEFL/SPEAKING/BEAT/%E6%95%99%E8%82%B2%E7%B1%BB.html","/test/TOEFL/SPEAKING/%E5%8F%91%E9%9F%B3/","/test/TOEFL/WRITING/BEAT/%E9%80%A0%E5%8F%A5.html","/test/TOEFL/WRITING/BEAT/%E9%AB%98%E9%A2%91%E8%AF%9D%E9%A2%98.html","/se/devops/unix/basic/1.3%20three%20musketeers.html","/test/TOEFL/READING/6.%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0.html","/test/TOEFL/LISTENING/BEAT/%E6%96%B0%E6%96%B9%E6%B3%95.html","/test/TOEFL/LISTENING/%E7%B2%BE%E5%90%AC%E8%90%A5/%E6%96%B0%E6%96%B9%E6%B3%95.html","/cs/basic/network/application/dns.html","/cs/basic/network/application/nginx.html","/cs/database/sql/design/%E4%B9%A6%E5%86%99%E8%A7%84%E8%8C%83.html","/cs/database/sql/design/%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83.html","/cs/database/sql/design/%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83.html","/test/TOEFL/WRITING/BEAT/%E4%B8%87%E8%83%BD%E5%8E%9F%E5%9B%A0.html","/se/lang/java/framework/spring/boot/config.html","/test/TOEFL/READING/%E7%BB%83%E4%B9%A0/%E7%BB%83%E4%B9%A0.html","/test/TOEFL/WRITING/%E7%BB%83%E4%B9%A0/%E7%BB%BC%E5%90%88%E9%A2%98.html","/se/design/","/se/lang/frontend/html/feature.html","/test/TOEFL/WRITING/BEAT/%E8%A1%A8%E8%BE%BE%E4%B8%8E%E5%8F%A5%E5%BC%8F.html","/test/TOEFL/WRITING/%E6%AE%B5%E8%90%BD%E8%AF%AD%E6%96%99.html","/se/design/pattern/","/se/design/system/versioning.html","/se/design/pattern/creational/singleton.html","/test/TOEFL/LISTENING/%E7%B2%BE%E5%90%AC%E8%90%A5/%E8%AE%B2%E5%BA%A7%E4%B8%93%E9%A2%98.html","/test/TOEFL/WRITING/6.%20%E8%AE%A8%E8%AE%BA%E6%9D%BF.html","/test/TOEFL/LISTENING/%E7%B2%BE%E5%90%AC%E8%90%A5/4.%20%E8%AE%B2%E5%BA%A7%E6%80%BB%E7%BB%93.html","/test/TOEFL/LISTENING/%E7%B2%BE%E5%90%AC%E8%90%A5/5.%20%E5%AF%B9%E8%AF%9D%E4%B8%B2%E8%81%94.html","/se/lang/golang/%E5%B9%B6%E5%8F%91.html","/se/lang/golang/%E4%BC%98%E5%8C%96.html","/test/TOEFL/LISTENING/%E7%B2%BE%E5%90%AC%E8%90%A5/3.%20%E7%AC%94%E8%AE%B0%E6%96%B9%E6%B3%95.html","/test/TOEFL/LISTENING/%E7%B2%BE%E5%90%AC%E8%90%A5/%E5%86%85%E5%AE%B9%E6%80%9D%E8%B7%AF.html","/se/devops/cicd/ci.html","/se/lang/golang/tool-chain.html","/test/TOEFL/LISTENING/%E7%B2%BE%E5%90%AC%E8%90%A5/1.%20%E4%B8%AD%E5%BF%83%E9%80%BB%E8%BE%91.html","/test/TOEFL/LISTENING/%E7%B2%BE%E5%90%AC%E8%90%A5/2.%20%E5%87%BA%E9%A2%98%E6%80%9D%E8%B7%AF.html","/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/1.html","/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/10.html","/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/2.html","/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/3.html","/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/4.html","/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/5.html","/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/6.html","/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/7.html","/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/8.html","/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/9.html","/test/TOEFL/SPEAKING/%E7%8B%AC%E7%AB%8B%E9%A2%98/","/se/devops/cicd/","/cs/middleware/es/","/test/TOEFL/LISTENING/4.%20%E5%AF%B9%E8%AF%9D%E4%B8%B2%E8%81%94%E6%B3%95.html","/test/TOEFL/LISTENING/5.%20%E8%AE%B2%E5%BA%A7%E5%88%86%E5%B1%82%E6%B3%95.html","/test/TOEFL/LISTENING/%E5%AD%A6%E7%A7%91%E7%A7%AF%E7%B4%AF.html","/test/TOEFL/LISTENING/%E7%9C%9F%E9%A2%98%E8%90%A5.html","/test/TOEFL/LISTENING/%E8%A1%A8%E8%BE%BE%E7%A7%AF%E7%B4%AF.html","/cs/database/mysql/devops/%E9%85%8D%E7%BD%AE.html","/test/TOEFL/LISTENING/%E5%9F%BA%E7%A1%80%E8%AF%BE/%E5%8D%95%E8%AF%8D.html","/test/TOEFL/LISTENING/%E5%9F%BA%E7%A1%80%E8%AF%BE/%E5%8F%A5%E5%AD%90.html","/test/TOEFL/LISTENING/%E5%9F%BA%E7%A1%80%E8%AF%BE/%E6%AE%B5%E8%90%BD.html","/test/TOEFL/LISTENING/%E9%95%BF%E9%9A%BE%E5%8F%A5/1.html","/test/TOEFL/LISTENING/%E9%95%BF%E9%9A%BE%E5%8F%A5/2.html","/test/TOEFL/LISTENING/%E9%95%BF%E9%9A%BE%E5%8F%A5/3.html","/test/TOEFL/SPEAKING/%E7%BB%83%E4%B9%A0/task2.html","/se/lang/java/framework/api/knife4j.html","/se/lang/java/framework/api/swagger.html","/test/TOEFL/READING/3.%20%E6%96%87%E7%AB%A0%E6%AE%B5%E8%90%BD.html","/education/bs/ai-intro/final/%E6%99%BA%E8%83%BD%E8%AE%A1%E7%AE%97%E8%AE%BA%E6%96%87.html","/test/TOEFL/LISTENING/%E7%BB%83%E4%B9%A0/%E5%AF%B9%E8%AF%9D%E7%BB%83%E4%B9%A0.html","/test/TOEFL/LISTENING/%E7%BB%83%E4%B9%A0/%E8%AE%B2%E5%BA%A7%E7%BB%83%E4%B9%A0.html","/se/lang/java/framework/distributed/spring-cloud/nacos/","/se/test/jmeter.html","/se/lang/golang/MPG.html","/se/lang/golang/%E8%AF%AD%E6%B3%95.html","/cs/database/mysql/availability/replica.html","/cs/database/mysql/availability/sharding.html","/cs/database/redis/availability/cluster.html","/cs/database/redis/availability/replication.html","/cs/database/redis/availability/sentinel.html","/cs/database/redis/feature/feature.html","/cs/database/sql/basic/set.html","/cs/database/sql/optimisation/%E6%85%A2%E6%9F%A5%E8%AF%A2.html","/education/bs/deep-learning/final/%E8%AE%B2%E7%A8%BF.html","/se/lang/java/jvm/%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5.html","/test/TOEFL/LISTENING/%E5%9F%BA%E7%A1%80%E8%AF%BE/%E5%9F%BA%E7%A1%80.html","/se/lang/java/JUC/sync/lock/%E6%82%B2%E8%A7%82%E9%94%81.html","/se/lang/java/framework/spring/boot/","/se/lang/java/framework/web/mvc/","/se/lang/java/framework/web/mvc/servlet.html","/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F.html","/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/%E5%AF%B9%E8%B1%A1%E6%AD%BB%E4%BA%A1%E5%88%A4%E5%AE%9A.html","/se/lang/java/framework/spring/core/aop/","/se/lang/java/framework/spring/core/aop/%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF.html","/se/lang/java/framework/spring/core/tx/%E4%BA%8B%E5%8A%A1.html","/education/bs/block-chain/7.%20pow.html","/education/bs/block-chain/8.%20Fabric.html","/education/bs/block-chain/final/","/education/bs/block-chain/final/%E5%A4%A7%E7%BA%B2.html","/education/bs/block-chain/final/%E8%B5%84%E6%96%99.html","/education/bs/block-chain/lab/%E5%AE%9E%E9%AA%8C3.html","/education/bs/deep-learning/final/%E5%A4%A7%E4%BD%9C%E4%B8%9A.html","/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B.html","/education/bs/block-chain/6.%20%E5%85%B1%E8%AF%86%E6%9C%BA%E5%88%B6.html","/cs/database/mysql/engine/2.%20%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E.html","/cs/database/mysql/transaction/4.%20%E4%BC%A0%E6%92%AD%E6%9C%BA%E5%88%B6.html","/se/lang/java/framework/spring/core/beans/%E5%90%8E%E5%A4%84%E7%90%86%E5%99%A8.html","/se/lang/java/framework/spring/core/beans/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html","/cs/basic/network/application/https.html","/cs/basic/os/structure/mode.html","/education/bs/xr-tech/hw/%E4%BD%9C%E4%B8%9A5%20%E8%8D%89%E5%9B%BE%E5%9C%BA%E6%99%AF%E4%B8%8E%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1.html","/se/lang/java/JUC/thread/state.html","/se/lang/java/framework/spring/core/aop/%E7%94%A8%E6%B3%95.html","/se/lang/java/framework/spring/core/beans/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html","/cs/middleware/rabbitmq/%E4%B8%BA%E4%BB%80%E4%B9%88%E7%94%A8.html","/education/bs/block-chain/5.%20%E6%95%B0%E5%AD%97%E8%B4%A7%E5%B8%81.html","/education/bs/xr-tech/5.%20VR%E5%BA%94%E7%94%A8%E8%AE%BE%E8%AE%A1.html","/cs/database/mysql/memory/Buffer%20Pool.html","/education/bs/xr-tech/hw/%E4%BD%9C%E4%B8%9A3%20%E4%BA%A7%E5%93%81%E5%AE%9A%E4%BD%8D.html","/education/bs/xr-tech/hw/%E4%BD%9C%E4%B8%9A4%20%E4%BA%92%E8%AF%84.html","/education/bs/xr-tech/hw/%E4%BD%9C%E4%B8%9A4%20%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1%E4%B8%8E%E4%BA%92%E8%AF%84.html","/education/bs/xr-tech/hw/%E4%BD%9C%E4%B8%9A6%20%E5%A4%A7%E4%BD%9C%E4%B8%9A.html","/education/bs/xr-tech/hw/%E8%AF%84%E8%AF%AD.html","/se/lang/java/basic/%E5%BC%82%E5%B8%B8.html","/cs/database/redis/practice/design/distributed-lock.html","/cs/database/redis/practice/design/global-id.html","/cs/database/redis/practice/design/nearby.html","/cs/database/redis/practice/design/sign.html","/cs/database/redis/practice/design/uvpv.html","/se/lang/java/JUC/safe/jmm.html","/se/lang/java/JUC/sync/AQS.html","/se/lang/java/JUC/thread/","/se/lang/java/basic/class/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.html","/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F/%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F.html","/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95.html","/se/lang/java/jvm/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8.html","/se/lang/java/jvm/%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F/%E7%B1%BB%E5%8A%A0%E8%BD%BD/","/se/lang/java/jvm/%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F/%E7%B1%BB%E5%8A%A0%E8%BD%BD/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8.html","/se/lang/java/jvm/%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F/%E7%B1%BB%E5%8A%A0%E8%BD%BD/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B.html","/education/bs/deep-learning/6.%20SVM.html","/education/bs/deep-learning/7.%20CNN.html","/cs/database/sql/optimisation/","/education/bs/block-chain/lab/%E5%AE%9E%E9%AA%8C1.html","/education/bs/block-chain/lab/%E5%AE%9E%E9%AA%8C2.html","/education/bs/block-chain/quiz/%E6%B5%8B%E9%AA%8C2.html","/education/bs/xr-tech/hw/%E4%BD%9C%E4%B8%9A2%20%E6%8A%80%E6%9C%AF%E5%A4%A9%E8%8A%B1%E6%9D%BF.html","/se/lang/java/basic/%E5%85%B3%E9%94%AE%E5%AD%97.html","/cs/database/redis/practice/problem/atomic.html","/cs/database/redis/principal/thread-%20model/%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B.html","/cs/database/","/cs/database/sql/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B.html","/cs/middleware/rabbitmq/%E5%BB%B6%E8%BF%9F%E9%98%9F%E5%88%97.html","/cs/middleware/rabbitmq/%E6%B6%88%E6%81%AF%E5%BA%94%E7%AD%94.html","/education/bs/block-chain/2.%20%E5%AF%86%E7%A0%81%E5%AD%A6%E5%9F%BA%E7%A1%80.html","/education/bs/block-chain/3.%20%E7%A7%98%E5%AF%86%E5%85%B1%E4%BA%AB.html","/education/bs/block-chain/4.%20%E5%93%88%E5%B8%8C%E5%87%BD%E6%95%B0.html","/education/bs/deep-learning/2.%20%E7%94%9F%E6%88%90%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95.html","/education/bs/deep-learning/3.%20%E5%86%B3%E7%AD%96%E6%A0%91.html","/education/bs/deep-learning/4.%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0.html","/education/bs/deep-learning/5.%20%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97.html","/education/bs/xr-tech/2.%20VRML.html","/education/bs/xr-tech/3.%20CG%20Intro.html","/education/bs/xr-tech/4.%203ds.html","/se/design/system/cron.html","/cs/basic/network/application/http.html","/cs/database/mysql/log/","/cs/database/sql/basic/function.html","/cs/database/sql/basic/join.html","/cs/database/sql/basic/sort.html","/cs/database/sql/basic/subquery.html","/cs/middleware/rabbitmq/problem/%E5%B9%82%E7%AD%89%E6%80%A7.html","/cs/middleware/rabbitmq/problem/%E6%B6%88%E6%81%AF%E4%B8%A2%E5%A4%B1.html","/education/bs/block-chain/quiz/%E6%B5%8B%E9%AA%8C1.html","/education/bs/xr-tech/hw/%E4%BD%9C%E4%B8%9A1%20HMD.html","/se/design/system/module/user.html","/se/design/system/projects/trace-note.html","/se/lang/java/collections/","/se/lang/java/collections/collection.html","/se/lang/java/collections/map.html","/se/lang/java/feature/java8.html","/cs/database/redis/practice/problem/cache-preheat.html","/se/lang/java/basic/class/%E5%B7%A5%E5%85%B7%E7%B1%BB.html","/se/lang/java/basic/class/%E5%B8%B8%E8%A7%81%E7%B1%BB.html","/se/lang/java/basic/type/%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B.html","/cs/middleware/rabbitmq/%E6%AD%BB%E4%BF%A1%E9%98%9F%E5%88%97.html","/education/bs/block-chain/1.%20%E5%8C%BA%E5%9D%97%E9%93%BE%E5%8F%91%E5%B1%95.html","/education/bs/xr-tech/1.%20VR.html","/education/bs/xr-tech/","/se/lang/java/basic/%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83.html","/cs/database/redis/principal/memory-model/%E5%86%85%E5%AD%98%E6%B7%98%E6%B1%B0%E7%AD%96%E7%95%A5.html","/cs/database/redis/principal/memory-model/%E8%BF%87%E6%9C%9F%E5%88%A0%E9%99%A4%E7%AD%96%E7%95%A5.html","/se/lang/java/framework/spring/core/beans/%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96.html","/se/lang/java/framework/spring/core/ioc/ioc.html","/education/bs/block-chain/","/education/bs/deep-learning/1.%20%E5%88%A4%E5%88%AB%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95.html","/education/bs/deep-learning/","/cs/middleware/rabbitmq/","/cs/middleware/rabbitmq/%E6%B6%88%E6%81%AF%E6%A8%A1%E5%9E%8B.html","/cs/middleware/rabbitmq/%E6%B6%88%E6%81%AF%E8%BD%AC%E6%8D%A2%E5%99%A8.html","/cs/database/redis/availability/","/cs/database/redis/persistency/AOF.html","/cs/database/redis/persistency/RDB.html","/cs/database/redis/persistency/","/se/design/system/module/flash-sale.html","/se/lang/java/basic/%E8%BF%90%E7%AE%97%E7%AC%A6.html","/test/TOEFL/SPEAKING/exercise/29.html","/cs/database/redis/practice/best/%E6%89%B9%E5%A4%84%E7%90%86%E4%BC%98%E5%8C%96.html","/cs/database/redis/practice/best/%E9%94%AE%E5%80%BC%E8%AE%BE%E8%AE%A1.html","/cs/database/redis/practice/design/follow.html","/cs/database/redis/practice/design/rate.html","/cs/database/redis/practice/design/seckill.html","/cs/database/redis/principal/data-structure/%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B.html","/cs/database/redis/principal/data-structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html","/cs/database/redis/principal/data-structure/%E7%89%B9%E6%AE%8A%E7%B1%BB%E5%9E%8B.html","/se/lang/java/JUC/async/future.html","/se/lang/java/JUC/safe/volatile.html","/se/lang/java/framework/spring/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html","/hobby/fitness/%E8%AE%AD%E7%BB%83%E8%AE%A1%E5%88%92.html","/hobby/minecraft/pet.html","/se/monitor/grafana.html","/algo/summary/math/","/education/bs/ai-intro/1.%20%E7%BB%AA%E8%AE%BA.html","/education/bs/ai-tech/2.%20%E8%B0%93%E8%AF%8D.html","/education/bs/deep-learning/8.%20RNN.html","/education/ms/5110/1.html","/education/ms/5600/multithreading.html","/se/devops/cicd/cd.html","/se/devops/cicd/makefile.html","/se/devops/docker/docker-file.html","/se/lang/golang/%E5%B7%A5%E7%A8%8B%E8%A7%84%E8%8C%83.html","/se/lang/golang/%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8.html","/se/lang/golang/%E6%8E%92%E6%9F%A5.html","/se/lang/python/engineering.html","/algo/course/jz/dfs/34.%20Morris.html","/algo/course/jz/dfs/35.%20BST%20CRUD.html","/algo/course/jz/dfs/36.%20%E9%9D%9E%E9%80%92%E5%BD%92.html","/algo/course/jz/ds/10.%20%E9%98%9F%E5%88%97.html","/cs/basic/network/application/quic.html","/cs/basic/os/structure/cache.html","/education/ms/5450/hw/02.html","/education/ms/5600/cq/7.html","/education/ms/5600/final/weather.html","/se/lang/frontend/css/anchor.html","/se/lang/java/collections/Concurrent.html","/test/TOEFL/SPEAKING/exercise/28.html","/algo/summary/optimise/decrease-conquer/greedy/%E5%8F%8D%E6%82%94.html","/algo/summary/optimise/decrease-conquer/greedy/%E5%BA%8F%E5%88%97.html","/se/lang/frontend/css/layout/flex.html","/se/lang/java/JUC/async/forkjoin.html","/se/lang/java/JUC/safe/","/se/lang/java/JUC/sync/Condition.html","/se/lang/java/JUC/sync/CountDownLatch.html","/se/lang/java/JUC/sync/CyclicBarrier.html","/se/lang/java/JUC/sync/Semaphore.html","/se/lang/java/JUC/thread/pool.html","/se/lang/java/JUC/thread/virtual.html","/se/lang/java/jvm/%E5%B9%B6%E5%8F%91/jmm.html","/algo/summary/structure/linear/ext/queue/queue.html","/se/lang/java/JUC/sync/lock/","/se/lang/java/framework/spring/boot/devtool.html","/algo/summary/structure/linear/array/sort/n/bucket.html","/algo/summary/structure/linear/array/sort/n/counting.html","/test/TOEFL/SPEAKING/exercise/24.html","/test/TOEFL/SPEAKING/exercise/25.html","/test/TOEFL/SPEAKING/exercise/26.html","/test/TOEFL/SPEAKING/exercise/27.html","/test/TOEFL/SPEAKING/exercise/23.html","/test/TOEFL/SPEAKING/exercise/19.html","/test/TOEFL/SPEAKING/exercise/20.html","/test/TOEFL/SPEAKING/exercise/21.html","/test/TOEFL/SPEAKING/exercise/10..html","/test/TOEFL/SPEAKING/exercise/12.html","/test/TOEFL/SPEAKING/exercise/14.%20.html","/test/TOEFL/SPEAKING/exercise/15.html","/test/TOEFL/SPEAKING/exercise/16.html","/test/TOEFL/SPEAKING/exercise/17.html","/test/TOEFL/SPEAKING/exercise/18.html","/test/TOEFL/SPEAKING/exercise/7.%20.html","/test/TOEFL/SPEAKING/exercise/9.%20.html","/se/design/ood/","/se/tools/others/alist.html","/se/tools/others/xdm.html","/se/lang/java/basic/class/%E5%86%85%E9%83%A8%E7%B1%BB.html","/se/lang/java/basic/type/%E6%95%B0%E7%BB%84.html","/se/tools/uml/mermaid.html","/se/tools/uml/plantUML.html","/test/TOEFL/SPEAKING/exercise/1.html","/test/TOEFL/SPEAKING/exercise/","/cs/database/mongodb/%E4%BD%BF%E7%94%A8.html","/se/devops/k8s/archetecture.html","/cs/database/mysql/index/1.%20%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84.html","/cs/database/mysql/index/2.%20%E7%B4%A2%E5%BC%95%E5%88%86%E7%B1%BB.html","/cs/database/mysql/index/3.%20%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90.html","/cs/database/mysql/index/4.%20%E4%BD%BF%E7%94%A8%E8%A7%84%E5%88%99.html","/cs/database/mysql/index/","/cs/database/mysql/transaction/","/cs/database/mysql/engine/innodb/1.%20%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84.html","/cs/database/mysql/engine/innodb/2.%20%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84.html","/cs/database/mysql/engine/innodb/3.%20%E4%BA%8B%E5%8A%A1%E5%8E%9F%E7%90%86.html","/se/tools/git/","/se/tools/latex/","/se/tools/vuepress/","/se/lang/java/JUC/","/se/lang/java/framework/spring/","/se/lang/java/framework/distributed/spring-cloud/","/test/GRE/VERBAL/Blank/","/cs/database/mysql/lock/1.%20%E5%85%A8%E5%B1%80%E9%94%81.html","/cs/database/mysql/lock/2.%20%E8%A1%A8%E7%BA%A7%E9%94%81.html","/cs/database/mysql/lock/","/cs/database/mysql/transaction/1.%20ACID.html","/cs/database/mysql/transaction/2.%20%E5%B9%B6%E5%8F%91%E9%97%AE%E9%A2%98.html","/cs/database/mysql/transaction/3.%20%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.html","/cs/database/mysql/engine/innodb/","/se/devops/docker/network.html","/se/devops/docker/persistence.html","/se/devops/k8s/","/se/devops/k8s/installation.html","/cs/database/redis/practice/problem/cache-problem.html","/se/lang/java/framework/orm/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html","/se/lang/java/framework/orm/mybatis/%E6%A0%87%E7%AD%BE.html","/se/lang/java/framework/orm/mybatis/plus/%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2.html","/se/lang/java/framework/orm/mybatis/plus/%E6%9F%A5%E8%AF%A2%E6%8A%95%E5%BD%B1.html","/ai/","/algo/","/education/bs/","/se/tools/","/cs/basic/network/","/cs/basic/os/","/cs/database/mysql/","/cs/database/sql/","/education/bs/deep-learning/rl.html","/se/devops/unix/basic/network-management.html","/se/devops/unix/basic/network-services.html","/se/devops/unix/basic/rescue.html","/se/devops/unix/basic/security.html","/test/TOEFL/","/se/lang/java/","/education/bs/rec-sys/","/cs/database/redis/clients/","/cs/database/redis/clients/jedis.html","/cs/database/redis/clients/spring-data-redis.html","/cs/database/redis/commands/list.html","/cs/database/redis/commands/set.html","/cs/database/redis/commands/sorted-set.html","/se/devops/unix/availability/DNS-DRBD-network.html","/se/devops/unix/availability/load-assessment-and-tuning.html","/se/devops/unix/availability/optimize-server-and-topology.html","/cs/database/redis/","/se/lang/python/object.html","/cs/database/redis/commands/generic.html","/cs/database/redis/commands/hash.html","/cs/database/redis/commands/string.html","/se/devops/unix/availability/","/se/devops/unix/availability/redundancy-and-load-balancing.html","/test/TOEFL/SPEAKING/BEAT/BEAT.html","/cs/database/redis/principal/data-structure/","/se/tools/vuepress/bugfix.html","/se/devops/docker/","/se/devops/unix/","/test/TOEFL/LISTENING/","/test/TOEFL/READING/1.%20%E9%98%85%E8%AF%BB%E6%96%B9%E6%B3%95%E8%AE%BA.html","/test/TOEFL/READING/4.%20%E9%80%BB%E8%BE%91%E8%80%83%E7%82%B9.html","/test/TOEFL/READING/5.%20%E6%96%87%E7%AB%A0%E7%BB%93%E6%9E%84.html","/test/TOEFL/READING/","/test/TOEFL/SPEAKING/","/test/TOEFL/SPEAKING/task1.html","/test/TOEFL/SPEAKING/task2.html","/test/TOEFL/SPEAKING/task3.html","/test/TOEFL/SPEAKING/task4.html","/test/TOEFL/SPEAKING/%E8%AF%BB%E9%9F%B3.html","/test/TOEFL/WRITING/1.%20%E7%BB%93%E6%9E%84.html","/test/TOEFL/WRITING/2.%20%E4%B8%BB%E4%BD%93%E6%AE%B5.html","/test/TOEFL/WRITING/3.%20%E8%AF%AD%E6%96%991.html","/test/TOEFL/WRITING/4.%20%E8%AF%AD%E6%96%992.html","/test/TOEFL/WRITING/5.%20%E7%BB%BC%E5%90%88%E5%86%99%E4%BD%9C.html","/test/TOEFL/WRITING/","/test/TOEFL/WRITING/%E7%BB%83%E4%B9%A0.html","/cs/database/mysql/engine/1.%20%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.html","/cs/database/mysql/lock/3.%20%E8%A1%8C%E7%BA%A7%E9%94%81.html","/se/devops/unix/basic/1.1%20basic-cmd.html","/se/devops/unix/basic/1.2.%20vi.html","/se/devops/unix/basic/10.%20scheduled-tasks.html","/se/devops/unix/basic/11.%20backups.html","/se/devops/unix/basic/12.%20software-management.html","/se/devops/unix/basic/2.%20account-management.html","/se/devops/unix/basic/3.%20shell.html","/se/devops/unix/basic/4.1%20booting.html","/se/devops/unix/basic/4.2%20systemd.html","/se/devops/unix/basic/5.%20access-ctrl.html","/se/devops/unix/basic/6.%20process-ctrl.html","/se/devops/unix/basic/7.%20Filesystem.html","/se/devops/unix/basic/8.%20Storage.html","/se/devops/unix/basic/9.%20Disk%20Quota.html","/se/devops/unix/basic/","/test/TOEFL/LISTENING/%E6%9D%B0%E5%93%A5%E8%AF%BE/1.%20%E4%B8%AD%E5%BF%83%E9%80%BB%E8%BE%91%E7%B2%BE%E5%90%AC%E6%B3%95.html","/test/TOEFL/LISTENING/%E6%9D%B0%E5%93%A5%E8%AF%BE/2.%20%E9%A2%98%E5%9E%8B.html","/test/TOEFL/LISTENING/%E6%9D%B0%E5%93%A5%E8%AF%BE/3.%20%E7%AC%94%E8%AE%B0%E6%B3%95.html","/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/1.%20%20%E6%80%BB%E7%BB%93%E9%A2%98.html","/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/2.%20%E8%AF%8D%E6%B1%87%E9%A2%98.html","/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/3.%20%E6%8C%87%E4%BB%A3%E9%A2%98.html","/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/4.%20%E7%AE%80%E5%8C%96%E9%A2%98.html","/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/5.%20%E6%8F%92%E5%85%A5%E9%A2%98.html","/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/6.%20%E7%BB%86%E8%8A%82%E9%A2%98.html","/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/8.%20%E6%8E%A8%E6%96%AD%E9%A2%98.html","/test/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/9.%20%E7%9B%AE%E7%9A%84%E9%A2%98.html","/test/TOEFL/WRITING/%E7%BB%83%E4%B9%A0/%E7%8B%AC%E7%AB%8B%E9%A2%98.html","/se/lang/java/framework/orm/","/test/GRE/VERBAL/Reading/dual-line/2.%20%E9%95%BF%E9%9A%BE%E5%8F%A5.html","/test/GRE/VERBAL/Reading/dual-line/3.%20%E5%8D%95%E5%8F%A5%E5%8A%9F%E8%83%BD%E5%88%A4%E6%96%AD%E6%96%B9%E6%B3%95%E8%AE%BA.html","/test/GRE/VERBAL/Reading/dual-line/4.%20%E5%8F%A5%E9%97%B4%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8F%A5%E5%AD%90%E5%8A%9F%E8%83%BD.html","/test/GRE/VERBAL/Reading/dual-line/6.%20%E5%85%A8%E6%96%87%E7%BB%93%E6%9E%84%E4%B8%8E%E4%B8%BB%E6%97%A8%E9%A2%98.html","/test/GRE/VERBAL/Reading/dual-line/7.%20%E5%8A%9F%E8%83%BD%E7%BA%BF%E7%BB%BC%E5%90%88%E7%BB%83%E4%B9%A0.html","/test/GRE/VERBAL/Reading/dual-line/8.%20%E9%AB%98%E6%95%88%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96%E4%B8%8E%E4%BF%A1%E6%81%AF%E9%A2%98.html","/test/GRE/VERBAL/Reading/dual-line/9.%20%E5%8A%9F%E8%83%BD%E4%B8%8E%E4%BF%A1%E6%81%AF%E7%BA%BF%E7%BB%BC%E5%90%88.html","/test/GRE/VERBAL/Reading/dual-line/","/test/GRE/VERBAL/Reading/formula/1.%20%E4%BA%8B%E5%AE%9E%E4%BF%A1%E6%81%AF%E9%A2%98.html","/test/GRE/VERBAL/Reading/formula/10.%20%E5%BD%92%E7%BA%B3%E4%B8%8E%E8%A7%A3%E9%87%8A.html","/test/GRE/VERBAL/Reading/formula/2.0%20%E4%B8%BB%E6%97%A8%E9%A2%98.html","/test/GRE/VERBAL/Reading/formula/2.1%20%E5%8F%A5%E5%AD%90%E4%BD%9C%E7%94%A8%E9%A2%98.html","/test/GRE/VERBAL/Reading/formula/2.2%20%E4%BF%A1%E6%81%AF%E7%9B%AE%E7%9A%84%E9%A2%98.html","/test/GRE/VERBAL/Reading/formula/3.%20%E6%8E%A8%E6%96%AD%E9%A2%98.html","/test/GRE/VERBAL/Reading/formula/4.%20%E5%8F%AF%E5%A4%9A%E9%80%89%E9%A2%98.html","/test/GRE/VERBAL/Reading/formula/5.%20%E6%80%81%E5%BA%A6%E9%A2%98.html","/test/GRE/VERBAL/Reading/formula/7.%20%E7%B1%BB%E6%AF%94%E9%A2%98.html","/test/GRE/VERBAL/Reading/formula/8.%20%E5%90%A6%E5%AE%9A%E4%BA%8B%E5%AE%9E%E4%BF%A1%E6%81%AF%E9%A2%98.html","/test/GRE/VERBAL/Reading/formula/9.%20%E8%AF%8D%E6%B1%87%E9%A2%98.html","/test/GRE/VERBAL/Reading/formula/","/se/lang/java/framework/orm/mybatis/%E5%8F%82%E6%95%B0.html","/se/lang/java/framework/orm/mybatis/%E6%9F%A5%E8%AF%A2.html","/test/TOEFL/LISTENING/%E6%A4%85%E5%90%AC/Untitled.html","/test/TOEFL/SPEAKING/BEAT/Untitled.html","/test/TOEFL/SPEAKING/%F0%9F%8C%9F%E8%AF%AD%E6%96%99/%E7%94%9F%E6%B4%BB%E7%B1%BB.html","/test/TOEFL/WRITING/BEAT/Untitled.html","/test/TOEFL/WRITING/%E7%BB%83%E4%B9%A0/%E8%AE%A8%E8%AE%BA%E6%9D%BF.html","/zh/intro.html","/zh/slides.html"],u7={article:{"/":{path:"/article/",indexes:[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985]},"/zh/":{path:"/zh/article/",indexes:[12,0,986,987,1,2,3,4,7,6,5,15,16,8,9,10,11,13,14]}},star:{"/":{path:"/star/",indexes:[]},"/zh/":{path:"/zh/star/",indexes:[8,12,13,0]}},timeline:{"/":{path:"/timeline/",indexes:[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980]},"/zh/":{path:"/zh/timeline/",indexes:[986,987,1,2,3,4,12,7,6,5,15,16,8,9,10,11,13,14,0]}}},pr=ys(c7);Gi(pr);const r0=s=>{const e=Os(),i=As(),n=Ne();return B(()=>{var p;const t=s??((p=i.value.blog)==null?void 0:p.key)??"";if(!t)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};if(!(t in pr.value))throw new Error(`useBlogCategory: key ${t} is invalid`);const a=pr.value[t][n.value],r={path:a.path,map:{}};for(const o in a.map){const d=a.map[o];r.map[o]={path:d.path,items:[]};for(const c of d.indexes){const{path:u,meta:m}=De(l0[c]);r.map[o].items.push({path:u,info:m})}e.value.path===d.path&&(r.currentItems=r.map[o].items)}return r})},or=ys(u7);Gi(or);const Na=s=>{const e=As(),i=Ne();return B(()=>{var r;const n=s??((r=e.value.blog)==null?void 0:r.key)??"";if(!n)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!(n in or.value))throw new Error(`useBlogType: key ${s} is invalid`);const t=or.value[n][i.value],a={path:t.path,items:[]};for(const p of t.indexes){const{path:o,meta:d}=De(l0[p]);a.items.push({path:o,info:d})}return a})},cp=()=>h(ks,{name:"lock"},()=>h("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));cp.displayName="LockIcon";var m7=[];const p0=Symbol(""),up=()=>{const s=bs(p0);if(!s)throw new Error("useTimeline() is called without provider.");return s},g7=()=>{const s=Na("timeline"),e=Ia(),i=B(()=>{const n=[];return s.value.items.forEach(({info:t,path:a})=>{const r=$r(t[Zs.date]);if(r){const p=r.getFullYear();(!n[0]||n[0].year!==p)&&n.unshift({year:p,items:[]}),n[0].items.push({date:r.toLocaleDateString(e.value,{month:"numeric",day:"numeric"}),info:t,path:a})}}),{...s.value,config:n.reverse()}});Ce(p0,i)},o0=Symbol(""),Ot=()=>{const s=bs(o0);if(!s)throw new Error("useArticles() is called without provider.");return s},k7=()=>{const s=Na("article");Ce(o0,s)},h0=Symbol.for("categoryMap"),Pt=()=>{const s=bs(h0);if(!s)throw new Error("useCategoryMap() is called without provider.");return s},E7=()=>{const s=r0("category");Ce(h0,s)},d0=Symbol(""),mp=()=>{const s=bs(d0);if(!s)throw new Error("useStars() is called without provider.");return s},y7=()=>{const s=Na("star");Ce(d0,s)},c0=Symbol.for("tagMap"),Rt=()=>{const s=bs(c0);if(!s)throw new Error("useTagMap() is called without provider.");return s},A7=()=>{const s=r0("tag");Ce(c0,s)},v7=()=>{k7(),E7(),y7(),A7(),g7()},St=()=>{const s=je(),e=hs();return B(()=>({...s.value.blog,...e.value.blog}))},f7=s=>{const e=hs();return B(()=>{const{[Zs.author]:i}=s.value;return i?yt(i):i===!1?[]:yt(e.value.author,!1)})},_7=s=>{const e=Pt();return B(()=>Bm(s.value[Zs.category]).map(i=>({name:i,path:e.value.map[i].path})))},B7=s=>{const e=Rt();return B(()=>bm(s.value[Zs.tag]).map(i=>({name:i,path:e.value.map[i].path})))},b7=s=>B(()=>{const{[Zs.date]:e}=s.value;return $r(e)}),w7=s=>{const e=Tn(s,"info"),i=St(),n=f7(e),t=_7(e),a=B7(e),r=b7(e),p=Dm(),o=B(()=>({author:n.value,category:t.value,date:r.value,localizedDate:e.value[Zs.localizedDate]??"",tag:a.value,isOriginal:e.value[Zs.isOriginal]??!1,readingTime:e.value[Zs.readingTime]??null,readingTimeLocale:e.value[Zs.readingTime]&&p.value?Cm(e.value[Zs.readingTime],p.value):null,pageview:s.path})),d=B(()=>i.value.articleInfo);return{info:o,items:d}};var u0=S({name:"SocialMedias",setup(){const s=St(),e=le(),i=B(()=>Ci(s.value.medias??{}).map(([n,t])=>typeof t=="string"?{name:n,icon:d7[n],link:t}:{name:n,...t}));return()=>i.value.length?h("div",{class:"vp-social-medias"},i.value.map(({name:n,icon:t,link:a})=>h("a",{class:"vp-social-media",href:a,rel:"noopener noreferrer",target:"_blank","aria-label":n||"",...e.value?{}:{"data-balloon-pos":"up"},innerHTML:Ui(t)?`<img class="icon ${n}-icon" src="${t}">`:t}))):null}}),gp=S({name:"BloggerInfo",setup(){const s=St(),e=Ln(),i=hs(),n=Ot(),t=Pt(),a=Rt(),r=up(),p=Ji(),o=B(()=>{var m;return s.value.name??((m=yt(i.value.author)[0])==null?void 0:m.name)??e.value.title}),d=B(()=>s.value.avatar??i.value.logo),c=B(()=>i.value.blogLocales),u=B(()=>s.value.intro);return()=>{const{article:m,category:g,tag:k,timeline:A}=c.value,f=[[n.value.path,n.value.items.length,m],[t.value.path,Te(t.value.map).length,g],[a.value.path,Te(a.value.map).length,k],[r.value.path,r.value.items.length,A]];return h("div",{class:"vp-blogger-info",vocab:"https://schema.org/",typeof:"Person"},[h("div",{class:"vp-blogger",...u.value?{"aria-label":c.value.intro,"data-balloon-pos":"down",role:"link",onClick:()=>p(u.value)}:{}},[d.value?h("img",{class:"vp-blogger-avatar",src:Cs(d.value),property:"image",alt:"Blogger Avatar",loading:"lazy"}):null,o.value?h("div",{class:"vp-blogger-name",property:"name"},o.value):null,s.value.description?h("div",{class:"vp-blogger-description",innerHTML:s.value.description}):null,u.value?h("meta",{property:"url",content:Cs(u.value)}):null]),h("div",{class:"vp-blog-counts"},f.map(([v,b,E])=>h(Gs,{class:"vp-blog-count",to:v},()=>[h("div",{class:"count"},b),h("div",E)]))),h(u0)])}}});const kp=()=>h(ks,{name:"category"},()=>h("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));kp.displayName="CategoryIcon";const Ep=()=>h(ks,{name:"tag"},()=>h("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));Ep.displayName="TagIcon";const yp=()=>h(ks,{name:"timeline"},()=>h("path",{d:"M511.997 70.568c-243.797 0-441.429 197.633-441.429 441.435 0 243.797 197.632 441.429 441.43 441.429S953.431 755.8 953.431 512.002c0-243.796-197.637-441.434-441.435-441.434zm150.158 609.093-15.605 15.61c-8.621 8.615-22.596 8.615-31.215 0L472.197 552.126c-4.95-4.944-4.34-14.888-4.34-24.677V247.14c0-12.19 9.882-22.07 22.07-22.07h22.07c12.19 0 22.07 9.882 22.07 22.07v273.218l128.088 128.088c8.62 8.62 8.62 22.595 0 31.215zm0 0"}));yp.displayName="TimelineIcon";const m0=()=>h(ks,{name:"slides"},()=>h("path",{d:"M896 170.667v426.666a85.333 85.333 0 0 1-85.333 85.334h-256v61.184l192.597 115.584-43.861 73.13-148.736-89.173v95.275h-85.334v-95.318l-148.736 89.216-43.861-73.13 192.597-115.627v-61.141h-256A85.333 85.333 0 0 1 128 597.333V170.667H85.333V85.333h853.334v85.334H896zm-682.667 0v426.666h597.334V170.667H213.333zM426.667 512h-85.334V341.333h85.334V512zm128 0h-85.334V256h85.334v256zm128 0h-85.334V384h85.334v128z"}));m0.displayName="SlideIcon";const g0=()=>h(ks,{name:"sticky"},()=>[h("path",{d:"m381.3 733.8l-161.9 118c-5.9 4.5-13.2 6.6-20.1 6.6-8.7 0-17.7-3.4-24.3-10-12.2-12.2-13.9-31.3-3.5-45.2l144.5-195.5-113.6-112.9c-11.1-11.1-13.2-28.4-5.5-42 5.5-8.7 52.1-76.4 155.5-51 1.8 0.3 3.5 0.3 5.6 0.7 4.2 0.3 9 0.7 14.2 1.7 21.9 3.5 60.8-13.9 94.5-42.7 32.3-27.5 53.1-59.4 53.1-81.6 0-5.2 0-10.8-0.3-16-0.7-20.8-2.1-52.8 21.5-76.4 28.1-28.1 72.9-30.6 103.9-5.2 0.6 0.3 1 1 1.7 1.7 16.7 16.3 187.5 187.2 189.3 188.9 14.5 14.6 22.9 34.4 22.9 55.3 0 20.8-8 40.2-22.9 54.8-23.7 23.6-56 22.6-77.1 21.6-4.9 0-10.5-0.4-15.7-0.4-20.8 0-45.8 14.6-70.5 41.3-34.3 37.5-55.5 85.8-53.8 107.7 0.7 6.9 2.1 19.1 2.4 20.8 25 101.4-42.7 147.6-50.7 152.8-13.9 8.4-31.6 6.3-42.7-4.8l-112.1-112.2z"})]);g0.displayName="StickyIcon";const za=()=>h(ks,{name:"article"},()=>h("path",{d:"M853.333 938.667H170.667A42.667 42.667 0 0 1 128 896V128a42.667 42.667 0 0 1 42.667-42.667h682.666A42.667 42.667 0 0 1 896 128v768a42.667 42.667 0 0 1-42.667 42.667zm-42.666-85.334V170.667H213.333v682.666h597.334zM298.667 256h170.666v170.667H298.667V256zm0 256h426.666v85.333H298.667V512zm0 170.667h426.666V768H298.667v-85.333zm256-384h170.666V384H554.667v-85.333z"}));za.displayName="ArticleIcon";const k0=()=>h(ks,{name:"book"},()=>h("path",{d:"M256 853.333h426.667A85.333 85.333 0 0 0 768 768V256a85.333 85.333 0 0 0-85.333-85.333H469.333a42.667 42.667 0 0 1 0-85.334h213.334A170.667 170.667 0 0 1 853.333 256v512a170.667 170.667 0 0 1-170.666 170.667H213.333A42.667 42.667 0 0 1 170.667 896V128a42.667 42.667 0 0 1 42.666-42.667h128A42.667 42.667 0 0 1 384 128v304.256l61.653-41.088a42.667 42.667 0 0 1 47.36 0l61.654 41.045V256A42.667 42.667 0 0 1 640 256v256a42.667 42.667 0 0 1-66.347 35.499l-104.32-69.547-104.32 69.547A42.667 42.667 0 0 1 298.667 512V170.667H256v682.666z"}));k0.displayName="BookIcon";const E0=()=>h(ks,{name:"link"},()=>h("path",{d:"M460.8 584.533c17.067 17.067 17.067 42.667 0 59.734-17.067 17.066-42.667 17.066-59.733 0-85.334-85.334-85.334-217.6 0-302.934L554.667 192C640 110.933 776.533 110.933 857.6 196.267c81.067 81.066 81.067 213.333 0 294.4l-68.267 64c0-34.134-4.266-68.267-17.066-102.4l21.333-21.334c51.2-46.933 55.467-128 4.267-179.2s-128-55.466-179.2-4.266c-4.267 0-4.267 4.266-4.267 4.266L465.067 401.067c-51.2 51.2-51.2 132.266-4.267 183.466m123.733-183.466C601.6 384 627.2 384 644.267 401.067c85.333 85.333 85.333 217.6 0 302.933l-153.6 149.333C405.333 934.4 268.8 934.4 187.733 849.067c-81.066-81.067-81.066-213.334 0-294.4l68.267-64c0 34.133 4.267 72.533 17.067 102.4L251.733 614.4C204.8 665.6 204.8 746.667 256 793.6c51.2 46.933 123.733 46.933 174.933 0l149.334-149.333c51.2-51.2 51.2-128 0-179.2-12.8-17.067-17.067-46.934 4.266-64z"}));E0.displayName="LinkIcon";const y0=()=>h(ks,{name:"project"},()=>h("path",{d:"M987.456 425.152H864V295.296a36.48 36.48 0 0 0-36.544-36.544h-360l-134.08-128.256A9.344 9.344 0 0 0 327.04 128H36.48A36.48 36.48 0 0 0 0 164.544v676.608a36.48 36.48 0 0 0 36.544 36.544h797.76a36.672 36.672 0 0 0 33.92-22.848L1021.44 475.52a36.48 36.48 0 0 0-33.92-50.304zM82.304 210.304h215.424l136.64 130.752h347.328v84.096H198.848A36.672 36.672 0 0 0 164.928 448L82.304 652.8V210.304zM808.32 795.456H108.544l118.08-292.608h699.904L808.32 795.52z"}));y0.displayName="ProjectIcon";const A0=()=>h(ks,{name:"friend"},()=>h("path",{d:"M860.16 213.333A268.373 268.373 0 0 0 512 186.027a267.52 267.52 0 0 0-348.16 404.48L428.8 855.893a118.613 118.613 0 0 0 166.4 0l264.96-265.386a267.52 267.52 0 0 0 0-377.174zM800 531.627l-264.96 264.96a32.427 32.427 0 0 1-46.08 0L224 530.347a183.04 183.04 0 0 1 0-256 182.187 182.187 0 0 1 256 0 42.667 42.667 0 0 0 60.587 0 182.187 182.187 0 0 1 256 0 183.04 183.04 0 0 1 3.413 256z"}));A0.displayName="FriendIcon";const hr=()=>h(ks,{name:"slide-down"},()=>h("path",{d:"M108.775 312.23c13.553 0 27.106 3.734 39.153 11.806l375.205 250.338 363.641-252.808c32.587-21.624 76.499-12.83 98.123 19.757 21.685 32.467 12.95 76.56-19.576 98.184l-402.854 278.89c-23.733 15.901-54.694 15.962-78.547.12L69.501 442.097c-32.647-21.685-41.441-65.777-19.817-98.304 13.734-20.54 36.201-31.563 59.09-31.563Z"}));hr.displayName="SlideDownIcon";const v0=()=>h("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",class:"empty-icon",viewBox:"0 0 1024 1024",innerHTML:'<defs><linearGradient id="f" x1="512.342" y1="2266.13" x2="512.342" y2="666.063" gradientUnits="userSpaceOnUse"><stop offset=".919" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="g" x1="528.912" y1="774" x2="388.088" y2="612" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#e6e6e6" stop-opacity="0"/></linearGradient><linearGradient id="h" x1="213.219" y1="721.704" x2="251.313" y2="683.61" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#d7d7d7"/><stop offset=".485" stop-color="#fafafa"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="i" x1="724.813" y1="821.718" x2="768.656" y2="777.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="a" x1="513.493" y1="714.594" x2="471.007" y2="544.188" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#999"/><stop offset="1" stop-color="#ccc"/></linearGradient><linearGradient id="b" x1="440.156" y1="564.031" x2="508.594" y2="495.594" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="l" x1="660.988" y1="754.156" x2="608.637" y2="544.188" xlink:href="#a"/><linearGradient id="m" x1="479.188" y1="774.219" x2="649.782" y2="603.625" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#b3b3b3"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="n" x1="447.121" y1="774.219" x2="394.661" y2="563.813" xlink:href="#a"/><linearGradient id="o" x1="494" y1="597" x2="628" y2="463" xlink:href="#b"/><linearGradient id="d" x1="610.485" y1="604.938" x2="697.298" y2="518.125" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff"/></linearGradient><linearGradient id="p" x1="457.438" y1="619.25" x2="353.469" y2="619.25" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="q" x1="542.734" y1="674.25" x2="615.672" y2="601.313" xlink:href="#b"/><linearGradient id="c" x1="627.933" y1="358.938" x2="685.192" y2="422.531" gradientUnits="userSpaceOnUse"><stop offset=".4" stop-color="#e6e6e6" stop-opacity=".4"/><stop offset=".443" stop-color="#fff"/><stop offset=".6" stop-color="#ccc"/></linearGradient><linearGradient id="r" x1="618.547" y1="422.531" x2="681.547" y2="359.531" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="s" x1="625" y1="441.5" x2="697" y2="369.5" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="t" x1="627.681" y1="361.438" x2="692.257" y2="433.156" xlink:href="#c"/><linearGradient id="u" x1="561.414" y1="735.438" x2="573.149" y2="688.375" xlink:href="#d"/><linearGradient id="v" x1="405" y1="485.875" x2="440" y2="450.875" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".702"/></linearGradient><linearGradient id="w" x1="404.61" y1="486.906" x2="441.86" y2="449.656" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".495" stop-color="#ccc" stop-opacity=".702"/><stop offset=".498" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".302"/></linearGradient><radialGradient id="e" cx="329.297" cy="647.578" r="8.172" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#fafafa"/><stop offset="1.2" stop-color="#e6e6e6"/></radialGradient><radialGradient id="j" cx="802.297" cy="673.578" r="8.172" xlink:href="#e"/><radialGradient id="k" cx="774.844" cy="642.75" r="5.531" xlink:href="#e"/></defs><path d="M512.33 666.07c441.828 0 800 358.18 800 800.03s-358.172 800.02-800 800.02-800-358.18-800-800.02 358.17-800.03 800-800.03z" style="fill:url(#f);fill-rule:evenodd"/><path d="m272 694 242-82 131 119-188 43z" style="fill:url(#g);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M232.391 723.534a2.4 2.4 0 0 1 2.4 2.4v17.725a2.4 2.4 0 0 1-4.8 0v-17.725a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M232.255 676.559c10.33 0 17.067 15.408 18.7 28.493 1.619 12.942-2.372 23.694-18.7 23.694-16.878 0-20.213-10.733-18.7-23.694 1.633-14.061 8.37-28.493 18.7-28.493z" style="fill:url(#h);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M745.853 826h.938a2.4 2.4 0 0 1 2.4 2.4v22.238a2.4 2.4 0 0 1-2.4 2.4h-.938a2.4 2.4 0 0 1-2.4-2.4V828.4a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M746.727 830.3c-19.438 0-23.278-9.326-21.541-20.59a34.467 34.467 0 0 1 3.289-10.369 16.628 16.628 0 0 1 0-9.112c2.889-12.327 12.059-20.911 18.356-20.911 6.56 0 15.468 9.1 18.356 20.911a14.589 14.589 0 0 1-.335 9.217 34.36 34.36 0 0 1 3.419 10.264c1.861 11.243-2.735 20.59-21.544 20.59z" style="fill:url(#i);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M328.841 654.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.109.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M328.383 653.73a6.567 6.567 0 0 0-5.2-5.027q-4.109-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#e);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M801.841 680.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.108.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M801.383 679.73a6.567 6.567 0 0 0-5.2-5.027q-4.108-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#j);fill-rule:evenodd"/><path d="M774.21 646.9a4.446 4.446 0 0 0-3.517-3.4q-2.778-.643-.023-1.383a4.443 4.443 0 0 0 3.4-3.517q.645-2.778 1.383-.023a4.443 4.443 0 0 0 3.517 3.4q2.778.645.023 1.383a4.446 4.446 0 0 0-3.4 3.517q-.645 2.78-1.383.023z" style="fill:url(#k);fill-rule:evenodd"/><path d="m385.6 714.6.158-150.658L598.9 544.174l-.158 150.658z" style="fill:url(#a);fill-rule:evenodd"/><path d="m385.474 564.031 214.763-19.383-36.171-49.067-215.559 17.634z" style="fill:url(#b);fill-rule:evenodd"/><path d="m598.744 694.832.156-150.658 71.975 59.319-.158 150.658z" style="fill:url(#l);fill-rule:evenodd"/><path d="m457.064 774.209.158-150.658 214.691-19.914-.158 150.663z" style="fill:url(#m);fill-rule:evenodd"/><path d="m384.566 714.459.158-150.659 72.5 59.75-.158 150.658z" style="fill:url(#n);fill-rule:evenodd"/><path d="M494 640s75.357-58.4 42-83-38.887 1.663-37 14 53.847 12.465 54-26c.2-49.979 75-125 75-125" style="fill:none;stroke-width:3px;stroke-dasharray:12 6;stroke:url(#o);fill-rule:evenodd"/><path d="m670.275 604.939-72.041-59.9 38.476-26.909 72.86 58.159z" style="fill:url(#d);fill-rule:evenodd"/><path d="m425.5 674.383-72.042-59.9 31.109-50.347 72.86 58.16z" style="fill:url(#p);fill-rule:evenodd"/><path d="m487.918 674.235 214.482-22.57-31.1-50.346-215.309 20.833z" style="fill:url(#q);fill-rule:evenodd"/><path style="fill:#fff;fill-rule:evenodd" d="m697.363 358.927-69.58 62.511-12.035 1.082z"/><path d="m697.363 358.927-69.58 62.511-12.035 1.082z" style="fill:url(#c);fill-rule:evenodd"/><path d="M615.748 422.52 604 413l92.089-53.46" style="fill:url(#r);fill-rule:evenodd"/><path d="m625 432 12 18 60-89" style="fill:url(#s);fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:#fff;fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:url(#t);fill-rule:evenodd"/><path d="m494.814 735.44 21.293-2.1v-6.613l-13.4 1.319v-6.965l10.977-1.08v-6.613l-10.977 1.08v-6.084l12.917-1.27v-6.525l-20.808 2.047v32.8zM521 732.863l7.054-.694v-11.241a106.361 106.361 0 0 0-1.014-11.274l.176-.017 2.645 7.586 4.453 11.553 4.32-.425 4.408-12.424 2.733-8.116.177-.018a111.811 111.811 0 0 0-1.014 11.474v11.241l7.185-.707V697l-8.552.841-5.025 14.646c-.618 1.956-1.147 4.08-1.808 6.173l-.22.022c-.617-1.968-1.146-3.987-1.808-5.818l-5.2-13.639-8.508.837v32.8zm37.213-3.661 7.891-.776v-10.889l3.835-.377c6.922-.681 12.961-4.714 12.961-12.517 0-8.111-5.951-10.082-13.181-9.371l-11.504 1.128v32.8zm7.891-17.881v-9.478l3.218-.316c3.792-.373 5.908.565 5.908 3.871 0 3.218-1.852 5.208-5.687 5.585zM594 725.682l7.891-.777v-26.274l8.905-.876v-6.524l-25.657 2.524v6.524l8.861-.871v26.274zm27.991-2.754 7.847-.772v-11.594l9.919-22.18-8.244.811-2.733 7.542c-.925 2.56-1.807 4.939-2.733 7.587l-.176.018c-.926-2.466-1.764-4.676-2.645-7.058l-2.734-7-8.375.824 9.874 20.233v11.594z" style="fill:url(#u);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M408.938 457.309a17.5 17.5 0 0 0 21.374 26.725 17.5 17.5 0 1 1-16.306-30.955 17.442 17.442 0 0 0-5.068 4.23z"/><circle cx="422.5" cy="468.375" r="17.5" style="fill:url(#v)"/><path fill="#ccc" fill-rule="evenodd" d="M391.76 451.5c-2.358 4.419 9.827 15.52 27.215 24.8 15.131 8.071 29.212 12.1 34.166 10.093-4.191 2.772-18.943-1.24-34.86-9.73-17.388-9.275-29.573-20.376-27.215-24.8a2.96 2.96 0 0 1 1.585-1.3 2.606 2.606 0 0 0-.891.937z"/><path d="M418.975 476.29c-17.388-9.275-29.573-20.376-27.215-24.8s18.363-.484 35.751 8.791 29.572 20.376 27.215 24.8-18.364.483-35.751-8.791zm31.634 5.732c1.824-3.42-8.789-12.642-23.7-20.6s-28.486-11.633-30.31-8.213 8.789 12.642 23.7 20.6 28.486 11.633 30.31 8.213zm-36.645-29.008-2.775 1.452.032 1.751 28.637 14.183.266-4.559z" style="fill:url(#w);fill-rule:evenodd"/><g class="people"><path style="fill:#f8cfad;fill-rule:evenodd" d="m612.131 676.5 1.362 3.532 3.255-2.324-1.361-3.532zM629.131 665.5l1.362 3.532 3.255-2.324-1.361-3.532z"/><path style="fill:#141a33;fill-rule:evenodd" d="m617.764 678.184-3.162-.078a11.028 11.028 0 0 0-1.034 3.454c-.258 2.006-1.177 5-.449 5.367 1.5 2.659 4.118-.215 4.118-.215s2.187-2.848 1.925-5.265c-.106-.973-1.181-1.869-1.398-3.263zM633.781 665.855l3.019.945a11.008 11.008 0 0 1-.137 3.6c-.4 1.981-.179 4.166-.986 4.277-2.283 2.03-3.827-1.533-3.827-1.533s-1.473-2.456-.444-4.659c.412-.88 1.718-1.385 2.375-2.63z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M599.935 592.534s10.293 9.761 11.95 7.564 3.536-3.463-6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M611.3 596.361c1.674-1.105 11.5 7.048 14.5 11.774s-12.705-4.36-14.632-6.776-1.54-3.893.132-4.998z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M621.815 607.988s1.809 2.549 2.433 1.756 2.475-1.064 2.449-1.138.1-.819 1.288-2.331-3.8-3.632-5.81-.494a2.556 2.556 0 0 0-.36 2.207z"/><path fill="#232c57" fill-rule="evenodd" d="M598 617s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s12.666 11.836 16 19c0 0-4.753-1.629-4 2 0 0-18.132-14.647-19-19s-9.148-18.716-12-31z"/><path d="M589 622s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s4.666 17.836 8 25c0 0-4.753-1.629-4 2 0 0-10.132-20.647-11-25s-9.148-18.716-12-31z" style="fill:#292966;fill-rule:evenodd"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M585.626 597.7s-10.292 9.761-11.95 7.563-3.536-3.463 6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M574.259 601.529c-1.675-1.105-11.5 7.049-14.5 11.774s12.7-4.36 14.631-6.775 1.543-3.894-.131-4.999z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M591.715 577.752s-.606 1.681 1.48 3.716-3.615 5.307-4.645 2.85-.48-2.716-.48-2.716z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M583.527 574.123c-.839 1.043.491 3.873 1.453 5.449s2.749 2.833 3.364 2.428 4.088-2.657 4-4-.228-3.4-.228-3.4 2.562-1.641 2.154-2.916-2.916-.154-2.916-.154a15.853 15.853 0 0 0-.227-2.224c-.189-.929-6.887-1.445-7.827 2.6s.558 1.805.227 2.217z"/><path fill="#232c57" fill-rule="evenodd" d="M584.227 567.758c2.1-.885 7.2-3.684 10.125.318s.842 4.385.989 5.294-1.894 5.69-1.341 6.63-3.865.8-4.657-1.179-2.844-.539-2.227-1.224-1.3-4.456-2.916-2.154a9.252 9.252 0 0 0 .309-1.38c-.115.192.259-3.257-.673-1.32s-2.1 1.037-3.069.762-1.8-1.118-1.071-1.689c.023-.016 2.436-3.172 4.531-4.058z"/><path d="M589 585c-2.584-.47-10.055.362-13 13 0 0 1.9 3.349 5 4s6 21 6 21 24.016 11.06 27-3c-.07-13.826-8-21-8-21s5.829-3.2 5-6-8.016-10.153-11-10-6 0-6 0-2.416 2.47-5 2z" style="fill:#f6bb07;fill-rule:evenodd"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M563.284 612.581s-.986 2.965-1.814 2.389-2.678-.3-2.675-.374-.333-.755-1.912-1.854 2.577-4.583 5.414-2.167a2.551 2.551 0 0 1 .987 2.006z"/></g>'});v0.displayName="EmptyIcon";var C7=S({name:"ArticleItem",props:{info:{type:Object,required:!0},path:{type:String,required:!0}},slots:Object,setup(s,{slots:e}){const i=Tn(s,"info"),{info:n,items:t}=w7(s);return()=>{var m,g,k;const{[te.title]:a,[Zs.type]:r,[Zs.isEncrypted]:p=!1,[Zs.cover]:o,[Zs.excerpt]:d,[Zs.sticky]:c}=i.value,u=n.value;return h("div",{class:"vp-article-wrapper"},h("article",{class:"vp-article-item",vocab:"https://schema.org/",typeof:"Article"},[((m=e.cover)==null?void 0:m.call(e,{cover:o}))??(o?[h("img",{class:"vp-article-cover",src:Cs(o),alt:"",loading:"lazy"}),h("meta",{property:"image",content:Cs(o)})]:[]),c?h(g0):null,h(Gs,{to:s.path},()=>{var A;return((A=e.title)==null?void 0:A.call(e,{title:a,isEncrypted:p,type:r}))??h("header",{class:"vp-article-title"},[p?h(cp):null,r===Im.slide?h(m0):null,h("span",{property:"headline"},a)])}),((g=e.excerpt)==null?void 0:g.call(e,{excerpt:d}))??(d?h("div",{class:"vp-article-excerpt",innerHTML:d}):null),h("hr",{class:"vp-article-hr"}),((k=e.info)==null?void 0:k.call(e,{info:u}))??h(i0,{info:u,...t.value?{items:t.value}:{}})]))}}}),D7=S({name:"Pagination",props:{total:{type:Number,default:10},perPage:{type:Number,default:10},current:{type:Number,default:1}},emits:["updateCurrentPage"],setup(s,{emit:e}){let i;const n=hs(),t=Y(""),a=B(()=>n.value.paginationLocales),r=B(()=>Math.ceil(s.total/s.perPage)),p=B(()=>!!r.value&&r.value!==1),o=B(()=>r.value<7?!1:s.current>4),d=B(()=>r.value<7?!1:s.current<r.value-3),c=B(()=>{const{current:g}=s;let k=1,A=r.value;const f=[];r.value>=7&&(g<=4&&g<r.value-3?(k=1,A=5):g>4&&g>=r.value-3?(A=r.value,k=r.value-4):r.value>7&&(k=g-2,A=g+2));for(let v=k;v<=A;v++)f.push(v);return f}),u=g=>e("updateCurrentPage",g),m=g=>{const k=parseInt(g,10);k<=r.value&&k>0?u(k):i.pop(`<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M64 512a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151"/><path d="m557.3 512 113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFF"/></svg>${a.value.errorText.replace(/\$page/gu,r.value.toString())}`)};return us(()=>{i=new e5}),()=>h("div",{class:"vp-pagination"},p.value?h("nav",{class:"vp-pagination-list"},[h("div",{class:"vp-pagination-number "},[s.current>1?h("div",{class:"prev",role:"navigation",unselectable:"on",onClick:()=>u(s.current-1)},a.value.prev):null,o.value?[h("div",{role:"navigation",onClick:()=>u(1)},1),h("div",{class:"ellipsis"},"...")]:null,c.value.map(g=>h("div",{key:g,class:{active:s.current===g},role:"navigation",onClick:()=>u(g)},g)),d.value?[h("div",{class:"ellipsis"},"..."),h("div",{role:"navigation",onClick:()=>u(r.value)},r.value)]:null,s.current<r.value?h("div",{class:"next",role:"navigation",unselectable:"on",onClick:()=>u(s.current+1)},a.value.next):null]),h("div",{class:"vp-pagination-nav"},[h("label",{for:"navigation-text"},`${a.value.navigate}: `),h("input",{id:"navigation-text",value:t.value,onInput:({target:g})=>{t.value=g.value},onKeydown:g=>{g.key==="Enter"&&(g.preventDefault(),m(t.value))}}),h("button",{class:"vp-pagination-button",type:"button",role:"navigation",title:a.value.action,onClick:()=>m(t.value)},a.value.action)])]):[])}}),Ap=S({name:"ArticleList",props:{items:{type:Array,default:()=>[]}},setup(s){const e=Se(),i=wi(),n=St(),t=Y(1),a=B(()=>n.value.articlePerPage??10),r=B(()=>s.items.slice((t.value-1)*a.value,t.value*a.value)),p=async o=>{t.value=o;const d={...e.query};!(d.page===o.toString()||o===1&&!d.page)&&(o===1?delete d.page:d.page=o.toString(),await i.push({path:e.path,query:d}))};return us(()=>{const{page:o}=e.query;p(o?Number(o):1),ds(t,()=>{const d=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,d)},100)})}),()=>h("div",{id:"article-list",class:"vp-article-list",role:"feed"},r.value.length?[...r.value.map(({info:o,path:d},c)=>h(ps,{appear:!0,delay:c*.04},()=>h(C7,{key:d,info:o,path:d}))),h(D7,{current:t.value,perPage:a.value,total:s.items.length,onUpdateCurrentPage:p})]:h(v0))}}),f0=S({name:"CategoryList",setup(){const s=Os(),e=Pt();return()=>h("ul",{class:"vp-category-list"},Ci(e.value.map).sort(([,i],[,n])=>n.items.length-i.items.length).map(([i,{path:n,items:t}])=>h("li",{class:["vp-category",`color${It(i,Number(Qi.colorNumber))}`,{active:n===s.value.path}]},h(Gs,{to:n},()=>[i,h("span",{class:"vp-category-count"},t.length)]))))}}),_0=S({name:"TagList",setup(){const s=As(),e=Rt(),i=n=>{var t;return n===((t=s.value.blog)==null?void 0:t.name)};return()=>h("ul",{class:"vp-tag-list"},Ci(e.value.map).sort(([,n],[,t])=>t.items.length-n.items.length).map(([n,{path:t,items:a}])=>h("li",{class:["vp-tag",`color${It(n,Number(Qi.colorNumber))}`,{active:i(n)}]},h(Gs,{to:t},()=>[n,h("span",{class:"vp-tag-count"},a.length)]))))}}),F7=S({name:"TimelineList",setup(){const s=hs(),e=up(),i=Ji(),n=B(()=>s.value.blogLocales.timeline);return()=>h("div",{class:"timeline-list-wrapper"},[h("div",{class:"timeline-list-title",onClick:()=>i(e.value.path)},[h(yp),h("span",{class:"num"},e.value.items.length),n.value]),h("hr"),h("div",{class:"timeline-content"},h("ul",{class:"timeline-list"},e.value.config.map(({year:t,items:a},r)=>h(ps,{appear:!0,delay:.08*(r+1)},()=>h("li",[h("h3",{class:"timeline-year"},t),h("ul",{class:"timeline-year-wrapper"},a.map(({date:p,info:o,path:d})=>h("li",{class:"timeline-item"},[h("span",{class:"timeline-date"},p),h(Gs,{class:"timeline-title",to:d},()=>o[te.title])])))])))))])}});const T7={article:za,category:kp,tag:Ep,timeline:yp};var B0=S({name:"InfoList",setup(){const s=hs(),e=Ot(),i=Pt(),n=B(()=>Te(i.value.map).length),t=mp(),a=Rt(),r=B(()=>Te(a.value.map).length),p=Ji(),o=Y("article"),d=B(()=>s.value.blogLocales);return()=>h("div",{class:"vp-blog-infos"},[h("div",{class:"vp-blog-type-switcher"},Ci(T7).map(([c,u])=>h("button",{type:"button",class:"vp-blog-type-button",onClick:()=>{o.value=c}},h("div",{class:["vp-blog-type-icon-wrapper",{active:o.value===c}],"aria-label":d.value[c],"data-balloon-pos":"up"},h(u))))),h(ps,()=>o.value==="article"?h("div",{class:"vp-star-article-wrapper"},[h("div",{class:"title",onClick:()=>p(e.value.path)},[h(za),h("span",{class:"num"},e.value.items.length),d.value.article]),h("hr"),t.value.items.length?h("ul",{class:"vp-star-articles"},t.value.items.map(({info:c,path:u},m)=>h(ps,{appear:!0,delay:.08*(m+1)},()=>h("li",{class:"vp-star-article"},h(Gs,{to:u},()=>c[te.title]))))):h("div",{class:"vp-star-article-empty"},d.value.empty.replace("$text",d.value.star))]):o.value==="category"?h("div",{class:"vp-category-wrapper"},[n.value?[h("div",{class:"title",onClick:()=>p(i.value.path)},[h(kp),h("span",{class:"num"},n.value),d.value.category]),h("hr"),h(ps,{delay:.04},()=>h(f0))]:h("div",{class:"vp-category-empty"},d.value.empty.replace("$text",d.value.category))]):o.value==="tag"?h("div",{class:"vp-tag-wrapper"},[r.value?[h("div",{class:"title",onClick:()=>p(a.value.path)},[h(Ep),h("span",{class:"num"},r.value),d.value.tag]),h("hr"),h(ps,{delay:.04},()=>h(_0))]:h("div",{class:"vp-tag-empty"},d.value.empty.replace("$text",d.value.tag))]):h(ps,()=>h(F7)))])}}),ja=S({name:"BlogWrapper",slots:Object,setup(s,{slots:e}){const{isMobile:i}=Lt();return()=>[h(hp),h(op,{noSidebar:!0,noToc:!0},{default:()=>e.default(),navScreenBottom:()=>h(gp),sidebar:i.value?()=>h(B0):null})]}});const Vt=()=>h("aside",{class:"vp-blog-info-wrapper"},[h(ps,()=>h(gp)),h(ps,{delay:.04},()=>h(B0))]);Vt.displayName="InfoPanel";var I7=S({name:"BlogPage",setup(){const s=Os(),e=As(),i=Pt(),n=Rt();return()=>{const{key:t="",name:a=""}=e.value.blog||{},r=a?t==="category"?i.value.map[a].items:t==="tag"?n.value.map[a].items:[]:[];return h(ja,()=>h("div",{class:"vp-page vp-blog"},h("div",{class:"blog-page-wrapper"},[h("main",{id:"main-content",class:"vp-blog-main"},[h(ps,()=>t==="category"?h(f0):t==="tag"?h(_0):null),a?h(ps,{appear:!0,delay:.24},()=>h(Ap,{key:s.value.path,items:r})):null]),h(ps,{delay:.16},()=>h(Vt,{key:"blog"}))])))}}});const L7="//theme-hope-assets.vuejs.press/hero/default.jpg";var x7=S({name:"BlogHero",slots:Object,setup(s,{slots:e}){const i=As(),n=Ln(),t=ys(),a=B(()=>i.value.heroFullScreen??!1),r=B(()=>{const{heroText:o,heroImage:d,heroImageDark:c,heroAlt:u,heroImageStyle:m,tagline:g}=i.value;return{text:o??n.value.title??"Hello",tagline:g??"",image:d?Cs(d):null,imageDark:c?Cs(c):null,alt:u??o??"",imageStyle:m,isFullScreen:a.value}}),p=B(()=>{const{bgImage:o,bgImageDark:d,bgImageStyle:c}=i.value;return{image:Ps(o)?Cs(o):o===!1?null:L7,imageDark:Ps(d)?Cs(d):null,bgStyle:c,isFullScreen:a.value}});return()=>{var o,d;return i.value.hero===!1?null:h("div",{ref:t,class:["vp-blog-hero",{fullscreen:a.value,"no-bg":!p.value.image}]},[((o=e.bg)==null?void 0:o.call(e,p.value))??[p.value.image?h("div",{class:["vp-blog-mask",{light:p.value.imageDark}],style:[{background:`url(${p.value.image}) center/cover no-repeat`},p.value.bgStyle]}):null,p.value.imageDark?h("div",{class:"vp-blog-mask dark",style:[{background:`url(${p.value.imageDark}) center/cover no-repeat`},p.value.bgStyle]}):null],((d=e.info)==null?void 0:d.call(e,r.value))??[h(ps,{appear:!0,type:"group",delay:.04},()=>{const{image:c,imageDark:u,imageStyle:m,alt:g}=r.value;return[c?h("img",{key:"light",class:["vp-blog-hero-image",{light:u}],style:m,src:c,alt:g}):null,u?h("img",{key:"dark",class:"vp-blog-hero-image dark",style:m,src:u,alt:g}):null]}),h(ps,{appear:!0,delay:.08},()=>r.value.text?h("h1",{class:"vp-blog-hero-title"},r.value.text):null),h(ps,{appear:!0,delay:.12},()=>r.value.tagline?h("p",{class:"vp-blog-hero-description",innerHTML:r.value.tagline}):null)],r.value.isFullScreen?h("button",{type:"button",class:"slide-down-button",onClick:()=>{window.scrollTo({top:t.value.clientHeight,behavior:"smooth"})}},[h(hr),h(hr)]):null])}}});const O7=["link","article","book","project","friend"];var P7=S({name:"ProjectPanel",components:{ArticleIcon:za,BookIcon:k0,FriendIcon:A0,LinkIcon:E0,ProjectIcon:y0},props:{items:{type:Array,required:!0}},setup(s){const e=le(),i=Ji(),n=(t="",a="icon")=>O7.includes(t)?h(Pe(`${t}-icon`)):Ui(t)?h("img",{class:"vp-project-image",src:t,alt:a}):xa(t)?h("img",{class:"vp-project-image",src:Cs(t),alt:a}):h(Ws,{icon:t});return()=>h("div",{class:"vp-project-panel"},s.items.map(({icon:t,link:a,name:r,desc:p,background:o})=>h("div",{class:["vp-project-card",{[`color${It(r,Number(Qi.colorNumber))}`]:!e.value&&!o}],...o?{style:o}:{},onClick:()=>i(a)},[n(t,r),h("div",{class:"vp-project-name"},r),h("div",{class:"vp-project-desc"},p)])))}}),R7=S({name:"BlogHomePage",setup(){const s=Ot(),e=As(),i=B(()=>e.value.projects??[]);return()=>h("div",{class:"vp-page vp-blog-home"},[h(x7),h("div",{class:"blog-page-wrapper"},[h("main",{id:"main-content",class:"vp-blog-main"},[i.value.length?h(ps,{appear:!0,delay:.16},()=>h(P7,{items:i.value})):null,h(ps,{appear:!0,delay:.24},()=>h(Ap,{items:s.value.items}))]),h(ps,{appear:!0,delay:.16},()=>h(Vt,{key:"blog"}))]),h(ps,{appear:!0,delay:.28},()=>h(Dn))])}});const b0=()=>h(ja,()=>h(R7));b0.displayName="BlogHome";var S7=S({name:"ArticleType",setup(){const s=Os(),e=Ne(),i=hs(),n=Ot(),t=mp(),a=B(()=>{const r=i.value.blogLocales;return[{text:r.all,path:n.value.path},{text:r.star,path:t.value.path},...m7.map(({key:p,path:o})=>{const d=o.replace(/^\//,e.value);return{text:r[p]??De(d).meta[te.title]??p,path:d}})]});return()=>h("ul",{class:"vp-article-type-wrapper"},a.value.map(r=>h("li",{class:["vp-article-type",{active:r.path===s.value.path}]},h(Gs,{to:r.path},()=>r.text))))}}),V7=S({name:"BlogPage",setup(){const s=Na(),e=As(),i=Os(),n=Ot(),t=mp(),a=B(()=>{const{key:r="",type:p}=e.value.blog||{};return r==="star"?t.value.items:p==="type"&&r?s.value.items:n.value.items});return()=>h(ja,()=>h("div",{class:"vp-page vp-blog"},h("div",{class:"blog-page-wrapper"},[h("main",{id:"main-content",class:"vp-blog-main"},[h(ps,()=>h(S7)),h(ps,{appear:!0,delay:.24},()=>h(Ap,{key:i.value.path,items:a.value}))]),h(ps,{delay:.16},()=>h(Vt,{key:"blog"}))])))}}),N7=S({name:"TimelineItems",setup(){const s=St(),e=hs(),i=up(),n=B(()=>s.value.timeline??e.value.blogLocales.timelineTitle),t=B(()=>i.value.config.map(({year:a})=>({title:a.toString(),level:2,slug:a.toString(),children:[]})));return()=>h("div",{class:"timeline-wrapper"},h("ul",{class:"timeline-content"},[h(ps,()=>h("li",{class:"motto"},n.value)),h(n0,{items:t.value}),i.value.config.map(({year:a,items:r},p)=>h(ps,{appear:!0,delay:.08*(p+1),type:"group"},()=>[h("h3",{key:"title",id:a,class:"timeline-year-title"},h("span",a)),h("li",{key:"content",class:"timeline-year-list"},[h("ul",{class:"timeline-year-wrapper"},r.map(({date:o,info:d,path:c})=>h("li",{class:"timeline-item"},[h("span",{class:"timeline-date"},o),h(Gs,{class:"timeline-title",to:c},()=>d[te.title])])))])]))]))}});const w0=()=>h(ja,()=>h("div",{class:"vp-page vp-blog"},h("div",{class:"blog-page-wrapper"},[h("main",{id:"main-content",class:"vp-blog-main"},[h(ps,{appear:!0,delay:.24},()=>h(N7))]),h(ps,{delay:.16},()=>h(Vt,{key:"blog"}))])));w0.displayName="Timeline";var z7={};const sn="./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),Al=Array.from({length:64},(s,e)=>e),Qt=s=>Array(s).fill(-1),ci=[...Qt(46),0,1,...Al.slice(54,64),...Qt(7),...Al.slice(2,28),...Qt(6),...Al.slice(28,54),...Qt(5)],Yh=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],Xh=[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946,1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055,3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504,976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462],C0=[1332899944,1700884034,1701343084,1684370003,1668446532,1869963892],dr=(s,e)=>{if(e<=0||e>s.length)throw Error(`Illegal len: ${e}`);let i=0,n,t;const a=[];for(;i<e;){if(n=s[i++]&255,a.push(sn[n>>2&63]),n=(n&3)<<4,i>=e){a.push(sn[n&63]);break}if(t=s[i++]&255,n|=t>>4&15,a.push(sn[n&63]),n=(t&15)<<2,i>=e){a.push(sn[n&63]);break}t=s[i++]&255,n|=t>>6&3,a.push(sn[n&63]),a.push(sn[t&63])}return a.join("")},j7=(s,e)=>{const i=s.length;let n=0,t=0,a,r,p,o,d,c;const u=[];for(;n<i-1&&t<e&&(c=s.charCodeAt(n++),a=c<ci.length?ci[c]:-1,c=s.charCodeAt(n++),r=c<ci.length?ci[c]:-1,!(a==-1||r==-1||(d=a<<2>>>0,d|=(r&48)>>4,u.push(String.fromCharCode(d)),++t>=e||n>=i)||(c=s.charCodeAt(n++),p=c<ci.length?ci[c]:-1,p==-1)||(d=(r&15)<<4>>>0,d|=(p&60)>>2,u.push(String.fromCharCode(d)),++t>=e||n>=i)));)c=s.charCodeAt(n++),o=c<ci.length?ci[c]:-1,d=(p&3)<<6>>>0,d|=o,u.push(String.fromCharCode(d)),++t;return u.map(m=>m.charCodeAt(0))},M7=(s,e)=>{let i=null;for(typeof s=="number"&&(i=s,s=()=>null);i!==null||(i=s())!==null;)i<128?e(i&127):i<2048?(e(i>>6&31|192),e(i&63|128)):i<65536?(e(i>>12&15|224),e(i>>6&63|128),e(i&63|128)):(e(i>>18&7|240),e(i>>12&63|128),e(i>>6&63|128),e(i&63|128)),i=null},q7=(s,e)=>{let i,n=null;for(;(i=n!==null?n:s())!==null;){if(i>=55296&&i<=57343&&(n=s())!==null&&n>=56320&&n<=57343){e((i-55296)*1024+n-56320+65536),n=null;continue}e(i)}n!==null&&e(n)},G7=(s,e)=>{q7(s,function(i){M7(i,e)})},H7=typeof process=="object"&&z7.NEXT_RUNTIME==="edge"?setTimeout:typeof setImmediate=="function"?setImmediate:typeof process=="object"&&typeof process.nextTick=="function"?process.nextTick:setTimeout,U7=s=>{const e=[];let i=0;return G7(()=>i>=s.length?null:s.charCodeAt(i++),n=>{e.push(n)}),e},At=(s,e,i,n)=>{let t,a=s[e],r=s[e+1];return a^=i[0],t=n[a>>>24],t+=n[256|a>>16&255],t^=n[512|a>>8&255],t+=n[768|a&255],r^=t^i[1],t=n[r>>>24],t+=n[256|r>>16&255],t^=n[512|r>>8&255],t+=n[768|r&255],a^=t^i[2],t=n[a>>>24],t+=n[256|a>>16&255],t^=n[512|a>>8&255],t+=n[768|a&255],r^=t^i[3],t=n[r>>>24],t+=n[256|r>>16&255],t^=n[512|r>>8&255],t+=n[768|r&255],a^=t^i[4],t=n[a>>>24],t+=n[256|a>>16&255],t^=n[512|a>>8&255],t+=n[768|a&255],r^=t^i[5],t=n[r>>>24],t+=n[256|r>>16&255],t^=n[512|r>>8&255],t+=n[768|r&255],a^=t^i[6],t=n[a>>>24],t+=n[256|a>>16&255],t^=n[512|a>>8&255],t+=n[768|a&255],r^=t^i[7],t=n[r>>>24],t+=n[256|r>>16&255],t^=n[512|r>>8&255],t+=n[768|r&255],a^=t^i[8],t=n[a>>>24],t+=n[256|a>>16&255],t^=n[512|a>>8&255],t+=n[768|a&255],r^=t^i[9],t=n[r>>>24],t+=n[256|r>>16&255],t^=n[512|r>>8&255],t+=n[768|r&255],a^=t^i[10],t=n[a>>>24],t+=n[256|a>>16&255],t^=n[512|a>>8&255],t+=n[768|a&255],r^=t^i[11],t=n[r>>>24],t+=n[256|r>>16&255],t^=n[512|r>>8&255],t+=n[768|r&255],a^=t^i[12],t=n[a>>>24],t+=n[256|a>>16&255],t^=n[512|a>>8&255],t+=n[768|a&255],r^=t^i[13],t=n[r>>>24],t+=n[256|r>>16&255],t^=n[512|r>>8&255],t+=n[768|r&255],a^=t^i[14],t=n[a>>>24],t+=n[256|a>>16&255],t^=n[512|a>>8&255],t+=n[768|a&255],r^=t^i[15],t=n[r>>>24],t+=n[256|r>>16&255],t^=n[512|r>>8&255],t+=n[768|r&255],a^=t^i[16],s[e]=r^i[17],s[e+1]=a,s},tn=(s,e)=>{let i=0;for(let n=0;n<4;++n)i=i<<8|s[e]&255,e=(e+1)%s.length;return{key:i,offp:e}},Zh=(s,e,i)=>{const n=e.length,t=i.length;let a=0,r=[0,0],p;for(let o=0;o<n;o++)p=tn(s,a),a=p.offp,e[o]=e[o]^p.key;for(let o=0;o<n;o+=2)r=At(r,0,e,i),e[o]=r[0],e[o+1]=r[1];for(let o=0;o<t;o+=2)r=At(r,0,e,i),i[o]=r[0],i[o+1]=r[1]},$7=(s,e,i,n)=>{const t=i.length,a=n.length;let r=0,p=[0,0],o;for(let d=0;d<t;d++)o=tn(e,r),r=o.offp,i[d]=i[d]^o.key;r=0;for(let d=0;d<t;d+=2)o=tn(s,r),r=o.offp,p[0]^=o.key,o=tn(s,r),r=o.offp,p[1]^=o.key,p=At(p,0,i,n),i[d]=p[0],i[d+1]=p[1];for(let d=0;d<a;d+=2)o=tn(s,r),r=o.offp,p[0]^=o.key,o=tn(s,r),r=o.offp,p[1]^=o.key,p=At(p,0,i,n),n[d]=p[0],n[d+1]=p[1]},sd=(s,e,i,n,t)=>{const a=C0.slice(),r=a.length;if(i<4||i>31){const m=new Error(`Illegal number of rounds (4-31): ${i}`);if(n===!1)return Promise.reject(m);throw m}if(e.length!==16){const m=new Error(`Illegal salt length: ${e.length} != 16`);if(n===!1)return Promise.reject(m);throw m}i=1<<i>>>0;let p,o,d=0,c;Int32Array?(p=new Int32Array(Yh),o=new Int32Array(Xh)):(p=Yh.slice(),o=Xh.slice()),$7(e,s,p,o);const u=()=>{if(d<i){const m=Date.now();for(;d<i&&(d=d+1,Zh(s,p,o),Zh(e,p,o),!(Date.now()-m>100)););}else{for(d=0;d<64;d++)for(c=0;c<r>>1;c++)At(a,c<<1,p,o);const m=[];for(d=0;d<r;d++)m.push((a[d]>>24&255)>>>0),m.push((a[d]>>16&255)>>>0),m.push((a[d]>>8&255)>>>0),m.push((a[d]&255)>>>0);return n===!1?Promise.resolve(m):m}if(n===!1)return new Promise(m=>H7(()=>{u().then(m)}))};if(n===!1)return u();{let m;for(;;)if(typeof(m=u())<"u")return m||[]}},K7=s=>{try{let e;typeof window<"u"?e=window.crypto??window.msCrypto:e=globalThis.crypto;const i=new Uint32Array(s);return e==null||e.getRandomValues(i),Array.from(i)}catch{throw Error("WebCryptoAPI is not available")}},W7=(s=10)=>{if(typeof s!="number")throw Error("Illegal arguments: "+typeof s);s<4?s=4:s>31&&(s=31);const e=[];return e.push("$2a$"),s<10&&e.push("0"),e.push(s.toString()),e.push("$"),e.push(dr(K7(16),16)),e.join("")};function Q7(s,e,i,n){if(typeof s!="string"||typeof e!="string"){const g=new Error("Invalid string / salt: Not a string");if(i===!1)return Promise.reject(g);throw g}let t,a;if(e.charAt(0)!=="$"||e.charAt(1)!=="2"){const g=new Error("Invalid salt version: "+e.substring(0,2));if(i===!1)return Promise.reject(g);throw g}if(e.charAt(2)==="$")t="\0",a=3;else{if(t=e.charAt(2),t!=="a"&&t!=="b"&&t!=="y"||e.charAt(3)!=="$"){const g=Error("Invalid salt revision: "+e.substring(2,4));if(i===!1)return Promise.reject(g);throw g}a=4}if(e.charAt(a+2)>"$"){const g=new Error("Missing salt rounds");if(i===!1)return Promise.reject(g);throw g}const r=parseInt(e.substring(a,a+1),10)*10,p=parseInt(e.substring(a+1,a+2),10),o=r+p,d=e.substring(a+3,a+25);s+=t>="a"?"\0":"";const c=U7(s),u=j7(d,16),m=g=>{const k=[];return k.push("$2"),t>="a"&&k.push(t),k.push("$"),o<10&&k.push("0"),k.push(o.toString()),k.push("$"),k.push(dr(u,u.length)),k.push(dr(g,C0.length*4-1)),k.join("")};return i===!1?sd(c,u,o,!1).then(g=>m(g)):m(sd(c,u,o,!0))}const J7=(s,e=10)=>{if(typeof e=="number"&&(e=W7(e)),typeof s!="string"||typeof e!="string")throw Error("Illegal arguments: "+typeof s+", "+typeof e);return Q7(s,e,!0)},cr=(s,e)=>{if(typeof s!="string"||typeof e!="string")throw Error("Illegal arguments: "+typeof s+", "+typeof e);return e.length!==60?!1:J7(s,e.substring(0,e.length-31))===e};var D0=S({name:"PasswordModal",props:{full:Boolean},emits:["verify"],setup(s,{emit:e}){const i=As(),n=hs(),t=Y(""),a=Y(!1),r=Y(!1),p=B(()=>n.value.encryptLocales);let o=null;const d=()=>{o&&clearTimeout(o),a.value=!1,e("verify",t.value,r.value),Qe().then(()=>{a.value=!0,o=setTimeout(()=>{a.value=!1},1e3)})};return()=>h("div",{class:["vp-decrypt-layer",{expand:s.full||i.value.home}]},h("div",{class:"vp-decrypt-modal"},[h("div",{class:["vp-decrypt-hint",{tried:a.value}]},a.value?p.value.errorHint:h(cp,{"aria-label":p.value.iconLabel})),h("div",{class:"vp-decrypt-input"},[h("input",{type:"password",value:t.value,placeholder:p.value.placeholder,onInput:({target:c})=>{t.value=c.value},onKeydown:({key:c})=>{c==="Enter"&&d()}})]),h("div",{class:"vp-remember-password"},[h("input",{id:"remember-password",type:"checkbox",value:r.value,onChange:()=>r.value=!r.value}),h("label",{for:"remember-password"},p.value.remember)]),h("button",{type:"button",class:"vp-decrypt-submit",onClick:()=>d()},"OK")]))}});const F0=()=>{const s=je();return B(()=>s.value.encrypt||{})},ed="VUEPRESS_HOPE_GLOBAL_TOKEN",Y7=()=>{const s=F0(),e=Wi(ed,""),i=Hr(ed,""),n=B(()=>{const{global:a=!1,admin:r=[]}=s.value;return a&&r.length>0}),t=B(()=>{if(n.value){if(e.value)return s.value.admin.some(a=>cr(e.value,a));if(i.value)return s.value.admin.some(a=>cr(i.value,a))}return!1});return{isEncrypted:n,isDecrypted:t,validate:(a,r=!1)=>{(r?e:i).value=a}}},vl=(s="",e)=>!!s&&cr(s,e),id="VUEPRESS_HOPE_PATH_TOKEN",X7=()=>{const s=Os(),e=F0(),i=Wi(id,{}),n=Hr(id,{}),t=r=>ai(e.value.config)?Te(e.value.config).filter(p=>ct(decodeURI(r),p)).sort((p,o)=>o.length-p.length):[],a=r=>{const p=t(r);if(p.length>0){const{config:o={}}=e.value;return{isEncrypted:!0,isDecrypted:p.some(d=>i.value[d]&&o[d].some(c=>vl(i.value[d],c))||n.value[d]&&o[d].some(c=>vl(n.value[d],c)))}}return{isDecrypted:!1,isEncrypted:!1}};return{status:B(()=>a(s.value.path)),getStatus:a,validate:(r,p=!1)=>{const{config:o={}}=e.value,d=t(s.value.path);for(const c of d)if(o[c].filter(u=>vl(r,u))){(p?i:n).value[c]=r;break}}}};var Z7=S({name:"GlobalEncrypt",slots:Object,setup(s,{slots:e}){const{isDecrypted:i,isEncrypted:n,validate:t}=Y7(),a=le(),r=Y(!1);return us(()=>{r.value=!0}),()=>h(a.value?Va:dp,()=>n.value?r.value?i.value?e.default():h(D0,{full:!0,onVerify:t}):null:e.default())}}),sA=S({name:"LocalEncrypt",slots:Object,setup(s,{slots:e}){const{status:i,validate:n}=X7(),t=Y(!1);return us(()=>{t.value=!0}),()=>{const{isEncrypted:a,isDecrypted:r}=i.value;return a?t.value?r?e.default():h(D0,{full:!0,onVerify:n}):null:e.default()}}});F6(s=>{const e=s.t,i=s.I!==!1,n=s.i;return i?{title:e,content:n?()=>[h(Ws,{icon:n}),e]:null,order:s.O,index:s.I}:null});const eA={enhance:({app:s,router:e})=>{const{scrollBehavior:i}=e.options;e.options.scrollBehavior=async(...n)=>(await ar.wait(),i(...n)),A5(s),s.component("HopeIcon",Ws),s.component("BloggerInfo",gp),s.component("SocialMedias",u0),s.component("GlobalEncrypt",Z7),s.component("LocalEncrypt",sA)},setup:()=>{v5(),k5(),v7()},layouts:{Layout:p7,NotFound:h7,BlogCategory:I7,BlogHome:b0,BlogType:V7,Timeline:w0}},iA=Object.freeze(Object.defineProperty({__proto__:null,default:eA},Symbol.toStringTag,{value:"Module"})),Jt=[v3,f3,v6,D6,P6,N6,H6,iE,dE,yE,vE,fE,_E,FE,ky,Oy,Uy,Yy,iA].map(s=>s.default).filter(Boolean),nA=JSON.parse(`{"base":"/blog/","lang":"en-US","title":"","description":"","head":[["link",{"rel":"icon","href":"/blog/favicon.ico"}],["link",{"rel":"icon","href":"/blog/assets/icon/512.png","type":"image/png","sizes":"512x512"}],["link",{"rel":"icon","href":"/blog/assets/icon/196.png","type":"image/png","sizes":"192x192"}],["link",{"rel":"icon","href":"/blog/assets/icon/512.png","type":"image/png","sizes":"512x512"}],["link",{"rel":"icon","href":"/blog/assets/icon/196.png","type":"image/png","sizes":"196x196"}],["link",{"rel":"manifest","href":"/blog/manifest.webmanifest","crossorigin":"use-credentials"}],["meta",{"name":"theme-color","content":"#46bd87"}],["link",{"rel":"apple-touch-icon","href":"/blog/assets/icon/152.png"}],["meta",{"name":"apple-mobile-web-app-capable","content":"yes"}],["meta",{"name":"apple-mobile-web-app-status-bar-style","content":"black"}],["meta",{"name":"msapplication-TileImage","content":"/blog/assets/icon/144.png"}],["meta",{"name":"msapplication-TileColor","content":"#ffffff"}]],"locales":{"/":{"lang":"en-US","title":"David's Blog","description":"a developer of multiple interests😊"},"/zh/":{"lang":"zh-CN","title":"David的博客","description":"一名涉猎广泛的开发者😊"}}}`);var Wn=ys(nA),tA=T1,aA=()=>{const s=o3({history:tA(Pr("/blog/")),routes:[{name:"vuepress-route",path:"/:catchAll(.*)",components:{}}],scrollBehavior:(e,i,n)=>n||(e.hash?{el:e.hash}:{top:0})});return s.beforeResolve(async(e,i)=>{if(e.path!==i.path||i===si){const n=De(e.fullPath);if(n.path!==e.fullPath)return n.path;const t=await n.loader();e.meta={...n.meta,_pageChunk:t}}else e.path===i.path&&(e.meta=i.meta)}),s},lA=s=>{s.component("ClientOnly",nu),s.component("Content",tu),s.component("RouteLink",Gs)},rA=(s,e,i)=>{const n=B(()=>e.currentRoute.value.path),t=Br((f,v)=>({get(){return f(),e.currentRoute.value.meta._pageChunk},set(b){e.currentRoute.value.meta._pageChunk=b,v()}})),a=B(()=>Li.resolveLayouts(i)),r=B(()=>Li.resolveRouteLocale(Wn.value.locales,n.value)),p=B(()=>Li.resolveSiteLocaleData(Wn.value,r.value)),o=B(()=>t.value.comp),d=B(()=>t.value.data),c=B(()=>d.value.frontmatter),u=B(()=>Li.resolvePageHeadTitle(d.value,p.value)),m=B(()=>Li.resolvePageHead(u.value,c.value,p.value)),g=B(()=>Li.resolvePageLang(d.value,p.value)),k=B(()=>Li.resolvePageLayout(d.value,a.value)),A={layouts:a,pageData:d,pageComponent:o,pageFrontmatter:c,pageHead:m,pageHeadTitle:u,pageLang:g,pageLayout:k,redirects:Ml,routeLocale:r,routePath:n,routes:mn,siteData:Wn,siteLocaleData:p};return s.provide(Vr,A),Object.defineProperties(s.config.globalProperties,{$frontmatter:{get:()=>c.value},$head:{get:()=>m.value},$headTitle:{get:()=>u.value},$lang:{get:()=>g.value},$page:{get:()=>d.value},$routeLocale:{get:()=>r.value},$site:{get:()=>Wn.value},$siteLocale:{get:()=>p.value},$withBase:{get:()=>Cs}}),A},pA=([s,e,i=""])=>{const n=Object.entries(e).map(([p,o])=>Ps(o)?`[${p}=${JSON.stringify(o)}]`:o?`[${p}]`:"").join(""),t=`head > ${s}${n}`;return Array.from(document.querySelectorAll(t)).find(p=>p.innerText===i)??null},oA=([s,e,i])=>{if(!Ps(s))return null;const n=document.createElement(s);return ai(e)&&Object.entries(e).forEach(([t,a])=>{Ps(a)?n.setAttribute(t,a):a&&n.setAttribute(t,"")}),Ps(i)&&n.appendChild(document.createTextNode(i)),n},hA=()=>{const s=c3(),e=Ia();let i=[];const n=()=>{s.value.forEach(r=>{const p=pA(r);p&&i.push(p)})},t=()=>{const r=[];return s.value.forEach(p=>{const o=oA(p);o&&r.push(o)}),r},a=()=>{document.documentElement.lang=e.value;const r=t();i.forEach((p,o)=>{const d=r.findIndex(c=>p.isEqualNode(c));d===-1?(p.remove(),delete i[o]):r.splice(d,1)}),r.forEach(p=>document.head.appendChild(p)),i=[...i.filter(p=>!!p),...r]};Ce(m3,a),us(()=>{n(),ds(s,a,{immediate:!1})})},dA=Tk,cA=async()=>{var n;const s=dA({name:"Vuepress",setup(){var r;hA();for(const p of Jt)(r=p.setup)==null||r.call(p);const t=Jt.flatMap(({rootComponents:p=[]})=>p.map(o=>h(o))),a=u3();return()=>[h(a.value),t]}}),e=aA();lA(s);const i=rA(s,e,Jt);{const{setupDevtools:t}=await l(async()=>{const{setupDevtools:a}=await import("./setupDevtools-7MC2TMWH-pHSGK7Gi.js");return{setupDevtools:a}},[]);t(s,i)}for(const t of Jt)await((n=t.enhance)==null?void 0:n.call(t,{app:s,router:e,siteData:Wn}));return s.use(e),{app:s,router:e}};cA().then(({app:s,router:e})=>{e.isReady().then(()=>{s.mount("#app")})});export{Ce as A,mA as B,yA as C,Aa as D,gA as E,bA as F,J0 as G,Ai as H,va as I,Hi as J,BA as K,Hs as L,EA as M,Ms as N,wA as O,Mi as T,l as _,_A as a,mc as b,fA as c,cA as createVueApp,gc as d,Ss as e,M2 as f,S as g,B as h,xl as i,bs as j,us as k,Lr as l,C2 as m,DA as n,Ll as o,CA as p,Y as q,Pe as r,u8 as s,_t as t,kA as u,Pl as v,ds as w,ys as x,AA as y,vA as z};
