import{_ as l,V as e,W as i,Z as a}from"./framework-e5d7a6b2.js";const r={},t=a('<h1 id="sentinel-故障转移" tabindex="-1"><a class="header-anchor" href="#sentinel-故障转移" aria-hidden="true">#</a> Sentinel：故障转移</h1><p>哨兵：自动故障转移Failover</p><h2 id="是什么" tabindex="-1"><a class="header-anchor" href="#是什么" aria-hidden="true">#</a> 是什么</h2><p>吹哨人巡查监控后台master.主机是否故障，如果故障了根据投票数自动将某一个从库转换为新主库，继续对外服务</p><p>无人值守的运维机制</p><h2 id="干什么" tabindex="-1"><a class="header-anchor" href="#干什么" aria-hidden="true">#</a> 干什么</h2><ul><li>主从监控：监控主从redis)库运行是否正常</li><li>消息通知：哨兵可以将故障转移的结果发送给客户端</li><li>故障转移：如果Master异常，则会进行主从切换，将其中一个Slave作为新Master</li><li>配置中心：客户端通过连接哨兵来获得当前Redis服务的主节点地址</li></ul><h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h2><p>三个哨兵监控一主二从，正常运行中</p><ul><li>SDOWN主管下线，</li><li>ODOWN客观下线，需要一定数量的sentinel,.多个哨兵达成一致意见才能认为一个master客观上已经宕掉</li><li>选举出领导者哨兵 <ul><li>当主节点被判断客观下线以后，各个哨兵节点会进行协商先选举出一个领导者哨兵节点（兵王）并由该领导者节点，也即被选举出的兵王进行failover(故障迁移)</li><li>哨兵领导者，兵王如何选出来的？Raft算法</li></ul></li><li>由兵王选出来新的master <ul><li>步骤： <ul><li>新主登基： <ul><li>redis,conf文件中，优先级slave-priority:或者replica-priority最高的从节点（数字越小优先级越高）</li><li>复制偏移位置offset?最大的从节点</li><li>最小Run ID的从节点，字典顺序，ASCII码</li></ul></li><li><strong>群臣臣服</strong><ul><li>执行slaveof no one命令让选出来的从节点成为新的主节点，并通过slaveoft命令让其他节点成为其从节点</li><li>Sentinel leader会对选举出的新master执行slaveof no one操作，将其提升为master节点</li><li>Sentinel leader向其它slave发送命令，让剩余的slave成为新的master节点的slave</li></ul></li><li>旧主拜服 <ul><li>将之前已下线的老masteri设置为新选出的新master的从节点，当老masteri重新上线后，它会成为新master的slave</li><li>Sentinel leader?会让原来的master降级为slave并恢复正常工作。</li></ul></li></ul></li></ul></li></ul><p>完全由sentinel自己独立完成，无需人工干预</p><h2 id="使用建议" tabindex="-1"><a class="header-anchor" href="#使用建议" aria-hidden="true">#</a> 使用建议</h2><ul><li><p>哨兵节点的数量应为多个，哨兵本身应该集群，保证高可用</p></li><li><p>哨兵节点的数量应该是奇数</p><p>为什么？</p></li><li><p>各个哨兵节点的配置应一致</p></li><li><p>如果哨兵节点部署在Docker等容器里面，尤其要注意端口的正确映射</p></li><li><p>哨兵集群+主从复制，并不能保证数据零丢失（故引出集群）</p><p>选举切换流程至少5-10秒钟，造成数据丢失</p></li></ul><p>主从+哨兵少用了，一般就是直接上集群</p>',14),s=[t];function n(d,o){return e(),i("div",null,s)}const p=l(r,[["render",n],["__file","sentinel.html.vue"]]);export{p as default};
