const t=JSON.parse(`{"key":"v-7c7e2c6c","path":"/cs/algo/basic/clues/","title":"线索","lang":"en-US","frontmatter":{"description":"线索 递推 分类 有序 收敛 收敛 逐级递减，可选状态空间逐级减少 出现位置 排列，每次能选的少一个 环图，设置单调收敛变量，保证每个节点只能被访问一次 如hashmap的visited 有序 递推 只要DFS、BFS存在的地方都有递推 核心概念 简单解释 状态：状态定义 由实体状态和限制状态组成 边界：边界节点 边界节点 → 不依赖于任何状态点的已知点 递推：递推公式 不同节点的递推公式可以不同！！！ 方向：拓扑排序 拓扑排序的方向确定","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/cs/algo/basic/clues/"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"线索"}],["meta",{"property":"og:description","content":"线索 递推 分类 有序 收敛 收敛 逐级递减，可选状态空间逐级减少 出现位置 排列，每次能选的少一个 环图，设置单调收敛变量，保证每个节点只能被访问一次 如hashmap的visited 有序 递推 只要DFS、BFS存在的地方都有递推 核心概念 简单解释 状态：状态定义 由实体状态和限制状态组成 边界：边界节点 边界节点 → 不依赖于任何状态点的已知点 递推：递推公式 不同节点的递推公式可以不同！！！ 方向：拓扑排序 拓扑排序的方向确定"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-01-27T10:03:27.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-01-27T10:03:27.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/cs/algo/basic/clues/"}]]},"headers":[{"level":2,"title":"收敛","slug":"收敛","link":"#收敛","children":[]},{"level":2,"title":"有序","slug":"有序","link":"#有序","children":[]},{"level":2,"title":"递推","slug":"递推","link":"#递推","children":[]},{"level":2,"title":"分类","slug":"分类","link":"#分类","children":[]}],"git":{"createdTime":1674459084000,"updatedTime":1674813807000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro.local","commits":2}]},"readingTime":{"minutes":0.68,"words":204},"localizedDate":"January 23, 2023","filePathRelative":"cs/algo/basic/clues/README.md","excerpt":"<h1> 线索</h1>\\n<ul>\\n<li>递推</li>\\n<li>分类</li>\\n<li>有序</li>\\n<li>收敛</li>\\n</ul>\\n<h2> 收敛</h2>\\n<p>逐级递减，可选状态空间逐级减少</p>\\n<p>出现位置</p>\\n<ul>\\n<li>\\n<p>排列，每次能选的少一个</p>\\n</li>\\n<li>\\n<p>环图，设置单调收敛变量，保证每个节点只能被访问一次</p>\\n<p>如hashmap的visited</p>\\n</li>\\n</ul>\\n<h2> 有序</h2>\\n<h2> 递推</h2>\\n<p>只要DFS、BFS存在的地方都有递推</p>\\n<table>\\n<thead>\\n<tr>\\n<th>核心概念</th>\\n<th>简单解释</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>状态：状态定义</td>\\n<td>由实体状态和限制状态组成</td>\\n</tr>\\n<tr>\\n<td>边界：边界节点</td>\\n<td>边界节点 → 不依赖于任何状态点的已知点</td>\\n</tr>\\n<tr>\\n<td>递推：递推公式</td>\\n<td>不同节点的递推公式可以不同！！！</td>\\n</tr>\\n<tr>\\n<td>方向：拓扑排序</td>\\n<td>拓扑排序的方向确定</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}`);export{t as data};
