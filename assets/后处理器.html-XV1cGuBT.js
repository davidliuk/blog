import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as t,o}from"./app-wjKRSZHj.js";const r={};function i(s,e){return o(),a("div",null,e[0]||(e[0]=[t('<h1 id="后处理器" tabindex="-1"><a class="header-anchor" href="#后处理器"><span>后处理器</span></a></h1><p>Spring 的后处理器是 Spring 对外开发的重要扩展点，允许我们介入到 Bean 的整个实例化流程中来，以达到动态注册 BeanDefinition,动态修改 BeanDefinition,以及动态修改 Bean 的作用。Spring 主要有两种后处理器：</p><ul><li>BeanFactoryPostProcessor：Bean 工厂后处理器，在 BeanDefinitionMap 填充完毕，Bean 实例化之前执行：</li><li>BeanPostProcessor：Bean 后处理器，一般在 Bean 实例化之后，填充到单例池 singletonObjects 之前执行。</li></ul><p>需要实现对应接口，注册到 Spring 容器中以后就会自动调用。</p><ul><li><p>动态注册</p><p>需要强转</p></li><li><p>动态修改</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/截屏2023-04-05 21.10.52.png" alt="截屏2023-04-05 21.10.52" loading="lazy"></p><h3 id="beanfactorypostprocessor" tabindex="-1"><a class="header-anchor" href="#beanfactorypostprocessor"><span>BeanFactoryPostProcessor</span></a></h3><p>可以实现注解扫描</p><h3 id="beanpostprocessor" tabindex="-1"><a class="header-anchor" href="#beanpostprocessor"><span>BeanPostProcessor</span></a></h3><p>可以实现 AOP，动态代理、方法增强</p><ul><li>bean 初始化前：before</li><li>bean 初始化后：after</li></ul><p>很多 Spring 自己和第三方整合框架都是用这两个去做的。</p>',12)]))}const c=n(r,[["render",i],["__file","后处理器.html.vue"]]),d=JSON.parse(`{"path":"/se/lang/java/framework/spring/core/beans/%E5%90%8E%E5%A4%84%E7%90%86%E5%99%A8.html","title":"后处理器","lang":"en-US","frontmatter":{"description":"后处理器 Spring 的后处理器是 Spring 对外开发的重要扩展点，允许我们介入到 Bean 的整个实例化流程中来，以达到动态注册 BeanDefinition,动态修改 BeanDefinition,以及动态修改 Bean 的作用。Spring 主要有两种后处理器： BeanFactoryPostProcessor：Bean 工厂后处理器，在 ...","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/lang/java/framework/spring/core/beans/%E5%90%8E%E5%A4%84%E7%90%86%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"后处理器"}],["meta",{"property":"og:description","content":"后处理器 Spring 的后处理器是 Spring 对外开发的重要扩展点，允许我们介入到 Bean 的整个实例化流程中来，以达到动态注册 BeanDefinition,动态修改 BeanDefinition,以及动态修改 Bean 的作用。Spring 主要有两种后处理器： BeanFactoryPostProcessor：Bean 工厂后处理器，在 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/%E6%88%AA%E5%B1%8F2023-04-05%2021.10.52.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-09T18:37:53.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-09T18:37:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"后处理器\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/davidliuk/images@master/blog/%E6%88%AA%E5%B1%8F2023-04-05%2021.10.52.png\\"],\\"dateModified\\":\\"2024-11-09T18:37:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"David Liu\\",\\"url\\":\\"https://github.com/davidliuk\\"}]}"]]},"headers":[{"level":3,"title":"BeanFactoryPostProcessor","slug":"beanfactorypostprocessor","link":"#beanfactorypostprocessor","children":[]},{"level":3,"title":"BeanPostProcessor","slug":"beanpostprocessor","link":"#beanpostprocessor","children":[]}],"git":{"createdTime":1680752829000,"updatedTime":1731177473000,"contributors":[{"name":"刘大维","email":"davidliu@liudaweideMacBook-Pro-3.local","commits":1}]},"readingTime":{"minutes":0.77,"words":230},"filePathRelative":"se/lang/java/framework/spring/core/beans/后处理器.md","localizedDate":"April 6, 2023","excerpt":"\\n<p>Spring 的后处理器是 Spring 对外开发的重要扩展点，允许我们介入到 Bean 的整个实例化流程中来，以达到动态注册 BeanDefinition,动态修改 BeanDefinition,以及动态修改 Bean 的作用。Spring 主要有两种后处理器：</p>\\n<ul>\\n<li>BeanFactoryPostProcessor：Bean 工厂后处理器，在 BeanDefinitionMap 填充完毕，Bean 实例化之前执行：</li>\\n<li>BeanPostProcessor：Bean 后处理器，一般在 Bean 实例化之后，填充到单例池 singletonObjects 之前执行。</li>\\n</ul>","autoDesc":true}`);export{c as comp,d as data};
