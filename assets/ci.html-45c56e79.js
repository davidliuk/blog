import{_ as o,V as e,W as r,Z as t}from"./framework-e5d7a6b2.js";const a={},l=t('<h1 id="ci" tabindex="-1"><a class="header-anchor" href="#ci" aria-hidden="true">#</a> CI</h1><p>jenkins: 功能全，但是相对陈旧，不够灵活，不够简洁，且不是 k8s 原生的，需要额外的维护成本</p><p>Argo workflows：k8s 原生的，配置灵活</p><p>Tekton：k8s 原生的，配置灵活</p><h2 id="argo-workflows" tabindex="-1"><a class="header-anchor" href="#argo-workflows" aria-hidden="true">#</a> Argo workflows</h2><p>Argo workflows 是一个 k8s 原生的 workflow engine，可以用来做 CI/CD，也可以用来做其他的 workflow，比如 ETL，ML pipeline 等。</p><p>Argo workflows 的核心概念是 workflow template，workflow template 是一个 k8s 的 CRD，定义了一个 workflow 的模板，包括 workflow 的各个步骤，每个步骤的输入输出，以及步骤之间的依赖关系。</p><p>workflow template 的定义是一个 yaml 文件，可以通过 argo cli 来创建，也可以通过 argo web ui 来创建。</p><p>workflow template 的定义文件中，可以定义多个步骤，每个步骤可以是一个 container，也可以是一个 workflow template，也可以是一个 dag，也可以是一个 step group。</p><p>workflow template 的定义文件中，可以定义每个步骤的输入输出，以及步骤之间的依赖关系。</p><p>workflow template 的定义文件中，可以定义 workflow 的参数，参数可以是一个字符串，也可以是一个数组，也可以是一个 map，也可以是一个 artifact，也可以是一个 workflow template。</p><p>如需执行脚本，可以定义 script template，script template 是一个 workflow template，其中只有一个步骤，步骤的 container 是一个脚本，脚本的内容可以是 bash，也可以是 python，也可以是其他语言。</p>',12),p=[l];function w(s,i){return e(),r("div",null,p)}const f=o(a,[["render",w],["__file","ci.html.vue"]]);export{f as default};
