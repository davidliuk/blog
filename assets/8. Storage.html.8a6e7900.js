import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as a,f as o}from"./app.d8360454.js";const n={},l=o('<h1 id="_8-存储" tabindex="-1"><a class="header-anchor" href="#_8-存储" aria-hidden="true">#</a> 8. 存储</h1><h3 id="logical-volume-management-lvm" tabindex="-1"><a class="header-anchor" href="#logical-volume-management-lvm" aria-hidden="true">#</a> Logical Volume Management (LVM)</h3><p>这样有逻辑上的统一调配</p><p>服务器，跨盘文件传输非常慢，</p><p>通过虚拟化解决，逻辑上组合成一个硬盘，这样i节点就不用动了</p><p>扩容一般好，动态扩容，不需要停机</p><p>支持卷快照</p><p>一直在变，快照不太好做，但是LVM可以直接做到</p><p>在线备份，真备份不放在一块的，防止一起被烧毁</p><p>操作</p><p>pv：Physical Volume</p><p>vg：volume group</p><p>lv：logical volume</p><p>Linux文件类型：83</p><p>Linux Logic Volume：8e</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><p>逻辑卷，操作和分区完全一样</p><p>mkfs</p><p>mount</p><p>删除是倒着删，先删小，再删大</p><p>Display</p><p>-v 冗余，可以展示额外的信息，</p><p>vg：在dev下的一个文件夹</p><p>lv：在vg文件夹下的一个符号链接，指向一个dev、下面的虚拟的设备</p><p>符号链接：在dev下生成一个虚拟的设备</p><p>unmout</p><p>先对vg扩容，然后对lv扩容</p><p>缩容比较恐怖，涉及到文件的移动，容易出现问题（一般没事，但是怕关键时刻掉链子）</p><p>sda1是boot，需要单独一个分区里，因为LVM需要内核支持</p><p>mount 可以看到挂载的内容</p><p>resize2fs可以对Volume扩容</p><h3 id="volume-snapshot" tabindex="-1"><a class="header-anchor" href="#volume-snapshot" aria-hidden="true">#</a> volume snapshot</h3><p>redis fork 子进程 copy-on-write</p><p>tuning，不知道进程多大，非常难算，用来prefork</p><p>只能在线做快照，不能离线备份（都存在电脑的本地了）</p>',35),r=[l];function s(t,i){return p(),a("div",null,r)}const m=e(n,[["render",s],["__file","8. Storage.html.vue"]]);export{m as default};
