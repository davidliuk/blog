const e=JSON.parse(`{"key":"v-ffadf0b0","path":"/se/lang/java/JUC/thread/sleep%20vs%20wait.html","title":"sleep vs wait","lang":"en-US","frontmatter":{"description":"sleep vs wait 共同点 效果都是让当前线程暂时放弃 CPU 的使用权，进入阻塞状态 区别 方法归属不同 sleep(long)上 Thread 的静态方法 wait(), wait(long)都是 Object 的成员方法，每个对象都有（即任意对象都可以有锁） 醒来时机不同 执行 sleep(long), wait(long)的线程都会在等待相应毫秒后醒来 wait(), wait(long)还可以蓓 notify 唤醒，wait()如果不唤醒就一直等下去 他们都可以被 interrupt 直接唤醒（抛出 InterruptException）","head":[["meta",{"property":"og:url","content":"https://davidliuk.github.io/blog/blog/se/lang/java/JUC/thread/sleep%20vs%20wait.html"}],["meta",{"property":"og:site_name","content":"David's Blog"}],["meta",{"property":"og:title","content":"sleep vs wait"}],["meta",{"property":"og:description","content":"sleep vs wait 共同点 效果都是让当前线程暂时放弃 CPU 的使用权，进入阻塞状态 区别 方法归属不同 sleep(long)上 Thread 的静态方法 wait(), wait(long)都是 Object 的成员方法，每个对象都有（即任意对象都可以有锁） 醒来时机不同 执行 sleep(long), wait(long)的线程都会在等待相应毫秒后醒来 wait(), wait(long)还可以蓓 notify 唤醒，wait()如果不唤醒就一直等下去 他们都可以被 interrupt 直接唤醒（抛出 InterruptException）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-04-03T03:29:06.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-04-03T03:29:06.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://davidliuk.github.io/blog/blog/zh/se/lang/java/JUC/thread/sleep%20vs%20wait.html"}]]},"headers":[{"level":2,"title":"共同点","slug":"共同点","link":"#共同点","children":[]},{"level":2,"title":"区别","slug":"区别","link":"#区别","children":[{"level":3,"title":"方法归属不同","slug":"方法归属不同","link":"#方法归属不同","children":[]},{"level":3,"title":"醒来时机不同","slug":"醒来时机不同","link":"#醒来时机不同","children":[]},{"level":3,"title":"锁的特性不同","slug":"锁的特性不同","link":"#锁的特性不同","children":[]}]}],"git":{"createdTime":1680492546000,"updatedTime":1680492546000,"contributors":[{"name":"davidliuk","email":"l729641074@163.com","commits":1}]},"readingTime":{"minutes":0.77,"words":231},"localizedDate":"April 3, 2023","filePathRelative":"se/lang/java/JUC/thread/sleep vs wait.md","excerpt":"<h1> sleep vs wait</h1>\\n<h2> 共同点</h2>\\n<p>效果都是让当前线程暂时放弃 CPU 的使用权，进入阻塞状态</p>\\n<h2> 区别</h2>\\n<h3> 方法归属不同</h3>\\n<ul>\\n<li>sleep(long)上 Thread 的静态方法</li>\\n<li>wait(), wait(long)都是 Object 的成员方法，每个对象都有（即任意对象都可以有锁）</li>\\n</ul>\\n<h3> 醒来时机不同</h3>\\n<ul>\\n<li>执行 sleep(long), wait(long)的线程都会在等待相应毫秒后醒来</li>\\n<li>wait(), wait(long)还可以蓓 notify 唤醒，wait()如果不唤醒就一直等下去</li>\\n<li>他们都可以被 interrupt 直接唤醒（抛出 InterruptException）</li>\\n</ul>","autoDesc":true}`);export{e as data};
